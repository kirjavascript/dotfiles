2018-09-17 21:26:03	-->	Colourful (cake@moz-7e0sq4.ip-51-254-223.eu) has joined #rust-beginners
2018-09-17 21:26:03	--	Topic for #rust-beginners is "Beginner's Rust discussion, unlogged. Ask away, but please allow some time for people to respond! | Book  https://doc.rust-lang.org/book/ | Playground  https://play.rust-lang.org | Forum  https://users.rust-lang.org | Conduct  https://www.rust-lang.org/conduct.html"
2018-09-17 21:26:03	--	Topic set by niconii (nicole@moz-fg53dj.midco.net) on Thu, 26 May 2016 11:19:40
2018-09-17 21:26:03	--	Channel #rust-beginners: 1098 nicks (4 ops, 0 halfops, 1 voice, 1093 normals)
2018-09-17 21:26:03	--	irc: disconnected from server
2018-09-18 21:02:34	-->	Kirjava (cake@moz-7e0sq4.ip-51-254-223.eu) has joined #rust-beginners
2018-09-18 21:02:34	--	Topic for #rust-beginners is "Beginner's Rust discussion, unlogged. Ask away, but please allow some time for people to respond! | Book  https://doc.rust-lang.org/book/ | Playground  https://play.rust-lang.org | Forum  https://users.rust-lang.org | Conduct  https://www.rust-lang.org/conduct.html"
2018-09-18 21:02:34	--	Topic set by niconii (nicole@moz-fg53dj.midco.net) on Thu, 26 May 2016 11:19:40
2018-09-18 21:02:34	--	Channel #rust-beginners: 1094 nicks (3 ops, 0 halfops, 1 voice, 1090 normals)
2018-09-18 21:02:37	--	Channel created on Tue, 27 Oct 2015 17:04:43
2018-09-18 21:03:07	<--	NilGoyyou (Nil@moz-ptf.9dg.159.107.IP) has quit (Quit: Leaving)
2018-09-18 21:03:14	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:03:17	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:03:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:04:01	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:04:04	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:04:47	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:04:50	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:05:02	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-18 21:05:34	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:05:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:06:20	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:06:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:07:07	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:07:10	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:07:54	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:07:58	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:08:40	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:08:43	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:09:27	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:09:30	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:10:14	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:10:16	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:10:28	<--	moloch (user@moz-0sp4h6.il.comcast.net) has quit (Quit: Leaving)
2018-09-18 21:11:00	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:11:03	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:11:10	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 21:11:47	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:11:50	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:11:54	-->	cdr255 (cdr255@moz-idhae1.5rhd.p3se.0547.2601.IP) has joined #rust-beginners
2018-09-18 21:12:33	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:12:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:13:20	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:13:22	-->	DaQue (Mutter@moz-0ucnli.h55q.3h2s.0001.2600.IP) has joined #rust-beginners
2018-09-18 21:13:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:14:07	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:14:07	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 21:14:08	<--	GreenJello (GreenJello@moz-bra.342.189.207.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-18 21:14:10	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:14:53	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:14:56	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:15:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:15:31	panicbit	the num crate might have something ¯\_(ツ)_/¯
2018-09-18 21:15:40	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:15:42	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:16:06	<--	DaQue (Mutter@moz-0ucnli.h55q.3h2s.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-18 21:16:15	<--	plusone (custom@moz-ps48b2.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-18 21:16:18	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 21:16:27	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:16:30	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:17:02	<--	oms-hh (oms@moz-7cv3e5.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-18 21:17:13	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:17:18	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:17:55	-->	plusone (custom@moz-ttp6qg.skybroadband.com) has joined #rust-beginners
2018-09-18 21:18:01	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:18:05	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:18:48	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:18:51	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:19:00	<--	xet7 (xet7@moz-k8dgk3.bb.dnainternet.fi) has quit (Quit: Leaving)
2018-09-18 21:19:34	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:19:37	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:20:09	panicbit	Hm, doesn't look like it tho
2018-09-18 21:20:17	panicbit	apart from the basic truncating casts
2018-09-18 21:20:21	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:20:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:20:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:21:08	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:21:11	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:21:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 21:21:54	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:21:57	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:22:14	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-18 21:22:41	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:22:44	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:23:28	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:23:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:24:14	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:24:18	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:25:01	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:25:04	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:25:24	<--	starblue1 (juergen@moz-qncr26.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-18 21:25:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:25:48	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:25:50	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:26:34	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:26:37	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:27:21	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:27:24	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:27:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 21:28:07	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:28:11	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:28:32	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-18 21:28:54	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:28:56	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:29:35	-->	niconii (nicole@moz-mlcvbi.midco.net) has joined #rust-beginners
2018-09-18 21:29:36	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-18 21:29:41	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:29:44	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:29:47	-->	quartz555 (quartz5555@moz-ucpn5a.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-18 21:30:27	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:30:30	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:30:49	<--	makinen_ (asdf@moz-vfjfm8.dhcp.inet.fi) has quit (Ping timeout: 121 seconds)
2018-09-18 21:31:08	-->	artfwo (artfwo@moz-9i6.bj5.120.37.IP) has joined #rust-beginners
2018-09-18 21:31:14	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:31:17	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:32:01	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:32:04	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:32:11	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:32:16	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:32:19	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:32:47	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:32:50	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:33:19	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:33:34	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:33:37	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:33:46	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 21:33:47	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 21:33:49	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 21:33:59	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-18 21:34:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 21:34:21	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:34:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:35:07	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:35:10	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:35:42	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:35:54	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-18 21:35:54	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:35:57	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:36:30	-->	justsomequestions (gumble@moz-uigtkm.is2t.5ccm.8108.2a02.IP) has joined #rust-beginners
2018-09-18 21:36:31	orph	Is it possible to specify required traits for placeholder types, instead of using where clauses everywhere?
2018-09-18 21:36:40	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:36:49	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:36:58	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-18 21:37:09	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Client exited)
2018-09-18 21:37:27	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:37:30	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:38:08	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:38:13	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:38:14	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:38:15	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:38:16	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:38:24	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-18 21:38:27	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:38:46	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-18 21:39:00	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:39:03	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:39:12	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 21:39:15	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 21:39:17	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 21:39:47	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:39:50	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:40:34	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:40:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:41:06	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:41:20	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:41:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:41:25	<--	plusone (custom@moz-ttp6qg.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-18 21:41:26	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 21:42:07	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:42:10	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:42:53	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:42:56	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:43:40	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:43:42	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:43:50	-->	Archit3ct (Mibbit@moz-kvpcch.cust.hiper.dk) has joined #rust-beginners
2018-09-18 21:44:27	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:44:30	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:45:13	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:45:16	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:45:32	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:46:00	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:46:03	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:46:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 21:46:47	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:46:50	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:47:33	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:47:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:48:20	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:48:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:49:06	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:49:09	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:49:53	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:49:53	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-18 21:49:56	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:50:10	abc	I'm implementing a virtual machine, which operates on bytecode and involves things like a calculation stack, closures, and continuations. I'm really struggling to find a borrow-checker-accepted model to contain all this state, and thus far I'm basically storing everything in HashMaps, referencing the contents with shared indices, and opting for "never free" policy. Where would I learn how to handle 
2018-09-18 21:50:16	abc	this, say, with proper reference counting or even garbage collection? I'm vaguely aware of the Rc<RefCell<T>> approach, but failed miserably on my first attempts at it.
2018-09-18 21:50:34	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-18 21:50:40	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:50:43	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:51:26	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:51:29	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:52:13	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:52:16	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:53:00	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:53:03	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:53:46	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:53:49	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:54:33	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:54:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:54:41	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 21:55:19	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:55:22	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:55:26	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-18 21:55:58	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 21:56:06	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:56:09	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:56:53	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:56:56	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:57:39	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:57:43	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:57:58	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-18 21:58:01	<--	siddhartharao17 (siddharthar@moz-af4.sr5.107.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 21:58:26	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:58:29	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:59:13	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 21:59:16	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 21:59:59	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:00:02	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:00:14	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-18 22:00:46	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:00:49	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:01:27	<--	justsomequestions (gumble@moz-uigtkm.is2t.5ccm.8108.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 22:01:33	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:01:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:02:19	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:02:27	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:03:06	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:03:09	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:03:52	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:03:55	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:04:07	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 22:04:39	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:04:42	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:05:04	-->	SomeDude (pascal@moz-20ql71.unity-media.net) has joined #rust-beginners
2018-09-18 22:05:04	<--	artfwo (artfwo@moz-9i6.bj5.120.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 22:05:10	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-18 22:05:16	-->	artfwo (artfwo@moz-jbr.h02.230.185.IP) has joined #rust-beginners
2018-09-18 22:05:26	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:05:29	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:05:56	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 22:06:01	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 22:06:03	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-18 22:06:12	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:06:16	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:06:59	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:07:02	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:07:43	<--	jihi (jih@moz-arhtej.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-18 22:07:46	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:07:49	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:08:32	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:08:35	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:09:19	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:09:22	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:10:05	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:10:08	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:10:52	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:10:55	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:11:19	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-18 22:11:39	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:11:41	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-18 22:11:42	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:12:25	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:12:29	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:13:04	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 22:13:12	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:13:15	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:13:59	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:14:02	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:14:45	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:14:48	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:15:32	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:15:35	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:15:47	@mbrubeck	orph: To avoid repeating a long `where` clause everywhere, you can create a single trait (with a blanket impl) that depends on a set of other traits
2018-09-18 22:16:12	@mbrubeck	!trait alias
2018-09-18 22:16:13	+rustbot	The "trait alias" pattern allows you to create an "alias" for a set of traits using supertraits and a blanket impl, e.g. `trait X: Y + Z + Everything + Under + The + Sun {} impl<T> X for T where T: Y + Z + Everything + Under + The + Sun {}`
2018-09-18 22:16:19	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:16:22	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:16:40	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-18 22:16:53	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 22:17:05	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:17:08	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:17:30	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 22:17:33	@mbrubeck	abc: The approach you're using is not necessarily a bad one, and you can adapt it to allow deleting items too
2018-09-18 22:17:46	@mbrubeck	abc: The closing keynote at this year's RustConf touched on this: https://www.youtube.com/watch?v=aKLntZcp27M
2018-09-18 22:17:52	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:17:55	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:17:57	@mbrubeck	blog post version: https://kyren.github.io/2018/09/14/rustconf-talk.html
2018-09-18 22:18:38	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:18:42	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:19:25	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:19:25	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-18 22:19:27	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:19:36	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-18 22:19:48	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-18 22:19:59	<--	Archit3ct (Mibbit@moz-kvpcch.cust.hiper.dk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-18 22:20:08	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-18 22:20:12	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:20:15	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:20:58	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:21:02	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:21:45	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:21:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 22:21:48	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:22:27	<--	maarten (maartenBE@moz-u62npg.access.telenet.be) has quit (Ping timeout: 121 seconds)
2018-09-18 22:22:32	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:22:34	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:23:18	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:23:21	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:24:05	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:24:08	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:24:37	<--	almonsin (quassel@moz-ltbhcp.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-18 22:24:51	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:24:54	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:25:18	-->	almonsin (quassel@moz-ltbhcp.rev.dnainternet.fi) has joined #rust-beginners
2018-09-18 22:25:38	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:25:41	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:26:19	<--	ufobat_ (Martin@moz-7qgh4c.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-18 22:26:25	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:26:27	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:27:02	-->	maarten (maartenBE@moz-c0pavo.access.telenet.be) has joined #rust-beginners
2018-09-18 22:27:11	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:27:14	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:27:17	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 22:27:18	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 22:27:18	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-18 22:27:58	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:28:01	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:28:01	abc	mbrubeck: Thanks! I note that the talk points out "slotmap", which I accidentally bumped into earlier today, and I can see how this kind of an approach pops up. I'll checkout to the presentation, and think about the deletion aspect
2018-09-18 22:28:42	-->	justsomequestions (gumble@moz-370g6u.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-18 22:28:45	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:28:47	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:29:31	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:29:34	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:30:18	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:30:21	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:31:05	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:31:08	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:31:51	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:31:54	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:32:29	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-18 22:32:38	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:32:41	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:32:52	-->	starblue (juergen@moz-h3n2b4.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-18 22:33:24	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:33:28	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:34:11	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:34:14	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:34:43	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 22:34:58	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:35:01	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:35:44	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:35:47	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:36:15	<--	stcrl (stcrl@moz-2l570a.dynamic.caiway.nl) has quit (The TLS connection was non-properly terminated.)
2018-09-18 22:36:26	<--	enterprisey (enterprisey@moz-1rnvhf.cit.cornell.edu) has quit (Connection closed)
2018-09-18 22:36:31	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:36:34	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:37:18	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:37:20	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:37:43	-->	patrl (patrl@moz-rnv.ekn.20.178.IP) has joined #rust-beginners
2018-09-18 22:37:55	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-18 22:38:04	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:38:07	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:38:51	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:38:54	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:38:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 22:39:38	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:39:41	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:40:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 22:40:24	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:40:27	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:41:06	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-18 22:41:11	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:41:14	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:41:29	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-18 22:41:57	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:42:00	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:42:01	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-18 22:42:15	<--	mib_3csdpv (Mibbit@moz-f5f.leh.203.74.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-18 22:42:44	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:42:47	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:43:31	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:43:33	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:44:17	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:44:20	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:44:30	-->	siddhartharao17 (siddharthar@moz-usjjkn.epoi.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-18 22:45:04	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:45:07	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:45:31	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-18 22:45:38	<--	moltonel (moltonel@moz-537.aik.43.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 22:45:51	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:45:54	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:46:37	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:46:40	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:47:24	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:47:26	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:48:10	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:48:14	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:48:34	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-18 22:48:57	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:49:00	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:49:14	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-18 22:49:44	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:49:47	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:50:21	-->	DaQue (Mutter@moz-0ucnli.h55q.3h2s.0001.2600.IP) has joined #rust-beginners
2018-09-18 22:50:30	<--	jolisper_ (jolisper@moz-liv.vra.119.181.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 22:50:30	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:50:33	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:51:17	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:51:20	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:51:26	-->	enterprisey (enterprisey@moz-1rnvhf.cit.cornell.edu) has joined #rust-beginners
2018-09-18 22:51:48	<--	siddhartharao17 (siddharthar@moz-usjjkn.epoi.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 22:52:04	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:52:07	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:52:51	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:52:53	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:53:16	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-18 22:53:37	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:53:40	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:54:24	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:54:27	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:55:10	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-18 22:55:13	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-18 22:55:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 22:56:34	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Quit: )
2018-09-18 22:58:48	-->	siddhartharao17 (siddharthar@moz-usjjkn.epoi.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-18 22:58:54	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 22:59:11	-->	plusone (custom@moz-ttp6qg.skybroadband.com) has joined #rust-beginners
2018-09-18 22:59:31	<--	DaQue (Mutter@moz-0ucnli.h55q.3h2s.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-18 22:59:43	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:00:40	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-18 23:01:55	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Quit: WeeChat 2.2)
2018-09-18 23:03:30	-->	danecando (danecando@moz-2otp7j.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-18 23:04:07	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-18 23:04:10	<--	neverfox_ (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-18 23:04:25	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-18 23:05:01	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-18 23:05:42	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 23:06:31	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:08:42	-->	eibwen (eibwen@moz-rs96vn.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-18 23:08:52	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-18 23:09:19	-->	neverfox (neverfox@moz-8u0.0od.177.108.IP) has joined #rust-beginners
2018-09-18 23:10:46	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 23:11:16	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-18 23:11:36	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-18 23:13:22	<--	neverfox (neverfox@moz-8u0.0od.177.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:14:38	<--	quartz555 (quartz5555@moz-ucpn5a.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:15:16	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-18 23:16:46	<--	justsomequestions (gumble@moz-370g6u.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-18 23:16:52	<--	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has quit (Quit: WeeChat 2.2)
2018-09-18 23:17:03	-->	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has joined #rust-beginners
2018-09-18 23:17:12	<--	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has quit (Quit: WeeChat 2.2)
2018-09-18 23:17:26	-->	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has joined #rust-beginners
2018-09-18 23:18:27	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:18:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:20:14	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-18 23:20:14	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-18 23:20:27	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:20:52	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:21:21	-->	Ionise (default@moz-pf3eh0.nbn.aussiebb.net) has joined #rust-beginners
2018-09-18 23:23:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 23:24:15	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-18 23:26:27	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:26:32	-->	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has joined #rust-beginners
2018-09-18 23:26:40	-->	fwilkens (fwilkens@moz-bjpcuu.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-18 23:28:06	<--	fwilkens (fwilkens@moz-bjpcuu.dynamic.kabel-deutschland.de) has quit (The TLS connection was non-properly terminated.)
2018-09-18 23:30:42	<--	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:31:18	<--	Fishrock123 (Fishrock123@moz-nckse2.dsl.bell.ca) has quit (Quit: Leaving...)
2018-09-18 23:31:18	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-18 23:31:34	<--	orph (orph@moz-29thn7.ca.comcast.net) has left #rust-beginners ("Textual IRC Client: www.textualapp.com")
2018-09-18 23:32:26	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:33:06	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:33:49	orph	is there a simple way to connect a Sender to a Receiver?
2018-09-18 23:34:56	<--	SomeDude (pascal@moz-20ql71.unity-media.net) has quit (Quit: Leaving.)
2018-09-18 23:35:21	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-18 23:35:37	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-18 23:35:41	-->	sparky8251 (quassel@moz-dqudgl.1jj3.dq59.00c6.2601.IP) has joined #rust-beginners
2018-09-18 23:36:59	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-18 23:37:23	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 23:38:39	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 23:38:45	<--	patrl (patrl@moz-rnv.ekn.20.178.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:38:45	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-18 23:39:07	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:39:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:42:18	<--	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has quit (Quit: WeeChat 2.2)
2018-09-18 23:43:35	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Connection closed)
2018-09-18 23:43:55	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-18 23:44:32	KiChjang	orph: yes, by creating them from a channel()
2018-09-18 23:44:47	KiChjang	otherwise no
2018-09-18 23:45:02	KiChjang	you can't reassociate Senders and Receivers once they're created
2018-09-18 23:45:06	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-18 23:45:23	-->	GreenJello (GreenJello@moz-bra.342.189.207.IP) has joined #rust-beginners
2018-09-18 23:45:31	<--	GreenJello (GreenJello@moz-bra.342.189.207.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-18 23:46:08	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-18 23:46:13	orph	@KiChang no i mean for separate channels, i want to connect the output of one to the input of another in a simple/scalable way
2018-09-18 23:46:27	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 23:47:26	<--	eibwen (eibwen@moz-rs96vn.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-18 23:47:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-18 23:48:10	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 23:48:14	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:49:01	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-18 23:53:00	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-18 23:53:39	-->	snowe (snowe@moz-6a7.0nv.90.128.IP) has joined #rust-beginners
2018-09-18 23:55:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-18 23:57:04	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Ping timeout: 121 seconds)
2018-09-18 23:57:31	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-19 00:03:22	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 00:08:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 00:08:13	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 00:11:39	-->	kamek (kamek@moz-0kt.tcv.243.173.IP) has joined #rust-beginners
2018-09-19 00:12:29	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 00:14:02	<--	snowe (snowe@moz-6a7.0nv.90.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 00:14:02	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 00:14:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 00:14:39	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-19 00:14:50	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 00:14:52	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-19 00:18:29	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-19 00:19:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 00:20:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 00:21:17	jossypoo	hey
2018-09-19 00:21:21	jossypoo	i'm using cargo workspaces to manage some dependecies
2018-09-19 00:21:32	jossypoo	i need to be able to specify the features that some of the crates build with
2018-09-19 00:21:43	jossypoo	i have no clue how to do this, and what i'm reading online says that this isn't even possible right now?
2018-09-19 00:22:09	<--	Bowersbros (textual@moz-mudi25.virginmediabusiness.co.uk) has quit (Ping timeout: 121 seconds)
2018-09-19 00:23:32	-->	mr_trousers (Mibbit@moz-sih.0tq.16.177.IP) has joined #rust-beginners
2018-09-19 00:23:33	<--	danecando (danecando@moz-2otp7j.sdba.4jle.1700.2600.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-19 00:23:59	<--	mr_trousers (Mibbit@moz-sih.0tq.16.177.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 00:27:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 00:28:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 00:29:02	<--	Dariost (Dariost@moz-euo.lj4.20.151.IP) has quit (Client exited)
2018-09-19 00:29:36	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 00:30:24	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 00:32:30	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Connection closed)
2018-09-19 00:32:58	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 00:36:23	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-09-19 00:37:20	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 00:39:30	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 00:41:22	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 00:42:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 00:46:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 00:48:58	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-19 00:49:11	<--	plusone (custom@moz-ttp6qg.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-19 00:49:23	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-19 00:49:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 00:50:52	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-19 00:50:55	-->	mutanabbi (Mibbit@moz-bjc.t3t.18.5.IP) has joined #rust-beginners
2018-09-19 00:51:20	<--	neal (neal@moz-pumdpu.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-19 00:54:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 00:56:53	-->	jolisper_ (jolisper@moz-s6i.d7r.244.190.IP) has joined #rust-beginners
2018-09-19 00:57:38	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 01:00:18	-->	himi (sjjf@moz-psjk59.anu.edu.au) has joined #rust-beginners
2018-09-19 01:00:54	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-19 01:01:23	<--	cdr255 (cdr255@moz-idhae1.5rhd.p3se.0547.2601.IP) has quit (Quit: Leaving)
2018-09-19 01:05:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:05:43	<--	blackgoat (blackgoat@moz-ngq.b4n.166.221.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 01:05:46	<--	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has quit (Ping timeout: 121 seconds)
2018-09-19 01:06:51	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:07:00	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 01:07:36	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-19 01:11:10	<--	eval (eval@moz-d2n.rie.25.85.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 01:11:20	-->	eval (eval@moz-d2n.rie.25.85.IP) has joined #rust-beginners
2018-09-19 01:11:56	<--	enterprisey (enterprisey@moz-1rnvhf.cit.cornell.edu) has quit (Connection closed)
2018-09-19 01:14:43	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 01:15:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 01:17:56	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 01:19:45	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:21:29	<--	zacmps (zacmps@moz-5oq1gf.vf.net.nz) has quit (Ping timeout: 121 seconds)
2018-09-19 01:22:06	-->	ibrokemypie (Mibbit@moz-9vl.sfd.59.139.IP) has joined #rust-beginners
2018-09-19 01:22:12	ibrokemypie	hey
2018-09-19 01:22:32	ibrokemypie	how could I parse something that is sort of similar to toml, but not quite
2018-09-19 01:22:41	ibrokemypie	I only need to parse the value of one line
2018-09-19 01:23:14	ibrokemypie	it will either be key=value or key=('value1', 'value2')
2018-09-19 01:23:33	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 01:23:58	ibrokemypie	in the case there were two values I would only need value1
2018-09-19 01:24:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 01:24:31	<--	alatiera (alatiera@moz-g0jsba.access.hol.gr) has quit (Quit: Leaving)
2018-09-19 01:24:32	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 01:25:02	<--	liquidnight (marcus@moz-4qjdi9.v5mq.te4p.0c22.2a01.IP) has quit (Connection closed)
2018-09-19 01:26:09	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-19 01:26:16	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-19 01:27:16	-->	enterprisey (enterprisey@moz-1rnvhf.cit.cornell.edu) has joined #rust-beginners
2018-09-19 01:27:45	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-19 01:28:02	-->	Raychen (Thunderbird@moz-14l.9q5.175.61.IP) has joined #rust-beginners
2018-09-19 01:28:38	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-19 01:28:43	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:29:12	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-19 01:29:38	ibrokemypie	or even just, how could I parse an array from a string
2018-09-19 01:29:52	ibrokemypie	array formatted as ('value', 'value')
2018-09-19 01:30:22	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-19 01:31:29	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 01:32:01	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:32:22	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 01:32:25	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 01:34:53	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 01:35:31	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 01:36:24	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-19 01:39:00	-->	siddhart_ (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 01:39:10	<--	jolisper_ (jolisper@moz-s6i.d7r.244.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 01:39:27	ibrokemypie	let array = value.parse::<Vec>String(); doesn't work
2018-09-19 01:40:38	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 01:40:44	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Connection closed)
2018-09-19 01:40:45	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:40:48	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:40:49	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:41:50	<--	siddhartharao17 (siddharthar@moz-usjjkn.epoi.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 01:42:30	<--	escks (esc@moz-d25h75.mssnks.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:43:10	<--	siddhart_ (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 01:44:11	-->	Guest1 (Guest1@moz-51ohaq.wa.comcast.net) has joined #rust-beginners
2018-09-19 01:44:51	-->	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 01:46:45	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 01:46:51	<--	ubuntourist (kjcole@moz-lcvfes.cgn.spcsdns.net) has quit (The TLS connection was non-properly terminated.)
2018-09-19 01:47:48	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:48:00	-->	zacmps (zacmps@moz-js0i40.tbp6.el68.7000.2407.IP) has joined #rust-beginners
2018-09-19 01:48:39	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-19 01:49:07	<--	ibrokemypie (Mibbit@moz-9vl.sfd.59.139.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 01:50:31	<--	kamek (kamek@moz-0kt.tcv.243.173.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 01:51:43	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-19 01:52:10	<--	enterprisey (enterprisey@moz-1rnvhf.cit.cornell.edu) has quit (Ping timeout: 121 seconds)
2018-09-19 01:54:52	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 01:56:14	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-19 01:57:26	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-19 01:57:31	-->	pkozelka (Mibbit@moz-1n5.33n.86.193.IP) has joined #rust-beginners
2018-09-19 01:58:14	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-19 01:58:19	<--	pkozelka (Mibbit@moz-1n5.33n.86.193.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 01:59:09	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 01:59:41	<--	AtumT (IRC@moz-mevkqt.gvt.net.br) has quit (Client exited)
2018-09-19 02:02:06	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 02:03:25	-->	neal (neal@moz-hbss8c.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 02:05:11	-->	enterprisey (enterprisey@moz-1rnvhf.cit.cornell.edu) has joined #rust-beginners
2018-09-19 02:05:51	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 02:06:23	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:06:54	<--	federico_ (federico@moz-obq.vbi.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 02:08:56	Guest1	Where do types show up in crate docs?
2018-09-19 02:08:57	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:09:54	Guest1	I'm trying to figure out the argument order for Translation3::new() from https://www.nalgebra.org/rustdoc/nalgebra/index.html
2018-09-19 02:10:21	Guest1	like, I'm guessing it's x, y, z, but this isn't the first time I've had this problem
2018-09-19 02:11:21	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-19 02:12:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 02:13:36	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 02:15:01	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:15:05	Guest1	I'm also not seeing anything on which operations can be applied to which things (it's complaining that I can't * two types, but the docs say I can, and I'm not seeing anything in the rustdoc about it)
2018-09-19 02:15:27	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-19 02:15:34	-->	alx741 (alx741@moz-ckg.k67.178.186.IP) has joined #rust-beginners
2018-09-19 02:16:37	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:16:39	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-19 02:17:17	durka42	Guest1: putting in Translation3 in the top search bar comes up with https://www.nalgebra.org/rustdoc/nalgebra/geometry/type.Translation3.html
2018-09-19 02:17:30	Guest1	O_o I definitely tried that
2018-09-19 02:17:52	Guest1	although that still doesn't tell me anything about Translation3::new(...)
2018-09-19 02:18:01	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Quit: Zzz)
2018-09-19 02:18:09	durka42	with a bit of digging it is x,y,z https://www.nalgebra.org/rustdoc/nalgebra/geometry/struct.Translation.html#impl-4
2018-09-19 02:18:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 02:18:39	durka42	would be nice if that impl were shown on the Translation3 page though :/
2018-09-19 02:20:31	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 02:20:34	Guest1	I continually have a hard time with rustdoc
2018-09-19 02:21:23	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-19 02:22:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:23:42	-->	starblue1 (juergen@moz-gn47vv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-19 02:24:42	-->	ibrokemypie (conor@moz-jeq.4ur.130.144.IP) has joined #rust-beginners
2018-09-19 02:24:57	ibrokemypie	why cant I use value.trim_matches(|m| m == '(' || m == ')' || m == "'")
2018-09-19 02:24:57	<--	starblue (juergen@moz-h3n2b4.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-19 02:25:33	ibrokemypie	is "'" somehow different from ")"?
2018-09-19 02:26:03	durka42	they are both &str
2018-09-19 02:26:14	durka42	but the closure for trim_matches is supposed to receive a char
2018-09-19 02:26:27	durka42	so you want |m| m == '(' || m == ')' || m == '\''
2018-09-19 02:26:40	ibrokemypie	whats the difference?
2018-09-19 02:27:01	durka42	double quotes make &str -- sequence of bytes encoding a UTF8 string
2018-09-19 02:27:16	durka42	single quotes make a char -- an integer representing a unicode code point
2018-09-19 02:27:59	ibrokemypie	ah, thanks!
2018-09-19 02:28:15	ibrokemypie	why does it only mmatch each character once in my string?
2018-09-19 02:28:29	durka42	what do you mean?
2018-09-19 02:29:43	-->	danecando (danecando@moz-3kt35k.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-19 02:30:29	ibrokemypie	if i run that on eg "('string'), the output is string'
2018-09-19 02:31:26	<--	tac-tics_ (tac-tics@moz-93pd7l.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:32:31	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-19 02:34:08	-->	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has joined #rust-beginners
2018-09-19 02:35:13	-->	alx741 (alx741@moz-ckg.k67.178.186.IP) has joined #rust-beginners
2018-09-19 02:35:15	-->	mib_1uc5sk (Mibbit@moz-hr8i6q.res.spectrum.com) has joined #rust-beginners
2018-09-19 02:35:27	durka42	ibrokemypie: are you sure?
2018-09-19 02:35:34	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 02:35:36	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 02:35:38	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 02:35:43	durka42	eval: "('string')".trim_matches(|m| m == '(' || m == ')' || m == '\'')
2018-09-19 02:35:45	<--	mib_1uc5sk (Mibbit@moz-hr8i6q.res.spectrum.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 02:35:45	--	Notice(eval): "string"
2018-09-19 02:36:24	-->	cp (cp@moz-fresc2.asahinet.com) has joined #rust-beginners
2018-09-19 02:36:26	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 02:38:10	-->	yqrashawn (yqrashawn@moz-0m8iof.246.16clouds.com) has joined #rust-beginners
2018-09-19 02:39:38	ibrokemypie	eval: "('string1', 'string2').trim_matches(|m| m == '(' || m == ')' || m == '\'').split(", ").next().unwrap()
2018-09-19 02:39:40	--	Notice(eval): error: unterminated double quote string
2018-09-19 02:39:42	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=3aea06bac1b3a551d7b2302dcd84aa52&version=stable&mode=debug
2018-09-19 02:39:43	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:39:44	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:39:44	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:39:59	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 02:40:28	ibrokemypie	eval: "('string1', 'string2').trim_matches(|m| m == '(' || m == ')' || m == '\'').split(", ").next().unwrap()"
2018-09-19 02:40:30	--	Notice(eval): error: expected one of `.`, `;`, `?`, `}`, or an operator, found `,`
2018-09-19 02:40:33	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=af5652bdff3d7d127bd09c8c18a3a26f&version=stable&mode=debug
2018-09-19 02:42:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 02:42:11	ibrokemypie	`here
2018-09-19 02:42:12	ibrokemypie	https://play.rust-lang.org/?gist=9acd7d4ddae3aca6a0cb6564798dc360&version=stable&mode=debug&edition=2015
2018-09-19 02:42:51	-->	yaymukund (yaymukund@moz-d34.kff.69.12.IP) has joined #rust-beginners
2018-09-19 02:44:03	-->	mib_56ulyb (Mibbit@moz-tsn.fsb.77.45.IP) has joined #rust-beginners
2018-09-19 02:44:18	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 02:44:27	<--	mib_56ulyb (Mibbit@moz-tsn.fsb.77.45.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 02:44:54	-->	dalley_ (dalley@moz-147tel.dyn6.twc.com) has joined #rust-beginners
2018-09-19 02:45:40	yaymukund	In `struct Recurrence { mem: [u64, ..2] }`, what is the type of `mem`? 
2018-09-19 02:45:56	&niconii	yaymukund: [u64; 2]
2018-09-19 02:46:07	&niconii	yaymukund: [u64, ..2] was the old syntax for that type
2018-09-19 02:46:14	yaymukund	It's an... array? that begins with a `u64`, and then how do I interpret the `..2`?
2018-09-19 02:46:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:46:17	yaymukund	oh!
2018-09-19 02:46:21	<--	weeji (jihi@moz-asru4k.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-19 02:46:40	yaymukund	that makes sense!
2018-09-19 02:48:11	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 02:48:28	durka42	ibrokemypie: trim_matches only trims at the ends
2018-09-19 02:48:37	durka42	since you split after trimming, you still have the ' that was in the middle
2018-09-19 02:48:45	yaymukund	it's a fibonacci type that implements `Iterator`, so the `mem` holds `a[n-1]` and `a[n-2]`, so this all makes sense now. thanks niconii
2018-09-19 02:49:29	&niconii	no problem
2018-09-19 02:50:24	yaymukund	(fibonacci struct, not type*)
2018-09-19 02:51:02	durka42	I wonder if the rest of the code still works :p
2018-09-19 02:51:04	durka42	that's pre-1.0
2018-09-19 02:52:03	yaymukund	durka42 is that directed to me? For context, I'm following along this blog post: https://danielkeep.github.io/quick-intro-to-macros.html
2018-09-19 02:52:25	durka42	ah I wondered if it was that
2018-09-19 02:52:39	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-19 02:52:43	durka42	it does say right at the beginning that it's obsolete :p
2018-09-19 02:54:01	yaymukund	ooh, thanks for the heads up. I followed a link to the middle, so I overlooked that hehe.
2018-09-19 02:54:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 02:56:43	ibrokemypie	durka42: ah thanks, using chars().filter() now which works
2018-09-19 02:58:35	ibrokemypie	how do i solve a variable not living long enough?
2018-09-19 02:58:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 02:58:51	durka42	store it somewhere such that it lives longer :)
2018-09-19 02:58:56	durka42	it's a broad question
2018-09-19 02:59:18	-->	weeji (jihi@moz-7v6mv3.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 03:00:35	ibrokemypie	well i have a mutable variable which gets mutated to the value of another variable in an if statement, then returned after that statement closes
2018-09-19 03:01:00	durka42	I'm guessing this "another variable" is a reference?
2018-09-19 03:01:27	-->	alx741 (alx741@moz-ckg.k67.178.186.IP) has joined #rust-beginners
2018-09-19 03:01:33	ibrokemypie	uh
2018-09-19 03:01:34	ibrokemypie	no?
2018-09-19 03:01:40	ibrokemypie	reference as in &?
2018-09-19 03:02:08	durka42	maybe you should show me the code so I don't make bad guesses
2018-09-19 03:02:38	durka42	but general rule is you can't return references to something that will go out of scope at the end of the function
2018-09-19 03:02:38	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-19 03:03:43	ibrokemypie	uh
2018-09-19 03:03:49	-->	yaymukund48 (yaymukund@moz-d34.kff.69.12.IP) has joined #rust-beginners
2018-09-19 03:04:36	ibrokemypie	whats the issue with let name = value.chars().filter(|m| !matches.contains(m)).collect().split(", ");
2018-09-19 03:04:40	<--	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 03:05:05	-->	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 03:05:12	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (The TLS connection was non-properly terminated.)
2018-09-19 03:05:23	<--	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 03:06:01	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-19 03:06:21	<--	yaymukund (yaymukund@moz-d34.kff.69.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 03:06:34	durka42	ibrokemypie: there's several issues
2018-09-19 03:06:54	--	yaymukund48 is now known as yaymukund
2018-09-19 03:07:05	durka42	first you haven't told it what to collect into (collecting as a Vec, i.e. .collect::<Vec<_>>() is very common)
2018-09-19 03:07:18	durka42	oh but here you're probably collecting into a String
2018-09-19 03:07:42	durka42	anyway, the other issue is more subtle
2018-09-19 03:08:03	-->	pjf (pjf@moz-8g1tgl.compute.amazonaws.com) has joined #rust-beginners
2018-09-19 03:08:23	durka42	the result of collect() is an owned value, but you aren't assigning it to anything, it's just an intermediate result of a longer expression, so it's going to be dropped at the end of the statement (at the semicolon, you could say)
2018-09-19 03:08:49	durka42	that's a problem because split() produces references back into the thing that was being splitted
2018-09-19 03:09:06	ibrokemypie	is that why it doesnt live long enough?
2018-09-19 03:09:09	durka42	yes
2018-09-19 03:09:14	durka42	so, the solution is to end the expression at collect(), assign that to a variable so it stays alive, *then* call split
2018-09-19 03:09:51	-->	neal_ (neal@moz-v55u2f.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 03:10:16	<--	yaymukund (yaymukund@moz-d34.kff.69.12.IP) has quit (Connection closed)
2018-09-19 03:10:36	ibrokemypie	                let names = value.chars().filter(|m| !matches.contains(m)).collect::<String>();
2018-09-19 03:10:37	ibrokemypie	                let mut name = names.split(", ").next().unwrap();
2018-09-19 03:10:39	ibrokemypie	                pkgname = strings;
2018-09-19 03:10:59	ibrokemypie	soory, name for the last variable
2018-09-19 03:11:00	ibrokemypie	not strings
2018-09-19 03:12:04	durka42	yes that should work
2018-09-19 03:12:16	durka42	now if you want to return pkgname, you should make it a String, not &str, so that it owns its own data
2018-09-19 03:12:23	durka42	returning a &str that references into `names` won't work
2018-09-19 03:12:41	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Quit: WeeChat 2.0.1)
2018-09-19 03:12:45	<--	neal (neal@moz-hbss8c.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-19 03:13:33	ibrokemypie	https://bpaste.net/show/7b5edd189301
2018-09-19 03:13:42	ibrokemypie	so this should work?
2018-09-19 03:14:42	durka42	if it compiles :p
2018-09-19 03:14:50	durka42	I don't see an obvious error
2018-09-19 03:17:17	ibrokemypie	whats the best way to handle errors in rust? in go you would always just return (err, returneddata) and check if err != nil, what is the equivalent in rust?
2018-09-19 03:17:35	durka42	Result
2018-09-19 03:17:48	-->	meeples (Mibbit@moz-44m.1f0.219.71.IP) has joined #rust-beginners
2018-09-19 03:17:53	durka42	Result<T, E> is an enum that either contains the result you wanted (of type T) or an error (of type E)
2018-09-19 03:18:06	<--	meeples (Mibbit@moz-44m.1f0.219.71.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 03:18:08	durka42	and it has to be unpacked to get to either, so you can't forget to check for errors
2018-09-19 03:18:18	durka42	I definitely recommend reading the error handling chapter in the book
2018-09-19 03:20:09	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 03:21:18	<--	danecando (danecando@moz-3kt35k.sdba.4jle.1700.2600.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-19 03:23:20	ibrokemypie	why does Ok() have a semicolon at the end but Err() doesnt?
2018-09-19 03:24:11	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 03:24:39	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-19 03:25:14	<--	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-19 03:26:28	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-19 03:26:29	-->	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has joined #rust-beginners
2018-09-19 03:26:31	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-19 03:29:37	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-19 03:29:39	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 03:30:24	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 03:30:34	durka42	ibrokemypie: where are you looking?
2018-09-19 03:31:48	zaphar_ps-M	ibrokemypie: I'm not sure where you are seeing it but maybe it's return OK(); which requires the semicolon because it's a return statement.
2018-09-19 03:33:41	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-19 03:33:53	ibrokemypie	https://bpaste.net/show/6c2c72fb8713
2018-09-19 03:34:03	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 03:34:15	-->	DeltaManiac (DeltaManiac@moz-0s1.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 03:35:19	zaphar_ps-M	ibrokemypie: we need to see the actual code for context not the error message.
2018-09-19 03:36:00	<--	emerent (emerentius@moz-5c132b.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-19 03:36:13	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-19 03:36:16	<--	zacmps (zacmps@moz-js0i40.tbp6.el68.7000.2407.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 03:36:17	durka42	it looks like you meant to return the Err value (which is done by leaving off the semicolon, if you're at the last line of the function), but you left the semicolon in there, which makes it just a statement that doesn't do anything and evaluates to ()
2018-09-19 03:36:23	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-19 03:36:48	ibrokemypie	why does that happen?
2018-09-19 03:37:04	durka42	I tried to explain
2018-09-19 03:37:11	<--	DeltaManiac (DeltaManiac@moz-0s1.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 03:37:13	durka42	if you show the code, it might be more clear
2018-09-19 03:37:41	-->	DeltaManiac (DeltaManiac@moz-0s1.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 03:38:07	ibrokemypie	https://bpaste.net/show/df54f1a14d2a
2018-09-19 03:38:35	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 03:39:03	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-19 03:39:28	durka42	ibrokemypie: yeah so none of those three lines (15, 18, 21) are doing anything
2018-09-19 03:39:51	durka42	just creating an expression and then dropping it
2018-09-19 03:39:52	durka42	eval: 42;
2018-09-19 03:39:54	--	Notice(eval): ()
2018-09-19 03:40:21	durka42	to return an expression, write `return ...;`
2018-09-19 03:40:49	<--	DeltaManiac (DeltaManiac@moz-0s1.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 03:40:53	-->	zacmps (zacmps@moz-kjrdho.telstraclear.net) has joined #rust-beginners
2018-09-19 03:40:54	durka42	as a special case, if it's the last line of the function (or the last line of the last block of the function, etc) you can leave out the `return` and the semicolon
2018-09-19 03:40:58	-->	DeltaManiac (DeltaManiac@moz-0s1.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 03:42:12	ibrokemypie	alright, that makes sense, I thought the Ok and Err were returning
2018-09-19 03:43:18	-->	simonada_ (simonadamei@moz-p7t6d3.7nsu.elfl.0a61.2001.IP) has joined #rust-beginners
2018-09-19 03:43:25	durka42	yeah they are just variants of the Result enum
2018-09-19 03:43:29	durka42	Result::Ok and Result::Err
2018-09-19 03:43:42	ibrokemypie	that makes sense
2018-09-19 03:44:39	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-19 03:45:11	ibrokemypie	I am still confused about how you use the error though
2018-09-19 03:45:31	ibrokemypie	https://bpaste.net/show/fec046f17016
2018-09-19 03:45:55	-->	neverfox (neverfox@moz-8u0.0od.177.108.IP) has joined #rust-beginners
2018-09-19 03:46:01	ibrokemypie	this works but I dont really know what it;s doing, nor how to act on the error aside from panicing
2018-09-19 03:46:14	<--	simonadameit (simonadamei@moz-ckhllo.usrd.cved.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 03:46:22	durka42	well that's a design decision for your program
2018-09-19 03:46:29	durka42	what do you want to do if the file didn't parse?
2018-09-19 03:46:42	durka42	maybe there's another file? stop and ask the user for input? or just print an error and exit the program?
2018-09-19 03:47:10	ibrokemypie	I want to print an error and skip a function, but continue running aside from that
2018-09-19 03:47:44	durka42	maybe you can put the code that should be skipped on error, inside the Ok branch of the match
2018-09-19 03:48:18	durka42	match pkgname { Ok(pkgname) => { /* process pkgname */ } Err(e) => { println!("pkgname was bad, continuing: {:?}"); } }
2018-09-19 03:50:05	ibrokemypie	Is there an alternative to .expect which I can use for file opening which instead just uses my function's error handler rather than panicing?
2018-09-19 03:53:10	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-19 03:53:28	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-19 03:54:18	durka42	there's things like unwrap_or_else which will call a function you provide in the Err case
2018-09-19 03:54:19	-->	alx741 (alx741@moz-ckg.k67.178.186.IP) has joined #rust-beginners
2018-09-19 03:54:47	durka42	but the function also has to provide a replacement value
2018-09-19 03:55:38	durka42	if you want `let file = open_file().xyz(...)` where xyz is replacing expect, there's really nothing it can do except panic if you can't produce something to assign to `file`
2018-09-19 03:55:50	-->	snip (stron@moz-c9pgq3.com) has joined #rust-beginners
2018-09-19 03:56:30	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Connection closed)
2018-09-19 03:56:58	-->	subhojit777 (subhojit777@moz-74d.5s7.227.110.IP) has joined #rust-beginners
2018-09-19 03:58:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 04:00:36	ibrokemypie	what about try!?
2018-09-19 04:01:29	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-19 04:02:11	durka42	sure you can use try! / ? to return from the function in the Err case
2018-09-19 04:02:24	durka42	assuming the surrounding function returns a Result as well
2018-09-19 04:02:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:03:04	ibrokemypie	it returns a result, just with a different type
2018-09-19 04:03:42	durka42	if the Err type is the same (or convertible via a From impl) then it's fine
2018-09-19 04:03:59	-->	vido (vido@moz-bqbqcd.optusnet.com.au) has joined #rust-beginners
2018-09-19 04:04:00	durka42	otherwise you can put in a map_err to convert the error
2018-09-19 04:05:24	-->	chrisdotcode (quassel@moz-jpnbf7.jv55.dlrr.fcc8.2607.IP) has joined #rust-beginners
2018-09-19 04:06:20	<--	smt` (smt@moz-k0id19.range86-191.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-19 04:06:24	<--	vido (vido@moz-bqbqcd.optusnet.com.au) has quit (Quit: Konversation terminated!)
2018-09-19 04:07:29	ibrokemypie	alright, think i have it, just looks really terrible with indentation
2018-09-19 04:07:47	ibrokemypie	https://bpaste.net/show/b793069e6017
2018-09-19 04:07:59	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-19 04:09:19	-->	vido (vido@moz-bqbqcd.optusnet.com.au) has joined #rust-beginners
2018-09-19 04:09:56	durka42	nice
2018-09-19 04:09:57	-->	pie (androirc@moz-fic.99h.136.1.IP) has joined #rust-beginners
2018-09-19 04:10:08	ibrokemypie	is there any way to make it more readable?
2018-09-19 04:12:29	<--	vido (vido@moz-bqbqcd.optusnet.com.au) has quit (Quit: Konversation terminated!)
2018-09-19 04:13:29	durka42	let's see
2018-09-19 04:14:06	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 04:14:24	<--	ibrokemypie (conor@moz-jeq.4ur.130.144.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 04:15:31	pie	(i havent quit just moved device)
2018-09-19 04:15:38	--	pie is now known as ibrokemypie
2018-09-19 04:16:01	durka42	ibrokemypie: how's this https://play.rust-lang.org/?gist=f811d46905b901ca4d38bae5b77f909d&version=stable&mode=debug&edition=2015
2018-09-19 04:16:17	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-19 04:18:08	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 04:18:32	<--	acksys (acksys@moz-ti3fbf.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:19:08	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Connection closed)
2018-09-19 04:19:25	-->	jolisper_ (jolisper@moz-s6i.d7r.244.190.IP) has joined #rust-beginners
2018-09-19 04:19:47	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-19 04:20:01	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 04:22:19	ibrokemypie	so it just defaults to the Ok arm?
2018-09-19 04:23:03	Guest1	https://gist.github.com/rust-play/d5c15d0397f2aa581c04464b5a590fcc << So I'm not sure why the to_homogenous() is required to make this work
2018-09-19 04:23:21	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 04:23:24	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 04:23:25	durka42	ibrokemypie: not sure what you mean by defaults
2018-09-19 04:23:26	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 04:23:44	durka42	? returns right away if the Result is Err so the entire rest of the function is skipped
2018-09-19 04:24:25	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 04:24:50	-->	vido (vido@moz-bqbqcd.optusnet.com.au) has joined #rust-beginners
2018-09-19 04:25:09	Guest1	Seems like they're both Transformations, which implement Mul<Transformation...>
2018-09-19 04:25:18	Guest1	where ... is "arcane runes I don't understand"
2018-09-19 04:25:54	<--	mistergibson (mistergibso@moz-c12ipe.ptld.qwest.net) has quit (Connection closed)
2018-09-19 04:26:07	vido	Can anyone explain what happened to std::simd in rust nightly ? Can't find any relevant info online.
2018-09-19 04:26:51	Guest1	(specifically, https://www.nalgebra.org/rustdoc/nalgebra/geometry/struct.Translation.html#impl-Mul%3CTransform%3CN%2C%20D%2C%20C%3E%3E )
2018-09-19 04:26:58	Guest1	err
2018-09-19 04:27:07	Guest1	or the equivalent on the Transform page
2018-09-19 04:27:30	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:27:30	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:27:31	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:27:52	-->	xelkarin (Mibbit@moz-bg0bsm.res.rr.com) has joined #rust-beginners
2018-09-19 04:28:11	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 04:28:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 04:28:46	durka42	Guest1: that doesn't seem like the right impl to be looking at
2018-09-19 04:28:52	durka42	you're doing Matrix4 * Matrix4 right now
2018-09-19 04:29:02	durka42	or Matrix4 * Orthographic3 if you leave out the conversion
2018-09-19 04:29:02	<--	vido (vido@moz-bqbqcd.optusnet.com.au) has left #rust-beginners ("Konversation terminated!")
2018-09-19 04:29:14	Guest1	also https://www.nalgebra.org/points_and_transformations/
2018-09-19 04:29:28	-->	vido (vido@moz-bqbqcd.optusnet.com.au) has joined #rust-beginners
2018-09-19 04:30:01	Guest1	seems to indicate that multiplication should work between them
2018-09-19 04:30:30	durka42	where does it imply that?
2018-09-19 04:30:31	Guest1	https://www.nalgebra.org/points_and_transformations/#transformations
2018-09-19 04:31:20	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 04:31:21	Guest1	"Transformations can be composed (by multiplication) even if they do not have the same type"
2018-09-19 04:31:50	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 04:31:56	durka42	Orthographic doesn't seem to be in that chart though
2018-09-19 04:32:42	Guest1	Orthographic should be projective
2018-09-19 04:32:43	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 04:32:55	durka42	it seems to be a separate struct for... some reason
2018-09-19 04:32:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:33:01	durka42	like it doesn't impl any of the traits
2018-09-19 04:33:16	xelkarin	I've defined a Type to which you can attach optional generic data with a function. If I try to instantiate it with no intention of attaching data to it I get errors such as 'type annotations needed', 'cannot infer type for `T`'
2018-09-19 04:33:43	xelkarin	I've tried 'let inst: Type<_> = Type::new()', which throws the same error.
2018-09-19 04:33:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 04:34:02	xelkarin	'let inst: Type<()> = Type::new()' works, but doesn't feel right.
2018-09-19 04:34:12	<--	jolisper_ (jolisper@moz-s6i.d7r.244.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 04:34:30	durka42	well what do you want the type to be?
2018-09-19 04:34:44	xelkarin	It doesn't matter.
2018-09-19 04:34:54	<--	vido (vido@moz-bqbqcd.optusnet.com.au) has left #rust-beginners ("Konversation terminated!")
2018-09-19 04:35:00	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 04:35:02	durka42	it matters to rustc
2018-09-19 04:35:06	xelkarin	It's just optional data that can be attached, I don't plan to attach it.
2018-09-19 04:35:22	durka42	rustc needs to lay out the type, calculate size, etc
2018-09-19 04:35:27	durka42	it needs to know the full definition of every type
2018-09-19 04:35:32	Guest1	huh... where would I look for something to convert it into one? Seems strange to have a Projective type that I can't turn a projection matrix into
2018-09-19 04:37:07	<--	Pistachio (Pistachio@moz-ba8419.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:37:58	-->	vido (vido@moz-bqbqcd.optusnet.com.au) has joined #rust-beginners
2018-09-19 04:37:59	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 04:38:07	xelkarin	It's actually a reference that's passed to a C library, there's a PhantomData place holder in the struct. So rust isn't really calculating the type size in this case anyways.
2018-09-19 04:38:29	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 04:38:32	-->	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 04:39:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:41:04	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-19 04:41:05	<--	zacmps (zacmps@moz-kjrdho.telstraclear.net) has quit (Ping timeout: 121 seconds)
2018-09-19 04:41:15	-->	zacmps (zacmps@moz-2leh21.pvgg.el68.7000.2407.IP) has joined #rust-beginners
2018-09-19 04:41:21	<--	vido (vido@moz-bqbqcd.optusnet.com.au) has quit (Quit: Konversation terminated!)
2018-09-19 04:41:23	<--	Guest4641 (nj0rd@moz-cn16rn.dsl.tropolys.de) has quit (Ping timeout: 121 seconds)
2018-09-19 04:45:19	<--	zacmps (zacmps@moz-2leh21.pvgg.el68.7000.2407.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 04:47:06	-->	DeltaMan_ (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 04:47:45	-->	zacmps (zacmps@moz-b7ne34.apvl.el68.7000.2407.IP) has joined #rust-beginners
2018-09-19 04:48:21	xelkarin	Considering 'Ok(())' seems idiomatic, I'll assume Type<()> would be the equivalent.
2018-09-19 04:50:00	<--	DeltaManiac (DeltaManiac@moz-0s1.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 04:51:05	<--	DeltaMan_ (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Quit: )
2018-09-19 04:51:12	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 04:54:07	-->	Guest4641 (nj0rd@moz-mr054g.versanet.de) has joined #rust-beginners
2018-09-19 04:54:57	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Connection closed)
2018-09-19 04:55:03	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-19 04:56:36	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-19 04:57:26	-->	kyrylo (kyrylo@moz-q43.utv.105.130.IP) has joined #rust-beginners
2018-09-19 05:01:31	<--	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has quit (Ping timeout: 121 seconds)
2018-09-19 05:01:53	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Client exited)
2018-09-19 05:04:19	-->	vido (vido@moz-bqbqcd.optusnet.com.au) has joined #rust-beginners
2018-09-19 05:04:23	-->	eyans (a@moz-9aufun.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-19 05:05:26	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-19 05:05:27	<--	vido (vido@moz-bqbqcd.optusnet.com.au) has quit (Quit: Konversation terminated!)
2018-09-19 05:05:30	-->	Mateon2 (Thunderbird@moz-5fg5fi.supernova.orange.pl) has joined #rust-beginners
2018-09-19 05:06:49	<--	Mateon1 (Thunderbird@moz-drhv3s.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-19 05:06:49	--	Mateon2 is now known as Mateon1
2018-09-19 05:07:26	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-19 05:07:54	<--	xelkarin (Mibbit@moz-bg0bsm.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 05:11:35	<--	thallada (thallada@moz-peaprj.compute-1.amazonaws.com) has quit (Quit: WeeChat 2.1)
2018-09-19 05:11:52	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Connection closed)
2018-09-19 05:11:55	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-19 05:14:27	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-19 05:15:01	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-19 05:15:11	dtoebe	Hi, I have some bad JSON, and one key's value, might com in as a string, and sometimes as a usize. I'm using serde_json, is there a way to deserialize it regardless as a string? 
2018-09-19 05:16:34	--	fatpointer is now known as fellatio
2018-09-19 05:17:57	-->	PeterRabbitIsFluffy (peter@moz-c8th1v.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-19 05:19:03	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-19 05:19:40	-->	cxiao (cxiao@moz-sng.ido.103.172.IP) has joined #rust-beginners
2018-09-19 05:19:54	-->	WindowsBunny1 (Bunny@moz-c8th1v.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-19 05:20:30	<--	cpup (cpup@moz-3raguf.ct.charter.com) has quit (Quit: Breaking stuff)
2018-09-19 05:20:37	-->	cpup (cpup@moz-3raguf.ct.charter.com) has joined #rust-beginners
2018-09-19 05:21:05	<--	WindowsBunny (Bunny@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 05:21:23	<--	PeterRabbit (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 05:22:19	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 05:22:38	--	WindowsBunny1 is now known as WindowsBunny
2018-09-19 05:23:09	durka42	dtoebe: something like this but should be simpler https://serde.rs/string-or-struct.html
2018-09-19 05:24:00	<--	subhojit777 (subhojit777@moz-74d.5s7.227.110.IP) has quit (Quit: Leaving)
2018-09-19 05:24:49	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-19 05:26:23	dtoebe	durka42:  I think that is what I am looking for. Thank you! Sorry to have you look through the docs for me.
2018-09-19 05:26:44	durka42	you might be able to do tricks with serde's enum representations
2018-09-19 05:26:51	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 05:29:04	-->	Linda86 (Mibbit@moz-obu.bqm.185.146.IP) has joined #rust-beginners
2018-09-19 05:29:36	Linda86	hello
2018-09-19 05:29:39	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-19 05:30:09	Arnavion	dtoebe:   https://github.com/Arnavion/k8s-openapi-codegen/blob/master/k8s-openapi/src/v1_11/apimachinery/pkg/util/intstr/int_or_string.rs#L16-L58
2018-09-19 05:30:44	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 05:31:09	dtoebe	Arnavion: Thanks! great example!
2018-09-19 05:32:20	dtoebe	I have to say.. coming from the Go community, and diving into Rust. You guys are awesome! Always very helpful
2018-09-19 05:33:19	durka42	I don't know why this doesn't work :( https://play.rust-lang.org/?gist=a85f2a4b67894046fbd84b27a1e08d7b&version=stable&mode=debug&edition=2015
2018-09-19 05:33:30	-->	kyrylo_ (kyrylo@moz-q43.utv.105.130.IP) has joined #rust-beginners
2018-09-19 05:33:51	Arnavion	It doesn't always pick u64
2018-09-19 05:34:05	Arnavion	That's why you can see in my code I had to have i32, u64 and i64
2018-09-19 05:34:35	Arnavion	... though that's not the problem here. Hmm
2018-09-19 05:34:37	durka42	swapping u64 for i32 or i64 doesn't help
2018-09-19 05:34:43	durka42	it works without #[serde(flatten)]
2018-09-19 05:34:46	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-19 05:35:06	<--	gdamjan (damjan@moz-f8h7vs.ie.mk) has quit (Ping timeout: 121 seconds)
2018-09-19 05:35:36	-->	gdamjan (damjan@moz-f8h7vs.ie.mk) has joined #rust-beginners
2018-09-19 05:35:38	<--	cpup (cpup@moz-3raguf.ct.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-19 05:35:48	--	fellatio is now known as sadlittlepanda
2018-09-19 05:35:54	<--	kyrylo (kyrylo@moz-q43.utv.105.130.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 05:36:06	-->	cpup (cpup@moz-3raguf.ct.charter.com) has joined #rust-beginners
2018-09-19 05:36:15	Arnavion	I'm confused why you have the flatten there
2018-09-19 05:36:34	<--	dmerigoux (quassel@moz-af1vp6.ip-193-70-87.eu) has quit (Ping timeout: 121 seconds)
2018-09-19 05:36:35	Arnavion	{ "bar": ... } is already a Foo. What are you trying to flatten it to?
2018-09-19 05:37:18	dtolnay	ditto, i am confused why flatten is there
2018-09-19 05:37:20	<--	stew (stew@moz-atr.rj4.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 05:37:22	durka42	the idea was to solve dtoebe's issue by deserializing either {"bar":"42"} or {"bar":42} to a Foo
2018-09-19 05:37:38	-->	stew (stew@moz-atr.rj4.243.162.IP) has joined #rust-beginners
2018-09-19 05:37:43	Arnavion	untagged already does that with the struct Foo and the enum Stringish
2018-09-19 05:37:59	Arnavion	flatten is when you want to define a subset of fields of the JSON in a nested Rust value
2018-09-19 05:38:01	durka42	ok, I guess they're not both needed then
2018-09-19 05:38:25	--	sadlittlepanda is now known as fatpointer
2018-09-19 05:38:27	Arnavion	like the JSON has "a": ..., "b",    but your Rust has struct S{ a: ..., foo: Foo } struct Foo { b: ... }
2018-09-19 05:38:49	durka42	right
2018-09-19 05:39:25	<--	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2018-09-19 05:39:35	Guest1	         Event::KeyDown { keycode: Some(Keycode::A) | Some(Keycode::S), .. } => {  // is it possible to do this?
2018-09-19 05:39:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 05:39:41	Guest1	(as part of a match expression)
2018-09-19 05:40:20	Guest1	It works when it's Some(Keycode::Escape), ..
2018-09-19 05:40:28	Arnavion	Event::KeyDown { keycode: Some(Keycode::A), .. } | Event::KeyDown { keycode: Some(Keycode::S), .. } =>
2018-09-19 05:40:59	Arnavion	or just bind keycode and match it separately
2018-09-19 05:40:59	Guest1	Is there a way to have a branch for not-Escape?
2018-09-19 05:41:17	Guest1	oh wait yeah that'd work
2018-09-19 05:41:25	Arnavion	Have an earlier branch for Escape
2018-09-19 05:41:34	Guest1	matches happen in order?
2018-09-19 05:41:37	Arnavion	Yes
2018-09-19 05:41:50	Arnavion	Well, they act like they do
2018-09-19 05:42:04	Arnavion	Doesn't mean the actual asm is in the same order
2018-09-19 05:42:36	Guest1	works for me
2018-09-19 05:43:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 05:46:37	dtoebe	durka42:  I built off your example: https://play.rust-lang.org/?gist=a85f2a4b67894046fbd84b27a1e08d7b&version=stable&mode=debug&edition=2015
2018-09-19 05:46:56	<--	kyrylo_ (kyrylo@moz-q43.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 05:48:13	-->	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-19 05:48:45	Guest1	What would be a good data structure to use to store the set of currently held keyboard buttons, I found https://doc.rust-lang.org/std/collections/struct.HashSet.html
2018-09-19 05:48:59	Guest1	would that be the right thing?
2018-09-19 05:50:53	<--	Linda86 (Mibbit@moz-obu.bqm.185.146.IP) has quit (G-Lined: no spamming here)
2018-09-19 05:51:09	-->	GreenJello (GreenJello@moz-bra.342.189.207.IP) has joined #rust-beginners
2018-09-19 05:53:45	Yaniel	an array would probably be better
2018-09-19 05:54:14	Yaniel	or even a struct, if you only care about a few keys overall
2018-09-19 05:55:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 05:56:31	-->	kyren (kyren@moz-0d6a26.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-19 05:56:32	<--	kyren (kyren@moz-0d6a26.ic6o.knbj.9001.2603.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-19 05:56:57	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-19 05:59:29	-->	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has joined #rust-beginners
2018-09-19 05:59:32	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 05:59:39	Fusxfaranto	conceptually i would generally recommend hashmap of bools rather than a hash-based set
2018-09-19 06:00:27	<--	yqrashawn (yqrashawn@moz-0m8iof.246.16clouds.com) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2018-09-19 06:00:44	Fusxfaranto	for most keyboard interface libraries though, it's generally convenient to just index the keycodes into an array of bools, rather than bother hashing them
2018-09-19 06:01:26	-->	ufobat_ (Martin@moz-fqqmc8.dyn.telefonica.de) has joined #rust-beginners
2018-09-19 06:02:36	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 06:03:45	-->	squiggy (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-19 06:04:08	squiggy	Link to a tutorial that makes working with Option and Result easier?
2018-09-19 06:04:13	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-19 06:06:27	Guest1	how do I use an enum as an array index?
2018-09-19 06:06:38	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 06:07:41	<--	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 06:07:45	<--	squiggy (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 06:07:55	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-19 06:11:07	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 06:11:07	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 06:11:08	Arnavion	If you're doing this for a game, use scan codes, not key codes
2018-09-19 06:11:10	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 06:11:52	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:12:01	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:12:08	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:12:16	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Connection closed)
2018-09-19 06:12:22	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:12:31	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:12:38	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:12:47	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:12:54	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:13:02	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:13:08	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:13:16	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:13:23	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:13:31	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:13:38	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:13:43	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 06:13:46	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:13:53	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:14:01	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:14:07	-->	pie (androirc@moz-3t3.i1j.136.1.IP) has joined #rust-beginners
2018-09-19 06:14:15	<--	pie (androirc@moz-3t3.i1j.136.1.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:15:11	-->	kyrylo (kyrylo@moz-q43.utv.105.130.IP) has joined #rust-beginners
2018-09-19 06:15:16	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 06:15:16	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 06:15:17	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 06:15:41	<--	ibrokemypie (androirc@moz-fic.99h.136.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 06:16:28	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 06:16:39	-->	oms-hh (oms@moz-8k0au8.dyn.telefonica.de) has joined #rust-beginners
2018-09-19 06:19:27	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-19 06:19:38	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-19 06:20:59	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 06:21:53	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 06:22:04	-->	kyren (kyren@moz-7cku3s.res.spectrum.com) has joined #rust-beginners
2018-09-19 06:22:58	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Connection closed)
2018-09-19 06:22:59	-->	Aankhen`` (notasquid@moz-djl.h7i.207.49.IP) has joined #rust-beginners
2018-09-19 06:23:31	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-19 06:25:53	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 06:27:47	<--	kyren (kyren@moz-7cku3s.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-09-19 06:27:54	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-19 06:30:40	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 06:31:14	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 06:31:35	-->	kyren (kyren@moz-7cku3s.res.spectrum.com) has joined #rust-beginners
2018-09-19 06:33:07	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 06:33:50	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 06:34:40	<--	kyren (kyren@moz-7cku3s.res.spectrum.com) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-19 06:35:01	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-19 06:35:47	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 06:36:08	<--	thaumavorio (thaumavorio@moz-3v88cl.io) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-19 06:37:44	-->	thaumavorio (thaumavorio@moz-3v88cl.io) has joined #rust-beginners
2018-09-19 06:40:01	-->	ibrokemypie (conor@moz-fudpmm.commander.net.au) has joined #rust-beginners
2018-09-19 06:40:54	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 06:41:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 06:41:24	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 06:41:35	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 06:45:17	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-19 06:45:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 06:48:03	-->	yqrashawn (yqrashawn@moz-0m8iof.246.16clouds.com) has joined #rust-beginners
2018-09-19 06:48:04	<--	ibrokemypie (conor@moz-fudpmm.commander.net.au) has quit (Ping timeout: 121 seconds)
2018-09-19 06:48:58	<--	raingloom (raingloom@moz-7h4h01.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-19 06:49:26	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 06:51:11	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-19 06:51:21	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 06:51:59	-->	pie (androirc@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-19 06:52:17	<--	eyans (a@moz-9aufun.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-19 06:52:41	<--	pie (androirc@moz-sfb.22j.146.120.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:52:48	-->	pie (androirc@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-19 06:52:56	<--	pie (androirc@moz-sfb.22j.146.120.IP) has quit (Connection closed)
2018-09-19 06:53:04	-->	pie (androirc@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-19 06:53:11	<--	pie (androirc@moz-sfb.22j.146.120.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:53:19	-->	pie (androirc@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-19 06:53:26	<--	pie (androirc@moz-sfb.22j.146.120.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-09-19 06:53:33	-->	pie (androirc@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-19 06:54:33	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 06:54:56	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 06:57:32	drager	Arnavion: Not part of the discussion but just curious, what's scan codex?
2018-09-19 06:57:36	drager	codes*
2018-09-19 06:58:02	Arnavion	Key codes tell you the letter on the key. Scan codes identify the position of the key
2018-09-19 06:58:07	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 06:58:31	Arnavion	WASD controls make sense for a QWERTY keyboard but not an AZERTY one. Using scan codes instead doesn't have that problem
2018-09-19 06:58:58	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-19 06:59:11	-->	mib_g5nmdl (Mibbit@moz-43t2v9.frokca.sbcglobal.net) has joined #rust-beginners
2018-09-19 06:59:19	-->	kermi (Mibbit@moz-oic.c6j.177.203.IP) has joined #rust-beginners
2018-09-19 06:59:22	<--	mib_g5nmdl (Mibbit@moz-43t2v9.frokca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 07:02:09	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 07:02:53	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Quit: Leaving)
2018-09-19 07:03:37	<--	xionbox (chris@moz-8sf7em.106f.npme.0281.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 07:04:12	-->	xionbox (chris@moz-ngl9v3.co.comcast.net) has joined #rust-beginners
2018-09-19 07:06:34	<--	artfwo (artfwo@moz-jbr.h02.230.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 07:07:07	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 07:09:48	-->	eibwen (eibwen@moz-9kbrpu.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 07:09:54	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 07:10:36	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 07:11:20	-->	amphibulus (Mibbit@moz-sut.bmc.76.202.IP) has joined #rust-beginners
2018-09-19 07:11:24	<--	amphibulus (Mibbit@moz-sut.bmc.76.202.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 07:11:35	-->	vips (user@moz-695.tj5.186.1.IP) has joined #rust-beginners
2018-09-19 07:11:50	-->	arunkumar413 (arunkumar41@moz-bu5.7h4.48.157.IP) has joined #rust-beginners
2018-09-19 07:13:15	<--	kyrylo (kyrylo@moz-q43.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 07:13:26	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2018-09-19 07:13:32	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-19 07:15:07	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 07:16:32	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-19 07:19:22	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-19 07:21:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 07:21:51	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-19 07:22:31	-->	liquidnight (marcus@moz-cn1qj8.9p6n.ja0r.0c22.2a01.IP) has joined #rust-beginners
2018-09-19 07:22:40	-->	blackgoat (blackgoat@moz-ngq.b4n.166.221.IP) has joined #rust-beginners
2018-09-19 07:22:53	<--	vips (user@moz-695.tj5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 07:25:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 07:25:55	<--	cjd (user@moz-rnq8f1.b68u.clge.f930.2c0f.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 07:26:05	-->	cjd (user@moz-rnq8f1.b68u.clge.f930.2c0f.IP) has joined #rust-beginners
2018-09-19 07:30:52	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 07:31:45	-->	j0nthn (jonathan@moz-6br3pp.rev.sfr.net) has joined #rust-beginners
2018-09-19 07:32:04	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2018-09-19 07:34:01	<--	simonada_ (simonadamei@moz-p7t6d3.7nsu.elfl.0a61.2001.IP) has quit (Connection closed)
2018-09-19 07:34:04	<--	Guest1 (Guest1@moz-51ohaq.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 07:35:30	-->	kyrylo (kyrylo@moz-q43.utv.105.130.IP) has joined #rust-beginners
2018-09-19 07:36:17	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-19 07:36:47	-->	xet7 (xet7@moz-kvs2hm.dhcp.inet.fi) has joined #rust-beginners
2018-09-19 07:38:37	-->	YeFFreY (Mibbit@moz-fipq63.reverse.destiny.be) has joined #rust-beginners
2018-09-19 07:39:23	YeFFreY	hello
2018-09-19 07:39:33	YeFFreY	May I ask a question ? :)
2018-09-19 07:40:06	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 07:40:19	GreenJello	YeFFreY, sure :-)
2018-09-19 07:40:39	YeFFreY	I'm creating a small lib (cargo --lib)
2018-09-19 07:41:23	YeFFreY	I've created a modules with mod.rs and another file called "new_activity_command.rs"
2018-09-19 07:41:52	YeFFreY	in the "mod.rs" file, I've put "pub use self::new_activity_command"
2018-09-19 07:42:21	YeFFreY	but if I add in the lib.rs : "mod command" (which is the name of the module describe above)
2018-09-19 07:42:35	YeFFreY	Rust tells me that he is not able to find "new_activity_command"
2018-09-19 07:43:11	YeFFreY	Am I doing something wrong ? (if my explanation is clear ;) )
2018-09-19 07:44:18	Arnavion	Your mod.rs is in a directory called command?
2018-09-19 07:44:23	YeFFreY	yes
2018-09-19 07:44:37	Arnavion	In mod.rs, put   mod new_activity_command; pub use self::new_activity_command;
2018-09-19 07:44:44	Arnavion	In lib.rs, put   mod command;
2018-09-19 07:45:29	Arnavion	For command/mod.rs you can alternatively write   pub mod new_activity_command;   which does the same thing as those two statements
2018-09-19 07:46:18	YeFFreY	tried to put "mod new_activity_command" and "pub use self::new_activity_command" in mod.rs
2018-09-19 07:46:42	YeFFreY	but Rust is complaining : "re-export of private `new_activity_command`"
2018-09-19 07:47:39	Arnavion	Actually pub use won't work anyway since the name will clash
2018-09-19 07:47:55	Arnavion	So do the second thing I said
2018-09-19 07:48:31	YeFFreY	yes this one works
2018-09-19 07:48:46	YeFFreY	but I wanted to "shorten" the path of the "new_activity_command"
2018-09-19 07:49:19	Arnavion	mod new_activity_command; pub mod shorter_name { pub use super::new_activity_command::*; };
2018-09-19 07:49:24	YeFFreY	being able to do something like "rootmodule::command::NewActivityCommand" where "NewActivityCommand" is the struct
2018-09-19 07:49:38	Arnavion	mod new_activity_command; pub use super::new_activity_command::*;
2018-09-19 07:50:14	<--	enterprisey (enterprisey@moz-1rnvhf.cit.cornell.edu) has quit (Connection closed)
2018-09-19 07:50:38	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-19 07:50:45	-->	tsal_ (tsal@moz-6i8a15.versanet.de) has joined #rust-beginners
2018-09-19 07:51:02	YeFFreY	your last suggestion is working Arnavion !
2018-09-19 07:51:06	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-19 07:51:20	YeFFreY	(with self instead of super)
2018-09-19 07:51:23	YeFFreY	Thank you !
2018-09-19 07:51:59	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-19 07:52:16	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-19 07:52:18	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 07:52:21	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-19 07:53:15	<--	kermi (Mibbit@moz-oic.c6j.177.203.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 07:53:34	-->	mohan43u (mohan43u@moz-32u.fsr.23.1.IP) has joined #rust-beginners
2018-09-19 07:53:41	<--	tsal (tsal@moz-88shkm.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-19 07:55:21	-->	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has joined #rust-beginners
2018-09-19 07:56:20	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 07:57:21	cjd	Does anybody know if there's anything like Arc<T> except which is Send even if T is !Send, the point is to keep a Weak in the thread which owns T and allow other threads to keep it from being garbage collected
2018-09-19 07:57:51	cjd	I want like Arc::Handle<T> but no way to access T, since accessing it would be unsafe
2018-09-19 07:58:53	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 07:58:55	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 07:58:59	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 08:03:02	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:03:03	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:03:03	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:04:23	-->	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has joined #rust-beginners
2018-09-19 08:04:44	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 08:06:05	<--	cxiao (cxiao@moz-sng.ido.103.172.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 08:07:20	-->	mib_k7w734 (Mibbit@moz-tat.npv.245.103.IP) has joined #rust-beginners
2018-09-19 08:07:30	-->	holmgr (holmgr@moz-2sv6jb.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-19 08:08:38	-->	paulvt (paul.van.ti@moz-is14br.fb56.nn7d.a446.2a02.IP) has joined #rust-beginners
2018-09-19 08:09:15	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 08:09:49	kyren	this isn't what you want, but you could keep some other kind of Arc adjacent to the T instead of having the thread where the !Send Ts live hold a Weak<T>
2018-09-19 08:10:16	kyren	I can't think of a way to do the thing you described directly in safe code though
2018-09-19 08:10:55	kyren	but you could hold some kind of (T, Weak<()>) or (T, Arc<()>) as just a simple reference counted handle
2018-09-19 08:11:10	-->	dozn (dozn@moz-3pudru.vs.shawcable.net) has joined #rust-beginners
2018-09-19 08:11:51	-->	dozn_ (dozn@moz-3pudru.vs.shawcable.net) has joined #rust-beginners
2018-09-19 08:12:03	<--	kyrylo (kyrylo@moz-q43.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 08:12:09	-->	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has joined #rust-beginners
2018-09-19 08:13:59	<--	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 08:14:04	<--	oms-hh (oms@moz-8k0au8.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-19 08:14:23	<--	dozn (dozn@moz-3pudru.vs.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-19 08:14:30	<--	dozn_ (dozn@moz-3pudru.vs.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-19 08:20:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 08:24:55	<--	schnozzle (schnozzle@moz-2ce.g2b.153.159.IP) has quit (Quit: Leaving)
2018-09-19 08:25:13	<--	holmgr (holmgr@moz-2sv6jb.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-19 08:25:29	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:25:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 08:27:33	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 08:27:36	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-19 08:27:56	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 08:28:37	<--	dmc (dmc@moz-9c65la.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:29:25	-->	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 08:30:00	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:30:21	-->	holmgr (holmgr@moz-779ni8.eduroam.liu.se) has joined #rust-beginners
2018-09-19 08:30:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 08:32:37	<--	holmgr (holmgr@moz-779ni8.eduroam.liu.se) has quit (Connection closed)
2018-09-19 08:33:28	-->	holmgr (holmgr@moz-2sv6jb.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-19 08:33:34	<--	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 08:34:11	-->	nehagup (uid120278@moz-73krb4.hathersage.irccloud.com) has joined #rust-beginners
2018-09-19 08:34:54	<--	himi (sjjf@moz-psjk59.anu.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-19 08:36:37	-->	_0x40_ (0x40@moz-e7l29c.mobileonline.telia.com) has joined #rust-beginners
2018-09-19 08:36:46	-->	Tomo_ (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 08:36:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:37:52	-->	Tomo__ (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 08:37:52	<--	Tomo_ (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 08:37:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 08:38:51	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:42:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:43:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 08:43:05	-->	dmc (dmc@moz-9c65la.fios.verizon.net) has joined #rust-beginners
2018-09-19 08:44:17	-->	sharpeed (Mibbit@moz-4gjin1.or.comcast.net) has joined #rust-beginners
2018-09-19 08:44:49	-->	Starlit-Ghost (SG@2604:a880:800:a1::12:e001) has joined #rust-beginners
2018-09-19 08:47:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:48:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 08:48:38	-->	makinen_ (asdf@moz-vfjfm8.dhcp.inet.fi) has joined #rust-beginners
2018-09-19 08:48:39	<--	StarlitGhost (SG@2604:a880:800:a1::12:e001) has quit (Ping timeout: 121 seconds)
2018-09-19 08:49:08	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-19 08:49:52	-->	somewone (somewone@moz-6bn.h2s.113.141.IP) has joined #rust-beginners
2018-09-19 08:49:53	<--	nadley (quassel@moz-3fi0ft.fbx.proxad.net) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-19 08:50:53	-->	nadley (quassel@moz-3fi0ft.fbx.proxad.net) has joined #rust-beginners
2018-09-19 08:51:06	-->	mib_vbs5tw (Mibbit@moz-0bojte.ip.btc-net.bg) has joined #rust-beginners
2018-09-19 08:52:34	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-19 08:53:06	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 08:54:11	<--	holmgr (holmgr@moz-2sv6jb.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-19 08:54:59	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-09-19 08:55:59	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-19 08:56:38	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 08:58:54	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 08:59:53	<--	andoriyu (andoriyu@moz-2i7ju6.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-19 09:00:14	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-19 09:00:38	-->	andoriyu (andoriyu@moz-i38dv8.d8te.uek4.e000.2605.IP) has joined #rust-beginners
2018-09-19 09:01:54	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-19 09:02:10	-->	mib_zlhrt3 (Mibbit@moz-6l4.hd4.30.218.IP) has joined #rust-beginners
2018-09-19 09:02:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 09:03:03	-->	thvdburgt (thvdburgt@moz-jhgt6l.wlan-int.ru.nl) has joined #rust-beginners
2018-09-19 09:03:25	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 09:05:07	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 09:05:21	<--	mib_zlhrt3 (Mibbit@moz-6l4.hd4.30.218.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 09:06:33	-->	holmgr (holmgr@moz-70ujhe.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-19 09:06:41	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:09:01	<--	sharpeed (Mibbit@moz-4gjin1.or.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 09:10:30	<--	UndeadLeech (UndeadLeech@moz-9p3.e6t.227.165.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 09:10:51	<--	mib_vbs5tw (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 09:11:37	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 09:13:25	tamatar	hello rustaceans. newbie here. i have a struct i'm trying to initialise with data from a file. there's a lot of repetition and i'm wondering if there's a nicer way to do this. for example see this snippet:
2018-09-19 09:13:27	tamatar	https://www.irccloud.com/pastebin/AQQx0hNW/
2018-09-19 09:14:23	tamatar	my understanding is that i cannot iterate over the fields of the struct in the order that i defined them (without using clever macros, which i'm not quite at that level to understand) 
2018-09-19 09:14:27	-->	UndeadLeech (UndeadLeech@moz-9p3.e6t.227.165.IP) has joined #rust-beginners
2018-09-19 09:14:40	<--	YeFFreY (Mibbit@moz-fipq63.reverse.destiny.be) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 09:16:14	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-19 09:16:58	sarnold	tamatar: *maybe* serde could help, maybe a parsing tool could help, maybe switching your storage to something like protobufs could help
2018-09-19 09:17:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 09:19:29	tamatar	sarnold: i did have a look at serde briefly, but i'm far from understanding how one would use it to serialise/deserialise custom formats. but it definitely *feels* like the more robust way to do it rather than writing a ton of procedural code
2018-09-19 09:20:00	sarnold	tamatar: yeah if you're already using json or bincode or something, it'll Just Work
2018-09-19 09:21:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:22:09	tamatar	i can't control the format of the file i'm reading unfortunately, so for now i'll stick to reading it in the naivest way and optimise later
2018-09-19 09:25:41	sarnold	tamatar: okay :) take a look at nom and lalrpop, perhaps one will look like a tool for you
2018-09-19 09:25:51	sarnold	(there's more, but these two come to mind quickly)
2018-09-19 09:26:30	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-19 09:27:15	-->	vmx (vmx@moz-o5kd55.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 09:31:18	-->	fsasm (fsasm@moz-5fd.qra.178.62.IP) has joined #rust-beginners
2018-09-19 09:31:30	<--	_0x40 (0x40@moz-l7i.5ne.214.82.IP) has quit (Connection closed)
2018-09-19 09:31:51	<--	Tomo__ (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:31:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 09:31:58	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:32:40	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:32:44	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:33:27	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:33:32	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:33:42	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-19 09:34:15	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:34:20	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:35:03	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:35:08	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:35:51	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:35:56	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:36:01	-->	Manishea1th (Manishearth@moz-n4s.338.156.104.IP) has joined #rust-beginners
2018-09-19 09:36:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:36:06	--	Manishea1th is now known as ghservo
2018-09-19 09:36:17	<--	ghservo (Manishearth@moz-n4s.338.156.104.IP) has quit (Quit: leaving)
2018-09-19 09:36:39	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:36:44	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:37:27	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:37:31	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:38:03	-->	Debaran (none@moz-iva6jh.2tf0.65v1.f058.2607.IP) has joined #rust-beginners
2018-09-19 09:38:15	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:38:20	-->	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has joined #rust-beginners
2018-09-19 09:39:03	<--	Tomo (Tomo@moz-dv954g.dyn.optonline.net) has quit (Connection closed)
2018-09-19 09:39:38	tamatar	thanks sarnold , nom looks pretty cool!
2018-09-19 09:39:53	sarnold	woot :)
2018-09-19 09:40:03	tamatar	the logo is awesome too
2018-09-19 09:40:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 09:40:27	Kirjava	nom is ~lovely~
2018-09-19 09:40:41	sarnold	haha, that logo *is* awesome
2018-09-19 09:41:08	-->	t42 (Mibbit@moz-fb1.v63.202.195.IP) has joined #rust-beginners
2018-09-19 09:41:15	-->	jpthomson (user@moz-iic.6lt.83.130.IP) has joined #rust-beginners
2018-09-19 09:41:22	-->	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has joined #rust-beginners
2018-09-19 09:41:57	-->	plusone (custom@moz-ttp6qg.skybroadband.com) has joined #rust-beginners
2018-09-19 09:42:27	<--	orium (fulano@moz-cjq57u.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:43:06	<--	t42 (Mibbit@moz-fb1.v63.202.195.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 09:43:28	-->	trochdewei (trochdewei@moz-glq.bbd.211.80.IP) has joined #rust-beginners
2018-09-19 09:43:35	-->	tr42 (Mibbit@moz-fb1.v63.202.195.IP) has joined #rust-beginners
2018-09-19 09:44:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:44:52	<--	tr42 (Mibbit@moz-fb1.v63.202.195.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 09:45:51	-->	dler (Mibbit@moz-fb1.v63.202.195.IP) has joined #rust-beginners
2018-09-19 09:46:39	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 09:46:42	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 09:46:44	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 09:47:15	<--	pjf (pjf@moz-8g1tgl.compute.amazonaws.com) has quit (Quit: leaving)
2018-09-19 09:48:20	<--	plusone (custom@moz-ttp6qg.skybroadband.com) has quit (Connection closed)
2018-09-19 09:49:09	-->	plusone (custom@moz-ttp6qg.skybroadband.com) has joined #rust-beginners
2018-09-19 09:50:48	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:50:48	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:50:49	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:51:47	<--	Raychen (Thunderbird@moz-14l.9q5.175.61.IP) has quit (Connection closed)
2018-09-19 09:51:51	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-19 09:51:59	dler	Does sending messages work now?
2018-09-19 09:52:03	dler	Ah, there we go.
2018-09-19 09:52:07	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 09:52:19	dler	Are long messages not allowed?
2018-09-19 09:52:29	sarnold	irc has line length limits
2018-09-19 09:52:50	sarnold	the exact limit depends upon both your nickname and the channel/person you are sending the message to
2018-09-19 09:52:58	dler	But "Cannot send to channel: #rust-beginners" isn't really helpful there.
2018-09-19 09:53:02	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 09:53:02	dler	But thanks for the info.
2018-09-19 09:53:09	sarnold	IRC just truncates
2018-09-19 09:53:33	sarnold	can't send to channel means you've been muted, or banned, or the channel has been muted, etc. lots of ways to get that specific error message
2018-09-19 09:53:55	dler	But I get it here, if I try to send my question.
2018-09-19 09:54:06	sarnold	it's an insanely unhelpful message since it takes forever to figure out why you get it..
2018-09-19 09:54:15	sarnold	oh?? crazy. I haven't seen that.
2018-09-19 09:54:29	dler	Let's try again: How can I enable a rust-nightly feature only if a cargo feature is requested?
2018-09-19 09:54:32	dler	`#[cfg(feature = "my_feature")]` followed by `#![feature(rs_feature)]` doesn't work, and outputs the error "an inner attribute is not permitted following an outer attribute".
2018-09-19 09:54:42	dler	Ha! Starting it differently works.
2018-09-19 09:54:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 09:54:58	dler	Probably an anti-spam feature or something like that.
2018-09-19 09:54:58	<--	trochdewei (trochdewei@moz-glq.bbd.211.80.IP) has quit (Quit: Leaving)
2018-09-19 09:55:03	&niconii	yeah, i know some words are being blocked right now for spam prevention, maybe that's what's happening
2018-09-19 09:55:33	sarnold	yeah!
2018-09-19 09:55:37	sarnold	that's it exactly
2018-09-19 09:55:53	sarnold	http://paste.ubuntu.com/p/qXTZ3JPN74/
2018-09-19 09:55:55	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:56:09	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 09:56:10	dler	Yep.
2018-09-19 09:56:54	dler	I get that they don't want the channel to get spammed with the h-word, but putting it in front of a message should work imo.
2018-09-19 09:57:21	&niconii	there have been a lot of bots coming in that just say a greeting and then randomly PM people, though, uh... the solution of just blocking greetings entirely seems a little... over the top...
2018-09-19 09:57:33	dler	True.
2018-09-19 09:57:33	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 09:57:34	dler	But that's not why I'm here. Any idea how to solve my problem?
2018-09-19 09:57:43	dler	Not the IRC one, the Rust one.
2018-09-19 09:58:03	<--	makinen_ (asdf@moz-vfjfm8.dhcp.inet.fi) has quit (Ping timeout: 121 seconds)
2018-09-19 09:58:17	&niconii	#[...] applies that attribute to the following item
2018-09-19 09:58:39	&niconii	but #![...] applies it to the containing item (e.g. the whole module or crate usually)
2018-09-19 09:59:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 09:59:14	dler	I know why it's happening, but I don't know how to get it to do what I want: Only enable a feature if it's needed.
2018-09-19 09:59:24	dler	Because I'd like the library to work with the stable compiler too.
2018-09-19 09:59:32	&niconii	oh, okay, i see what you mean now
2018-09-19 10:00:48	dler	(a little off-topic, but something that bugs me: Why are "library features" and "rust-nightly features" both called features? It makes it really hard to google stuff regarding them.)
2018-09-19 10:01:12	sarnold	amen
2018-09-19 10:01:47	Lumpio-	Can you use library features on anything but nightly..?
2018-09-19 10:02:05	&niconii	dler: i think what you want is this: https://doc.rust-lang.org/book/first-edition/conditional-compilation.html#cfg_attr
2018-09-19 10:02:17	Lumpio-	Oh like crate features
2018-09-19 10:02:29	Lumpio-	right
2018-09-19 10:02:49	Lumpio-	I guess in theory they both turn extra features on so why not
2018-09-19 10:02:53	Lumpio-	Some just happen to be syntax and such
2018-09-19 10:03:40	dler	Lumpio-: I get why you could name them features, but I think that they should've named one of those two differently. For googling reasons.
2018-09-19 10:03:50	drager	Arnavion: Thanks, that makes sense!
2018-09-19 10:03:51	dler	niconii: Thanks, I hope that works.
2018-09-19 10:04:17	&niconii	#![cfg_attr(feature = "my_feature", feature(rs_feature)] should do it
2018-09-19 10:04:41	dler	And it... Compiles! Thanks a lot!
2018-09-19 10:04:46	&niconii	no problem
2018-09-19 10:04:52	sarnold	oh wow
2018-09-19 10:04:58	sarnold	that feels like it ought to be written down somewhere :)
2018-09-19 10:05:20	&niconii	(also whoops, forgot a paren)
2018-09-19 10:05:28	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-19 10:05:59	-->	jony (jony@moz-d9m.uk2.248.5.IP) has joined #rust-beginners
2018-09-19 10:06:26	jony	hey guys, is there a way to get full rust support in VS2017?
2018-09-19 10:06:40	jony	with run/debug options
2018-09-19 10:07:58	BroodFromBelow	I think I have been using LLDB in visual studio code. I am not certain if this works with VS too
2018-09-19 10:09:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 10:10:03	mib_k7w734	vscode-rust
2018-09-19 10:10:15	jony	there is very little info here https://users.rust-lang.org/t/rust-and-visual-studio-2017-compatibility-updates/11200
2018-09-19 10:11:04	jony	I've installed rls and rust extension so intelisense and code completion works
2018-09-19 10:11:17	jony	but not debug/run/build things
2018-09-19 10:11:59	jony	and there are no project templates for rust (but there where present before)
2018-09-19 10:13:33	<--	niconii (nicole@moz-mlcvbi.midco.net) has quit (Quit: leaving)
2018-09-19 10:13:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 10:14:09	<--	mutanabbi (Mibbit@moz-bjc.t3t.18.5.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 10:15:38	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-09-19 10:16:27	julius	A little serde problem, I guess: I'd like to use https://docs.rs/restson/0.3.0/restson/ on an endpoint that retunrs something along the lines of [{"key":"bar", "value":"42}, {"key":"foo", "value":"this format is retarted"}]. Problem is: I can't just go impl RestPath<()> for Vec<KeyValueStruct>, because I'm not the one who implements vec. So… how do I go on about this? Do I add a new struct that 
2018-09-19 10:16:33	julius	behaves like a vec? That sounds like too much effort...
2018-09-19 10:20:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 10:21:08	-->	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-19 10:23:43	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-19 10:24:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 10:24:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 10:25:24	dler	Rust can be a little bit magical at times. I've never seen the lifetime `'_` before. And I don't really think it should be a thing, since it isn't really obvious what this lifetime is actually referring too.
2018-09-19 10:26:27	dler	julius: You could create a wrapper type that deref's to the inner vec. And then impl RestPath for that wrapper.
2018-09-19 10:27:04	dler	This way, you have full access to the Vec-functionality without creating proxy functions for everything.
2018-09-19 10:29:16	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 10:31:15	kimundi	dler: '_ is the new syntax for ellided lifetimes
2018-09-19 10:31:32	dler	julius: https://play.rust-lang.org/?gist=47e3ef2f0746e984c39ffee5da1dcd44&version=stable&mode=debug&edition=2015
2018-09-19 10:32:04	dler	kimundi: Explains why I've never encountered it before. But I actually do prefer the explicit lifetime management if it's not obvious.
2018-09-19 10:32:31	dler	And for my function it would be quite obvious (its only argument is `&self`), but still.
2018-09-19 10:32:32	kimundi	dler: It exists because without them function signature are sometimes quite ambigious if there is borrowing hapenneing
2018-09-19 10:32:54	kimundi	dler: Sure, its also not inteded for the lifetimes in & references, since there is clear that there is a lifetime paramter
2018-09-19 10:33:07	dler	But I at least think that you can always use explicit lifetime handling.
2018-09-19 10:33:37	dler	If there is something to disprove that, I'd be happy to see it.
2018-09-19 10:33:38	kimundi	The issue is `fn foo(&T) -> Bar`, since that could mean `fn foo<'a>(&'a T) -> Bar` or `fn foo<'a>(&'a T) -> Bar<'a>` depending on how Bar is defined
2018-09-19 10:33:55	kimundi	If you always explicit thats a mood point of course
2018-09-19 10:35:00	dler	I never use explicit lifetimes if the compiler doesn't want them, since the rules are rather simple anyway.
2018-09-19 10:35:39	dler	But `'_` just sends you searching for a bit, using explicit lifetime handling makes reading the code easier. At least for me.
2018-09-19 10:35:56	sarnold	good lifetime names help
2018-09-19 10:35:58	-->	terranian (Mibbit@moz-ot1c9l.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 10:36:24	terranian	Hello!
2018-09-19 10:36:49	<--	Orphis (orphis@moz-e3ahku.orphis.net) has quit (Ping timeout: 121 seconds)
2018-09-19 10:38:10	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 10:38:26	terranian	I'm relatively new to Rust and am currently trying to get my feet wet with an example that includes a Database etc. I found https://github.com/gothinkster/rust-realworld-example-app which looks pretty promising but I'm not able to get is compile. I'm currently stuck with the 'infer_schema!' call
2018-09-19 10:39:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 10:39:45	dler	terranian: What error do you get?
2018-09-19 10:40:08	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-19 10:40:12	sarnold	terranian: I think I've heard that diesel is removing that or will remove it
2018-09-19 10:40:31	sarnold	terranian: you could probably pin an older version of diesel in your Cargo.toml file to keep using that guide
2018-09-19 10:40:32	-->	Orphis (orphis@moz-e3ahku.orphis.net) has joined #rust-beginners
2018-09-19 10:40:52	<--	eibwen (eibwen@moz-9kbrpu.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-19 10:41:08	terranian	It starts with: error[E0432]: unresolved import `schema::users`
2018-09-19 10:41:42	dler	sarnold: In the Cargo.toml of the git repo: `diesel = { version = "0.15.0", features = ["postgres", "chrono" ], optional = true }`
2018-09-19 10:42:34	terranian	and has a long tail of subsequent errors, of course. The last one might also be interesting: error[E0554]: #![feature] may not be used on the stable release channel
2018-09-19 10:42:53	dler	terranian: That could be it.
2018-09-19 10:43:01	dler	Did you install Rust via rustup?
2018-09-19 10:43:05	terranian	yep
2018-09-19 10:43:18	terranian	rustc --version rustc 1.29.0 (aa3ca1994 2018-09-11)
2018-09-19 10:43:23	<--	xet7 (xet7@moz-kvs2hm.dhcp.inet.fi) has quit (Quit: Leaving)
2018-09-19 10:43:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 10:43:55	dler	The problem is that you have stable rust, which isn't compatible with that software because the features used aren't yet marked as stable.
2018-09-19 10:44:02	dler	So you need to get the nightly compiler.
2018-09-19 10:44:31	dler	To do that, run `rustup default nightly` in the console.
2018-09-19 10:44:34	terranian	Ok. I tried with 'rustup default nightly' but failed as well. Will try again for error messages...
2018-09-19 10:45:50	<--	nehagup (uid120278@moz-73krb4.hathersage.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-19 10:46:06	terranian	Now I even get more errors (95). The last one being: error[E0275]: overflow evaluating the requirement `<_ as diesel::Expression>::SqlType`
2018-09-19 10:47:10	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 10:48:35	dler	Sorry, I've to go for a bit.
2018-09-19 10:49:04	terranian	ok, thx for your help @dler
2018-09-19 10:51:41	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 10:53:13	julius	dler: ty. i guess thats at least not terrible
2018-09-19 10:53:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 10:54:49	-->	Dariost (Dariost@moz-euo.lj4.20.151.IP) has joined #rust-beginners
2018-09-19 10:56:37	-->	Guest4 (textual@moz-f33.ffr.141.14.IP) has joined #rust-beginners
2018-09-19 10:58:01	<--	jony (jony@moz-d9m.uk2.248.5.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 10:58:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 10:58:16	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-19 11:01:45	-->	xorrox (custom@moz-ttp6qg.skybroadband.com) has joined #rust-beginners
2018-09-19 11:03:28	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-19 11:03:37	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-19 11:03:40	<--	plusone (custom@moz-ttp6qg.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-19 11:06:13	dler	No, wait. Not away anymore.
2018-09-19 11:06:48	terranian	I'm leaving for lunch.
2018-09-19 11:06:58	dler	That's where I just went/
2018-09-19 11:07:04	drager	Wow, diesel 0.15 :o It's something like 1.3.x now
2018-09-19 11:07:08	dler	:s/\//./
2018-09-19 11:07:41	drager	terranian: I would stick with the stable compiler and try another software that's more up to date
2018-09-19 11:08:33	<--	holmgr (holmgr@moz-70ujhe.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-19 11:08:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 11:09:06	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:11:20	<--	GreenJello (GreenJello@moz-bra.342.189.207.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-19 11:12:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 11:13:35	-->	himi (sjjf@moz-e6bo53.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-19 11:15:57	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Ping timeout: 121 seconds)
2018-09-19 11:16:10	dler	Is there a way to create a trait promising that a type deref's to a target eventually? This problem that I had about a year ago just resurfaced. (Either I'm doing things extremely wrong, or that's just an important feature for way to generic code...)
2018-09-19 11:17:08	-->	oms-hh (oms@moz-8k0au8.dyn.telefonica.de) has joined #rust-beginners
2018-09-19 11:21:10	<--	Guest4 (textual@moz-f33.ffr.141.14.IP) has quit (Connection closed)
2018-09-19 11:21:26	-->	GreenJello (GreenJello@moz-ce1eb0.7di5.9nhv.8800.2600.IP) has joined #rust-beginners
2018-09-19 11:22:11	adoa	dler:  how about something like `trait MyTrait: Deref<SomeType>` or similar
2018-09-19 11:22:13	adoa	?
2018-09-19 11:22:43	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-19 11:23:15	-->	BettyZe (Mibbit@moz-mvf.ne2.96.191.IP) has joined #rust-beginners
2018-09-19 11:23:16	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:23:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 11:23:34	BettyZe	I'm here
2018-09-19 11:23:48	dler	adoa: I mean something like this: https://play.rust-lang.org/?gist=66f99d3866854bd67661c7053a93a878&version=nightly&mode=debug&edition=2018
2018-09-19 11:25:05	dler	Where I want to have a trait denoting that I can get access to that type through a deref-chain. Using a method on that object to do that is ok.
2018-09-19 11:25:43	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-19 11:27:34	<--	mohan43u (mohan43u@moz-32u.fsr.23.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:28:02	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-19 11:29:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 11:29:28	<--	yqrashawn (yqrashawn@moz-0m8iof.246.16clouds.com) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2018-09-19 11:29:46	adoa	dler: I am not sure I really understand what you need, but I think you can "just" implement Deref<Type1> for Type0 and Deref<Type2> for Type1 and you will have effectively a dereference chain. Or do I not understand your intention there?
2018-09-19 11:29:47	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-19 11:29:58	<--	blackgoat (blackgoat@moz-ngq.b4n.166.221.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 11:32:09	<--	cp (cp@moz-fresc2.asahinet.com) has quit (Quit: Disappears in a puff of smoke)
2018-09-19 11:32:37	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 11:32:38	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 11:32:41	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 11:32:51	dler	adoa: Yes, that's the point. You can have access to stuff though deref chains, where you require more than one deref. That is no problem when you are dealing with known types, but I want to be able to follow those chains in generic functions, where the container type is not known.
2018-09-19 11:33:11	dler	I know that it is relatively easy to implement for a limited number of jumps, but that isn't really what I want.
2018-09-19 11:34:14	dler	It's just what I'm stuck with until I figure out a way to make that trait actually work. And it's limiting too, since you cannot assume that the trait is still implemented if you wrap something with that trait.
2018-09-19 11:36:04	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 11:36:29	-->	brucem (textual@moz-lrrokt.ivsr.hm43.9800.2405.IP) has joined #rust-beginners
2018-09-19 11:36:38	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 11:37:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 11:38:03	<--	BettyZe (Mibbit@moz-mvf.ne2.96.191.IP) has quit (G-Lined: no spamming here)
2018-09-19 11:38:42	-->	paddy (Mibbit@moz-pujg18.range86-183.btcentralplus.com) has joined #rust-beginners
2018-09-19 11:38:46	-->	DeltaMan_ (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 11:39:37	adoa	dler: maybe something can be done with Macros … I am not experienced enough to help you with that, I guess.
2018-09-19 11:40:28	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 11:40:46	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:40:54	-->	alatiera (alatiera@moz-g0jsba.access.hol.gr) has joined #rust-beginners
2018-09-19 11:40:54	<--	chrisdotcode (quassel@moz-jpnbf7.jv55.dlrr.fcc8.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:40:56	-->	blaphmat (Mibbit@moz-1qf.ivl.104.223.IP) has joined #rust-beginners
2018-09-19 11:41:08	-->	AtumT (IRC@moz-mevkqt.gvt.net.br) has joined #rust-beginners
2018-09-19 11:41:11	-->	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has joined #rust-beginners
2018-09-19 11:41:16	<--	blaphmat (Mibbit@moz-1qf.ivl.104.223.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 11:41:18	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 11:41:34	-->	danreeves (localghost@moz-lcb.hel.31.2.IP) has joined #rust-beginners
2018-09-19 11:41:44	paddy	I'm running into an issue with ipp-sys ( https://github.com/astraw/ipp-sys ) which seems to be a general rustc issue, and wondering if anyone has any ideas..
2018-09-19 11:41:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 11:41:58	<--	danreeves (localghost@moz-lcb.hel.31.2.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 11:41:59	dler	adoa: For a limited number of jumps, yes, that's possible. And I wouldn't do it without macros, tbh. But it doesn't work for an unlimited number.
2018-09-19 11:42:20	-->	danreeves (localghost@moz-lcb.hel.31.2.IP) has joined #rust-beginners
2018-09-19 11:42:29	paddy	If I include ipp-sys as a dependency in my project's Cargo.toml it builds fine, but if I clone ipp-sys and run cargo test then I get a linker error about multiple symbol definitions
2018-09-19 11:42:56	<--	DeltaMan_ (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:43:38	paddy	I can fix the error for that invocation by adding -Wl,--allow-multiple-definition but I don't see a way to set a linker flag like this in Cargo.toml, or indeed if this really fixes the issue or just suppresses the error
2018-09-19 11:44:30	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 11:45:00	paddy	still seems strange this works for my project and not for cargo test on ipp-sys itself - is cargo test doing anything differently regarding the linking?
2018-09-19 11:45:10	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-19 11:45:36	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:45:49	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:46:09	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-19 11:49:26	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 11:49:32	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 11:49:42	-->	Xinayder (alex@moz-br3.ro8.35.191.IP) has joined #rust-beginners
2018-09-19 11:50:05	-->	mib_d140tw (Mibbit@moz-4lk7r4.chello.nl) has joined #rust-beginners
2018-09-19 11:50:21	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:50:29	<--	mib_d140tw (Mibbit@moz-4lk7r4.chello.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 11:51:44	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:52:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 11:53:04	<--	RockyTV (alex@moz-grv.o2b.213.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 11:55:16	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-19 11:56:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 11:57:03	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-19 12:00:20	-->	jony (jony@moz-d9m.uk2.248.5.IP) has joined #rust-beginners
2018-09-19 12:03:13	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-19 12:04:13	<--	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-19 12:04:14	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-19 12:07:01	-->	emerent (emerentius@moz-0o8q0v.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 12:07:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 12:11:00	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-19 12:11:03	<--	Ionise (default@moz-pf3eh0.nbn.aussiebb.net) has quit (Connection closed)
2018-09-19 12:11:07	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-19 12:11:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 12:11:47	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-19 12:12:19	<--	cjd (user@moz-rnq8f1.b68u.clge.f930.2c0f.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 12:12:33	terranian	drager: That sounds reasonable... Do you have any suggestions?
2018-09-19 12:12:56	-->	holmgr (holmgr@moz-fbh7ee.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-19 12:13:14	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 12:13:21	-->	cjd (user@moz-h743q3.4o9k.q5k2.0e0a.2a01.IP) has joined #rust-beginners
2018-09-19 12:13:45	terranian	drager: Ideally on Github so that my colleagues can easily check it out and test it
2018-09-19 12:16:19	danreeves	Is it possible to pass a validator to clap using structopt?
2018-09-19 12:17:17	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 12:18:21	<--	somewone (somewone@moz-6bn.h2s.113.141.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 12:20:17	danreeves	`#[structopt(validator = fn_name)]` results in error: proc-macro derive panicked
2018-09-19 12:20:33	danreeves	more specifically "invalid structopt syntax: attr"
2018-09-19 12:20:51	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Connection closed)
2018-09-19 12:21:01	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-19 12:21:21	<--	thvdburgt (thvdburgt@moz-jhgt6l.wlan-int.ru.nl) has quit (Client exited)
2018-09-19 12:21:29	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-19 12:21:39	-->	hob (Mibbit@moz-4au.c7u.5.101.IP) has joined #rust-beginners
2018-09-19 12:21:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 12:22:15	drager	terranian: What are you after more specifically?
2018-09-19 12:22:23	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-19 12:23:25	-->	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has joined #rust-beginners
2018-09-19 12:24:03	-->	jolisper_ (jolisper@moz-s6i.d7r.244.190.IP) has joined #rust-beginners
2018-09-19 12:25:10	dler	Is there a good way to use type erasure via `Any` while requiring `Clone`, so that you can then clone the `Box<AnyCloneTrait>`? It would be easy if I would include unsafe code, but I'm searching for an already working solution. I don't want to accidentally cause undefined behaviour.
2018-09-19 12:26:04	drager	dler: Isn't it possible to force the type to implement Clone?
2018-09-19 12:27:15	-->	cp (cp@moz-4f5h05.asahi-net.or.jp) has joined #rust-beginners
2018-09-19 12:27:45	dler	If I have the type at hand (in generics and the like), yes. Easily so, actually: `where T: Clone`. But I want to clone it after it is already boxed, so after the type was erased.
2018-09-19 12:28:22	dler	And even if `Clone` where safe for trait objects (which it isn't, thanks to it returning `Self`), `Any + Clone` wouldn't work.
2018-09-19 12:28:28	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 12:28:38	dler	(or `Box<Any + Clone>`, rather)
2018-09-19 12:29:29	dler	Last time I tried, such composite trait objects don't work.
2018-09-19 12:29:36	-->	dthul (dthul@moz-ba4daq.ethz.ch) has joined #rust-beginners
2018-09-19 12:29:42	dler	But that could've changed.
2018-09-19 12:29:53	-->	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 12:30:36	<--	liquidnight (marcus@moz-cn1qj8.9p6n.ja0r.0c22.2a01.IP) has quit (Connection closed)
2018-09-19 12:31:01	dler	Wait, I already have the solution.
2018-09-19 12:31:28	drager	Hmm I see
2018-09-19 12:31:31	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-19 12:32:05	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-19 12:33:46	<--	jony (jony@moz-d9m.uk2.248.5.IP) has quit (Quit: )
2018-09-19 12:34:04	<--	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 12:34:20	drager	dler: You need box?
2018-09-19 12:35:26	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 12:35:50	dler	Yes, because I don't know what types the user will use. My crate will allow custom value types later, but in the first version I'll just use Any for simplicity.
2018-09-19 12:35:57	dler	And to get a working implementation in the first place.
2018-09-19 12:36:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 12:37:12	dler	I thought I had a solution, but I forgot one detail: https://play.rust-lang.org/?gist=3a578ed7b37a7baecf3712a42ec28457&version=stable&mode=debug&edition=2015
2018-09-19 12:37:37	<--	hob (Mibbit@moz-4au.c7u.5.101.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 12:37:54	dler	The `Any` impls for `downcast_ref` and the like are only implemented for `&Any`, not for traits depended on it.
2018-09-19 12:38:27	dler	There was a trait that tried to solve that problem, if I remember correctly, but I can't find it.
2018-09-19 12:38:49	drager	This is not what you want? https://play.rust-lang.org/?gist=672b3df5d803f45703826220d1d4a591&version=stable&mode=debug&edition=2015
2018-09-19 12:38:49	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 12:39:34	dler	drager: No. As I already said, I have `Box<SomeTraitOfMyChoosing>`s at that point.
2018-09-19 12:39:40	dler	Because I have to store them somehow.
2018-09-19 12:39:49	dler	If I didn't, I wouldn't have that problem.
2018-09-19 12:39:57	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 12:40:24	drager	Oh alright
2018-09-19 12:40:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 12:41:31	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-09-19 12:42:36	dler	Solved it: https://play.rust-lang.org/?gist=fb56101271c020ce2501cbd5fd95b2a3&version=stable&mode=debug&edition=2015
2018-09-19 12:42:51	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 12:42:53	dler	I don't need to expose that type anyway. Only the "Any" part of it.
2018-09-19 12:44:37	drager	Great
2018-09-19 12:47:54	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-19 12:49:16	<--	xorrox (custom@moz-ttp6qg.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-19 12:49:49	<--	gcp (gcp@moz-nlrjr8.c4tt.2uic.04f8.2a01.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-19 12:50:02	-->	gcp (gcp@moz-nlrjr8.c4tt.2uic.04f8.2a01.IP) has joined #rust-beginners
2018-09-19 12:51:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 12:53:07	-->	plusone (custom@moz-ttp6qg.skybroadband.com) has joined #rust-beginners
2018-09-19 12:53:30	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-19 12:54:22	-->	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-19 12:55:12	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-19 12:55:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 12:55:40	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 12:56:21	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-19 12:56:40	<--	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-19 12:57:23	<--	paddy (Mibbit@moz-pujg18.range86-183.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 12:57:58	-->	whidgle (Mibbit@moz-jtl.cj1.187.115.IP) has joined #rust-beginners
2018-09-19 12:58:21	whidgle	Hi fellas. Have a question about using flycheck. Is this a god place to ask?
2018-09-19 12:58:24	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 13:00:11	drager	Hi, not sure waht flycheck is but if it's a rust library or something written in rust, then this is a good place yeah
2018-09-19 13:01:37	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Quit: Leaving)
2018-09-19 13:01:47	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-19 13:02:27	-->	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has joined #rust-beginners
2018-09-19 13:03:15	whidgle	It's an outomatic checking tool. Used in EMACS to get errors from `cargo`
2018-09-19 13:04:22	whidgle	I'm going through a kernal dev tutorial, and need some funky compiling (not just `cargo build`), and I was hoping to find someone that could help me config flycheck for that.
2018-09-19 13:06:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 13:06:54	sarnold	whidgle: vim has a "quickfix" mode, I'm assured that emacs has something similar; it'll understand how to parse gcc errors already
2018-09-19 13:09:34	-->	zephone (Mibbit@moz-4usvcv.mines-albi.fr) has joined #rust-beginners
2018-09-19 13:10:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 13:11:18	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 13:11:18	zephone	Hi everyone, I just saw in serde_json documentation this syntax r#"{mystring}"#. What are those r#..# ?
2018-09-19 13:11:19	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 13:11:19	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 13:12:34	GreenJello	zephone, when you have r"a" it 
2018-09-19 13:12:46	GreenJello	zephone, when you have r"a\nb" it's raw, so that has 4 characters in it
2018-09-19 13:13:11	GreenJello	zephone, if you do r###"foo # bar"### it's waiting for the 
2018-09-19 13:13:40	dpc1	waiting for the .... xD
2018-09-19 13:13:55	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-19 13:14:02	GreenJello	waiting for the "###, so you can just add more #s to the start/end, and any string can be valid inside the quotes
2018-09-19 13:14:14	GreenJello	sorry, can't type apparently
2018-09-19 13:14:26	dpc1	haha 
2018-09-19 13:14:43	-->	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has joined #rust-beginners
2018-09-19 13:15:33	<--	oms-hh (oms@moz-8k0au8.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-19 13:16:28	<--	zephone (Mibbit@moz-4usvcv.mines-albi.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 13:16:35	<--	mib_k7w734 (Mibbit@moz-tat.npv.245.103.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 13:16:58	<--	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-19 13:18:40	-->	zephone (Mibbit@moz-4usvcv.mines-albi.fr) has joined #rust-beginners
2018-09-19 13:19:12	<--	zephone (Mibbit@moz-4usvcv.mines-albi.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 13:20:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 13:21:02	dler	I just used the `-> impl Trait` feature this whole week without realizing that it worked without putting a `#![feature(...)]` at the top.
2018-09-19 13:21:20	dler	Is there a way to get notified if a feature gets added or stabilized?
2018-09-19 13:21:43	-->	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has joined #rust-beginners
2018-09-19 13:22:30	dpc1	dler: the compiler will notify you xD
2018-09-19 13:23:03	dler	No, the compiler just notifies me that a feature wasn't yet stabilized.
2018-09-19 13:23:19	dler	And it does that *way* to often.
2018-09-19 13:23:50	-->	SomeDude (pascal@moz-5qkr7k.g5kr.iei5.0908.2a02.IP) has joined #rust-beginners
2018-09-19 13:23:56	dler	(finding out the names of features isn't hard, but still)
2018-09-19 13:25:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 13:25:34	<--	JDemler (JDemler@moz-kgptsp.urev.pqju.810d.2a02.IP) has quit (Client exited)
2018-09-19 13:25:49	dpc1	if you are using a feature that is stablised already on nightly it does emit a warning
2018-09-19 13:26:04	dpc1	eg https://play.rust-lang.org/?gist=4878b6b45ee3aacc45fba20173713775&version=nightly&mode=debug&edition=2015
2018-09-19 13:26:28	dler	> And it does that *way* to often.
2018-09-19 13:26:48	dler	=> I tend to forget the `#![feature(...)]` attribute about 95% of the time.
2018-09-19 13:26:49	<--	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-19 13:26:53	dpc1	xD
2018-09-19 13:26:54	dler	So...
2018-09-19 13:27:04	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-19 13:27:33	dler	I could try to write a bot that searches for tracking issues.
2018-09-19 13:28:03	<--	himi (sjjf@moz-e6bo53.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 13:28:18	-->	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has joined #rust-beginners
2018-09-19 13:28:45	dpc1	just use the feature the compiler will tell you what feature to include xD
2018-09-19 13:28:48	dpc1	but yeah a bot would be handy
2018-09-19 13:28:57	dler	And let it subscribe me to them.
2018-09-19 13:29:21	-->	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has joined #rust-beginners
2018-09-19 13:29:34	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 13:30:00	-->	insidious (insidious@moz-717lv0.resnet.scranton.edu) has joined #rust-beginners
2018-09-19 13:31:03	dpc1	there's a place in rustc where all the feature gates are mentioned and enabled/disabled
2018-09-19 13:32:37	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 13:34:25	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 13:35:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 13:36:39	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 13:41:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 13:42:07	<--	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Connection closed)
2018-09-19 13:42:10	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 13:42:20	-->	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-19 13:42:29	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-19 13:46:16	<--	starblue1 (juergen@moz-gn47vv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-19 13:49:26	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 13:49:30	-->	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-19 13:50:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 13:50:48	<--	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has quit (Quit: Leaving)
2018-09-19 13:51:57	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-19 13:53:02	-->	neverfox_ (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-19 13:53:10	-->	insidious1 (insidious@moz-o9oj3u.resnet.uofs.edu) has joined #rust-beginners
2018-09-19 13:53:59	<--	insidious (insidious@moz-717lv0.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-19 13:54:21	<--	neverfox (neverfox@moz-8u0.0od.177.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 13:54:35	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-19 13:54:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 13:56:22	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-19 13:57:13	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-19 13:57:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 13:59:43	<--	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-19 14:00:39	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 14:00:41	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-19 14:00:46	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-19 14:01:10	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust-beginners
2018-09-19 14:01:49	<--	holmgr (holmgr@moz-fbh7ee.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-19 14:01:53	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 14:02:23	<--	danreeves (localghost@moz-lcb.hel.31.2.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 14:02:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 14:04:11	-->	starblue (juergen@moz-gn47vv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-19 14:04:47	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-19 14:06:36	-->	Serrak (Mibbit@moz-7jr.00i.134.142.IP) has joined #rust-beginners
2018-09-19 14:07:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 14:08:47	-->	prasannatsm (uid268393@moz-8g0emg.charlton.irccloud.com) has joined #rust-beginners
2018-09-19 14:09:19	<--	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Connection closed)
2018-09-19 14:09:30	-->	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-19 14:14:33	<--	maarten (maartenBE@moz-c0pavo.access.telenet.be) has quit (Ping timeout: 121 seconds)
2018-09-19 14:14:49	--	jlin-ooo is now known as jlin
2018-09-19 14:16:58	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 14:17:29	-->	jperras (jperras@moz-sg2.mjm.190.192.IP) has joined #rust-beginners
2018-09-19 14:18:33	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Connection closed)
2018-09-19 14:21:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 14:21:52	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-19 14:22:12	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-19 14:22:56	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-19 14:22:57	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-19 14:23:44	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 14:24:30	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-19 14:24:31	-->	makos (makos@moz-i89d4a.adsl.tpnet.pl) has joined #rust-beginners
2018-09-19 14:24:40	<--	insidious1 (insidious@moz-o9oj3u.resnet.uofs.edu) has quit (Quit: WeeChat 2.2)
2018-09-19 14:25:04	-->	ubuntourist (kjcole@moz-i1oh07.pools.spcsdns.net) has joined #rust-beginners
2018-09-19 14:26:26	<--	starblue (juergen@moz-gn47vv.pools.vodafone-ip.de) has quit (Quit: Leaving.)
2018-09-19 14:28:16	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 14:29:13	-->	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has joined #rust-beginners
2018-09-19 14:29:34	-->	nairware (CELLIS-W10@moz-p67.9ua.206.67.IP) has joined #rust-beginners
2018-09-19 14:29:54	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-19 14:31:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 14:33:32	<--	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 14:33:37	terranian	dler drager: Thanks four help. I finally found https://github.com/lankydan/rust-web-with-rocket/blob/master/rust-web-with-rocket.md. After finding out the specific nightly it requires (nightly-2018-04-14) it worked like a charm
2018-09-19 14:34:06	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 14:34:21	-->	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has joined #rust-beginners
2018-09-19 14:34:35	-->	maarten (maartenBE@moz-61h3to.access.telenet.be) has joined #rust-beginners
2018-09-19 14:34:55	-->	SenasOzys_ (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-19 14:35:00	<--	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Connection closed)
2018-09-19 14:35:07	terranian	Just one more question: I noticed that 'rustup default ...' seems to be locale dependen. For example, I seem have to issue 'rustup default nightly-2018-04-15' to get 'nightly-2018-04-14' installed... Is there a mistake on my side or known behavior?
2018-09-19 14:35:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 14:36:10	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-19 14:37:37	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 14:37:48	-->	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 14:37:54	<--	ubuntourist (kjcole@moz-i1oh07.pools.spcsdns.net) has quit (The TLS connection was non-properly terminated.)
2018-09-19 14:38:16	<--	dler (Mibbit@moz-fb1.v63.202.195.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 14:39:08	<--	pie (androirc@moz-sfb.22j.146.120.IP) has quit (Connection closed)
2018-09-19 14:39:14	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-19 14:39:27	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-19 14:40:53	durka42	terranian: the nightly for today was built yesterday so that's how it works
2018-09-19 14:40:55	durka42	nothing about locales
2018-09-19 14:41:00	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-19 14:41:10	durka42	but it's annoying
2018-09-19 14:41:59	<--	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 14:42:37	-->	Pistachio (Pistachio@moz-ba8419.fios.verizon.net) has joined #rust-beginners
2018-09-19 14:42:38	drager	terranian: Yeah, rocket only works with nightly...
2018-09-19 14:43:10	terranian	durka42: Ok, good to know.
2018-09-19 14:44:19	<--	jperras (jperras@moz-sg2.mjm.190.192.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 14:44:43	terranian	drager: Ok.
2018-09-19 14:44:54	terranian	Thanks! Bye!
2018-09-19 14:44:59	<--	terranian (Mibbit@moz-ot1c9l.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 14:45:28	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 14:46:15	-->	krebbit (Mibbit@moz-e8n.9ht.25.81.IP) has joined #rust-beginners
2018-09-19 14:46:26	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 14:46:52	-->	mib_fqf6sl (Mibbit@moz-o6t.lou.159.63.IP) has joined #rust-beginners
2018-09-19 14:47:09	<--	mib_fqf6sl (Mibbit@moz-o6t.lou.159.63.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 14:47:48	--	miles-training is now known as miles
2018-09-19 14:48:00	<--	krebbit (Mibbit@moz-e8n.9ht.25.81.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 14:48:59	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-19 14:50:44	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 14:56:32	<--	makos (makos@moz-i89d4a.adsl.tpnet.pl) has quit (Quit: Leaving)
2018-09-19 14:57:40	-->	sprog (Mibbit@moz-n4ltrr.clientes.euskaltel.es) has joined #rust-beginners
2018-09-19 14:57:40	<--	sprog (Mibbit@moz-n4ltrr.clientes.euskaltel.es) has quit (Error in the push function.)
2018-09-19 15:00:36	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-19 15:01:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 15:01:35	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 15:04:55	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Client exited)
2018-09-19 15:05:28	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 15:07:12	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-19 15:10:20	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 15:10:39	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 15:11:59	-->	eibwen (eibwen@moz-230ah8.wlan.hu-berlin.de) has joined #rust-beginners
2018-09-19 15:12:48	-->	oms-hh (oms@moz-8k0au8.dyn.telefonica.de) has joined #rust-beginners
2018-09-19 15:13:13	-->	federico_ (federico@moz-obq.vbi.108.201.IP) has joined #rust-beginners
2018-09-19 15:15:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 15:16:57	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 15:17:48	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-19 15:17:53	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 15:20:09	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-19 15:20:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 15:20:15	<--	SomeDude (pascal@moz-5qkr7k.g5kr.iei5.0908.2a02.IP) has quit (Quit: Leaving.)
2018-09-19 15:20:59	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 15:22:24	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 15:22:25	<--	jpthomson (user@moz-iic.6lt.83.130.IP) has quit (Connection closed)
2018-09-19 15:22:28	-->	ferdinand (Mibbit@moz-qhog43.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-19 15:22:33	-->	clarkema (clarkema@moz-5u58k7.kc.net.uk) has joined #rust-beginners
2018-09-19 15:23:09	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-19 15:23:46	ferdinand	https://play.rust-lang.org/?gist=1d31073807246b0bad217d44197fc015&version=stable&mode=debug&edition=2015
2018-09-19 15:23:55	ferdinand	can someone please tell me what I am doing wrong 
2018-09-19 15:24:28	dpc1	ferdinand: you don't need the return word
2018-09-19 15:24:38	Lumpio-	main isn't supposed to return anything
2018-09-19 15:25:05	sarnold	https://play.rust-lang.org/?gist=97f4d53e80f6d0c64931419944fe4f90&version=stable&mode=debug&edition=2015
2018-09-19 15:25:06	-->	justsomequestions (gumble@moz-g8nqvr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-19 15:25:42	ferdinand	But I want to see the created array 
2018-09-19 15:26:03	Lumpio-	Then you can print it
2018-09-19 15:26:33	Lumpio-	https://play.rust-lang.org/?gist=cf43fd2374000b5c593eb7e2f04cf32f&version=stable&mode=debug&edition=2015
2018-09-19 15:26:41	-->	mr_wibble (Mibbit@moz-5j9.tnl.162.129.IP) has joined #rust-beginners
2018-09-19 15:26:56	Lumpio-	Note I added "Debug" to the derive so Rust will automatically generate debug formatting code, and used {:?} in the format string which tells it to use debug formatting for printing
2018-09-19 15:26:59	<--	mr_wibble (Mibbit@moz-5j9.tnl.162.129.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 15:27:05	quartz55	Is there any way to extend external traits? Like adding more combinators to the Future trait
2018-09-19 15:27:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 15:27:35	Lumpio-	quartz55: You can create a new trait and then "impl" it for the existing trait
2018-09-19 15:27:39	Lumpio-	Could call it something like FutureExt
2018-09-19 15:27:48	Lumpio-	Then people can use new methods on any Future by just "use"ing your trait first
2018-09-19 15:28:09	ferdinand	"{:?}" what the debug part if the variable is an array? why the need to debug from format
2018-09-19 15:28:13	ferdinand	Lumpio
2018-09-19 15:28:35	Lumpio-	ferdinand: Arrays automatically implement "Debug" if their item type implements it
2018-09-19 15:28:47	Lumpio-	Do you know the difference between Display and Debug?
2018-09-19 15:29:00	-->	thallada (thallada@moz-peaprj.compute-1.amazonaws.com) has joined #rust-beginners
2018-09-19 15:29:10	sarnold	quartz55: hopefully useful http://xion.io/post/code/rust-extension-traits.html
2018-09-19 15:30:00	ferdinand	Lumpio, I struggle with it
2018-09-19 15:30:13	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-19 15:30:17	-->	starblue (juergen@moz-qncr26.versanet.de) has joined #rust-beginners
2018-09-19 15:30:27	Lumpio-	ferdinand: Debug formatting is usually meant for programmers, for example for enums it'll just print the values as they appear in code. That's why it can be derived.
2018-09-19 15:30:34	quartz55	Lumpio-, sarnold, I'm having problems figuring out the type definition for Item and Error
2018-09-19 15:31:14	Lumpio-	But for displaying to a user you'll usually want Display, and that you have to implement by hand. For example you probably want your "Empty" thing to display as actually empty.
2018-09-19 15:31:26	dpc1	quartz55: can you share some code? it will be helpful to guide you :)
2018-09-19 15:31:27	Lumpio-	But in this case I'd probably just print each item by hand for displaying to the end-user
2018-09-19 15:32:20	Lumpio-	actually
2018-09-19 15:32:22	-->	anoa-M (andrewmamo@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-19 15:32:23	Lumpio-	quartz55: https://docs.rs/futures-util/0.2.1/src/futures_util/future/mod.rs.html#76
2018-09-19 15:32:24	Lumpio-	Check that out
2018-09-19 15:32:31	Lumpio-	The impl and trait namely
2018-09-19 15:32:37	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 15:33:01	ferdinand	Lumpio if I want to display it to the end user as empty how do I do so? whats the syntax
2018-09-19 15:33:02	Lumpio-	(Assuming that's still compatible version-wise)
2018-09-19 15:33:18	Lumpio-	ferdinand: If it's a tic-tac-toe board you'll probably want to make a loop to print it on three rows
2018-09-19 15:33:29	Lumpio-	Maybe even a nested loop!
2018-09-19 15:33:45	ferdinand	ya its a tic tac to board
2018-09-19 15:34:35	ferdinand	https://play.rust-lang.org/?gist=a12366b3d3591efc3ba89cd5c401ca2a&version=stable&mode=debug&edition=2015
2018-09-19 15:34:54	quartz55	Lumpio-, that's exactly what I was looking for! Problem was on dealing with Sized, guess I should read more on that
2018-09-19 15:34:57	ferdinand	thats what I would like to see but you suggest a loop
2018-09-19 15:35:12	quartz55	It is working now
2018-09-19 15:35:50	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-19 15:37:26	ferdinand	lump: I am also confused why you recommend a loop for the board
2018-09-19 15:37:39	<--	Serrak (Mibbit@moz-7jr.00i.134.142.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 15:38:10	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 15:38:19	<--	Cetra (Cetra@moz-3qreko.parashift.com.au) has quit (Ping timeout: 121 seconds)
2018-09-19 15:39:41	-->	retn559 (Mibbit@moz-17r.aq4.139.35.IP) has joined #rust-beginners
2018-09-19 15:41:07	<--	retn559 (Mibbit@moz-17r.aq4.139.35.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 15:41:19	clarkema	I'm just getting started and playing around with a multi-thread beanstalk client just for some practice.  What I want to be able to do is have a single beanstalk client instance on a thread receiving messages on a channel, which it then fowards to beanstalkd. But I'm having some kind of lifetime problem passing arguments into the thread closure: 
2018-09-19 15:41:20	clarkema	https://play.rust-lang.org/?gist=e881913d6db189c5bc98800f4d58513e&version=stable&mode=debug&edition=2015
2018-09-19 15:41:22	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 15:41:35	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 15:42:49	clarkema	I'm not sure the match lifetime is an issue after I've cloned the part I want out of it
2018-09-19 15:43:09	<--	justsomequestions (gumble@moz-g8nqvr.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-19 15:43:49	Icefoz	clarkema: Line 16, replace `clone()` with `to_owned()`.
2018-09-19 15:44:00	<--	rusty_worker (paschoul@moz-f8jven.tsmb.a7dq.0638.2001.IP) has quit (Quit: Leaving)
2018-09-19 15:44:07	Icefoz	clarkema: `host` is a `&str`, not a `String`, so cloning it just gives you another `&str`.
2018-09-19 15:45:07	clarkema	Ah!  An to_owned turns the &str into a brand new String with the same contents?
2018-09-19 15:45:18	Icefoz	Yep.
2018-09-19 15:45:24	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 15:45:38	-->	rusty_worker (paschoul@moz-f8jven.tsmb.a7dq.0638.2001.IP) has joined #rust-beginners
2018-09-19 15:46:04	clarkema	awesome, thanks :)
2018-09-19 15:46:15	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-19 15:46:18	<--	ferdinand (Mibbit@moz-qhog43.sntcca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 15:46:19	Icefoz	np
2018-09-19 15:46:24	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-19 15:47:03	GreenJello	why does it matter here? Wouldn't 'matches' live longer than the 'host' String already?
2018-09-19 15:47:43	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-19 15:47:52	clarkema	Well, that was also a question.  Since it should live until the end of the main function, and the threads will terminate before then anyway, right?
2018-09-19 15:48:17	clarkema	Well, they won't, but they also won't exceed the life of main()
2018-09-19 15:48:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 15:48:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 15:49:55	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 15:51:03	<--	matt-h (matt-h@moz-t1ckfj.biz.rr.com) has quit (The TLS connection was non-properly terminated.)
2018-09-19 15:51:13	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-19 15:51:21	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 15:51:24	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Quit: Leaving)
2018-09-19 15:51:27	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-19 15:51:37	Icefoz	The threads might not terminate before then.
2018-09-19 15:51:38	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-19 15:52:16	Icefoz	I'm not sure of the exact semantics, but in general there's no way for Rust to know "oh the thread will terminate before X, so it's fine".
2018-09-19 15:52:25	clarkema	I suppose it has no guarantee of that if the compiler doesn't take account of the join at the bottom
2018-09-19 15:52:30	Icefoz	Threads have to own all their contents.
2018-09-19 15:53:00	Icefoz	There's crates like `scoped_thread` that do provide those guarentees and I believe do allow threads to borrow things.
2018-09-19 15:53:12	Icefoz	but I haven't played with them.
2018-09-19 15:53:23	<--	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 15:53:25	clarkema	Ah, that's useful to know -- will take a look at the docs for that for the future
2018-09-19 15:53:43	-->	alx741 (alx741@moz-ckg.k67.178.186.IP) has joined #rust-beginners
2018-09-19 15:55:41	-->	acksys (acksys@moz-ti3fbf.ph.cox.net) has joined #rust-beginners
2018-09-19 15:55:51	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-19 15:56:07	-->	eevv (Mibbit@moz-v2vhh5.splius.lt) has joined #rust-beginners
2018-09-19 15:56:18	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-19 15:56:34	eevv	hey how do I clone a variable without borrowing it into a closure?
2018-09-19 15:56:44	eevv	it implements Arc
2018-09-19 15:57:33	Icefoz	eevv: You can clone it before and move the clone into the closure.
2018-09-19 15:57:41	Icefoz	Which is kinda annoying but works.
2018-09-19 15:58:31	eevv	Icefoz, but how?
2018-09-19 15:58:50	eevv	I can't pass in anything to the closure via parameters because I'm using a library so idk what to do
2018-09-19 15:59:48	-->	kermie (Mibbit@moz-v6f.t2o.235.177.IP) has joined #rust-beginners
2018-09-19 15:59:55	Icefoz	Just use the variable in the closure.
2018-09-19 16:00:05	joris	let foo = my_var.clone(); let closure = |arg | use(foo);
2018-09-19 16:00:16	kermie	I asked a question on S.O.: can I move a value to inside a struct without copying? Probably nooby but I'd enjoy a clarification https://stackoverflow.com/questions/52408831/can-i-move-a-value-to-inside-a-struct-without-copying
2018-09-19 16:00:32	Icefoz	Possibly `let closure = move |arg| use(foo);` if necessary.
2018-09-19 16:01:01	eevv	Icefoz, I see thanks
2018-09-19 16:01:57	Icefoz	kermie: That would be a neat trick, how do you propose the computer manages that?
2018-09-19 16:02:05	Icefoz	kermie: More seriously, in that particular case, all that gets copied is like three pointers, so the overhead is basically nothing.
2018-09-19 16:02:07	<--	plusone (custom@moz-ttp6qg.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-19 16:02:12	joris	kermie: single field sructs have no otherhead so basically this is swap.
2018-09-19 16:02:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 16:02:26	<--	eevv (Mibbit@moz-v2vhh5.splius.lt) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 16:02:38	<--	paulvt (paul.van.ti@moz-is14br.fb56.nn7d.a446.2a02.IP) has quit (Client exited)
2018-09-19 16:02:54	joris	but then i don't understand your question vecause you are asking if you can copy data around without copying data. 
2018-09-19 16:03:13	Icefoz	^
2018-09-19 16:03:14	Icefoz	In general if you are worried about copying overhead you can stuff the thing in a Box or such so all that gets copied is the pointer.
2018-09-19 16:03:29	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-19 16:03:30	joris	my take about this is "trust llvm until proven llvm does not good enough for your perf profile"
2018-09-19 16:03:40	Icefoz	But rustc also does a fair amount of work to sneakily avoid copying unless necessary.
2018-09-19 16:04:00	joris	also note than moving a vector is just a 24bytes copy.
2018-09-19 16:04:02	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-19 16:04:08	joris	It's not that bad
2018-09-19 16:04:10	Icefoz	Like I think when passing structs to functions, when the struct goes over a certain size it will just pass a pointer to the struct instead.
2018-09-19 16:04:36	joris	yeah, and if small functions get inline, move does not happen anymore
2018-09-19 16:05:05	joris	there are cases where it can become an issue but you should not worry until you have proof it is an issue
2018-09-19 16:05:16	-->	matt-h (matt-h@moz-t1ckfj.biz.rr.com) has joined #rust-beginners
2018-09-19 16:05:30	-->	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has joined #rust-beginners
2018-09-19 16:05:51	-->	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has joined #rust-beginners
2018-09-19 16:08:53	<--	kermie (Mibbit@moz-v6f.t2o.235.177.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 16:08:58	-->	faitswulff (faitswulff@moz-jcgc1n.il.comcast.net) has joined #rust-beginners
2018-09-19 16:09:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 16:11:01	-->	jperras (jperras@moz-lvgm2l.kc4u.lihr.1970.2001.IP) has joined #rust-beginners
2018-09-19 16:11:51	Icefoz	https://godbolt.org/z/p3A9o4
2018-09-19 16:12:00	Icefoz	Example of said optimization
2018-09-19 16:12:01	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 16:12:26	faitswulff	Hi all, first time posting. I'm afraid that learning Rust will insulate me from learning the systems below the abstractions. Thoughts?
2018-09-19 16:12:43	faitswulff	For context, I was considering learning C in order to learn more about memory management and low level systems programming (I haven't learned it yet, so I don't know what I don't know here), but I'm very attracted to learning Rust - I only have so many hours in a day, after all. I'm sure I will learn Rust, but I'm afraid that I'll just end up fixing compiler errors without learning why the errors were designed to occu
2018-09-19 16:12:43	faitswulff	r.
2018-09-19 16:13:06	Icefoz	faitswulff: Anything you can do in C you can do in Rust.
2018-09-19 16:13:23	-->	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 16:13:29	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 16:13:40	Icefoz	I can't speak for the learning experience but my untested opinion is the skills are pretty transferable.
2018-09-19 16:14:03	<--	SenasOzys_ (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 16:14:48	Icefoz	faitswulff: What languages do you know, out of curiosity?
2018-09-19 16:16:33	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 16:16:50	faitswulff	Ruby, Python, Javascript, kind of the usual. I took an electrical engineering class that went from logic gates -> toy assembly (LC-3) -> C, but that's the extent of my low level knowledge
2018-09-19 16:17:03	faitswulff	I touched C, and I was afraid
2018-09-19 16:17:07	faitswulff	:p
2018-09-19 16:17:31	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 16:17:56	<--	vmx (vmx@moz-o5kd55.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-19 16:18:05	<--	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 16:18:52	Icefoz	Fair enough.  I'd still recommend Rust over C, but I might be a little biased.  ;-)
2018-09-19 16:19:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 16:19:38	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 16:20:15	Icefoz	A good way to learn about low-level stuffs is to play with microcontrollers, so if that's something you're interested in it might be fun.
2018-09-19 16:20:31	<--	arunkumar413 (arunkumar41@moz-bu5.7h4.48.157.IP) has quit (Quit: Leaving)
2018-09-19 16:20:39	Icefoz	Rust has a lot of abstractions but none of them are so thick you can't dig beneath them with minimal effort.
2018-09-19 16:20:45	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 16:21:28	-->	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-19 16:22:12	Pistachio	faitswulff: You said you're very attracted to learning Rust. Use that to your advantage and learn Rust. You can learn C later if Rust wasn't enough for you
2018-09-19 16:22:30	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-19 16:23:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 16:24:02	faitswulff	Icefox: Got it, thanks!
2018-09-19 16:24:08	faitswulff	Pistachio: I certainly will
2018-09-19 16:24:11	-->	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-19 16:24:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 16:25:24	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 16:25:24	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-19 16:25:32	<--	vmeson (rmacleod@moz-hq5.1km.224.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 16:26:28	-->	siddhart_ (siddharthar@moz-djprge.ae6v.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-19 16:26:37	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 16:27:16	-->	Salek (salek@moz-v8mq95.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-19 16:28:37	<--	siddhartharao17 (siddharthar@moz-0b4i74.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 16:29:04	-->	frogzilla (Mibbit@moz-opk9ij.ca.comcast.net) has joined #rust-beginners
2018-09-19 16:29:06	<--	salek_ (salek@moz-v8mq95.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2018-09-19 16:30:01	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-19 16:30:40	-->	justsomequestions (gumble@moz-g8nqvr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-19 16:31:47	frogzilla	What is the difference between `map` and `and_then` for the option type
2018-09-19 16:31:53	frogzilla	they look almost identical
2018-09-19 16:32:45	<--	faitswulff (faitswulff@moz-jcgc1n.il.comcast.net) has quit (Quit: Leaving...)
2018-09-19 16:33:11	sebk	frogzilla: afaik and_then takes T -> Option<U>
2018-09-19 16:33:16	sebk	map takes T -> U
2018-09-19 16:33:35	dav1d	and_then is Java's flatMap
2018-09-19 16:34:24	dav1d	map: ` F: FnOnce(T) -> U` vs and_then: `F: FnOnce(T) -> Option<U>`
2018-09-19 16:34:51	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 16:35:04	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-19 16:35:40	<--	eibwen (eibwen@moz-230ah8.wlan.hu-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-19 16:36:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 16:36:46	-->	DeltaMan_ (DeltaManiac@moz-n3p.6qd.167.122.IP) has joined #rust-beginners
2018-09-19 16:37:14	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 16:37:30	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-19 16:38:47	dowwie	in module_1, I implement a struct, Type1, that derives Trait1.  Why is it that when I import Type1 into another module the Trait1 implementation isn't recognized by the compiler and I must explicitly import Trait1 into the other module?
2018-09-19 16:38:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 16:39:09	-->	dark-knight (dark-knight@moz-2o455m.dynamic.surfer.at) has joined #rust-beginners
2018-09-19 16:39:37	dowwie	in other words, when you import a type, why don't its trait implementations import as well
2018-09-19 16:39:45	-->	snowe (snowe@moz-ri3.15m.177.128.IP) has joined #rust-beginners
2018-09-19 16:39:54	dowwie	doesn't
2018-09-19 16:40:30	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-19 16:40:53	sebk	you can use only trait methods for traits that are in scope
2018-09-19 16:40:59	<--	DeltaMan_ (DeltaManiac@moz-n3p.6qd.167.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 16:41:07	dav1d	dowwie: mh, why should it? If you import a class in a language, the interface isnt automatically imported as well (e.g. Java)
2018-09-19 16:41:16	dav1d	or am I misunderstanding something
2018-09-19 16:41:49	<--	codesections (codesection@moz-e45.7hn.29.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 16:42:08	dowwie	sebk:  yes-- why wouldn't the compiler automatically import the trait methods into scope
2018-09-19 16:42:08	-->	pdkl (pdkl@moz-l0g.44s.189.12.IP) has joined #rust-beginners
2018-09-19 16:42:17	-->	mib_idtkxw (Mibbit@moz-psj.69c.78.195.IP) has joined #rust-beginners
2018-09-19 16:42:35	<--	mib_idtkxw (Mibbit@moz-psj.69c.78.195.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 16:42:41	dowwie	dav1d:   you seem to think that the default behavior is acceptable because of how java does things
2018-09-19 16:42:56	sebk	dowwie: because you only imported the struct
2018-09-19 16:43:00	dav1d	dowwie: no I don't
2018-09-19 16:43:06	sebk	traits are a separate thing
2018-09-19 16:43:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 16:43:37	sebk	you can define two different methods in two different traits that have the same name
2018-09-19 16:43:52	dav1d	dowwie: that's called an example, you can literally look at the any language which is somewhat object oriented and has an import system, if you import a class you wont get the interface nor the parent class imported as well
2018-09-19 16:44:32	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-19 16:44:56	dowwie	dav1d:  yeah
2018-09-19 16:44:59	dpc1	yah but those are slightly different cases, the parent class/interface is separate. 
2018-09-19 16:45:33	dpc1	if you want to call a function on the super class from the object you have of the derived class,  you don't need to import the super class
2018-09-19 16:46:27	dav1d	true
2018-09-19 16:46:44	-->	xet7 (xet7@moz-l7hqsk.rev.dnainternet.fi) has joined #rust-beginners
2018-09-19 16:46:51	dav1d	fair enough
2018-09-19 16:49:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 16:50:05	dowwie	thx sebk and dav1d
2018-09-19 16:50:58	<--	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has quit (Ping timeout: 121 seconds)
2018-09-19 16:52:05	frogzilla	I'm not understanding what and_then does? I'm not super familiar with flatmap either. When comparing it to `map` all that seems different is that map wraps your return value in an option.
2018-09-19 16:52:37	ilmari	frogzilla: it means it can change a Some() to a None
2018-09-19 16:52:58	ilmari	frogzilla: whereas map always returns the same "container" as the invocant
2018-09-19 16:53:28	<--	siddhart_ (siddharthar@moz-djprge.ae6v.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 16:53:51	-->	siddhartharao17 (siddharthar@moz-djprge.ae6v.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-19 16:53:57	frogzilla	well map kinda of returns None doesn't it? If the value is already None.
2018-09-19 16:54:17	dav1d	forbjok: if it is already None, map won't be called
2018-09-19 16:54:19	frogzilla	But I do see how you could change a Some to a None
2018-09-19 16:54:24	frogzilla	Ok 
2018-09-19 16:54:50	<--	maarten (maartenBE@moz-61h3to.access.telenet.be) has quit (Connection closed)
2018-09-19 16:54:57	dav1d	frogzilla: also and_then is useful if you you call another function that returns an Option as well, means you don't have to unwrap in map()
2018-09-19 16:55:07	-->	maarten (maartenBE@moz-p01hcr.access.telenet.be) has joined #rust-beginners
2018-09-19 16:57:42	frogzilla	dav1d I'm actually reading http://cglab.ca/~abeinges/blah/too-many-lists/book/third-basics.html
2018-09-19 16:57:49	frogzilla	That's where it came up in that exact example
2018-09-19 16:57:53	frogzilla	just wanted to understand
2018-09-19 16:59:08	dav1d	ah yeah, that's the perfect example, your lambda/functions returns Option<Y> instead of Y, now if you wanted to use map you would have to unwrap() the result, and_then allows you to nicely chain it
2018-09-19 17:01:13	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 17:01:43	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-09-19 17:01:48	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-19 17:02:11	-->	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has joined #rust-beginners
2018-09-19 17:02:35	-->	csos95 (quassel@moz-i83v25.f38e.oeqs.6000.2605.IP) has joined #rust-beginners
2018-09-19 17:05:21	<--	pdkl (pdkl@moz-l0g.44s.189.12.IP) has quit (Quit: Leaving)
2018-09-19 17:05:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 17:06:11	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 17:07:04	-->	codesections (codesection@moz-e45.7hn.29.38.IP) has joined #rust-beginners
2018-09-19 17:07:31	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 17:08:30	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 17:09:19	-->	eyans (a@moz-c877d3.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-19 17:10:42	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 17:11:33	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 17:12:44	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 17:13:16	<--	jperras (jperras@moz-lvgm2l.kc4u.lihr.1970.2001.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 17:13:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 17:13:33	-->	T (tdoan@moz-k97pif.e22k.lo4v.e000.2605.IP) has joined #rust-beginners
2018-09-19 17:13:36	<--	T (tdoan@moz-k97pif.e22k.lo4v.e000.2605.IP) has left #rust-beginners
2018-09-19 17:16:12	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 17:17:46	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 17:18:11	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 17:18:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 17:18:49	frogzilla	What is the difference between Rc::clone and .clone() on a type?
2018-09-19 17:19:07	frogzilla	.clone() is a deep copy where Rc::clone is just a copy of the reference?
2018-09-19 17:19:53	Icefoz	frogzilla: Yeah.
2018-09-19 17:20:05	Icefoz	`Rc::clone()` clones the `Rc`.
2018-09-19 17:20:10	Icefoz	Which doesn't clone the underlying type.
2018-09-19 17:20:14	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-19 17:20:15	emerent	frogzilla: .clone() is whatever the type does, which is a deep copy most of the time
2018-09-19 17:20:20	emerent	Rc::clone is Clone::clone
2018-09-19 17:20:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 17:20:52	Icefoz	One of the funny things about Rust is that deep vs. shallow copy is irrelevant a lot of the time
2018-09-19 17:20:53	<--	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 17:21:04	Icefoz	the ownership semantics makes it explicit what's going on.
2018-09-19 17:21:30	durka42	I wouldn't say it's irrelevant but you don't have to worry about it because the borrow checker will catch you
2018-09-19 17:21:47	durka42	in C++ if you forget to deep copy once then everything blows up
2018-09-19 17:22:32	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-19 17:22:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 17:23:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 17:24:45	frogzilla	So for an Option<T> if I call clone() does it do a deep copy?
2018-09-19 17:24:53	frogzilla	Or is that only if T is also copy?
2018-09-19 17:25:04	frogzilla	I see that Option has Clone derived for it
2018-09-19 17:25:07	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-19 17:25:41	Icefoz	Option implements Clone when T does.
2018-09-19 17:25:48	Arnavion	Of course. It's not possible to have two Option<T> that somehow share a T
2018-09-19 17:26:12	Arnavion	Thus to be able to clone an Option<T> you need to be able to clone the T
2018-09-19 17:27:27	durka42	since it's derived it means Option<T>: Clone iff T: Clone
2018-09-19 17:27:28	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 17:27:57	jossypoo	i can't believe there's no way to just proxy out traits like that
2018-09-19 17:27:58	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 17:28:00	jossypoo	instead of having to reimplement them
2018-09-19 17:28:17	jossypoo	that seems really short-sighted to me, especially for a language that is fundamentally based on composition and containers
2018-09-19 17:28:31	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-19 17:28:49	<--	fsasm (fsasm@moz-5fd.qra.178.62.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 17:29:19	Icefoz	...what do you mean?  That's what Derive does.
2018-09-19 17:29:26	jossypoo	i mean for proxying out traits
2018-09-19 17:29:33	jossypoo	like Add, Sub, Mul
2018-09-19 17:29:45	Icefoz	What do you mean by "proxy out traits" in this case?
2018-09-19 17:29:55	jossypoo	Box<T> * Box<T> should be T * T
2018-09-19 17:30:02	jossypoo	without having to reimplement Mul
2018-09-19 17:30:48	justsomequestions	two questions: These both work: println!("{}", s) and println!("{}", &s). Is this because there are two definitions for both s and &s or is s automatically converted to &s?
2018-09-19 17:31:02	-->	jedahan (textual@moz-61osfl.res.rr.com) has joined #rust-beginners
2018-09-19 17:31:02	justsomequestions	actually it has to be the latter one as I don't take ownership of s back but get it back right?
2018-09-19 17:31:05	Icefoz	jossypoo: I expect there's subtle and annoying issues with that involving the Deref trait.
2018-09-19 17:31:10	frogzilla	I'm reading : http://cglab.ca/~abeinges/blah/too-many-lists/book/third-basics.html and I'm extremely confused about clone() with Rc.
2018-09-19 17:31:22	Icefoz	But the easy answer would seem to be "you can write a derive for that"
2018-09-19 17:31:27	Icefoz	justsomequestions: Actually, let me check.
2018-09-19 17:31:35	@mbrubeck	https://crates.io/crates/newtype_derive gives a sort of generalized "derive" for wrapper types, but it's still not as elegant and you'd have in something like Haskell
2018-09-19 17:31:55	frogzilla	How is it when you call clone() that it doesn't do a deep copy of the list?
2018-09-19 17:32:33	@mbrubeck	frogzilla: It's cloning an Rc
2018-09-19 17:32:45	Icefoz	justsomequestions: There's an `impl Display for &T where T: Display`, so there's two definitons.
2018-09-19 17:33:05	@mbrubeck	frogzilla: and Rc is a reference-counted pointer that implements clone by doing a pointer copy and refcount increment
2018-09-19 17:33:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 17:33:37	frogzilla	Shouldn't he be useing Rc::clone?
2018-09-19 17:33:41	justsomequestions	Icefoz: ah ok thank you
2018-09-19 17:33:44	frogzilla	I was reading that in the rust book
2018-09-19 17:34:03	@mbrubeck	frogzilla: It can be useful for clarity, yes.
2018-09-19 17:34:25	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Quit: Leaving)
2018-09-19 17:34:35	frogzilla	So if you do clone on an Rc it just increments the count. That would make sense. I thought he was just copying the list.
2018-09-19 17:35:14	<--	justsomequestions (gumble@moz-g8nqvr.pools.vodafone-ip.de) has left #rust-beginners ("Konversation terminated!")
2018-09-19 17:35:43	-->	rust101 (gumble@moz-g8nqvr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-19 17:35:55	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-19 17:38:29	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 17:40:08	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-19 17:40:24	--	tapeinos is now known as ephemeron
2018-09-19 17:41:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 17:41:57	-->	DaQue (Mutter@moz-h6qa57.4ap6.qokt.0001.2600.IP) has joined #rust-beginners
2018-09-19 17:43:03	<--	frogzilla (Mibbit@moz-opk9ij.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 17:43:20	-->	panitaliemom (Mibbit@moz-nao8ho.dynamic.uwaterloo.ca) has joined #rust-beginners
2018-09-19 17:43:59	GreenJello	forbjok, most types you encounter do #[derive(Clone)], which gives a simple implementation that calls .clone() on each of the struct fields
2018-09-19 17:44:11	-->	Herb3rt (Mibbit@moz-uejc8b.highway.telekom.at) has joined #rust-beginners
2018-09-19 17:44:15	GreenJello	oh they left, oops
2018-09-19 17:44:30	GreenJello	was going to link to this though https://doc.rust-lang.org/src/alloc/rc.rs.html#852-872
2018-09-19 17:44:31	-->	ca1ek (dawid@moz-9d1mn7.internetia.net.pl) has joined #rust-beginners
2018-09-19 17:45:06	panitaliemom	According to https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html PartialOrd is a "Trait for values that can be compared for a sort-order." Yet when I look at slice.sort() https://doc.rust-lang.org/std/primitive.slice.html#method.sort it requires a total ordering... What does "a sort-order
2018-09-19 17:45:18	panitaliemom	According to https://doc.rust-lang.org/std/cmp/trait.PartialOrd.html PartialOrd is a "Trait for values that can be compared for a sort-order." Yet when I look at slice.sort() https://doc.rust-lang.org/std/primitive.slice.html#method.sort it requires a total ordering... What does "a sort-order" mean in the documentation of PartialOrd?
2018-09-19 17:45:29	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 17:46:25	ca1ek	could someone explain this crate to me? https://github.com/mattnenterprise/rust-hash-ring
2018-09-19 17:46:49	ca1ek	I was just looking for cryptographic hashing libraries but this looks quite interesting
2018-09-19 17:48:44	@mbrubeck	ca1ek: consistent hashing is used in distributed databases (like Amazon's "Dynamo") so that they don't need to re-hash and move around everything in the DB whenever a server joins or leaves the network
2018-09-19 17:49:24	GreenJello	panitaliemom, PartialOrd can result in None as the ordering, so the sorted version of a list of PartialOrd is undefined
2018-09-19 17:49:36	@mbrubeck	ca1ek: It's a way of distribiting a set of items across a set of "buckets" efficiently, where the number of buckets can change over time.
2018-09-19 17:50:14	@mbrubeck	ca1ek: This post explains the basics http://www.tom-e-white.com/2007/11/consistent-hashing.html
2018-09-19 17:50:17	ca1ek	that's kinda the thing i could use, i'll look more into that
2018-09-19 17:50:20	ca1ek	thanks for the links
2018-09-19 17:50:26	panitaliemom	GreenJello, I see. So what does that initial sentence "a sort-order" in the PartialOrd documentation refer to?
2018-09-19 17:50:59	@mbrubeck	ca1ek: The Amazon Dynamo paper is also worth reading ("Dynamo: Amazon’s Highly Available Key-value Store")
2018-09-19 17:51:18	GreenJello	panitaliemom, it's valid to sort on PartialOrd if for every two items, comparing them produces some value
2018-09-19 17:51:47	ca1ek	that (I think) will help me very much with my project, never heard of Dynamo actually, thanks!
2018-09-19 17:52:14	emerent	GreenJello: valid as in noone's stopping you
2018-09-19 17:52:18	emerent	but the output can be pure bogus
2018-09-19 17:53:10	emerent	panitaliemom: the wording dates 6 years back, it could be improved
2018-09-19 17:53:26	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 17:53:41	emerent	the trait only promises whatever is documented after that line
2018-09-19 17:56:20	panitaliemom	emerent: if I understand correctly, having a PartialOrd is not sufficient to be able to sort meaningfully, but then again Ord is not necessary to sort meaningfully...
2018-09-19 17:57:27	panitaliemom	emerent: in which case I think it might be helpful to remove the text "for a sort-order" from the PartialOrd documentation
2018-09-19 17:57:30	GreenJello	emerent, maybe I'm not reading this right, but it looks like it's supposed to sort correctly for any v where v.sort_by(|a, b| a.partial_cmp(b).unwrap()) doesn't panic
2018-09-19 17:57:58	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Ping timeout: 121 seconds)
2018-09-19 17:58:32	emerent	panitaliemom: for the sort to be meaningful, all elements need to be comparable to each other
2018-09-19 17:58:49	emerent	`Ord` guarantees that, but it can also be true for some collections of `PartialOrd` types
2018-09-19 17:58:53	GreenJello	I'm not a math person, so maybe antisymmetry+transitivity doesn't imply that
2018-09-19 17:58:55	panitaliemom	hmm ok so that actually does correspond to a total order, right?
2018-09-19 17:58:57	emerent	like a vec of non-NaN floats
2018-09-19 17:59:58	@mbrubeck	yes, that would be a totally-ordered subset of a partially-ordered set
2018-09-19 18:00:18	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 18:00:50	@mbrubeck	By the way, there's an open PR to improve the docs for PartialOrd https://github.com/rust-lang/rust/pull/53386
2018-09-19 18:00:52	emerent	GreenJello: you may not encounter the cases that aren't comparable during a sort so it could not panic but also be wrong
2018-09-19 18:01:43	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 18:02:06	@mbrubeck	GreenJello's original formulation "if for every two items, comparing them produces some value" was stronger and more correct.
2018-09-19 18:02:33	GreenJello	emerent, good point
2018-09-19 18:03:05	panitaliemom	hmm so I guess that is why it sometimes makes sense to sort PartialOrd elements, although mathematically that sounds very strange...
2018-09-19 18:03:56	emerent	in cases where the type system can't help you because it depends on runtime information
2018-09-19 18:04:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 18:04:37	-->	liquidnight (marcus@moz-cn1qj8.9p6n.ja0r.0c22.2a01.IP) has joined #rust-beginners
2018-09-19 18:04:49	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 18:04:52	panitaliemom	ok, thank you all! this has been helpful for my understanding
2018-09-19 18:05:45	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 18:09:58	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Quit: WeeChat 2.2)
2018-09-19 18:11:04	<--	Aankhen`` (notasquid@moz-djl.h7i.207.49.IP) has quit (Quit: Sorry, was AFK)
2018-09-19 18:11:12	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-19 18:11:46	ca1ek	is there a nice way to turn a u64 into [u8; 8] without using unsafe mem::transmute?
2018-09-19 18:13:04	emerent	ca1ek: to_bytes() but not stable yet and is likely to be renamed
2018-09-19 18:13:11	@mbrubeck	ca1ek: soon https://doc.rust-lang.org/nightly/std/primitive.u32.html#method.to_ne_bytes
2018-09-19 18:13:17	@mbrubeck	(hopefully)
2018-09-19 18:13:21	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-19 18:13:24	@mbrubeck	It's implemented as `transmute`
2018-09-19 18:13:31	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-19 18:14:08	@mbrubeck	There's also the `byteorder` crate but it's a little cumbersome for just converting a single integer to bytes
2018-09-19 18:14:21	-->	starblue1 (juergen@moz-bipq8j.versanet.de) has joined #rust-beginners
2018-09-19 18:14:25	ca1ek	now i suffer the ultimate question, big endian or little endian
2018-09-19 18:14:33	ca1ek	coin flip will do
2018-09-19 18:15:12	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-19 18:15:22	<--	starblue (juergen@moz-qncr26.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-19 18:15:25	ca1ek	the coin is gone
2018-09-19 18:15:36	<--	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has quit (Quit: Leaving.)
2018-09-19 18:16:01	@mbrubeck	error: attempted to read from `coin` after drop
2018-09-19 18:16:09	rust101	can one say that immutable references implement copy?
2018-09-19 18:16:15	@mbrubeck	rust101: yes
2018-09-19 18:16:56	@mbrubeck	rust101: for confirmation, see the last line of code in https://doc.rust-lang.org/src/core/marker.rs.html#669
2018-09-19 18:17:15	-->	Pistachio_ (Pistachio@moz-ba8419.fios.verizon.net) has joined #rust-beginners
2018-09-19 18:17:26	<--	clarkema (clarkema@moz-5u58k7.kc.net.uk) has quit (Client exited)
2018-09-19 18:18:21	<--	Pistachio (Pistachio@moz-ba8419.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-19 18:18:21	--	Pistachio_ is now known as Pistachio
2018-09-19 18:18:48	-->	tac-tics_ (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-09-19 18:19:10	<--	Pistachio (Pistachio@moz-ba8419.fios.verizon.net) has quit (Client exited)
2018-09-19 18:19:33	rust101	mbrubeck: thank you
2018-09-19 18:19:52	rust101	just out of interest, what does that mean: impl<T: ?Sized> Copy for *mut T {} ? (the line above in the file you send me)
2018-09-19 18:19:55	rust101	what is *mut T here
2018-09-19 18:20:03	@mbrubeck	*mut T is a "raw pointer"
2018-09-19 18:20:22	@mbrubeck	https://doc.rust-lang.org/std/primitive.pointer.html
2018-09-19 18:20:38	rust101	ah so just a C-style pointer, so exactly what * is in C?
2018-09-19 18:20:38	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-19 18:20:48	-->	jihi (jih@moz-16o1jp.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 18:21:05	@mbrubeck	rust101: yeah, pretty much
2018-09-19 18:21:08	@mbrubeck	more docs https://doc.rust-lang.org/nightly/book/second-edition/ch19-01-unsafe-rust.html#dereferencing-a-raw-pointer
2018-09-19 18:22:06	rust101	thank you for the links
2018-09-19 18:22:34	dav1d	mbrubeck: *mut T means the contents of T are mutable, right?
2018-09-19 18:22:38	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-19 18:22:39	-->	Aimai (Aimai@moz-uu978i.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 18:22:42	@mbrubeck	dav1d: Yes
2018-09-19 18:22:45	dav1d	thanks
2018-09-19 18:22:59	Aimai	Is there any way whatsoever to allow the use of a private property from an external library?
2018-09-19 18:24:05	rust101	ah so that line basically means that if you are using pointers you are allowed to copy pointers to mutable stuff?
2018-09-19 18:24:08	rust101	as opposed to references?
2018-09-19 18:24:32	<--	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has quit (Quit: Leaving)
2018-09-19 18:24:38	@mbrubeck	Aimai: 1) fork the library and make it public, 2) use unsafe pointer manipulation to find the address of the field (may break if library or compiler updates change the layout)
2018-09-19 18:24:57	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-19 18:25:02	<--	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 18:25:46	@mbrubeck	rust101: Yeah, and you can freely cast between *mut and *const pointers, so the "mutability" of a raw pointer is more for documentation/linting purposes than for any real enforcement.
2018-09-19 18:26:11	<--	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-19 18:26:18	Aimai	mbrubeck: the first part eventually becomes hard to maintain - the second one definitly does
2018-09-19 18:26:20	@mbrubeck	whereas `&mut T` is always guaranteed to be a unique reference
2018-09-19 18:26:24	<--	DaQue (Mutter@moz-h6qa57.4ap6.qokt.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-19 18:26:27	Aimai	But thanks - I wasn't very hopeful in the first place
2018-09-19 18:26:39	rust101	ok thank you again for your help
2018-09-19 18:27:06	Aimai	I should write this down somewhere as an example of where encapsulation becomes extremely annoying
2018-09-19 18:27:11	-->	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-19 18:29:10	@mbrubeck	Aimai: serde does something where you duplicate the type definition into your own crate https://serde.rs/remote-derive.html
2018-09-19 18:29:21	<--	oms-hh (oms@moz-8k0au8.dyn.telefonica.de) has quit (Quit: Leaving)
2018-09-19 18:29:39	-->	oms (oms@moz-8k0au8.dyn.telefonica.de) has joined #rust-beginners
2018-09-19 18:29:45	@mbrubeck	Aimai: and IIUC it uses procedural macro code to verify at build-time that the definitions match
2018-09-19 18:30:49	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-19 18:34:36	ca1ek	I'm trying to return a SHA3 256 hash result from a function but I can't get the type signature just right https://docs.rs/sha3/0.7.3/sha3/trait.Digest.html#method.result
2018-09-19 18:34:40	ca1ek	here's the code I've got now https://gist.github.com/ca1ek/d3c4a44d7849d2a4a0557992e611e7e5
2018-09-19 18:36:50	ca1ek	I can just .as_ref the generic array
2018-09-19 18:38:51	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 18:39:32	-->	dthul_ (dthul@moz-b21.pll.197.82.IP) has joined #rust-beginners
2018-09-19 18:40:43	rust101	ok do I understand right that here: https://pastebin.com/7wnWLWAx rust just always will infer that 'a = 'b as self and ImprtantExcerpt<'a> are the same thing?
2018-09-19 18:42:40	<--	panitaliemom (Mibbit@moz-nao8ho.dynamic.uwaterloo.ca) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 18:43:23	rust101	or is this right: it treats 'a and 'b as different lifetimes, one of ImportantExcerpt<'a> and one of &'b self. For 'a it knows that it can't outlive part per definition and for 'b it just inserts that into the definition of ImprantEcerpt<'a> and will get the same conidition?
2018-09-19 18:43:39	rust101	so they are different lifetimes just with the same value
2018-09-19 18:46:03	@mbrubeck	rust101: They can all be different, unequal lifetimes
2018-09-19 18:46:42	<--	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 18:46:45	@mbrubeck	It can return `&'a str` without borrowing `self` for the same lifetime, because it can copy the existing `&'a str` out of self and return it
2018-09-19 18:46:50	@mbrubeck	`self` doesn't need to remain borrowed after that
2018-09-19 18:48:27	@mbrubeck	rust101: For example this works with your code: https://play.rust-lang.org/?gist=51b0a8b738433b4f4beea1f2cb09b426&version=stable&mode=debug&edition=2015
2018-09-19 18:48:53	<--	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has quit (Ping timeout: 121 seconds)
2018-09-19 18:48:58	@mbrubeck	rust101: But not if you change it so `self` and the returned `&str` have the same lifetime: https://play.rust-lang.org/?gist=6c7f96c52689babb2ebd12a1d317512d&version=stable&mode=debug&edition=2015
2018-09-19 18:49:55	@mbrubeck	no matter what that lifetime is: https://play.rust-lang.org/?gist=96424263397f285fd5be6c9936850fc3&version=stable&mode=debug&edition=2015
2018-09-19 18:51:43	rust101	thanks that are really good examples
2018-09-19 18:53:09	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-19 18:53:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 18:54:17	<--	xet7 (xet7@moz-l7hqsk.rev.dnainternet.fi) has quit (Quit: Leaving)
2018-09-19 18:54:26	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 18:56:01	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-19 18:56:48	-->	alextran (Mibbit@moz-eb1.9uc.63.69.IP) has joined #rust-beginners
2018-09-19 18:57:09	<--	alextran (Mibbit@moz-eb1.9uc.63.69.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 18:57:48	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-19 18:58:07	<--	csos95 (quassel@moz-i83v25.f38e.oeqs.6000.2605.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 18:58:57	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 19:01:46	-->	Tomo (Tomo@moz-0va6os.dyn.optonline.net) has joined #rust-beginners
2018-09-19 19:02:02	<--	rust101 (gumble@moz-g8nqvr.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2018-09-19 19:02:08	-->	rust101 (gumble@moz-g8nqvr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-19 19:03:12	-->	Dorothy88 (Mibbit@moz-fgv.62i.215.181.IP) has joined #rust-beginners
2018-09-19 19:03:16	-->	eibwen (eibwen@moz-9kbrpu.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 19:03:47	-->	cbreaker (cbreaker@moz-6rijsp.dynamic-zab-05.vectranet.pl) has joined #rust-beginners
2018-09-19 19:03:48	-->	dozn (dozn@moz-3pudru.vs.shawcable.net) has joined #rust-beginners
2018-09-19 19:04:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 19:05:18	-->	raingloom (raingloom@moz-6j9ptc.pool.telekom.hu) has joined #rust-beginners
2018-09-19 19:06:28	<--	rust101 (gumble@moz-g8nqvr.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-19 19:06:41	-->	simonadameit (simonadamei@moz-v816vu.7nsu.elfl.0a61.2001.IP) has joined #rust-beginners
2018-09-19 19:07:51	cbreaker	Hello guys. I have problem with rust code compilation inside vscode editor. I'm trying to compile code from the Listing 16-12 which is in "The Book". I always get error: failed to parse manifest at and Caused by:
2018-09-19 19:07:53	cbreaker	  the cargo feature `edition` requires a nightly version of Cargo, but this is the `stable` channel
2018-09-19 19:08:29	cbreaker	my default toolchain is: nightly-x86_64-unknown-linux-gnu (default)
2018-09-19 19:10:33	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-19 19:11:01	cbreaker	OK. This is some kind of vscode problem not rust (cargo run src/main.rs from terminal works)
2018-09-19 19:13:43	-->	clarkema (clarkema@moz-vo1829.karoo.kcom.com) has joined #rust-beginners
2018-09-19 19:14:16	Icefoz	cbreaker: That's odd, I use vscode and haven't had a problem like that.  Let me see...
2018-09-19 19:15:21	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Quit: WeeChat 2.2)
2018-09-19 19:15:42	<--	clarkema (clarkema@moz-vo1829.karoo.kcom.com) has quit (Client exited)
2018-09-19 19:16:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 19:16:25	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-19 19:17:57	<--	jedahan (textual@moz-61osfl.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 19:19:18	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-19 19:20:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 19:23:14	<--	Dorothy88 (Mibbit@moz-fgv.62i.215.181.IP) has quit (G-Lined: no spamming here)
2018-09-19 19:25:28	-->	ketralnis (ketralnis@moz-61c9db.ketralnis.com) has joined #rust-beginners
2018-09-19 19:25:38	Icefoz	I don't see an "edition" option in the config or anything...
2018-09-19 19:26:06	Icefoz	cbreaker: There's a flag to enable/disable unstable features, maybe try that.
2018-09-19 19:27:27	Aimai	What was the iterator function for map(|&x| x) again?
2018-09-19 19:27:51	Icefoz	Aimai: cloned() ?
2018-09-19 19:30:16	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 19:32:02	Aimai	oh right
2018-09-19 19:32:04	Aimai	thanks
2018-09-19 19:32:51	Icefoz	Not sure that's what you want but it sounds like it
2018-09-19 19:33:20	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 19:34:24	-->	peeves (Mibbit@moz-s8o.s62.74.96.IP) has joined #rust-beginners
2018-09-19 19:34:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 19:35:19	-->	madalynn (Mibbit@moz-7aq.ie8.98.92.IP) has joined #rust-beginners
2018-09-19 19:35:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 19:35:39	peeves	I am trying to do chapter 12 project from the rust book and I keep getting this error
2018-09-19 19:35:52	peeves	 File::open(filename).expect("file not found"); <-- not found in scope
2018-09-19 19:36:11	peeves	 File:: open(filename).expect("file not found"); <-- not found in scope
2018-09-19 19:37:14	kimundi	peeves: Did you maybe forget to import "File" ?
2018-09-19 19:37:45	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-19 19:38:08	-->	saffron (Mibbit@moz-cbmima.tx.comcast.net) has joined #rust-beginners
2018-09-19 19:38:17	<--	raingloom (raingloom@moz-6j9ptc.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-19 19:38:23	madalynn	Is there a way to store different structures into a vector or iterator? Precisely, trying to figure out best way to create a packet from tcp/ip layer structures. Wondering what could be the best way to access IPv4 -> TCP -> HTTP or IPv4 -> UDP -> DNS
2018-09-19 19:38:49	peeves	its a text file do I have to mod poem.txt in my main.rs
2018-09-19 19:38:54	peeves	kimundi
2018-09-19 19:39:09	saffron	i think so mada, but i'm new so i have to try it out first
2018-09-19 19:39:11	durka42	it should be telling you exactly what is not found in scope, if you read the rest of the error message
2018-09-19 19:39:18	durka42	kimundi was saying you may have forgoten `use std::fs::File`
2018-09-19 19:39:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 19:39:33	durka42	madalynn: you can use an enum
2018-09-19 19:39:52	madalynn	struct Packet {     layers: Vec<Box<TraitObject>>, } <-- Tried this and layers do add, but then access structure elements is limitation I believe
2018-09-19 19:40:16	durka42	trait object is also fine
2018-09-19 19:40:28	-->	rust101 (gumble@moz-g8nqvr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-19 19:40:29	-->	raingloom (raingloom@moz-pfeipn.pool.telekom.hu) has joined #rust-beginners
2018-09-19 19:40:33	madalynn	but then how to access structure element?
2018-09-19 19:40:39	durka42	add methods to the trait to do so
2018-09-19 19:40:48	durka42	or you can add a way to downcast back to original types, like {!crate mopa}
2018-09-19 19:40:48	+rustbot	mopa (0.2.2) - My Own Personal Any: get your own Any with additional functionality -> https://crates.io/crates/mopa <https://docs.rs/mopa>
2018-09-19 19:40:58	durka42	but if there's a known set of types you will be using, it's probably better to use an enum
2018-09-19 19:41:46	madalynn	I thought of adding methods, but then structures do not have same fields
2018-09-19 19:42:01	madalynn	so half methods would be empty
2018-09-19 19:42:29	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-19 19:43:57	madalynn	Let me try with enum
2018-09-19 19:44:07	-->	blackgoat (blackgoat@moz-jh3.cup.194.211.IP) has joined #rust-beginners
2018-09-19 19:44:13	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-19 19:45:35	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Quit: Leaving)
2018-09-19 19:45:41	peeves	has anyone tried the chapter 12 rust project
2018-09-19 19:46:01	kimundi	peeves: did you read durka42's answer?
2018-09-19 19:47:25	peeves	https://play.rust-lang.org/?gist=9f7d76884169b27539dfa35de33bbd0e&version=stable&mode=debug&edition=2015
2018-09-19 19:47:28	peeves	I have all of that 
2018-09-19 19:47:38	peeves	Im following step by step with what the book said 
2018-09-19 19:47:56	peeves	checkout my link to tell me where I am going wrong 
2018-09-19 19:48:02	<--	prasannatsm (uid268393@moz-8g0emg.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-19 19:48:34	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 19:48:46	kimundi	peeves: uhm, what is your problem exactly? All I see is that you have not define the variable "filename" there...
2018-09-19 19:49:32	<--	madalynn (Mibbit@moz-7aq.ie8.98.92.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 19:49:51	peeves	filename is a file that is saved in the root of my project its file.text 
2018-09-19 19:50:02	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 19:50:08	-->	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has joined #rust-beginners
2018-09-19 19:50:12	@mbrubeck	peeves: if you're reading the book online, click the "expand" button to show collapsed lines in the examples: https://doc.rust-lang.org/nightly/book/second-edition/ch12-02-reading-a-file.html#reading-a-file
2018-09-19 19:50:18	peeves	I am using use std::env; and passing the filename in the terminal to be read
2018-09-19 19:50:33	@mbrubeck	peeves: The example there builds on the previous program https://doc.rust-lang.org/nightly/book/second-edition/ch12-01-accepting-command-line-arguments.html#saving-the-argument-values-in-variables
2018-09-19 19:50:53	peeves	got it thank you!
2018-09-19 19:51:02	@mbrubeck	but it's showing only the newly added lines by default
2018-09-19 19:51:30	peeves	modern day superman! I appreciate the help
2018-09-19 19:52:28	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 19:52:28	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 19:52:28	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 19:52:46	<--	peeves (Mibbit@moz-s8o.s62.74.96.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 19:53:25	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 19:53:42	<--	Aimai (Aimai@moz-uu978i.dip0.t-ipconnect.de) has quit (Quit: leaving)
2018-09-19 19:53:57	rust101	if I want to do something like struct EntityId(u32); can I somehow make EntityId inherit everything from u32 automatically?
2018-09-19 19:54:00	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-09-19 19:54:04	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 19:54:04	rust101	like addition etc
2018-09-19 19:54:37	kimundi	no
2018-09-19 19:54:44	@mbrubeck	rust101: but https://crates.io/crates/newtype_derive can help
2018-09-19 19:55:01	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-19 19:55:13	<--	Guest4641 (nj0rd@moz-mr054g.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-19 19:55:27	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-19 19:55:40	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-19 19:57:00	rust101	mbrubeck: thank you that looks very good
2018-09-19 19:58:10	-->	clarkema (clarkema@moz-vo1829.karoo.kcom.com) has joined #rust-beginners
2018-09-19 19:58:39	-->	artfwo (artfwo@moz-o84.s9i.120.37.IP) has joined #rust-beginners
2018-09-19 19:58:59	rust101	Is there any difference between struct EntityId(u32) and struct EntityId { id: u32 }
2018-09-19 20:00:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 20:00:05	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-19 20:00:42	Icefoz	rust101: Not in terms of what assembly actually gets generated.
2018-09-19 20:01:13	rust101	ok thank you
2018-09-19 20:03:48	rust101	how is this kind of struct called where I don't set field names?
2018-09-19 20:04:01	rust101	I only found them in a se answer when searching for newtypes
2018-09-19 20:04:03	@mbrubeck	rust101: "tuple struct"
2018-09-19 20:04:09	rust101	ah thank you
2018-09-19 20:04:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 20:04:30	rust101	makes sense :D
2018-09-19 20:05:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 20:06:16	-->	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has joined #rust-beginners
2018-09-19 20:07:02	<--	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 20:08:23	-->	Guest4641 (nj0rd@moz-i74f48.dip.versatel-1u1.de) has joined #rust-beginners
2018-09-19 20:08:41	-->	csos95 (quassel@moz-i83v25.f38e.oeqs.6000.2605.IP) has joined #rust-beginners
2018-09-19 20:09:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 20:13:00	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-19 20:15:29	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 20:15:42	-->	mermi (Mibbit@moz-s8o.s62.74.96.IP) has joined #rust-beginners
2018-09-19 20:16:36	mermi	can someone please explain the difference between [str] and [String]
2018-09-19 20:16:38	-->	mib_4v30el (Mibbit@moz-cig0of.ip-addr.inexio.net) has joined #rust-beginners
2018-09-19 20:17:22	Icefoz	mermi: Do you mean &str and String ?
2018-09-19 20:17:49	@mbrubeck	`str` is a contiguous slice of UTF-8 bytes, anywhere
2018-09-19 20:18:46	@mbrubeck	`String` is a sort of smart pointer, like a Vec, which owns a heap-allocated buffer that contains a `str`.
2018-09-19 20:18:47	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 20:19:03	@mbrubeck	Because `String` has unique ownership of its buffer, it can grow it as needed, and deallocate it when dropped.
2018-09-19 20:19:29	mermi	ahh got ya so String contains str String is the object str is the elements within the object to say the lease 
2018-09-19 20:19:39	@mbrubeck	`&str` is a borrowed reference to a `str` slice, which may be owned by a String or could be in static memory or in a buffer on the stack
2018-09-19 20:20:17	mermi	ok got it ! much love 
2018-09-19 20:20:34	@mbrubeck	Chapter 4 of the book goes into much more detail https://doc.rust-lang.org/nightly/book/2018-edition/ch04-00-understanding-ownership.html
2018-09-19 20:21:17	<--	eyans (a@moz-c877d3.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-19 20:21:39	<--	mermi (Mibbit@moz-s8o.s62.74.96.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 20:23:05	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-19 20:23:51	<--	mib_4v30el (Mibbit@moz-cig0of.ip-addr.inexio.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 20:24:18	-->	niconii (nicole@moz-000g7g.midco.net) has joined #rust-beginners
2018-09-19 20:24:18	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-19 20:24:28	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 20:24:54	<--	Tomo (Tomo@moz-0va6os.dyn.optonline.net) has quit (Quit: Leaving...)
2018-09-19 20:25:43	-->	re-l124c41 (re-l124c41@moz-r8uvr9.4kh6.ni31.0908.2a02.IP) has joined #rust-beginners
2018-09-19 20:28:43	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 20:29:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 20:31:21	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-19 20:32:14	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-19 20:33:41	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 20:34:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 20:37:02	-->	mib_xsav6k (Mibbit@moz-7dhqf8.bb.dnainternet.fi) has joined #rust-beginners
2018-09-19 20:37:26	-->	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has joined #rust-beginners
2018-09-19 20:37:31	<--	mib_xsav6k (Mibbit@moz-7dhqf8.bb.dnainternet.fi) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 20:41:28	<--	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 20:41:38	-->	InfinitePankcakes (WizardOfThe@moz-uf2hrc.ipv6.telus.net) has joined #rust-beginners
2018-09-19 20:42:39	InfinitePankcakes	exit
2018-09-19 20:42:43	<--	InfinitePankcakes (WizardOfThe@moz-uf2hrc.ipv6.telus.net) has quit (Quit: WeeChat 2.2)
2018-09-19 20:42:45	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 20:43:29	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 20:44:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 20:45:41	-->	xorrox (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-19 20:47:16	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 20:47:38	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-19 20:48:13	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-19 20:48:37	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 20:49:33	<--	rust101 (gumble@moz-g8nqvr.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-19 20:49:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 20:50:08	dpc1	:P
2018-09-19 20:50:32	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 20:51:00	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-19 20:51:23	<--	saffron (Mibbit@moz-cbmima.tx.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 20:53:48	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 20:54:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 20:54:48	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-19 20:55:05	<--	dark-knight (dark-knight@moz-2o455m.dynamic.surfer.at) has quit (Quit: Leaving.)
2018-09-19 20:56:11	<--	xorrox (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-19 20:57:09	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 20:57:18	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 20:57:18	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-19 20:57:58	<--	cbreaker (cbreaker@moz-6rijsp.dynamic-zab-05.vectranet.pl) has left #rust-beginners ("WeeChat 2.2")
2018-09-19 20:58:41	-->	mandeep (mandeep@moz-6mck0m.dyn.columbia.edu) has joined #rust-beginners
2018-09-19 21:02:11	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 21:03:10	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-19 21:03:12	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (Connection closed)
2018-09-19 21:03:14	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-19 21:04:09	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:04:30	-->	PSJR (Mibbit@moz-88t3cn.fl.comcast.net) has joined #rust-beginners
2018-09-19 21:04:51	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-19 21:05:01	-->	items (Mibbit@moz-ms7d73.citykom.de) has joined #rust-beginners
2018-09-19 21:05:50	<--	PSJR (Mibbit@moz-88t3cn.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 21:06:00	<--	items (Mibbit@moz-ms7d73.citykom.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 21:07:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 21:08:36	-->	soren___ (soren@moz-v39tia.us.northamericancoax.com) has joined #rust-beginners
2018-09-19 21:08:38	-->	soren____ (soren@moz-v39tia.us.northamericancoax.com) has joined #rust-beginners
2018-09-19 21:09:41	-->	soren___1 (soren@moz-3br.6np.102.82.IP) has joined #rust-beginners
2018-09-19 21:10:58	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:11:00	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:11:02	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:11:11	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-19 21:11:14	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-19 21:11:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:11:37	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-19 21:13:00	<--	soren___ (soren@moz-v39tia.us.northamericancoax.com) has quit (Ping timeout: 121 seconds)
2018-09-19 21:13:03	<--	soren____ (soren@moz-v39tia.us.northamericancoax.com) has quit (Ping timeout: 121 seconds)
2018-09-19 21:13:33	-->	soren (soren@moz-3br.6np.102.82.IP) has joined #rust-beginners
2018-09-19 21:13:34	-->	soren_ (soren@moz-3br.6np.102.82.IP) has joined #rust-beginners
2018-09-19 21:14:15	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-19 21:14:35	<--	eibwen (eibwen@moz-9kbrpu.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-19 21:15:49	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:16:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 21:17:22	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-19 21:19:12	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-19 21:19:58	-->	rust101 (gumble@moz-241iqu.pptp.stw-bonn.de) has joined #rust-beginners
2018-09-19 21:20:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:20:23	-->	mib_dh2ds4 (Mibbit@moz-5p3ne8.ip.windstream.net) has joined #rust-beginners
2018-09-19 21:20:37	<--	mib_dh2ds4 (Mibbit@moz-5p3ne8.ip.windstream.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 21:21:01	-->	skeleten (user@moz-cg84l7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 21:21:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 21:21:45	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 21:22:58	<--	rust101 (gumble@moz-241iqu.pptp.stw-bonn.de) has quit (Quit: Konversation terminated!)
2018-09-19 21:22:59	-->	justsomequestions (gumble@moz-241iqu.pptp.stw-bonn.de) has joined #rust-beginners
2018-09-19 21:24:07	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-19 21:24:14	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-19 21:25:14	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-19 21:25:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:25:52	-->	DaQue (Mutter@moz-h6qa57.4ap6.qokt.0001.2600.IP) has joined #rust-beginners
2018-09-19 21:26:08	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 21:27:08	-->	unalobster (Mibbit@moz-2si.ri3.21.184.IP) has joined #rust-beginners
2018-09-19 21:27:28	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-19 21:28:19	<--	unalobster (Mibbit@moz-2si.ri3.21.184.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 21:30:21	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-19 21:30:32	<--	DaQue (Mutter@moz-h6qa57.4ap6.qokt.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-19 21:31:09	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-19 21:32:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:32:13	<--	neverfox_ (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-19 21:32:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 21:32:29	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 21:33:14	-->	neverfox (neverfox@moz-650.oe8.249.199.IP) has joined #rust-beginners
2018-09-19 21:36:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:36:54	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 21:39:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 21:39:11	<--	csos95 (quassel@moz-i83v25.f38e.oeqs.6000.2605.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 21:39:34	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:40:20	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-19 21:40:25	-->	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has joined #rust-beginners
2018-09-19 21:40:29	-->	SomeDude (pascal@moz-m3f67a.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-19 21:41:45	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 21:42:28	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-19 21:42:43	<--	soren___1 (soren@moz-3br.6np.102.82.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 21:42:44	<--	soren_ (soren@moz-3br.6np.102.82.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 21:42:46	<--	soren (soren@moz-3br.6np.102.82.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 21:43:53	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-19 21:43:56	-->	mib_lj4mlq (Mibbit@moz-8idla3.sub-174-197-29.myvzw.com) has joined #rust-beginners
2018-09-19 21:44:40	<--	mib_lj4mlq (Mibbit@moz-8idla3.sub-174-197-29.myvzw.com) has left #rust-beginners
2018-09-19 21:44:48	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:44:56	<--	siddhartharao17 (siddharthar@moz-djprge.ae6v.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 21:46:45	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-19 21:47:02	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 21:47:12	-->	dc1 (Mibbit@moz-cj8ik6.dyn.plus.net) has joined #rust-beginners
2018-09-19 21:47:18	-->	soren_ (soren@moz-3br.6np.102.82.IP) has joined #rust-beginners
2018-09-19 21:47:28	-->	soren__ (soren@moz-3br.6np.102.82.IP) has joined #rust-beginners
2018-09-19 21:49:24	<--	neverfox (neverfox@moz-650.oe8.249.199.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 21:50:55	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-19 21:50:55	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-19 21:51:11	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 21:52:04	-->	soren (soren@moz-3br.6np.102.82.IP) has joined #rust-beginners
2018-09-19 21:53:24	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-19 21:54:54	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 21:55:56	<--	jihi (jih@moz-16o1jp.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-19 21:56:19	-->	s34n (s34n@moz-idq.5fh.152.104.IP) has joined #rust-beginners
2018-09-19 21:56:26	cjd	https://play.rust-lang.org/?gist=782ec150324cd2881c3e258fd63f252e&version=stable&mode=debug&edition=2015
2018-09-19 21:56:30	cjd	Anonymous structures :)
2018-09-19 21:56:52	cjd	like a tuple with named fields, really
2018-09-19 21:57:42	s34n	I'm trying to avoid having to write the exact same implementation for every struct that implements a particular trait when the implementation relies a field.
2018-09-19 21:57:51	-->	pdkl (pdkl@moz-gh4.htb.44.173.IP) has joined #rust-beginners
2018-09-19 21:58:04	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 21:58:38	pdkl	I went through rust koans
2018-09-19 21:58:43	pdkl	educationaly
2018-09-19 21:59:40	panicbit	pdkl: How did it go?
2018-09-19 21:59:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 22:00:12	pdkl	Took a good 1/2 day
2018-09-19 22:00:31	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 22:00:32	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Connection closed)
2018-09-19 22:00:57	-->	siddhartharao17 (siddharthar@moz-djprge.ae6v.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-19 22:01:04	pdkl	I tried the method as if I was teaching it, and tried to teach myself
2018-09-19 22:01:25	<--	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 22:04:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:04:13	-->	enterprisey (enterprisey@moz-bq884s.cit.cornell.edu) has joined #rust-beginners
2018-09-19 22:05:17	dpc1	:)
2018-09-19 22:05:38	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 22:06:21	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-19 22:06:51	<--	enterprisey (enterprisey@moz-bq884s.cit.cornell.edu) has quit (Quit: Leaving)
2018-09-19 22:07:01	<--	dthul_ (dthul@moz-b21.pll.197.82.IP) has quit (Connection closed)
2018-09-19 22:07:27	-->	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-19 22:08:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 22:09:05	-->	TheBloke (TheBloke@moz-vvbsat.cable.virginm.net) has joined #rust-beginners
2018-09-19 22:12:43	<--	soren (soren@moz-3br.6np.102.82.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 22:13:04	<--	soren_ (soren@moz-3br.6np.102.82.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 22:13:13	<--	soren__ (soren@moz-3br.6np.102.82.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 22:13:50	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 22:14:51	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-19 22:15:43	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 22:16:04	<--	justsomequestions (gumble@moz-241iqu.pptp.stw-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-19 22:16:06	--	QwertyDragon is now known as QwertyDragon_
2018-09-19 22:17:09	<--	sebk (sebk@moz-k2bjro.org) has quit (Ping timeout: 121 seconds)
2018-09-19 22:17:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:17:52	<--	jolisper_ (jolisper@moz-s6i.d7r.244.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 22:17:55	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-19 22:18:23	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 22:21:05	-->	obi_wan (Mibbit@moz-m3bauj.um.maine.edu) has joined #rust-beginners
2018-09-19 22:21:07	-->	mib_jofm82 (Mibbit@moz-dndfh8.threembb.co.uk) has joined #rust-beginners
2018-09-19 22:21:30	<--	pdkl (pdkl@moz-gh4.htb.44.173.IP) has quit (Quit: Leaving)
2018-09-19 22:21:36	<--	obi_wan (Mibbit@moz-m3bauj.um.maine.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 22:22:17	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:22:18	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:23:19	<--	nairware (CELLIS-W10@moz-p67.9ua.206.67.IP) has quit (Quit: Leaving.)
2018-09-19 22:24:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 22:25:23	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-19 22:26:20	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:26:20	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:26:28	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-19 22:27:02	<--	skeleten (user@moz-cg84l7.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-19 22:27:55	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:28:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:31:57	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:32:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 22:32:23	<--	andoriyu (andoriyu@moz-i38dv8.d8te.uek4.e000.2605.IP) has quit (Quit: ZNC 1.6.6 - http://znc.in)
2018-09-19 22:32:37	-->	andoriyu (andoriyu@moz-i38dv8.d8te.uek4.e000.2605.IP) has joined #rust-beginners
2018-09-19 22:33:50	<--	jibby (quassel@moz-j5hri2.vt.comcast.net) has quit (Connection closed)
2018-09-19 22:34:22	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 22:35:05	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 22:35:11	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:35:12	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:36:19	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:36:48	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-19 22:38:15	-->	mmacherey (Thunderbird@moz-emtaqb.dyn.telefonica.de) has joined #rust-beginners
2018-09-19 22:38:51	<--	ca1ek (dawid@moz-9d1mn7.internetia.net.pl) has quit (The TLS connection was non-properly terminated.)
2018-09-19 22:39:14	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:39:14	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-19 22:39:38	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 22:41:34	-->	sebk (sebk@moz-k2bjro.org) has joined #rust-beginners
2018-09-19 22:42:15	-->	mib_blbwlm (Mibbit@moz-ha3ebg.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-19 22:42:38	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-19 22:42:53	mib_blbwlm	Is thread_local! or the crate thread_local preferred?
2018-09-19 22:43:44	mib_blbwlm	I wanted to try the crate, but the type I want to wrap is neither Send nor Sync
2018-09-19 22:43:46	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-19 22:43:52	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-19 22:44:00	mib_blbwlm	but the thread_local macro works
2018-09-19 22:44:06	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-19 22:44:47	mib_blbwlm	https://play.rust-lang.org/?gist=81820bd49d2eb390b9ec86acdf385caf&version=stable&mode=debug&edition=2015
2018-09-19 22:45:02	@mbrubeck	huh, I wonder why it requires Send
2018-09-19 22:45:30	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:45:39	@mbrubeck	https://github.com/Amanieu/thread_local-rs/issues/3
2018-09-19 22:46:19	mib_blbwlm	Teah and you can iter all values of ThreadLocal
2018-09-19 22:46:27	@mbrubeck	mib_blbwlm: Are you actually using it to store a ThreadRng, or is that just an example?
2018-09-19 22:46:32	-->	patrl (patrl@moz-rnv.ekn.20.178.IP) has joined #rust-beginners
2018-09-19 22:47:00	-->	Tomo (Tomo@moz-83nf1l.dyn.optonline.net) has joined #rust-beginners
2018-09-19 22:47:01	<--	mib_jofm82 (Mibbit@moz-dndfh8.threembb.co.uk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 22:47:05	mib_blbwlm	Its just an example, but is there a problem with that?
2018-09-19 22:47:36	@mbrubeck	ThreadRng is already a handle to a value in thread-local storage https://docs.rs/rand/0.5.1/src/rand/rngs/thread.rs.html#75-90
2018-09-19 22:47:39	mib_blbwlm	If I remember correctly is used it once in a thread_local!
2018-09-19 22:47:56	@mbrubeck	so you don't need to wrap it in another thread_local!  :)
2018-09-19 22:48:08	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 22:48:45	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Connection closed)
2018-09-19 22:49:25	<--	starblue1 (juergen@moz-bipq8j.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-19 22:50:15	mib_blbwlm	How do i share a ThreadRng safely between threads?
2018-09-19 22:50:30	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:50:33	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:50:35	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-19 22:54:07	@mbrubeck	mib_blbwlm: ThreadRng is essentially an Rc<ReseedingRng<StdRng, EntropyRng>>
2018-09-19 22:54:07	<--	sparky8251 (quassel@moz-dqudgl.1jj3.dq59.00c6.2601.IP) has quit (Connection closed)
2018-09-19 22:54:21	@mbrubeck	since it's an Rc, you can't share it across threads.  ThreadRng is specifically when you want a thread-local RNG
2018-09-19 22:54:35	@mbrubeck	But you can create your own `ReseedingRng<StdRng, EntropyRng>` and share it across threads
2018-09-19 22:55:49	-->	jibby (quassel@moz-j5hri2.vt.comcast.net) has joined #rust-beginners
2018-09-19 22:56:01	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 22:56:19	mib_blbwlm	So if I call thread_rng() from another thread it doesnt spawn another Rng, but gives me a cloned Rc to the Rng that war created once?
2018-09-19 22:56:21	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 22:57:04	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-19 22:57:16	<--	siddhartharao17 (siddharthar@moz-djprge.ae6v.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 22:57:33	-->	siddhartharao17 (siddharthar@moz-djprge.ae6v.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-19 22:58:04	-->	mandx (Mibbit@moz-m3bhju.PUBLIC.monkeybrains.net) has joined #rust-beginners
2018-09-19 22:58:27	<--	mmacherey (Thunderbird@moz-emtaqb.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-19 22:58:55	-->	mmacherey (Thunderbird@moz-oakm5a.dyn.telefonica.de) has joined #rust-beginners
2018-09-19 22:59:23	mib_blbwlm	Is there a way to force the compiler to let me access private fields?
2018-09-19 22:59:26	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 22:59:37	<--	jibby (quassel@moz-j5hri2.vt.comcast.net) has quit (Connection closed)
2018-09-19 22:59:41	-->	cornelius (Mibbit@moz-f9n.094.124.50.IP) has joined #rust-beginners
2018-09-19 23:00:31	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:01:10	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 23:01:27	<--	whidgle (Mibbit@moz-jtl.cj1.187.115.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 23:03:02	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 23:03:42	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:04:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 23:05:48	cornelius	I have a Vec<Box<StaffObject>> where StaffObject is a trait, which is implemented by Clef and several other things. I have a situation where I want to do one thing if the last element of the Vec is a clef, and another thing if it's anything else.
2018-09-19 23:06:31	cornelius	I gather that asking an object what type it is is considered bad form. What would the recommended alternative be?
2018-09-19 23:07:08	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:07:13	mib_blbwlm	What do you mean bad form?
2018-09-19 23:07:33	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-19 23:08:02	-->	alx741 (alx741@moz-ckg.k67.178.186.IP) has joined #rust-beginners
2018-09-19 23:08:59	mib_blbwlm	You could have a method on StaffObject that does the thing
2018-09-19 23:09:46	mib_blbwlm	You give Clef the implementation that does the thing that you want and give the other objects other implementations
2018-09-19 23:09:52	cornelius	When I searched how to query an object's type, most of what comes up is posts where the answers say that the code should be structured in such a way that it isn't necessary.
2018-09-19 23:11:10	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-19 23:11:33	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 23:11:41	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-19 23:11:58	<--	mmacherey (Thunderbird@moz-oakm5a.dyn.telefonica.de) has quit (Client exited)
2018-09-19 23:11:58	<--	alatiera (alatiera@moz-g0jsba.access.hol.gr) has quit (Quit: Leaving)
2018-09-19 23:12:11	Lumpio-	cornelius: Can StaffObject not be an enum in this case?
2018-09-19 23:13:07	<--	dc1 (Mibbit@moz-cj8ik6.dyn.plus.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 23:13:33	cornelius	I'm not sure. Can an enum have functions that all the variants have to implement, and that each can implement in a different way?
2018-09-19 23:15:15	<--	maarten (maartenBE@moz-p01hcr.access.telenet.be) has quit (Quit: ZNC 1.6.5+deb1+deb9u1 - http://znc.in)
2018-09-19 23:15:19	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-19 23:15:27	Lumpio-	Enums themselves can have functions but they're not per-variant
2018-09-19 23:15:53	-->	maarten (maartenBE@moz-61h3to.access.telenet.be) has joined #rust-beginners
2018-09-19 23:16:48	cornelius	"You could have a method on StaffObject that does the thing" This might be possible.
2018-09-19 23:16:54	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 23:17:21	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-19 23:17:44	mib_blbwlm	https://play.rust-lang.org/?gist=1a6f667204f0eac9c2473ecc912b6474&version=stable&mode=debug&edition=2015
2018-09-19 23:18:08	mib_blbwlm	Prints Clef on a Clef object and Not clef on a NotClef object
2018-09-19 23:18:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 23:19:09	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 23:19:44	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 23:19:50	mib_blbwlm	https://play.rust-lang.org/?gist=59ab7264a34d9fd687bf7f74d41643e2&version=stable&mode=debug&edition=2015
2018-09-19 23:20:00	mib_blbwlm	This version only does something on a clef object
2018-09-19 23:21:42	mib_blbwlm	@cornelius is that what you want?
2018-09-19 23:21:47	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:22:21	cornelius	I suppose the reason I didn't think to do it this way before is that it will involve copying and pasting the same implementation for every kind of not-clef object. There's no reason I *can't* do that.
2018-09-19 23:22:40	<--	mandx (Mibbit@moz-m3bhju.PUBLIC.monkeybrains.net) has left #rust-beginners
2018-09-19 23:22:43	cornelius	I'll put it in a function that they all call.
2018-09-19 23:22:59	mib_blbwlm	In my second example you dont need to copy and past at all
2018-09-19 23:23:07	-->	himi (sjjf@moz-e6bo53.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-19 23:23:31	mib_blbwlm	You only need 1 impl for cleaf and one for not clef
2018-09-19 23:23:57	cornelius	Oh, I see. It has a default implementation.
2018-09-19 23:25:31	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-19 23:25:45	cornelius	Yeah, I think this will work.
2018-09-19 23:26:35	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-19 23:26:46	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-19 23:26:51	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-19 23:30:08	cornelius	Well...hmm. The structuring will be kind of odd because of the specifics. I have a Vec<Box<StaffObject>> and an index into the Vec that represents an entry cursor. During the operation of adding an object to the Vec, if the element before the cursor is a Clef, the new object should replace the Clef, and if not, the new object should be inserted at the cursor.
2018-09-19 23:30:31	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:31:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 23:32:01	cornelius	Mechanically, I can do it with a member function, but what I'd name it, I don't know.
2018-09-19 23:32:16	<--	Herb3rt (Mibbit@moz-uejc8b.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 23:32:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 23:32:46	terrible_newbie	I have a question about the guessing game in the book (https://doc.rust-lang.org/stable/book/2018-edition/ch02-00-guessing-game-tutorial.html). I do not understand the line that reads "Ok(num) => num,". My confusion is with the usage of the term "num". I understand that this is can be any name that I want as long as it's the same in both places, but I don't understand why it has to be
2018-09-19 23:32:47	terrible_newbie	in the parentheses. I tried to put a _ in the parentheses to see what would happen and I don't understand why that breaks it.
2018-09-19 23:33:05	<--	himi (sjjf@moz-e6bo53.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:33:51	<--	Dariost (Dariost@moz-euo.lj4.20.151.IP) has quit (Client exited)
2018-09-19 23:34:05	Lumpio-	The results from .parse() is an enum where the variants (Ok and Err) contain data
2018-09-19 23:34:12	Lumpio-	Both contain one unnamed item
2018-09-19 23:34:14	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-19 23:34:19	Lumpio-	That's the syntax you use to extract the item from the enum variant
2018-09-19 23:35:00	terrible_newbie	Lumpio-: so putting "num" in the parentheses gives the name of "num" to the returned data, which I can then use as the return for the match statement?
2018-09-19 23:35:06	Lumpio-	The name in the parenthesis tells Rust to create a new variable with that name, and put whatever's in the variant's data into it
2018-09-19 23:35:14	Lumpio-	Yes
2018-09-19 23:35:30	Lumpio-	"_" is used to ignore data items, so "Ok(_) => num" never creates that num variable, so you can't read it either
2018-09-19 23:36:00	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:36:17	jeikobu	https://doc.rust-lang.org/1.5.0/book/patterns.html
2018-09-19 23:36:27	Lumpio-	The Err case would use an actual name instead of _ too, if it wanted to do something with the actual error value which would tell what kind of error there was
2018-09-19 23:36:33	Lumpio-	But in this case it's not necessary so it's ignored with _
2018-09-19 23:36:36	Lumpio-	s/would/could/
2018-09-19 23:36:37	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 23:37:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 23:37:28	-->	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has joined #rust-beginners
2018-09-19 23:37:57	terrible_newbie	Okay, so I have Err returning the data of the error if I do this? Err(error) => error,
2018-09-19 23:38:13	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 23:38:14	Lumpio-	Yes but that wouldn't work, because your match arms would try to return different types of values
2018-09-19 23:38:16	terrible_newbie	except that doesn't work because the let assignment is expecting a u32 and the error data is not a u32?
2018-09-19 23:38:16	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
2018-09-19 23:38:19	Lumpio-	The error isn't going to be a number (u32)
2018-09-19 23:38:20	Lumpio-	yep
2018-09-19 23:38:23	terrible_newbie	:)
2018-09-19 23:38:29	<--	raingloom (raingloom@moz-pfeipn.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-19 23:38:32	Lumpio-	You could for instance do
2018-09-19 23:38:43	Lumpio-	Err(error) => { println!("There was an error! {:?}", error); continue; }
2018-09-19 23:40:42	-->	raingloom (raingloom@moz-tsmgd8.pool.telekom.hu) has joined #rust-beginners
2018-09-19 23:40:56	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 23:41:03	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-19 23:41:12	terrible_newbie	using {:?} and {} give me different results in my println. Where can I read to further understand why that's happening?
2018-09-19 23:41:14	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 23:41:24	terrible_newbie	I'm not sure what the name of the {} is. Substitution placeholder maybe?
2018-09-19 23:41:26	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-19 23:41:29	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-19 23:41:37	<--	DeltaManiac (DeltaManiac@moz-n3p.6qd.167.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:41:39	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-19 23:41:44	mib_blbwlm	{} Is Display and {:?} is Debug
2018-09-19 23:42:14	mib_blbwlm	https://doc.rust-lang.org/rust-by-example/hello/print/print_debug.html
2018-09-19 23:42:32	mib_blbwlm	https://doc.rust-lang.org/rust-by-example/hello/print/print_display.html
2018-09-19 23:42:44	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:43:15	terrible_newbie	thank you mib_blbwlm and Lumpio- for your help. I understand much more now, and I will read those pages, thank you
2018-09-19 23:43:57	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-19 23:44:27	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Ping timeout: 121 seconds)
2018-09-19 23:45:28	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-19 23:45:41	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-19 23:47:03	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 23:47:10	<--	cornelius (Mibbit@moz-f9n.094.124.50.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-19 23:47:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 23:48:12	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Connection closed)
2018-09-19 23:52:18	-->	alx741 (alx741@moz-ckg.k67.178.186.IP) has joined #rust-beginners
2018-09-19 23:52:53	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-19 23:53:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-19 23:53:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-19 23:54:00	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-19 23:55:34	<--	patrl (patrl@moz-rnv.ekn.20.178.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:56:11	<--	insidious (insidious@moz-o9oj3u.resnet.uofs.edu) has quit (Quit: WeeChat 2.2)
2018-09-19 23:58:16	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:58:33	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-19 23:58:41	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-19 23:58:49	-->	csos95 (quassel@moz-i83v25.f38e.oeqs.6000.2605.IP) has joined #rust-beginners
2018-09-19 23:59:15	<--	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-19 23:59:17	-->	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 00:00:01	<--	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 00:00:03	-->	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 00:00:45	Lil_Dropchk	mbrubeck: how can i disable a cargo feature conditionally if the target is windows?
2018-09-20 00:00:47	<--	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 00:00:50	-->	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 00:01:34	<--	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 00:01:36	-->	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 00:01:47	<--	SomeDude (pascal@moz-m3f67a.dip0.t-ipconnect.de) has quit (Quit: Leaving.)
2018-09-20 00:02:16	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-20 00:02:18	<--	mib_blbwlm (Mibbit@moz-ha3ebg.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 00:02:20	<--	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 00:02:22	-->	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 00:03:06	<--	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 00:03:31	-->	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 00:03:39	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 00:05:20	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-20 00:05:28	<--	re-l124c41 (re-l124c41@moz-r8uvr9.4kh6.ni31.0908.2a02.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 00:06:18	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:07:33	<--	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 00:08:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:08:54	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-20 00:09:49	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 00:10:01	-->	proc (aron@moz-vjmr32.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 00:10:02	-->	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has joined #rust-beginners
2018-09-20 00:11:08	-->	danecando (danecando@moz-20p0g5.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-20 00:11:12	<--	TheBloke (TheBloke@moz-vvbsat.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:13:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 00:14:22	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 00:14:47	-->	xorrox (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 00:15:03	-->	starblue (juergen@moz-gn47vv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-20 00:16:49	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 00:17:53	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 00:17:54	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 00:17:57	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 00:18:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:18:14	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:18:19	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:18:21	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:19:11	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 00:19:14	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 00:19:17	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 00:20:37	-->	mib_2rab8c (Mibbit@moz-qt0jsv.dynamic.orange.es) has joined #rust-beginners
2018-09-20 00:20:59	mib_2rab8c	hi
2018-09-20 00:21:42	<--	mib_2rab8c (Mibbit@moz-qt0jsv.dynamic.orange.es) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 00:25:35	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 00:25:37	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 00:26:05	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-20 00:26:23	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 00:27:26	<--	xorrox (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 00:27:38	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:27:38	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:27:38	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:28:35	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 00:33:00	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-20 00:33:03	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 00:33:34	<--	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 00:33:46	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-20 00:33:49	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 00:34:33	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-20 00:34:37	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 00:35:20	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-20 00:35:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 00:35:30	-->	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 00:36:06	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-20 00:36:34	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 00:36:56	-->	ibrokemypie (conor@moz-6p5.94d.130.144.IP) has joined #rust-beginners
2018-09-20 00:37:24	ibrokemypie	why does Path::new() expect a reference?
2018-09-20 00:38:47	<--	snowe (snowe@moz-ri3.15m.177.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 00:38:51	Lumpio-	Because it behaves like a slice, i.e. it's just a pointer to some other data
2018-09-20 00:39:21	ibrokemypie	whats the difference between a path and a pathbuf?
2018-09-20 00:39:35	Lumpio-	A Path is like str and a PathBuf is like String
2018-09-20 00:39:38	Lumpio-	If you know strings
2018-09-20 00:39:52	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-20 00:40:03	ibrokemypie	uh
2018-09-20 00:40:08	@mbrubeck	or `Path` is like [T] and `PathBuf` is like Vec<T>
2018-09-20 00:40:15	ibrokemypie	I don't know the difference between str and Strign
2018-09-20 00:40:33	@mbrubeck	`Path` is a dynamically sized type representing a slice of bytes; it can only be passed around behind a pointer
2018-09-20 00:40:35	Lumpio-	str is a reference to some string data that's elsewhere, and a String is an object that owns its own data and can change it and all that
2018-09-20 00:40:40	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-20 00:40:44	<--	tac-tics_ (tac-tics@moz-93pd7l.ph.cox.net) has quit (Connection closed)
2018-09-20 00:41:00	@mbrubeck	`PathBuf` (like String) is a smart pointer that owns a heap allocation where a Path is stored
2018-09-20 00:41:26	ibrokemypie	ah
2018-09-20 00:41:39	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 00:41:52	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 00:42:37	ibrokemypie	how can I convert a String to a Pathbuf?
2018-09-20 00:43:48	@mbrubeck	PathBuf::from(string)
2018-09-20 00:43:53	Lumpio-	PathBuf::from(some_string) or depending on context even just some_string.into()
2018-09-20 00:44:36	<--	oms (oms@moz-8k0au8.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-20 00:46:11	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 00:46:49	ibrokemypie	is it worth converting the bathbuf to a path?
2018-09-20 00:47:14	@mbrubeck	You can *borrow* an &Path from the PathBuf
2018-09-20 00:47:27	@mbrubeck	but it'll be a borrowed reference pointing at data *owned* by the PathBuf
2018-09-20 00:47:35	ibrokemypie	is there any reason to?
2018-09-20 00:47:36	@mbrubeck	Usually you don't need to do it explicitly
2018-09-20 00:48:21	@mbrubeck	Functions that take a path will usually accept any type that can lend out an &Path
2018-09-20 00:48:44	@mbrubeck	for example `File::open(filename)`
2018-09-20 00:49:09	<--	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:49:13	@mbrubeck	`filename` can be a PathBuf, an &Path, a String, or various other types
2018-09-20 00:49:17	<--	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:49:19	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 00:49:42	<--	raingloom (raingloom@moz-tsmgd8.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-20 00:54:17	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 00:54:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 00:54:46	ibrokemypie	is it possible to create a variable from a copy of a pathbuf that has had a value pushed?
2018-09-20 00:54:58	-->	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has joined #rust-beginners
2018-09-20 00:54:58	ibrokemypie	like let newpath = oldpath.push("something");
2018-09-20 00:55:16	ibrokemypie	without actually changing oldpath
2018-09-20 00:55:42	@mbrubeck	ibrokemypie: let newpath = oldpath.join("something");
2018-09-20 00:55:55	ibrokemypie	what is the difference between push and join?
2018-09-20 00:56:15	@mbrubeck	`x.push(...)` modifies `x`
2018-09-20 00:56:28	@mbrubeck	`x.join(...)` does not modify `x`, and returns a new PathBuf
2018-09-20 00:56:39	ibrokemypie	ah
2018-09-20 00:56:41	ibrokemypie	thankyou
2018-09-20 00:57:10	@mbrubeck	You can see this from their signatures: `fn push(&mut self, path)` versus`fn join(&self, path) -> PathBuf`
2018-09-20 00:57:25	-->	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has joined #rust-beginners
2018-09-20 00:58:07	ibrokemypie	that makes sense
2018-09-20 00:58:17	ibrokemypie	thankyou for being so helpful, and everyone else
2018-09-20 00:58:47	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 00:58:49	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-20 00:58:50	ibrokemypie	I know I am very uh new and these things may be simple/obvious 
2018-09-20 01:01:07	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 01:01:09	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 01:01:36	<--	siddhartharao17 (siddharthar@moz-djprge.ae6v.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:02:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:02:47	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 01:05:04	<--	Tomo (Tomo@moz-83nf1l.dyn.optonline.net) has quit (Connection closed)
2018-09-20 01:05:19	<--	csos95 (quassel@moz-i83v25.f38e.oeqs.6000.2605.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:06:09	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-20 01:06:16	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-20 01:06:42	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 01:08:49	ibrokemypie	How can I force a variable to be copied rather than borrowed?
2018-09-20 01:10:39	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 01:11:14	ibrokemypie	eg let patch_path_string = patch_path.to_string_lossy();
2018-09-20 01:11:15	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:13:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 01:14:05	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 01:15:11	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-20 01:15:54	emerent	ibrokemypie: for std::cow::Cow, which is the return type there, you can use .into_owned()
2018-09-20 01:16:41	ibrokemypie	that works, thanks!
2018-09-20 01:16:54	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 01:18:33	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-20 01:19:48	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-09-20 01:20:09	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:20:12	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-20 01:20:38	-->	Raychen (Thunderbird@moz-14l.9q5.175.61.IP) has joined #rust-beginners
2018-09-20 01:21:19	<--	GreenJello (GreenJello@moz-ce1eb0.7di5.9nhv.8800.2600.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 01:21:24	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:21:37	<--	JAlbers (jalbers@moz-mmph78.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:22:34	ibrokemypie	can I have a <Vec>Pathbuf as my Ok result?
2018-09-20 01:23:28	ibrokemypie	ah
2018-09-20 01:23:34	ibrokemypie	it Vec<PathBuf>
2018-09-20 01:23:37	ibrokemypie	not the other way around
2018-09-20 01:25:27	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 01:25:45	-->	snowe (snowe@moz-jj7.kp8.58.172.IP) has joined #rust-beginners
2018-09-20 01:27:07	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 01:29:28	<--	federico_ (federico@moz-obq.vbi.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:30:47	<--	ibrokemypie (conor@moz-6p5.94d.130.144.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:32:03	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:32:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 01:33:26	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 01:33:27	-->	BrandonB (brandonb@moz-ba7u2q.1i16.sa7d.03c0.2601.IP) has joined #rust-beginners
2018-09-20 01:34:01	<--	AtumT (IRC@moz-mevkqt.gvt.net.br) has quit (Client exited)
2018-09-20 01:36:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:37:02	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 01:37:04	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 01:37:08	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 01:37:41	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 01:38:50	-->	csos95 (quassel@moz-i83v25.f38e.oeqs.6000.2605.IP) has joined #rust-beginners
2018-09-20 01:40:21	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-20 01:41:11	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:41:11	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:41:12	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:42:04	<--	emerent (emerentius@moz-0o8q0v.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-20 01:42:13	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:42:14	<--	snowe (snowe@moz-jj7.kp8.58.172.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:42:24	-->	emerent (emerentius@moz-0o8q0v.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 01:43:25	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 01:44:45	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 01:44:48	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 01:44:57	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-20 01:45:14	-->	yqrashawn (yqrashawn@moz-0m8iof.246.16clouds.com) has joined #rust-beginners
2018-09-20 01:47:56	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 01:50:43	-->	mib_p3rq1x (Mibbit@moz-m3vqa8.dynamic.ashlandfiber.net) has joined #rust-beginners
2018-09-20 01:51:59	mib_p3rq1x	Hey all. If I have a module that requires the use of std::collections::BTreeMap, which is currently used in 'main.rs', how should I let the new module use it? Do I copy and paste the use statement to the new module?
2018-09-20 01:52:08	<--	clarkema (clarkema@moz-vo1829.karoo.kcom.com) has quit (Client exited)
2018-09-20 01:52:26	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 01:52:50	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-20 01:55:18	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-20 01:57:05	emerent	mib_p3rq1x: yes
2018-09-20 01:57:18	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 01:57:56	<--	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:58:07	-->	mr_pants (Mibbit@moz-dtt.4d8.214.186.IP) has joined #rust-beginners
2018-09-20 01:58:07	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 01:58:37	<--	mr_pants (Mibbit@moz-dtt.4d8.214.186.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 01:58:55	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:58:59	<--	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 01:59:02	mib_p3rq1x	emerent: ty
2018-09-20 01:59:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 02:00:10	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Quit: Leaving)
2018-09-20 02:02:38	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 02:04:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:04:08	<--	mib_p3rq1x (Mibbit@moz-m3vqa8.dynamic.ashlandfiber.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 02:04:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 02:05:07	-->	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has joined #rust-beginners
2018-09-20 02:05:35	-->	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has joined #rust-beginners
2018-09-20 02:06:40	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 02:06:47	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-20 02:08:20	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 02:09:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:09:51	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 02:10:20	-->	insidious (insidious@moz-cfo.dfl.198.134.IP) has joined #rust-beginners
2018-09-20 02:12:50	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 02:16:08	<--	xionbox (chris@moz-ngl9v3.co.comcast.net) has quit (Quit: Konversation terminated!)
2018-09-20 02:16:45	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 02:18:32	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 02:19:53	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-20 02:21:05	-->	gx (gx@moz-1bj.d2d.148.61.IP) has joined #rust-beginners
2018-09-20 02:23:03	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 02:23:07	-->	starblue1 (juergen@moz-7qvrtj.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-20 02:23:44	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 02:24:01	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:24:08	<--	starblue (juergen@moz-gn47vv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-20 02:25:12	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-20 02:25:35	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 02:27:20	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:27:33	-->	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 02:27:39	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 02:27:41	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-20 02:28:44	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 02:29:19	-->	findow (Mibbit@moz-ip8.ken.245.114.IP) has joined #rust-beginners
2018-09-20 02:29:28	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 02:29:39	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 02:30:16	<--	findow (Mibbit@moz-ip8.ken.245.114.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 02:32:30	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-20 02:33:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:34:07	-->	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has joined #rust-beginners
2018-09-20 02:39:11	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 02:39:17	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 02:39:19	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 02:39:22	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 02:40:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 02:41:37	<--	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 02:42:23	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 02:42:50	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-20 02:43:26	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:43:26	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:43:26	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:43:35	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 02:43:43	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 02:43:47	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 02:44:07	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-20 02:44:19	<--	csos95 (quassel@moz-i83v25.f38e.oeqs.6000.2605.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 02:44:26	<--	avnsgt (avnsgt@moz-9da.2ik.141.35.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 02:44:38	<--	weeji (jihi@moz-7v6mv3.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 02:45:15	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-20 02:46:44	<--	gx (gx@moz-1bj.d2d.148.61.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 02:47:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:47:29	<--	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:48:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 02:48:36	<--	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:49:00	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:49:15	-->	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has joined #rust-beginners
2018-09-20 02:49:15	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-20 02:49:32	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 02:49:35	-->	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has joined #rust-beginners
2018-09-20 02:49:41	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-20 02:50:47	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-20 02:50:55	-->	curious (s34n@moz-p45.d19.76.208.IP) has joined #rust-beginners
2018-09-20 02:51:12	-->	sertsa (sertsa@moz-bcd.isa.39.69.IP) has joined #rust-beginners
2018-09-20 02:52:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:53:43	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:54:03	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 02:54:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 02:54:39	<--	liquidnight (marcus@moz-cn1qj8.9p6n.ja0r.0c22.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 02:56:32	-->	alx741 (alx741@moz-ckg.k67.178.186.IP) has joined #rust-beginners
2018-09-20 02:57:21	-->	weeji (jihi@moz-bc8pd7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 02:58:27	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 02:58:35	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-20 02:59:26	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 02:59:43	-->	raytiley (sid13397@moz-bp0l5n.highgate.irccloud.com) has joined #rust-beginners
2018-09-20 02:59:46	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 03:00:43	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-20 03:01:07	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 03:01:41	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 03:02:54	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-20 03:03:44	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 03:04:16	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 03:04:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 03:05:40	-->	Mateon2 (Thunderbird@moz-m1al4c.supernova.orange.pl) has joined #rust-beginners
2018-09-20 03:05:45	<--	Mateon1 (Thunderbird@moz-5fg5fi.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-20 03:05:45	--	Mateon2 is now known as Mateon1
2018-09-20 03:08:05	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-20 03:08:40	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-20 03:08:40	-->	ufobat___ (Martin@moz-b6u4od.dyn.telefonica.de) has joined #rust-beginners
2018-09-20 03:09:16	-->	liquidnight (marcus@moz-a7hfpg.305i.abqi.0c22.2a01.IP) has joined #rust-beginners
2018-09-20 03:09:47	-->	neal (neal@moz-68os61.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 03:09:57	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 03:11:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 03:11:57	<--	ufobat_ (Martin@moz-fqqmc8.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-20 03:12:44	<--	neal_ (neal@moz-v55u2f.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 03:12:52	-->	xorrox (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 03:13:48	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 03:14:28	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 03:18:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 03:19:51	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-20 03:20:13	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 03:21:05	-->	slimer (Mibbit@moz-puh36u.dynamic.sonic.net) has joined #rust-beginners
2018-09-20 03:21:07	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-20 03:22:47	slimer	What is the difference between a have a bunch of references to something and Rc ?
2018-09-20 03:23:51	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-20 03:24:03	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 03:24:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 03:24:41	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 03:26:03	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 03:27:18	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 03:30:00	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 03:30:22	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 03:31:06	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 03:31:44	<--	BrandonB (brandonb@moz-ba7u2q.1i16.sa7d.03c0.2601.IP) has quit (Connection closed)
2018-09-20 03:32:29	<--	liquidnight (marcus@moz-a7hfpg.305i.abqi.0c22.2a01.IP) has quit (Connection closed)
2018-09-20 03:32:34	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 03:32:35	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-20 03:32:56	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-20 03:33:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 03:33:35	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-20 03:34:51	raytiley	anyone have guidance on getting gdb working with rust on windows
2018-09-20 03:35:13	raytiley	i'm using the stable-gnu toolchain and I installed the mingw64 packages
2018-09-20 03:35:41	raytiley	but gdb is still complaining that the binary "not in executable format"
2018-09-20 03:37:04	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-20 03:37:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 03:38:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 03:38:19	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-20 03:40:47	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 03:41:49	-->	simonada_ (simonadamei@moz-6kabe3.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-20 03:42:00	<--	proc (aron@moz-vjmr32.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-20 03:42:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 03:43:59	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 03:44:44	<--	simonadameit (simonadamei@moz-v816vu.7nsu.elfl.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 03:45:19	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 03:45:59	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 03:51:11	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 03:52:02	<--	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-20 03:53:14	-->	subhojit777 (subhojit777@moz-7mp.lbo.227.110.IP) has joined #rust-beginners
2018-09-20 03:53:48	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-20 03:55:16	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-20 03:55:42	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 03:56:59	<--	slimer (Mibbit@moz-puh36u.dynamic.sonic.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 03:59:51	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-20 04:01:13	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 04:01:22	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 04:05:23	<--	defarge (quassel@moz-1aql46.res.spectrum.com) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-20 04:05:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:05:53	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 04:06:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 04:07:25	-->	defarge (quassel@moz-1aql46.res.spectrum.com) has joined #rust-beginners
2018-09-20 04:11:05	-->	cp (cp@moz-fresc2.asahinet.com) has joined #rust-beginners
2018-09-20 04:11:36	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 04:12:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:16:08	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 04:16:22	-->	siddhartharao17 (siddharthar@moz-k1p.sr5.107.128.IP) has joined #rust-beginners
2018-09-20 04:16:49	-->	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 04:18:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 04:20:16	<--	siddhartharao17 (siddharthar@moz-k1p.sr5.107.128.IP) has quit (Connection closed)
2018-09-20 04:21:01	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 04:21:47	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 04:21:48	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 04:21:49	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 04:23:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:23:40	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 04:24:34	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-20 04:25:55	<--	yqrashawn (yqrashawn@moz-0m8iof.246.16clouds.com) has quit (Client exited)
2018-09-20 04:26:19	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 04:27:05	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 04:27:07	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 04:27:10	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 04:27:55	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 04:29:35	<--	sertsa (sertsa@moz-bcd.isa.39.69.IP) has quit (Quit: Leaving)
2018-09-20 04:30:18	-->	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 04:30:18	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Connection closed)
2018-09-20 04:30:24	<--	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 04:30:25	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 04:31:14	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:31:14	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:31:14	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:31:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 04:31:59	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 04:32:26	<--	dmc (dmc@moz-9c65la.fios.verizon.net) has quit (Quit: WeeChat 2.2)
2018-09-20 04:32:43	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 04:33:11	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-20 04:35:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:36:10	-->	dmc (dmc@moz-9c65la.fios.verizon.net) has joined #rust-beginners
2018-09-20 04:36:40	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-20 04:37:15	BearOfJade	Hey, how would i go about deserializing one struct into many different JSON formats?
2018-09-20 04:38:46	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-20 04:41:40	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-20 04:42:01	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-20 04:42:25	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 04:42:54	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:44:50	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-20 04:46:03	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:46:57	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 04:47:24	<--	Guest4641 (nj0rd@moz-i74f48.dip.versatel-1u1.de) has quit (Ping timeout: 121 seconds)
2018-09-20 04:48:22	<--	insidious (insidious@moz-cfo.dfl.198.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 04:48:43	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-20 04:48:52	<--	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 04:49:19	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:51:20	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 04:52:47	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 04:56:38	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 04:57:15	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-20 04:57:18	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 04:57:55	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-20 05:00:09	-->	Guest4641 (nj0rd@moz-fh4l3b.dip.versatel-1u1.de) has joined #rust-beginners
2018-09-20 05:01:17	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-20 05:01:22	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 05:02:07	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 05:03:01	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 05:03:34	-->	jdhorwitz (sid307004@moz-989ngn.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-20 05:04:24	-->	chevybowtie (chevybowtie@moz-cdr.eph.10.99.IP) has joined #rust-beginners
2018-09-20 05:06:37	-->	sgift_ (madison@moz-jakjsg.7tqg.ttkk.0a61.2001.IP) has joined #rust-beginners
2018-09-20 05:07:32	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 05:10:02	<--	sgift (madison@moz-s8918e.7tqg.ttkk.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 05:10:06	<--	alx741 (alx741@moz-ckg.k67.178.186.IP) has quit (Client exited)
2018-09-20 05:11:46	<--	chevybowtie (chevybowtie@moz-cdr.eph.10.99.IP) has left #rust-beginners
2018-09-20 05:12:24	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 05:12:58	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 05:13:09	<--	subhojit777 (subhojit777@moz-7mp.lbo.227.110.IP) has quit (Quit: Leaving)
2018-09-20 05:13:12	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 05:14:06	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 05:15:52	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Connection closed)
2018-09-20 05:16:09	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 05:16:48	-->	siddhartharao17 (siddharthar@moz-0rtq0v.ca.comcast.net) has joined #rust-beginners
2018-09-20 05:17:43	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 05:20:12	-->	eibwen (eibwen@moz-9kbrpu.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 05:23:21	-->	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 05:23:26	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 05:25:09	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-20 05:27:23	<--	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 05:27:56	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 05:29:50	-->	mr_trousers (Mibbit@moz-55c.icm.127.174.IP) has joined #rust-beginners
2018-09-20 05:30:07	<--	mr_trousers (Mibbit@moz-55c.icm.127.174.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 05:32:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 05:32:27	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-20 05:33:37	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 05:34:28	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 05:34:51	-->	saurabhs_ (popopop@moz-rmq.7h6.141.14.IP) has joined #rust-beginners
2018-09-20 05:35:05	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 05:35:24	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 05:35:49	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-20 05:36:37	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 05:36:50	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 05:36:52	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 05:38:32	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 05:40:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 05:40:16	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 05:41:00	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-20 05:44:11	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 05:45:42	<--	dalley_ (dalley@moz-147tel.dyn6.twc.com) has quit (Connection closed)
2018-09-20 05:45:54	-->	dalley_ (dalley@moz-147tel.dyn6.twc.com) has joined #rust-beginners
2018-09-20 05:47:15	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 05:48:04	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 05:48:11	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 05:48:30	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-20 05:48:44	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 05:49:53	<--	xorrox (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 05:52:18	-->	keb (kebe@moz-gn3irk.res.rr.com) has joined #rust-beginners
2018-09-20 05:54:26	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 05:55:02	<--	keb (kebe@moz-gn3irk.res.rr.com) has quit (Connection closed)
2018-09-20 05:55:30	<--	curious (s34n@moz-p45.d19.76.208.IP) has quit (Quit: Leaving)
2018-09-20 05:56:13	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-20 05:58:45	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-20 05:58:57	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 06:00:30	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 06:00:35	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-20 06:01:13	swalladge	BearOfJade: what do you mena by different json formats/
2018-09-20 06:02:23	swalladge	does anyone know of work being done to make it easier to represent graph data structures? eg. for trees, linked lists, etc. it seems to be famously difficult, and in my limited experience difficult to make something neat for this
2018-09-20 06:02:28	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-20 06:02:46	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-20 06:04:22	-->	gamakichi (Mibbit@moz-t5tun0.bchsia.telus.net) has joined #rust-beginners
2018-09-20 06:04:37	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 06:04:49	<--	gamakichi (Mibbit@moz-t5tun0.bchsia.telus.net) has left #rust-beginners
2018-09-20 06:06:02	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 06:06:28	-->	Aqo (Aqo@moz-11t4ij.inter.net.il) has joined #rust-beginners
2018-09-20 06:06:52	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 06:08:12	scottmcm	swalladge: depends exactly what you mean.  A singly-linked list is pretty easy.  A cyclic graph, of course, isn't.
2018-09-20 06:08:41	swalladge	at the moment i'm learning parsing and trying to implement an ast
2018-09-20 06:09:08	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 06:09:38	scottmcm	Those are trees, so should be fine in normal rust without doing anything complicated.
2018-09-20 06:09:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 06:10:00	swalladge	yes it's fine, but can i do better than this: https://play.rust-lang.org/?gist=23a526ba5bf62b0cba8bee3466f9f810&version=stable&mode=debug&edition=2015 ? :)
2018-09-20 06:10:04	<--	siddhartharao17 (siddharthar@moz-0rtq0v.ca.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 06:10:54	scottmcm	like here's the compiler's AST node for a block: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/hir/struct.Block.html
2018-09-20 06:12:27	swalladge	ok, so what i have is similar i guess
2018-09-20 06:12:28	scottmcm	something like that is what I'd expect, yes.  (Slightly differently laid out, perhaps, but...)
2018-09-20 06:12:38	swalladge	cool thanks :)
2018-09-20 06:13:17	swalladge	it seems a bit redundant requiring the enum variants to be just wrappers for the structs. it would be neater to just bunch the structs together
2018-09-20 06:13:38	swalladge	maybe they could all share a common trait? would that work
2018-09-20 06:13:44	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-20 06:14:27	scottmcm	Hmm, maybe this example might be more interesting: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/hir/enum.ExprKind.html
2018-09-20 06:14:47	scottmcm	it didn't make structs for `While` and `Loop` and etc; just variants
2018-09-20 06:14:50	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 06:14:51	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 06:14:51	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 06:14:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 06:14:54	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 06:15:15	scottmcm	that said, enums that just wrap structs are a perfectly good pattern when appropriate.  Usual example from std: https://doc.rust-lang.org/std/net/enum.IpAddr.html
2018-09-20 06:15:36	scottmcm	one can certainly store `Box<dyn CommonTrait>`, OOP-style
2018-09-20 06:15:50	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-20 06:16:03	scottmcm	though generally for AST stuff I find the enums layout better than the OOP layout
2018-09-20 06:16:21	scottmcm	since in the OOP style you end up making visitors to write the code enum-like anyway...
2018-09-20 06:16:41	swalladge	yeah i come from python, so i originally tried with common traits but i got stuck pretty quickly
2018-09-20 06:16:55	swalladge	the enums seems more idiomatic for rust i guess
2018-09-20 06:17:10	scottmcm	I think everyone who comes from python or ruby or java or C# or ... hits that problem at least once :)
2018-09-20 06:18:09	swalladge	ok
2018-09-20 06:18:14	swalladge	thanks for your help :)
2018-09-20 06:19:01	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 06:19:01	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 06:19:01	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 06:19:22	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 06:20:57	scottmcm	swalladge: BTW, you've looked through https://doc.rust-lang.org/book/second-edition/ch17-00-oop.html, right?
2018-09-20 06:22:27	swalladge	yep
2018-09-20 06:23:40	swalladge	i actually find i prefer using the type system and other idioms over the oop patterns
2018-09-20 06:23:52	scottmcm	:)
2018-09-20 06:24:02	swalladge	i think i still think about problems from a oop perspective though
2018-09-20 06:24:25	swalladge	rust is the first non oop language i've really gone into
2018-09-20 06:24:30	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 06:25:02	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 06:26:28	swalladge	(well first language that doesn't promote standard oo design in the way that python or java do)
2018-09-20 06:27:09	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 06:27:19	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-20 06:27:24	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 06:27:30	-->	xet7 (xet7@moz-i703qr.rev.dnainternet.fi) has joined #rust-beginners
2018-09-20 06:28:45	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 06:29:13	-->	Aankhen`` (notasquid@moz-inm.am1.207.49.IP) has joined #rust-beginners
2018-09-20 06:29:33	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 06:30:08	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-20 06:30:40	-->	oms (oms@moz-vr3thd.dyn.telefonica.de) has joined #rust-beginners
2018-09-20 06:30:51	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 06:31:20	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 06:31:58	<--	sgift_ (madison@moz-jakjsg.7tqg.ttkk.0a61.2001.IP) has quit (Quit: Leaving)
2018-09-20 06:32:08	-->	sgift (madison@moz-jakjsg.7tqg.ttkk.0a61.2001.IP) has joined #rust-beginners
2018-09-20 06:34:20	-->	himi (sjjf@moz-e6bo53.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-20 06:35:08	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 06:35:16	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 06:35:33	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:35:50	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:36:00	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 06:36:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 06:36:20	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:36:35	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:37:07	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:37:21	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:37:54	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:38:11	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:38:41	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:38:56	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:39:27	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:39:43	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:40:14	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:40:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 06:40:26	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Quit: Windmills do not work that way! Good night!)
2018-09-20 06:40:30	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:40:39	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-20 06:40:46	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Connection closed)
2018-09-20 06:40:56	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-20 06:41:01	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:41:12	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:41:48	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:41:59	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:42:35	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:42:46	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-20 06:43:22	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 06:45:40	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 06:46:26	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Quit: Leaving)
2018-09-20 06:47:07	-->	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has joined #rust-beginners
2018-09-20 06:47:31	<--	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 06:47:40	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-20 06:48:29	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-20 06:48:47	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-20 06:49:17	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-20 06:50:12	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 06:54:36	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Ping timeout: 121 seconds)
2018-09-20 06:55:25	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-20 06:56:02	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 06:56:22	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-20 06:57:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 07:00:33	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:00:58	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 07:01:23	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 07:02:59	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
2018-09-20 07:04:04	<--	mandeep (mandeep@moz-6mck0m.dyn.columbia.edu) has quit (Quit: Leaving)
2018-09-20 07:06:15	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 07:09:02	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-20 07:10:46	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:12:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 07:13:05	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-20 07:14:12	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-20 07:16:16	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-20 07:16:20	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2018-09-20 07:16:27	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 07:16:53	<--	zmt00 (zmt@moz-8b1cmm.ca.comcast.net) has quit (Connection closed)
2018-09-20 07:16:53	<--	burntsushi (burntsushi@moz-5ubve6.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-20 07:17:23	<--	QwertyDragon_ (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-20 07:17:38	<--	artfwo (artfwo@moz-o84.s9i.120.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:19:35	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-20 07:20:59	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:21:45	-->	agurenko (agurenko@moz-9stq81.red.bezeqint.net) has joined #rust-beginners
2018-09-20 07:22:31	-->	zmt00 (zmt@moz-8b1cmm.ca.comcast.net) has joined #rust-beginners
2018-09-20 07:25:31	<--	agurenko (agurenko@moz-9stq81.red.bezeqint.net) has quit (Quit: Konversation terminated!)
2018-09-20 07:26:40	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 07:26:54	-->	don_quijote-M (donquijote@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-20 07:26:55	<--	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-20 07:27:46	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 07:30:32	<--	don_quijote-M (donquijote@moz-522p1u.matrix.org) has left #rust-beginners ("User left")
2018-09-20 07:30:58	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-20 07:31:11	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:32:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 07:36:26	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:36:42	-->	holmgr (holmgr@moz-iib.qja.115.213.IP) has joined #rust-beginners
2018-09-20 07:36:52	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 07:36:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 07:37:36	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 07:38:28	-->	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 07:39:43	-->	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has joined #rust-beginners
2018-09-20 07:40:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 07:42:30	<--	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:42:53	-->	raingloom (raingloom@moz-jvofbt.pool.telekom.hu) has joined #rust-beginners
2018-09-20 07:44:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 07:46:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 07:46:33	-->	Undead_Leech_ (Mibbit@moz-l4h.nt9.200.195.IP) has joined #rust-beginners
2018-09-20 07:47:19	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 07:48:31	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:49:37	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-20 07:49:53	-->	bugweiser (Mibbit@moz-jpg.gc8.156.182.IP) has joined #rust-beginners
2018-09-20 07:50:05	-->	tsal (tsal@moz-q57g96.versanet.de) has joined #rust-beginners
2018-09-20 07:50:31	bugweiser	how can i install Xi editor
2018-09-20 07:50:40	bugweiser	on mac os
2018-09-20 07:51:06	<--	bugweiser (Mibbit@moz-jpg.gc8.156.182.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 07:51:51	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 07:52:31	<--	tsal_ (tsal@moz-6i8a15.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-20 07:54:58	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-20 07:55:35	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 07:56:42	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 07:56:57	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 07:57:40	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 07:57:41	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-20 07:58:01	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Connection closed)
2018-09-20 07:58:12	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 07:59:00	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 08:00:28	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-20 08:01:32	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-20 08:01:55	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-20 08:02:11	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 08:02:36	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 08:02:38	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 08:02:39	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 08:04:23	-->	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has joined #rust-beginners
2018-09-20 08:04:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 08:04:30	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-20 08:05:37	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 08:06:45	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 08:06:45	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 08:06:45	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 08:07:52	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 08:08:45	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 08:09:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 08:12:23	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 08:13:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 08:13:50	<--	LupusNoctu (kd0bpv@moz-jnjrvn.gp7d.hicc.0100.2602.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 08:14:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 08:15:29	-->	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has joined #rust-beginners
2018-09-20 08:15:58	-->	dalley__ (dalley@moz-5ib9oe.res.spectrum.com) has joined #rust-beginners
2018-09-20 08:16:01	-->	paulvt (paul.van.ti@moz-5svlqa.fb56.nn7d.a446.2a02.IP) has joined #rust-beginners
2018-09-20 08:16:23	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 08:16:50	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 08:17:20	<--	dalley_ (dalley@moz-147tel.dyn6.twc.com) has quit (Connection closed)
2018-09-20 08:18:05	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 08:19:58	-->	kermi (Mibbit@moz-3md.nmj.249.211.IP) has joined #rust-beginners
2018-09-20 08:20:06	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 08:20:08	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 08:20:12	kermi	안녕하세요:)
2018-09-20 08:20:31	<--	kermi (Mibbit@moz-3md.nmj.249.211.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 08:21:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 08:21:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 08:22:18	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 08:22:38	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 08:22:57	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Connection closed)
2018-09-20 08:23:33	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-20 08:24:32	<--	simonada_ (simonadamei@moz-6kabe3.dynamic.mnet-online.de) has quit (Connection closed)
2018-09-20 08:25:22	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 08:26:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 08:26:46	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 08:28:18	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 08:28:45	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 08:29:37	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 08:32:12	-->	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has joined #rust-beginners
2018-09-20 08:32:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 08:32:42	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-20 08:32:48	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 08:33:40	-->	burntsushi (burntsushi@moz-d74nei.fios.verizon.net) has joined #rust-beginners
2018-09-20 08:33:40	--	Mode #rust-beginners [+o burntsushi] by ChanServ
2018-09-20 08:35:40	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-20 08:35:42	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-09-20 08:36:12	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 08:36:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 08:38:30	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 08:39:17	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 08:40:19	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-20 08:41:59	-->	liquidnight (marcus@moz-a7hfpg.305i.abqi.0c22.2a01.IP) has joined #rust-beginners
2018-09-20 08:43:27	-->	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has joined #rust-beginners
2018-09-20 08:45:28	-->	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-20 08:45:30	<--	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has quit (Quit: leaving)
2018-09-20 08:45:35	-->	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-20 08:46:07	-->	somewone (somewone@moz-rg0.h2s.113.141.IP) has joined #rust-beginners
2018-09-20 08:47:11	-->	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has joined #rust-beginners
2018-09-20 08:48:08	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-20 08:48:25	-->	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-20 08:48:57	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 08:49:50	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-20 08:50:04	-->	fsasm (fsasm@moz-5fd.qra.178.62.IP) has joined #rust-beginners
2018-09-20 08:51:05	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 08:51:30	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 08:51:35	-->	vegai (vegai@moz-l9ee3p.clients.your-server.de) has joined #rust-beginners
2018-09-20 08:53:28	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 08:55:14	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 08:57:13	-->	justsomequestions (gumble@moz-pvkhrr.wlan.uni-bonn.de) has joined #rust-beginners
2018-09-20 08:57:21	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 08:58:36	<--	maarten (maartenBE@moz-61h3to.access.telenet.be) has quit (Connection closed)
2018-09-20 08:59:12	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 08:59:14	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 08:59:18	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 08:59:18	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 09:00:04	-->	maarten (maartenBE@moz-p01hcr.access.telenet.be) has joined #rust-beginners
2018-09-20 09:03:49	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 09:04:27	-->	laalaa (asdf@moz-vfjfm8.dhcp.inet.fi) has joined #rust-beginners
2018-09-20 09:07:41	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:07:46	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:07:49	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:09:32	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 09:12:17	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:12:49	<--	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-20 09:13:58	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-20 09:14:02	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 09:14:16	<--	justsomequestions (gumble@moz-pvkhrr.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-20 09:19:22	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 09:19:22	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 09:19:24	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 09:20:01	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 09:20:09	gnzlbg	how can I document in the API docs that a function, impl, method, mod, etc. is only available when my crate is compiled with a particular feature enabled ?
2018-09-20 09:20:18	-->	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has joined #rust-beginners
2018-09-20 09:21:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 09:23:31	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:23:31	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:23:32	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:23:48	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-20 09:24:16	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 09:25:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:26:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 09:26:38	Aceeri_	gnzlbg: Could just leave a note, I don't know if there is anything special for it (although note you will need to build docs with --all-features for it to even appear
2018-09-20 09:26:48	<--	emerent (emerentius@moz-0o8q0v.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 09:27:09	-->	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 09:27:22	Aceeri_	misdreavus: you might be interested in this
2018-09-20 09:29:09	gnzlbg	Aceeri_: yes i build the docs with all features
2018-09-20 09:29:28	gnzlbg	but sometimes users not using a feature get confused because something that the docs say exists, does not
2018-09-20 09:29:49	Aceeri_	yeah, might be useful to have an automated note on top of it
2018-09-20 09:29:55	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 09:29:58	Aceeri_	if that is even possibly
2018-09-20 09:30:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:30:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 09:32:12	<--	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 09:33:31	-->	dler (Mibbit@moz-01h.ms3.12.31.IP) has joined #rust-beginners
2018-09-20 09:34:28	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 09:36:52	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-20 09:36:58	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-20 09:37:31	<--	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:37:49	-->	travistrue (Mibbit@moz-jcdgej.lv.cox.net) has joined #rust-beginners
2018-09-20 09:37:59	<--	niconii (nicole@moz-000g7g.midco.net) has quit (Quit: leaving)
2018-09-20 09:38:03	travistrue	Hey guys!
2018-09-20 09:38:58	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 09:39:35	dler	(Imagine the H-word here)! Quick question: Why is `self` still mutably borrowed at the end of the function? No reference survives the `match`-statement, which returns `()` too: https://play.rust-lang.org/?gist=73fda27f37a9ce441e60c547ec95df80&version=stable&mode=debug&edition=2015
2018-09-20 09:39:36	-->	mib_5d42xu (Mibbit@moz-8gc.477.93.111.IP) has joined #rust-beginners
2018-09-20 09:39:50	-->	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has joined #rust-beginners
2018-09-20 09:40:08	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 09:40:52	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 09:42:42	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-20 09:43:02	travistrue	Hey dler. I'm still learning borrowing myself, but judging by your code, it looks like execution continues after the match statement during the "None" case.
2018-09-20 09:43:02	-->	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has joined #rust-beginners
2018-09-20 09:43:46	travistrue	That said, the self reference in get_mut_or_insert() should still be valid since its lifetime is for the entire scope of the get_mut_or_insert() until it returns.
2018-09-20 09:43:52	dler	Yes. That's true. I already tried to change the code to get the borrow checker accept it, and this a form where I don't understand why it's going off.
2018-09-20 09:44:46	travistrue	Oh, I see now. My bad!
2018-09-20 09:44:58	travistrue	I'll play around with it, and see if I can figure something out.
2018-09-20 09:45:11	Aceeri_	I think it is because it wants the same lifetime for both returns
2018-09-20 09:45:46	Aceeri_	but yeah I'm kind of confused as well
2018-09-20 09:46:05	<--	mib_5d42xu (Mibbit@moz-8gc.477.93.111.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 09:46:07	dler	travistrue: `self.get_mut()` returns a mutable borrow based upon the mutable reference of `self`, thereby invalidating it. So `self.get_mut().unwrap_or_else(|| { self.val = Some(()); self.val.as_mut().unwrap() })` doesn't work for a good reason.
2018-09-20 09:46:09	Aceeri_	because technically you are borrowing self.get_mut for the entire function
2018-09-20 09:46:12	-->	GreenJello (GreenJello@moz-hrncfv.7di5.9nhv.8800.2600.IP) has joined #rust-beginners
2018-09-20 09:46:18	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-20 09:46:30	-->	zako (zako@moz-qn0.jpe.241.150.IP) has joined #rust-beginners
2018-09-20 09:46:46	dler	But no reference (except `&mut self` of course) survives the match-statement: The return type doesn't carry a lifetime.
2018-09-20 09:47:04	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-20 09:47:21	dler	And no lifetime-bound types leak into variables either (because there aren't any).
2018-09-20 09:47:50	dler	Therefor, the borrow checker should theoretically allow using the original reference to `self` again.
2018-09-20 09:48:22	<--	blackgoat (blackgoat@moz-jh3.cup.194.211.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 09:48:46	dler	This is the same reasoning behind https://play.rust-lang.org/?gist=13d46f79352510ecb1a42a96e553884f&version=stable&mode=debug&edition=2015 working.
2018-09-20 09:48:53	-->	elichai2 (uid212594@moz-racuhj.highgate.irccloud.com) has joined #rust-beginners
2018-09-20 09:49:29	Aceeri_	the return type *does* have a lifetime
2018-09-20 09:49:31	Aceeri_	its just inferred
2018-09-20 09:49:34	dler	I use the mutable reference twice, but since I discard everything that would keep the sub-references alive, it works.
2018-09-20 09:49:56	Aceeri_	I think this is technically valid but rust should be smart enough to realize that return val; is the end of the scope as well?
2018-09-20 09:49:58	dler	Aceeri_: Yes, and it could be the case that this is the reason.
2018-09-20 09:49:58	Aceeri_	https://play.rust-lang.org/?gist=f72872e2c6337e27daad8329d7e363e1&version=nightly&mode=debug&edition=2015
2018-09-20 09:49:59	Aceeri_	this works
2018-09-20 09:50:17	dler	But why would the return type be seen as "in scope"?
2018-09-20 09:50:20	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-20 09:50:29	Aceeri_	I'm not sure
2018-09-20 09:50:34	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 09:51:08	dler	The return allows me to limit the reference escaping the match statement. No reference but `self` exists after it.
2018-09-20 09:51:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-20 09:51:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 09:51:41	<--	zako (zako@moz-qn0.jpe.241.150.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 09:51:45	dler	Aceeri_: That specific example works, but isn't compatible with what I'm actually trying to do.
2018-09-20 09:51:54	Aceeri_	then what are you trying to actually do
2018-09-20 09:53:07	<--	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has quit (Client exited)
2018-09-20 09:54:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-20 09:54:08	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 09:55:06	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 09:55:11	<--	Raychen (Thunderbird@moz-14l.9q5.175.61.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 09:55:59	dler	Aceeri_: https://play.rust-lang.org/?gist=ef5421b1f1a94f49c4c1899d98c489c6&version=stable&mode=debug&edition=2015
2018-09-20 09:56:57	dler	Unless I want to use macros to copy the code into both functions, I need to solve the original problem without relying on `()` always being the same.
2018-09-20 09:57:03	dler	Which you did in your example.
2018-09-20 09:57:12	dler	Oh wait, you didn't.
2018-09-20 09:57:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-20 09:57:57	-->	Raychen (Thunderbird@moz-14l.9q5.175.61.IP) has joined #rust-beginners
2018-09-20 09:58:16	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 09:58:24	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-20 09:59:12	Aceeri_	why do you need the match there?
2018-09-20 09:59:49	dler	I don't, I'd usually use `self.get_mut(name).unwrap_or_else(|| ...)`.
2018-09-20 10:00:05	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-20 10:00:06	-->	ishan_bhatt (Mibbit@moz-9t6.4mf.93.111.IP) has joined #rust-beginners
2018-09-20 10:00:06	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 10:00:38	dler	But that upsets the borrow checker for a good reason, because `self.get_mut(name)` has the lifetime of self associated to it.
2018-09-20 10:00:46	-->	burntsushi__ (burntsushi@moz-3hr4t7.fios.verizon.net) has joined #rust-beginners
2018-09-20 10:00:57	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 10:01:02	dler	But `()` doesn't. How would it?
2018-09-20 10:01:21	<--	ishan_bhatt (Mibbit@moz-9t6.4mf.93.111.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 10:01:42	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 10:02:41	<--	burntsushi (burntsushi@moz-d74nei.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-20 10:02:56	-->	justsomequestions (gumble@moz-pvkhrr.wlan.uni-bonn.de) has joined #rust-beginners
2018-09-20 10:03:19	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-20 10:03:24	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 10:03:28	<--	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-20 10:05:10	Aceeri_	well it isn't just () its &mut ()
2018-09-20 10:05:28	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 10:05:57	dler	No, it isn't.
2018-09-20 10:06:12	dler	For `Some`, it never exits the match-statement normally, but returns.
2018-09-20 10:06:20	dler	For `None`, it returns `()`.
2018-09-20 10:06:31	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 10:06:37	Aceeri_	oh that ()
2018-09-20 10:07:18	<--	dforsyth (dforsyth@moz-bkf.b9q.241.192.IP) has quit (Connection closed)
2018-09-20 10:08:03	<--	ajd (ajd@moz-ldd7ol.fs1g.619c.a880.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 10:08:07	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 10:08:16	-->	dforsyth (dforsyth@moz-bkf.b9q.241.192.IP) has joined #rust-beginners
2018-09-20 10:09:42	dler	This seems to be a known issue.
2018-09-20 10:10:10	dler	With no safe solutions that don't make it slow.
2018-09-20 10:10:22	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (Quit: Leaving)
2018-09-20 10:10:24	-->	ajd (ajd@moz-ldd7ol.fs1g.619c.a880.2604.IP) has joined #rust-beginners
2018-09-20 10:10:26	Aceeri_	I'm not sure why you need the match in the first place though
2018-09-20 10:11:08	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 10:11:34	Aceeri_	why not just https://play.rust-lang.org/?gist=f5b1cceb895090eda7ea217a8616f45b&version=stable&mode=debug&edition=2015
2018-09-20 10:12:09	dler	See the comment in the `get_mut` function: "+ extra work for getting the value out of parent namespaces if it isn't here"
2018-09-20 10:13:06	dler	What you did is equivalent, but ignores that there is other stuff going on in the real code I'm working on.
2018-09-20 10:13:32	dler	I'm just going to copy half of `get_mut` into `get_mut_or_insert`, not the best solution, but at least it works.
2018-09-20 10:14:41	Aceeri_	Is there any reason you can't post the entire solution as it is now?
2018-09-20 10:15:20	Aceeri_	mostly dealing with the XY problem in trying to figure out a solution here
2018-09-20 10:15:39	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 10:17:13	dler	https://play.rust-lang.org/?gist=764e988cb8167aea7a3e3a65b1fe20d1&version=stable&mode=debug&edition=2015
2018-09-20 10:20:51	<--	cjm (c@moz-emva34.1n99.j5ei.0281.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 10:21:22	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 10:21:59	<--	justsomequestions (gumble@moz-pvkhrr.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-20 10:22:48	-->	cjm (c@moz-0mn.m4j.8.24.IP) has joined #rust-beginners
2018-09-20 10:24:13	dler	Aceeri_: My solution: https://play.rust-lang.org/?gist=764e988cb8167aea7a3e3a65b1fe20d1&version=stable&mode=debug&edition=2015
2018-09-20 10:24:44	dler	It works, but I think the reason why I wanted to not do that is obvious. This isn't really readable.
2018-09-20 10:25:35	<--	space-wizard (space-wizar@moz-en26sh.customer.broadstripe.net) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2018-09-20 10:25:35	dler	So in the end, as there is no good solution, it was kind of an XY problem, but one I already knew the solution to.
2018-09-20 10:25:53	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 10:26:12	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 10:27:53	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 10:30:05	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 10:30:27	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 10:30:53	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 10:31:33	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 10:31:54	-->	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has joined #rust-beginners
2018-09-20 10:32:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 10:32:39	gnzlbg	I have a slice &[T], and a wrapper over a slice pub struct Wrapper([T])
2018-09-20 10:32:53	gnzlbg	I want to convert a &[T] into a &Wrapper
2018-09-20 10:33:02	gnzlbg	how do i do that ?
2018-09-20 10:33:46	-->	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has joined #rust-beginners
2018-09-20 10:34:30	Aceeri_	dler: I'm unsure right now but going to keep looking at this tomorrow
2018-09-20 10:36:06	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 10:41:36	Aceeri_	learning experiences for everyone heh
2018-09-20 10:41:45	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 10:42:29	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 10:43:27	-->	sophie (sophie@moz-bhp46t.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 10:43:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 10:43:58	<--	cp (cp@moz-fresc2.asahinet.com) has quit (Quit: Disappears in a puff of smoke)
2018-09-20 10:44:07	-->	xorrox (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 10:44:43	<--	travistrue (Mibbit@moz-jcdgej.lv.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 10:46:25	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 10:47:10	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 10:47:29	-->	justsomequestions (gumble@moz-pvkhrr.wlan.uni-bonn.de) has joined #rust-beginners
2018-09-20 10:47:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 10:48:02	sophie	Is it possible to return something without a specific type, just requiring a certain trait? fn f<E: std::fmt::Display>() -> std::result::Result<(), E> gives me errors like "`std::convert::From<std::io::Error>` is not implemented for `E`"
2018-09-20 10:50:00	dler	gnzlbg: No, you can't do that without going into unsafe territory and assuming that Wrapper is stored exactly like its contents (which should be the case, but I don't know what guarantees exist regarding stuff like that. #[repr(C)] would solve that though)
2018-09-20 10:50:08	dler	(or #[repr(pack)], for that matter)
2018-09-20 10:50:23	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-20 10:50:54	dler	Aceeri_: According to the stuff I found, everything returned has to live until the end of the function (for now, that will hopefully change in the future).
2018-09-20 10:51:20	-->	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 10:51:22	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Connection closed)
2018-09-20 10:51:43	Aceeri_	The weird thing to me is that `return reference` seems to *be* the end of the function, but I guess rust might not be smart enough to reason about that
2018-09-20 10:51:45	dler	So you have to create an alternate control flow for that one, like with `mapping.contains_key(...)`.
2018-09-20 10:52:08	dler	It has to be valid throughout the function until the function itself is ended with the curly brace.
2018-09-20 10:52:11	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 10:52:17	dler	Which is, to be fair, what the error says too.
2018-09-20 10:52:22	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 10:52:23	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 10:52:26	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 10:52:37	dler	There is an issue regarding better diagnostics though: https://github.com/rust-lang/rust/issues/36170
2018-09-20 10:52:41	<--	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 10:52:44	dler	Maybe a good place for me to contribute to the compiler ^^
2018-09-20 10:53:03	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-20 10:53:39	dler	sophie: Don't just require `E: std::fmt::Display`, but `E: std::fmt::Display + std::convert::From<std::io::Error>`.
2018-09-20 10:54:18	dler	As the error says, `std::io::Error` doesn't implement a conversion to `E`, so you have to require that manually.
2018-09-20 10:56:12	sophie	so basically I can't be that abstract in rust, because when calling the function there will be an explicit return type?
2018-09-20 10:56:30	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 10:56:30	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 10:56:30	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 10:56:43	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 10:57:05	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-20 10:57:35	sophie	and I need to be able to convert to this type
2018-09-20 10:59:41	<--	PeterRabbitIsFluffy (peter@moz-c8th1v.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-20 10:59:41	<--	WindowsBunny (Bunny@moz-c8th1v.dhcp6.chtrptr.net) has quit (Connection reset by peer)
2018-09-20 10:59:45	sebk	you need a trait bound on E
2018-09-20 11:00:03	sebk	hm.
2018-09-20 11:00:06	<--	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has quit (Quit: Leaving)
2018-09-20 11:00:16	sebk	hm..
2018-09-20 11:00:32	sebk	can you try fn () -> Result<(), impl Error> ?
2018-09-20 11:00:41	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 11:00:59	-->	AtumT (IRC@moz-mevkqt.gvt.net.br) has joined #rust-beginners
2018-09-20 11:01:21	sebk	eval: fn foo() -> Result<str, impl Error> { ::std::str::from_utf8(b"hello") }
2018-09-20 11:01:24	--	Notice(eval): error[E0405]: cannot find trait `Error` in this scope
2018-09-20 11:01:26	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=b9befe729a986f08f5ccc53069393cf2&version=stable&mode=debug
2018-09-20 11:01:33	sebk	eval: fn foo() -> Result<str, impl std::io::Error> { ::std::str::from_utf8(b"hello") }
2018-09-20 11:01:35	--	Notice(eval): error[E0404]: expected trait, found struct `std::io::Error`
2018-09-20 11:01:37	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=d50dc9f0eba16da23c45011671281c45&version=stable&mode=debug
2018-09-20 11:02:21	sebk	eval: fn foo() -> Result<str, impl std::error::Error> { ::std::str::from_utf8(b"hello") }
2018-09-20 11:02:24	--	Notice(eval): error[E0277]: the size for values of type `str` cannot be known at compilation time
2018-09-20 11:02:26	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=8c8acc80a0d8ff9d9071e87a1ba1aec5&version=stable&mode=debug
2018-09-20 11:02:29	sebk	..
2018-09-20 11:02:33	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 11:02:36	sebk	eval: fn foo() -> Result<&'static str, impl std::error::Error> { ::std::str::from_utf8(b"hello") }
2018-09-20 11:02:39	--	Notice(eval): ()
2018-09-20 11:02:45	<--	c_wraith (c_wraith@moz-0noi70.us) has quit (Ping timeout: 121 seconds)
2018-09-20 11:02:48	sebk	sophie: ^
2018-09-20 11:03:10	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 11:04:09	<--	s0lar1s (quassel@moz-kdn.e8h.199.198.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:04:47	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (Quit: )
2018-09-20 11:05:36	<--	Starlit-Ghost (SG@2604:a880:800:a1::12:e001) has quit (Connection closed)
2018-09-20 11:05:41	sophie	thanks
2018-09-20 11:05:50	sophie	(guess I need to rustup to 1.26 ^^)
2018-09-20 11:05:57	-->	c_wraith (c_wraith@moz-0noi70.us) has joined #rust-beginners
2018-09-20 11:06:44	-->	s0lar1s (quassel@moz-kdn.e8h.199.198.IP) has joined #rust-beginners
2018-09-20 11:07:06	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:07:09	sophie	someone an indea why it's only working with a str as first argument? https://play.rust-lang.org/?gist=b88a00136b408a9f93166e3481422548&version=stable&mode=debug&edition=2015
2018-09-20 11:07:14	-->	StarlitGhost (SG@2604:a880:800:a1::12:e001) has joined #rust-beginners
2018-09-20 11:10:39	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-20 11:11:35	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-20 11:12:30	sebk	can you paste the body here?
2018-09-20 11:12:40	 *	sebk has internet that is too slow to load the playground
2018-09-20 11:12:46	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 11:13:34	sebk	(3 lines are fine)
2018-09-20 11:13:43	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-20 11:13:56	sophie	sebk: fn foo() -> Result<(), impl std::error::Error> { Ok(()) }
2018-09-20 11:14:04	sebk	ah
2018-09-20 11:14:14	sebk	the compiler has no idea about the error type here
2018-09-20 11:14:32	sebk	it is not given in the signature, nor in the body
2018-09-20 11:14:32	sophie	but but ... those two types are completly unrelated?
2018-09-20 11:15:14	sebk	" impl std::error::Error" means "some type that implements Error"
2018-09-20 11:15:14	sophie	ah, it's not because of the type signature
2018-09-20 11:15:22	-->	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 11:15:33	sebk	but there is still some (possibly unnamed) type
2018-09-20 11:15:36	<--	justsomequestions (gumble@moz-pvkhrr.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-20 11:15:52	sophie	but std::fs::File::open("test.json")?; doesen't fix it
2018-09-20 11:16:06	sebk	std::fs::File::open("test.json") should work
2018-09-20 11:16:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 11:16:11	sebk	without "?"
2018-09-20 11:16:22	<--	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has quit (Connection closed)
2018-09-20 11:16:30	sebk	then the error type of open is used
2018-09-20 11:16:49	sebk	? adds a conversion to an unknown type
2018-09-20 11:17:08	-->	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has joined #rust-beginners
2018-09-20 11:17:17	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:17:35	<--	mkollaro (mkollaro@moz-9qcfr7.5s2m.pbgm.0998.2001.IP) has quit (Quit: bye)
2018-09-20 11:18:43	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:19:24	<--	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:20:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 11:20:30	-->	justsomequestions (gumble@moz-pvkhrr.wlan.uni-bonn.de) has joined #rust-beginners
2018-09-20 11:22:51	-->	stevan (stevan@moz-sd5.11n.111.109.IP) has joined #rust-beginners
2018-09-20 11:22:58	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 11:25:22	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-20 11:25:33	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-20 11:25:36	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (The TLS connection was non-properly terminated.)
2018-09-20 11:26:33	<--	justsomequestions (gumble@moz-pvkhrr.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-20 11:26:56	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-20 11:27:29	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:28:14	sophie	with an explicit return at the end it's working, also with two different error types and "?" before the return
2018-09-20 11:28:46	sophie	is there a way to get rid of the explicit return?
2018-09-20 11:29:02	-->	cp (cp@moz-4f5h05.asahi-net.or.jp) has joined #rust-beginners
2018-09-20 11:29:40	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-20 11:29:51	ilmari	remove the semicolon after the last statement
2018-09-20 11:30:11	sophie	well, I don't mean using "return"
2018-09-20 11:31:05	sophie	I wan't to return Ok(()), but the type checker isn't happy about that
2018-09-20 11:32:07	WindowsBunny	sophie: You want to have a function that does nothing but return Ok(()) ?
2018-09-20 11:32:38	ilmari	eval: fn foo() -> Result<(),()> { Ok(()) }
2018-09-20 11:32:42	--	Notice(eval): ()
2018-09-20 11:32:45	WindowsBunny	We can do even better
2018-09-20 11:32:55	ilmari	eval: fn foo() -> Result<(),()> { Ok(()) } foo()
2018-09-20 11:32:57	sophie	https://play.rust-lang.org/?gist=10b23b97cd07b62efbd9995a0a4409d8&version=stable&mode=debug&edition=2015
2018-09-20 11:32:58	--	Notice(eval): Ok(())
2018-09-20 11:33:12	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 11:33:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 11:33:24	WindowsBunny	fn foo<E>() -> Result<(), E> { Ok(()) }
2018-09-20 11:33:30	WindowsBunny	or alternatively
2018-09-20 11:33:31	sophie	wait, there is a ? missing
2018-09-20 11:33:39	WindowsBunny	fn foo() -> Result<(),!> { Ok(()) }
2018-09-20 11:34:09	sophie	https://play.rust-lang.org/?gist=3e64db80f541222b77349ba74159ddda&version=stable&mode=debug&edition=2015
2018-09-20 11:34:11	drager	WindowsBunny: Is ! in stable?
2018-09-20 11:34:24	WindowsBunny	drager: I don't think so?
2018-09-20 11:34:33	dler	sophie: From what I understand, you don't want to explicitly define the error returned, right?
2018-09-20 11:34:41	sophie	dler: exactly
2018-09-20 11:34:45	drager	WindowsBunny: Ah alright
2018-09-20 11:35:01	sophie	i have multiple error types that should be handled via '?'
2018-09-20 11:35:03	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-20 11:35:15	dler	Then you should use generics, if you want the Error at the end to be user-defined.
2018-09-20 11:35:33	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-20 11:35:40	-->	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has joined #rust-beginners
2018-09-20 11:35:48	dler	sophie: Because of how Rust works (explicit error handling, no inheritance), you'd have to either define a type that can hold all of those errors and implements `From` for each of them,
2018-09-20 11:35:56	dler	or you let the user define such a type.
2018-09-20 11:36:01	ilmari	sophie: something like this? https://play.rust-lang.org/?gist=d04889104603a7723b484d15ff8a75f8&version=stable&mode=debug&edition=2015
2018-09-20 11:36:05	<--	holmgr (holmgr@moz-iib.qja.115.213.IP) has quit (Connection closed)
2018-09-20 11:36:36	dler	In the second case, you have to define what exactly that type has to offer, and since it has to offer conversions from those errors, you have to add that to the trait bounds.
2018-09-20 11:36:41	sophie	ilmari: I don't see why I should use "From"
2018-09-20 11:37:03	sophie	okay I will give you a working example in a second
2018-09-20 11:37:13	dler	But you should be aware, that that means that you can't call the function without "::<ErrType>` attached to it, if you don't have anything to infer the error type.
2018-09-20 11:37:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 11:37:42	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:38:17	drager	sophie: Maybe something like this? https://play.rust-lang.org/?gist=3e64db80f541222b77349ba74159ddda&version=stable&mode=debug&edition=2015
2018-09-20 11:38:42	-->	holmgr (holmgr@moz-4qnnj5.eduroam.sunet.se) has joined #rust-beginners
2018-09-20 11:39:00	 *	dler loves that you have the `(X,)` madness in Rust too, if you search long enough. (the `Fn`-traits, for example)
2018-09-20 11:39:14	-->	clarkema (clarkema@moz-vo1829.karoo.kcom.com) has joined #rust-beginners
2018-09-20 11:39:14	sophie	drager: that's my gist xD
2018-09-20 11:39:16	dler	(coming from Python)
2018-09-20 11:39:33	drager	sophie: Sorry, wrong. Here it is; https://play.rust-lang.org/?gist=ed8374d2bfb2d185f05e644a025015b9&version=stable&mode=debug&edition=2015
2018-09-20 11:40:19	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-20 11:40:47	sophie	drager: that's working
2018-09-20 11:40:59	sophie	thanks
2018-09-20 11:41:07	drager	No problem
2018-09-20 11:41:45	<--	eibwen (eibwen@moz-9kbrpu.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 11:42:23	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 11:42:32	-->	mib_h64ufr (Mibbit@moz-iim.j4g.53.103.IP) has joined #rust-beginners
2018-09-20 11:42:39	dler	sophie: While drager's solution works, please be aware that you're usually better off creating a custom error type that implements `From` for all the errors that can possibly happen. This is way easier to deal with if functions want to do something differently depending on the error they get.
2018-09-20 11:42:44	<--	holmgr (holmgr@moz-4qnnj5.eduroam.sunet.se) has quit (Ping timeout: 121 seconds)
2018-09-20 11:42:45	dler	There are crates that can do that for you.
2018-09-20 11:43:13	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-20 11:43:23	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 11:43:26	sophie	dler: thanks
2018-09-20 11:43:48	drager	Yeah, that's more sound to do
2018-09-20 11:44:04	<--	mib_h64ufr (Mibbit@moz-iim.j4g.53.103.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 11:44:07	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 11:44:39	clarkema	I'm just getting started, and have been playing around with a little CSV cleaning utility, that's supposed to read a file, trim all the fields, and 'cascade' missing values down from the line above.  What I've got works (https://gist.github.com/clarkema/faf91ae9f592ac5044cc4cac2038a30d) but when I run it under 'time', I see a big chunk of system time, which makes me think I might not be being as efficient as possible in terms of allocatin
2018-09-20 11:44:40	clarkema	memory and generating 'garbage'
2018-09-20 11:44:59	<--	richo1 (richo@moz-slrmp8.fs1g.619c.a880.2604.IP) has quit (Connection closed)
2018-09-20 11:45:21	-->	richo1 (richo@moz-slrmp8.fs1g.619c.a880.2604.IP) has joined #rust-beginners
2018-09-20 11:45:28	clarkema	Is there any way that I could improve that in terms of memory efficiency?
2018-09-20 11:46:37	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-20 11:46:52	<--	s0lar1s (quassel@moz-kdn.e8h.199.198.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-20 11:46:59	<--	Disconsented (quassel@moz-nbhjle.com) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-20 11:47:19	WindowsBunny	clarkema: system time generally means things like IO, not memory allocation
2018-09-20 11:47:35	-->	DeltaMan_ (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-20 11:47:36	WindowsBunny	reading the file, writing to stdout
2018-09-20 11:47:47	elichai2	is there an easy way to create a random array at a random length? (for testing purposes)
2018-09-20 11:47:59	WindowsBunny	elichai2: using the rand crate?
2018-09-20 11:48:02	<--	onelson (onelson@moz-0vc.ej1.236.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:48:03	elichai2	yes
2018-09-20 11:48:12	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:48:13	elichai2	hoped to do something like this:
2018-09-20 11:48:24	clarkema	WindowsBunny: but it's having to do the same amount of that as the xsv command before it in the pipeline, which uses only 0.11s of system time
2018-09-20 11:49:00	-->	Disconsented (quassel@moz-nbhjle.com) has joined #rust-beginners
2018-09-20 11:49:06	-->	holmgr (holmgr@moz-t3kvdc.eduroam.liu.se) has joined #rust-beginners
2018-09-20 11:49:13	WindowsBunny	elichai2: std::iter::repeat_with(|| generate_random_element()).take(generate_random_length()).collect()
2018-09-20 11:49:16	fleetfox	hey, i need some help with lifetimes https://dpaste.de/Fxb1
2018-09-20 11:49:18	-->	mib_nhk93h (Mibbit@moz-lnr.v9g.227.91.IP) has joined #rust-beginners
2018-09-20 11:49:22	fleetfox	how do i annotate this
2018-09-20 11:49:27	<--	holmgr (holmgr@moz-t3kvdc.eduroam.liu.se) has quit (Connection closed)
2018-09-20 11:49:49	-->	holmgr (holmgr@moz-c15mr8.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-20 11:50:10	<--	GrayShade (quassel@moz-qdsu6c.ka56.lflt.2f05.2a02.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-20 11:50:34	elichai2	hmm i'll test this
2018-09-20 11:51:05	WindowsBunny	elichai2: just be careful what you mean by random length, so you don't accidentally try to allocate a few billion petabytes
2018-09-20 11:51:13	-->	GrayShade (quassel@moz-8de2v1.leje.sn81.2f05.2a02.IP) has joined #rust-beginners
2018-09-20 11:51:37	<--	DeltaMan_ (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:52:15	dler	fleetfox: `pub fn file_writer<'zip_writer>(zip_writer: &'zip_writer mut ZipWriter<impl Write + Seek>, file_name: &str) -> EventWriter<impl Write + 'zip_writer>` I guess?
2018-09-20 11:52:24	-->	mib_1kz3s6 (Mibbit@moz-0bojte.ip.btc-net.bg) has joined #rust-beginners
2018-09-20 11:52:25	elichai2	I get  `consider giving `val` a type :\`
2018-09-20 11:52:28	-->	s0lar1s (quassel@moz-kdn.e8h.199.198.IP) has joined #rust-beginners
2018-09-20 11:52:38	elichai2	WindowsBunny: https://play.rust-lang.org/?gist=65e7e418fdc9a716eff2d71fac480dcf&version=stable&mode=debug&edition=2015
2018-09-20 11:52:56	-->	onelson (onelson@moz-0vc.ej1.236.104.IP) has joined #rust-beginners
2018-09-20 11:53:01	dler	elichai2: `collect::<Vec<_>>()`.
2018-09-20 11:53:02	WindowsBunny	clarkema: yeah, this looks like it could be done wayy faster
2018-09-20 11:53:14	elichai2	lol that's a first in the Playground: `/root/entrypoint.sh: line 8:     7 Killed                  timeout --signal=KILL ${timeout} "$@"`
2018-09-20 11:53:14	dler	elichai2: Rust doesn't know what to collect it into.
2018-09-20 11:53:40	WindowsBunny	elichai2: don't forget to specify the type as Vec<T> or something
2018-09-20 11:53:49	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 11:53:52	<--	holmgr (holmgr@moz-c15mr8.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:54:10	elichai2	ok, so I guess this timeouts, i'll limit the length to u16 instead of u32
2018-09-20 11:54:46	mib_1kz3s6	Hey guys. New to rust and reading the rust book and I have a question. So I get that the String type is stored in the heap with the address stored in the stack. What I don't get is how is &str stored in memory?
2018-09-20 11:55:11	fleetfox	dler: great that works. Where is that in the docs? the plus sign part
2018-09-20 11:55:12	elichai2	WindowsBunny: it worked. thanks!
2018-09-20 11:55:24	-->	christer (christer@moz-1vu5b9.tmi.telenormobil.no) has joined #rust-beginners
2018-09-20 11:55:31	dutchie	it's a reference, so it could point to a string anywhere
2018-09-20 11:55:51	clarkema	WindowsBunny: I'm not surprised, I only started yesterday ;)  I wonder if buffering output would help
2018-09-20 11:55:55	WindowsBunny	clarkema: The main issue I see is that you are calling to_string() in process_line
2018-09-20 11:56:42	WindowsBunny	and you're also calling to_string on the result of the json!
2018-09-20 11:56:46	dler	mib_1kz3s6: It's either stored in program memory (in which case it's `'static` => valid for the runtime of the whole program) or in some container like `String`.
2018-09-20 11:57:10	WindowsBunny	clarkema: Do you *need* to store those strings in last_line?
2018-09-20 11:57:25	mib_1kz3s6	I see thanks!
2018-09-20 11:57:29	dler	fleetfox: I don't know, rustc told me to add something like that one time, and since then I know that `impl Trait`s are 'static by default.
2018-09-20 11:57:45	clarkema	I don't need the one after json!() -- I've just got rid of that, although it hasn't made a time difference
2018-09-20 11:57:51	clarkema	for the other one...
2018-09-20 11:58:21	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 11:58:23	-->	holmgr (holmgr@moz-iuhnq2.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-20 11:58:37	<--	stevan (stevan@moz-sd5.11n.111.109.IP) has quit (Connection closed)
2018-09-20 11:58:40	WindowsBunny	clarkema: what if you do print!("{}\n", json!(last_line)); ?
2018-09-20 11:58:56	clarkema	I maintain a copy of the last line between invokations, so that we can copy any missing fields from that line.  Somehow when I put a field into that last_line it needs to be a standalone thing so that it will survive the process_line function exiting
2018-09-20 11:59:03	-->	stevan (stevan@moz-sd5.11n.111.109.IP) has joined #rust-beginners
2018-09-20 11:59:27	clarkema	invocations*
2018-09-20 12:00:02	-->	luxeve (luxeve@moz-6nc5o8.ldf4.hagt.8003.2001.IP) has joined #rust-beginners
2018-09-20 12:00:17	WindowsBunny	clarkema: what if you do last_line[i].clone_from(field); ?
2018-09-20 12:00:50	<--	forbjok (forbjok@moz-tp6rm8.bb.online.no) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-20 12:01:17	clarkema	it complains about mismatched types on field: expected struct `std::string::String`, found str
2018-09-20 12:01:31	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-20 12:01:40	WindowsBunny	ah right, hmmmm
2018-09-20 12:01:57	-->	forbjok (forbjok@moz-tp6rm8.bb.online.no) has joined #rust-beginners
2018-09-20 12:01:57	fleetfox	I got that it is static, i'm confused about syntax to add lifetime to it
2018-09-20 12:02:02	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-20 12:02:02	fleetfox	why is it + sign
2018-09-20 12:02:18	elichai2	New problem :) I'm getting ` cannot move out of captured outer variable in an 'FnMut' closure` when I try to use an iterator inside another iterator closure
2018-09-20 12:02:23	dler	fleetfox: The same you use for stuff like `T: Trait1 + Trait2`.
2018-09-20 12:02:34	dler	It combines multiple requirements.
2018-09-20 12:02:50	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-20 12:03:02	WindowsBunny	clarkema: how about last_line[i].clear(); last_line[i].push_str(field); ?
2018-09-20 12:03:05	-->	Bill (Bill@moz-o541gg.41vf.jq5i.0e34.2a01.IP) has joined #rust-beginners
2018-09-20 12:03:06	elichai2	https://play.rust-lang.org/?gist=86da9f9f18269248968ac89ae5a0f9ec&version=nightly&mode=debug&edition=2018
2018-09-20 12:04:04	fleetfox	okay, i don't think i understand all primitives
2018-09-20 12:04:11	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 12:04:49	fleetfox	is there some sort of way to see desugared unelided code?
2018-09-20 12:05:09	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-20 12:05:25	<--	forbjok (forbjok@moz-tp6rm8.bb.online.no) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-20 12:05:26	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-20 12:05:27	-->	forbjok (forbjok@moz-tp6rm8.bb.online.no) has joined #rust-beginners
2018-09-20 12:05:30	clarkema	wow
2018-09-20 12:05:49	clarkema	WindowsBunny: I'll try that in a sec, but I just added buffering to stdout following the method in https://matthias-endler.de/2017/yes/
2018-09-20 12:06:12	clarkema	And now I'm down to 3.41s user 0.05s system -- so that explains the system usage
2018-09-20 12:06:17	<--	holmgr (holmgr@moz-iuhnq2.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-20 12:06:31	clarkema	Thanks for the IO pointer -- that prodded me to think about buffering
2018-09-20 12:06:52	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-20 12:07:17	<--	torbor1 (ruben@moz-hcpkoo.bzerk.org) has quit (Connection closed)
2018-09-20 12:07:28	dler	fleetfox: You could look at the intermediate representation in the Rust compiler, "MIR".
2018-09-20 12:07:50	dler	In the playground, click on the "..."-button next to run, and select MIR.
2018-09-20 12:07:57	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-20 12:08:10	dler	Hmm.
2018-09-20 12:08:17	dler	That doesn't show the lifetimes.
2018-09-20 12:08:26	dler	(the inferred ones)
2018-09-20 12:08:39	clarkema	WindowsBunny: your clear / push approach shaves a couple of hundred ms off the user runtime :)
2018-09-20 12:08:42	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:09:09	drager	clarkema: How does your code look like now? :)
2018-09-20 12:09:32	WindowsBunny	clarkema: you can always use a profiler to see where you're still slow
2018-09-20 12:09:43	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-20 12:10:07	<--	fsasm (fsasm@moz-5fd.qra.178.62.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:10:12	dler	fleetfox: But a good rule of thumb is: trait objects are 'static by default, so are `impl Trait`-returns, but you can change that via `+ 'lifetime`. Other than that: If you only have one reference in the arguments, that dictates the lifetimes of the results. If you have &self  or &mut self, other references are ignored for that.
2018-09-20 12:10:19	-->	napoleon (Mibbit@moz-gsr.v1q.152.61.IP) has joined #rust-beginners
2018-09-20 12:10:30	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-20 12:10:31	-->	Elizabeth (Mibbit@moz-4t08a8.cable.virginm.net) has joined #rust-beginners
2018-09-20 12:10:38	clarkema	drager: Now it looks like this: https://gist.github.com/clarkema/faf91ae9f592ac5044cc4cac2038a30d
2018-09-20 12:10:59	dler	fleetfox: So `fn x(&self, &A) -> &B` would be `fn x<'s, 'a>(&'s self, &'a A) -> &'s B`.
2018-09-20 12:11:17	dler	And whenever you see a trait object, imagine a `+ 'static` after the trait name.
2018-09-20 12:11:28	clarkema	WindowsBunny: I'm pretty happy with just under 3.5 seconds for processing the number of records it is; that's way WAY bigger than the CSV files I'll be feeding it
2018-09-20 12:11:38	clarkema	Although I might dig out the profile just as an exercie
2018-09-20 12:11:43	clarkema	Thanks for the pointers :)
2018-09-20 12:11:48	dler	fleetfox: So `Box<Any + 'static>` instead of `Box<Any>` (but `Any` is always static)
2018-09-20 12:11:56	<--	forbjok (forbjok@moz-tp6rm8.bb.online.no) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-20 12:11:58	-->	forbjok (forbjok@moz-tp6rm8.bb.online.no) has joined #rust-beginners
2018-09-20 12:12:18	drager	clarkema: Cool, wouldn't it be faster if CleanedRecord stored a &str instead?
2018-09-20 12:12:24	<--	mib_nhk93h (Mibbit@moz-lnr.v9g.227.91.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 12:12:44	clarkema	drager: I'm sure it would be, but I can't work out how to deal with the lifetime issues
2018-09-20 12:12:45	drager	then on line 15 you would not need to do String::from()
2018-09-20 12:13:07	clarkema	My understanding is that if you have a &str, you also have to have a 'parent' String somewhere to refer to, right?
2018-09-20 12:13:17	Elizabeth	Hi. I have implemented "Into<TypeA> for TypeB" to use it as a trait bound on a utility function. But in practise I have "&TypeB" rather than "TypeB", so it doesn't work.
2018-09-20 12:13:33	Elizabeth	when i try to implement "Into<TypeA> for &TypeB", I just get a compile error
2018-09-20 12:13:43	Elizabeth	does anyone know what's the thing do to here?
2018-09-20 12:14:25	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 12:14:53	<--	raingloom (raingloom@moz-jvofbt.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-20 12:15:38	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Connection closed)
2018-09-20 12:15:40	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:15:59	dler	Elizabeth: You should generally implement the `From`-trait, the `Into`-trait is then automatically implemented for you. But that doesn't work the other way around.
2018-09-20 12:16:47	dler	Regarding your actual question: What compiler error do you get?
2018-09-20 12:17:27	<--	forbjok (forbjok@moz-tp6rm8.bb.online.no) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-20 12:17:29	-->	forbjok (forbjok@moz-tp6rm8.bb.online.no) has joined #rust-beginners
2018-09-20 12:17:46	dpc1	dler: i think they are trying to do `&foo.into()`
2018-09-20 12:17:56	elichai2	easiest way to write Vec<[u8;32]> to a file so i can read it back into Vec<[u8;32]> (trying to bench multiple ways of iterating over my db so I want my data to be consistent between tests)
2018-09-20 12:18:22	elichai2	(maybe I should just use lazy_static! to initialize the data and then all the tests will use it? will it race condition?)
2018-09-20 12:18:56	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:19:27	dler	elichai2: Rust assures you don't get race conditions unless you resort to unsafe code.
2018-09-20 12:19:45	dler	Or use buggy unsafe code from others (maybe in other crates).
2018-09-20 12:20:02	dler	So `lazy_static!` is a completely valid option, and it will not result in race conditions.
2018-09-20 12:20:03	elichai2	dler: so multiple bench tests using one lazy_static! for initialization is ok?
2018-09-20 12:20:07	drager	clarkema: Yeah, lifetimes are hard
2018-09-20 12:20:14	-->	mib_86pqtn (Mibbit@moz-2e4.k50.149.169.IP) has joined #rust-beginners
2018-09-20 12:20:30	GreenJello	you can have race conditions in multi-threaded or async code
2018-09-20 12:20:32	elichai2	dler: ok, thanks :) (weird that no one on stackoverflow answered this for people asking for a test initialize function)
2018-09-20 12:20:38	Elizabeth	dler: Aahh. I didn't know that about From. And I also misread the error. I have a _lot_ of errors in my code right now, so it's glitching out VS Code a bit. I just needed a lifetime specifier :)
2018-09-20 12:20:41	dler	elichai2: I guess, but remember that it takes time to initialize the first time it is read from.
2018-09-20 12:20:54	elichai2	GreenJello: pretty sure Rust's tests use threads, right?
2018-09-20 12:21:26	GreenJello	lazy_static should be perfectly fine here
2018-09-20 12:21:38	elichai2	dler: yeah, if I'll use lazy_static i'll randomlly generate the data in there and then all the tests will use the same variables, thanks :)
2018-09-20 12:21:41	dler	GreenJello: You can, but Rust doesn't allow you to do anything with stuff that doesn't implement `Send + Sync` if its shared between threads.
2018-09-20 12:21:50	<--	liquidnight (marcus@moz-a7hfpg.305i.abqi.0c22.2a01.IP) has quit (Connection closed)
2018-09-20 12:22:05	dler	So you have to resort to unsafe to get race conditions, or have to be lucky enough to find a bug in the standard library.
2018-09-20 12:22:26	GreenJello	dler, it prevents data races, but not race conditions
2018-09-20 12:22:27	dler	elichai2: In that case, it's a perfectly valid option.
2018-09-20 12:22:32	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-20 12:22:34	elichai2	Thanks :)
2018-09-20 12:22:43	GreenJello	a race condition would be e.g. reading the file from a thread into a Mutex and reading from another thread
2018-09-20 12:22:48	dler	GreenJello: Ah, I get what you are saying. I'm not good with jargon.
2018-09-20 12:22:50	-->	Lilly (Lilly@moz-8r5.b80.132.178.IP) has joined #rust-beginners
2018-09-20 12:23:02	dpc1	dler: afaik rust protects you from data races not race conditions
2018-09-20 12:24:32	dler	GreenJello, dpc1: Yep, no race condition protection: https://doc.rust-lang.org/nomicon/races.html
2018-09-20 12:24:36	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 12:24:59	dpc1	:)
2018-09-20 12:25:14	dpc1	yeah its common for people to mix up the two :D
2018-09-20 12:25:16	dler	But `lazy_static!` is completely safe to use, afaik, since the order of access is well defined thanks to atomics.
2018-09-20 12:27:03	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 12:27:03	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Quit: Leaving)
2018-09-20 12:27:52	-->	dikinova (Mibbit@moz-ke1.4sb.91.47.IP) has joined #rust-beginners
2018-09-20 12:28:11	-->	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has joined #rust-beginners
2018-09-20 12:28:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 12:29:07	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:29:55	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:31:07	-->	raingloom (raingloom@moz-r4fk1q.pool.telekom.hu) has joined #rust-beginners
2018-09-20 12:31:18	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 12:32:25	<--	Elizabeth (Mibbit@moz-4t08a8.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 12:32:59	<--	sophie (sophie@moz-bhp46t.dip0.t-ipconnect.de) has quit (Client exited)
2018-09-20 12:33:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 12:34:17	<--	mib_1kz3s6 (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 12:34:49	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 12:35:34	-->	justsomequestions (gumble@moz-jomscm.wlan.uni-bonn.de) has joined #rust-beginners
2018-09-20 12:35:48	fleetfox	I'm trying to conver thes https://dpaste.de/aEUm# to "extension trait" on ZipWriter but can't figure it out
2018-09-20 12:36:00	Bill	Hi everyone, I'm facing a problem that I don't know how to solve. I am trying to create a system similar to the mediator design pattern in OO languages, I have a working implementation in Rust, but I can only send a single type of messages through it. I would like to be able to send any type of messages through this system, so I was thinking of accepting trait objects as message types, instead of concrete types, but I can't see how I 
2018-09-20 12:36:01	Bill	would go about to reconstruct the message once it gets delivered to it's destination. Here's a link to a playground with a barebones implementation, without trait objects: https://play.rust-lang.org/?gist=bdc94c31f24a1da368d4e0d4851d7f06&version=stable&mode=debug&edition=2015 
2018-09-20 12:36:33	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 12:38:39	<--	stevan (stevan@moz-sd5.11n.111.109.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:39:20	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:39:35	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-20 12:40:09	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 12:40:11	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 12:40:14	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 12:40:30	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-20 12:40:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 12:42:00	<--	mib_86pqtn (Mibbit@moz-2e4.k50.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 12:42:12	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-20 12:42:22	<--	danecando (danecando@moz-20p0g5.sdba.4jle.1700.2600.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-20 12:44:16	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 12:44:16	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 12:44:16	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 12:44:39	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 12:44:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 12:45:01	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 12:45:45	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 12:47:41	<--	justsomequestions (gumble@moz-jomscm.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-20 12:49:20	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-20 12:52:49	<--	dler (Mibbit@moz-01h.ms3.12.31.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 12:53:29	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-20 12:53:55	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-20 12:55:00	-->	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 12:55:27	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 12:57:44	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 12:59:02	<--	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 12:59:21	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 12:59:27	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 12:59:54	fleetfox	https://dpaste.de/v8j8
2018-09-20 12:59:59	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:00:52	fleetfox	It wants type parameter
2018-09-20 13:01:37	<--	Xinayder (alex@moz-br3.ro8.35.191.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:02:07	<--	raingloom (raingloom@moz-r4fk1q.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-20 13:02:25	-->	saurabh (popopop@moz-rmq.7h6.141.14.IP) has joined #rust-beginners
2018-09-20 13:03:09	<--	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-20 13:04:49	<--	saurabhs_ (popopop@moz-rmq.7h6.141.14.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:05:22	-->	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has joined #rust-beginners
2018-09-20 13:05:49	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 13:07:21	-->	mib_zc40al (Mibbit@moz-q1c.rs4.77.62.IP) has joined #rust-beginners
2018-09-20 13:07:33	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-20 13:09:10	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-20 13:09:25	mib_zc40al	If a struct implements two traits with the same function is there a way to always "force" one of the method without type annotation: please see (https://play.rust-lang.org/?gist=0cd924b717b42400f86b2512f2bd5757&version=nightly&mode=debug&edition=2015) for details
2018-09-20 13:10:19	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:10:25	dpc1	mib_zc40al: <Foo as Trait>::...
2018-09-20 13:10:42	<--	sam113101 (sam@moz-c4qco5.mc.videotron.ca) has quit (Connection closed)
2018-09-20 13:10:44	mib_zc40al	without type annotiation!
2018-09-20 13:10:50	dpc1	;)
2018-09-20 13:10:59	dpc1	what's the issue with type annotation
2018-09-20 13:11:05	mib_zc40al	Method1 and Method2 are iterators and new iterators are generated from tuple of iterators that "automatically" implements traits.
2018-09-20 13:11:18	-->	sam113101 (sam@moz-c4qco5.mc.videotron.ca) has joined #rust-beginners
2018-09-20 13:11:20	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 13:11:23	mib_zc40al	I want to call the faster always without changeing the client code
2018-09-20 13:12:02	mib_zc40al	(m1iter, m12iter).iter shall call the m1 method
2018-09-20 13:12:14	swalladge	ooh TIL there is an eval bot in the channel
2018-09-20 13:12:53	dpc1	import only 1 of the traits ;)
2018-09-20 13:13:05	swalladge	are there docs/source available for the bot(s) in this channel?
2018-09-20 13:13:13	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-20 13:13:49	<--	saurabh (popopop@moz-rmq.7h6.141.14.IP) has quit (Quit: Leaving)
2018-09-20 13:15:15	dpc1	don't think so
2018-09-20 13:15:21	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-20 13:16:01	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 13:17:17	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-20 13:17:21	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Connection closed)
2018-09-20 13:19:15	-->	froglegstew (Mibbit@moz-sln70m.staticip.rima-tde.net) has joined #rust-beginners
2018-09-20 13:19:33	<--	froglegstew (Mibbit@moz-sln70m.staticip.rima-tde.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 13:19:48	-->	alatiera (alatiera@moz-g0jsba.access.hol.gr) has joined #rust-beginners
2018-09-20 13:20:32	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:20:56	-->	amira (Mibbit@moz-mfi0p5.versanet.de) has joined #rust-beginners
2018-09-20 13:21:27	amira	hello, is there a way to use raw strings to structure a rust program but avoiding tons of whitespaces caused by indents?
2018-09-20 13:21:47	kimundi	amira: one nice hack is the concat!() macro
2018-09-20 13:21:49	-->	alatiera_ (alatiera@moz-t95tls.access.hol.gr) has joined #rust-beginners
2018-09-20 13:21:57	kimundi	concat!(r"line 1", r"line 2")
2018-09-20 13:22:17	amira	oh, well, i thought rather about one string block
2018-09-20 13:22:19	kimundi	(well, there is no newline there unless yiou explicity write it
2018-09-20 13:22:27	amira	atm i just remove indentation that looks ugly tho
2018-09-20 13:22:45	kimundi	amira: yeah, there is no way to remove indentation with raw strings afaik
2018-09-20 13:23:02	amira	that's a bummer
2018-09-20 13:23:32	amira	it seems so normal cus why should code formatting affect a programming functionality
2018-09-20 13:24:02	-->	luizdepra (luizdepra@moz-o99kto.7lsd.eidl.1284.2001.IP) has joined #rust-beginners
2018-09-20 13:24:30	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-20 13:24:46	<--	alatiera (alatiera@moz-g0jsba.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 13:25:44	<--	luxeve (luxeve@moz-6nc5o8.ldf4.hagt.8003.2001.IP) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-20 13:25:46	amira	maybe i can make it work via \
2018-09-20 13:25:58	swalladge	^ but if it didn't, what would happen if you wanted a multiline string like 'foo\n   leading spaces'
2018-09-20 13:26:14	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 13:26:18	swalladge	if indenting inside the multiline string wasn't significant
2018-09-20 13:28:18	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-20 13:28:38	raytiley	anyone have guidance on getting gdb working with rust on windows?  i'm using the stable-gnu toolchain and I installed the mingw64 packages but gdb is still complaining that the binary "not in executable format"
2018-09-20 13:28:43	-->	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 13:29:05	sarnold	raytiley: I have the impression most windows rust users use the msvc toolchain route instead
2018-09-20 13:29:33	raytiley	yeah... I figured that would be the case :)
2018-09-20 13:30:11	dpc1	WindowsBunny can help xD
2018-09-20 13:30:35	raytiley	I'm trying to get some backtraces from an app that uses  gstreamer-rs which is mingw, which is what I'm most interested in 
2018-09-20 13:30:45	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:31:07	-->	dler (Mibbit@moz-01h.ms3.12.31.IP) has joined #rust-beginners
2018-09-20 13:32:22	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:33:55	Debaran	swalladge: https://github.com/panicbit/playbot_ng
2018-09-20 13:34:13	<--	JAlbers (jalbers@moz-38p62f.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:34:14	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 13:34:20	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 13:34:21	-->	JAlbers (jalbers@moz-gbmisn.il.comcast.net) has joined #rust-beginners
2018-09-20 13:35:16	panicbit	swalladge: It can evaluate code and query crates.io
2018-09-20 13:35:36	panicbit	eval: "hello".chars().collect::<Vec<_>>()
2018-09-20 13:35:39	--	Notice(eval): ['h', 'e', 'l', 'l', 'o']
2018-09-20 13:35:51	panicbit	?crate itertools
2018-09-20 13:35:52	--	Notice(eval): itertools (0.7.8) - Extra iterator adaptors, iterator methods, free functions, and macros. -> https://crates.io/crates/itertools [https://docs.rs/crate/itertools]
2018-09-20 13:36:00	-->	seiji (seiji@moz-766438.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 13:36:04	-->	federico_ (federico@moz-obq.vbi.108.201.IP) has joined #rust-beginners
2018-09-20 13:36:26	dpc1	:)
2018-09-20 13:36:26	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 13:40:33	<--	danreeves (localghost@moz-08734m.range86-132.btcentralplus.com) has quit (The TLS connection was non-properly terminated.)
2018-09-20 13:40:57	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:41:05	-->	alatiera (alatiera@moz-04k2aq.access.hol.gr) has joined #rust-beginners
2018-09-20 13:42:28	-->	alatiera__ (alatiera@moz-rn8f18.access.hol.gr) has joined #rust-beginners
2018-09-20 13:42:32	panicbit	Both bots have help commands and link to usage guidse
2018-09-20 13:42:46	<--	alatiera_ (alatiera@moz-t95tls.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 13:42:48	panicbit	Here's the one for rustbot: https://gist.github.com/Havvy/5abe8b29b5810f9a2bfb8bc736ac5d79
2018-09-20 13:43:12	-->	justsomequestions (gumble@moz-jomscm.wlan.uni-bonn.de) has joined #rust-beginners
2018-09-20 13:43:19	panicbit	!choose eval rustbot
2018-09-20 13:43:19	+rustbot	Choosing eval.
2018-09-20 13:43:45	panicbit	I swear rustbot has a bias towards the first element
2018-09-20 13:43:53	<--	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 13:44:39	WindowsBunny	raytiley: are you sure your gdb matches the architecture of the target executable?
2018-09-20 13:44:51	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-20 13:45:00	WindowsBunny	remember that mingw64 isn't necessarily 64-bit
2018-09-20 13:45:25	<--	alatiera (alatiera@moz-04k2aq.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 13:46:35	raytiley	WindowsBunny: I'm not... I downloaded this: http://mingw-w64.org/doku.php but the gdb I found seems to be in the mingw32\bin folder
2018-09-20 13:46:40	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 13:46:40	raytiley	false advertising
2018-09-20 13:47:18	dpc1	xD
2018-09-20 13:47:24	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 13:47:30	clarkema	Next CSV processing question :)  Current code at https://gist.github.com/clarkema/6fbbf97fd83b5cc5c8078716610edeee#file-csv-rs-L28-L33   As highlighted, I want to be able to open a CSV reader either on a file path or on stdin; but these have different types (csv::Reader<std::fs::File>  and csv::Reader<std::io::Stdin>  respectively)
2018-09-20 13:47:55	<--	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has quit (Connection closed)
2018-09-20 13:48:06	clarkema	How can I make a variable that will, in effect, hold a csv::Reader<T>?  I don't know what I'm going to want at compilation time, and after I've made the reader the difference in the data source doesn't matter
2018-09-20 13:48:25	kimundi	Afaik you can turn the Read trait into a trait object
2018-09-20 13:48:36	kimundi	So you could have a Box<Read> or so
2018-09-20 13:48:44	kimundi	err, Box<dyn Read>
2018-09-20 13:49:40	-->	holmgr (holmgr@moz-t3kvdc.eduroam.liu.se) has joined #rust-beginners
2018-09-20 13:51:15	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 13:51:16	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (Connection closed)
2018-09-20 13:51:20	-->	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has joined #rust-beginners
2018-09-20 13:51:33	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-09-20 13:53:00	raytiley	found the right gdb... I'm all set. Thanks!
2018-09-20 13:53:33	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-20 13:54:35	dikinova	i have s very simple question, at https://gist.github.com/4422f89710b55fd673e0158fa699e4be
2018-09-20 13:55:16	<--	holmgr (holmgr@moz-t3kvdc.eduroam.liu.se) has quit (Connection closed)
2018-09-20 13:55:21	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-20 13:55:32	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 13:55:38	-->	holmgr (holmgr@moz-b2csak.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-20 13:56:39	dikinova	a very simple question, at https://gist.github.com/4422f89710b55fd673e0158fa699e4be , thanks 
2018-09-20 13:56:55	-->	ssc (Mibbit@moz-a13.hn7.104.209.IP) has joined #rust-beginners
2018-09-20 13:57:04	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 13:57:34	<--	ssc (Mibbit@moz-a13.hn7.104.209.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 13:58:09	<--	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 13:59:14	-->	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 13:59:19	<--	dalley__ (dalley@moz-5ib9oe.res.spectrum.com) has quit (Quit: Leaving)
2018-09-20 13:59:26	-->	dalley (dalley@moz-5ib9oe.res.spectrum.com) has joined #rust-beginners
2018-09-20 13:59:40	<--	holmgr (holmgr@moz-b2csak.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:00:18	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-20 14:00:34	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-20 14:01:36	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:02:16	<--	justsomequestions (gumble@moz-jomscm.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-20 14:02:57	clarkema	kimundi: just been reading around boxing... I think the problem is that I think need to call .records() on the reader to get the CSV records, and that's not defined as part of a trait as far a I can see
2018-09-20 14:03:08	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-20 14:03:16	<--	faitswulff (faitswulff@moz-poecs3.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:03:36	-->	faitswulff (faitswulff@moz-c7dmf5.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 14:04:03	kimundi	clarkema: AH, what are the types involved again?
2018-09-20 14:04:23	kimundi	ah wait, its in the backlog
2018-09-20 14:04:28	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-20 14:04:40	-->	raingloom (raingloom@moz-r4fk1q.pool.telekom.hu) has joined #rust-beginners
2018-09-20 14:04:45	kimundi	I think you migth want tot ry csv::Reader<Box<dyn Read>> or so
2018-09-20 14:07:27	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 14:07:41	<--	faitswulff (faitswulff@moz-c7dmf5.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 14:08:05	-->	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has joined #rust-beginners
2018-09-20 14:09:33	<--	FreeFull (freefull@moz-t4nkmd.ip-54-37-16.eu) has quit (Quit: Rebooting)
2018-09-20 14:10:54	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-20 14:11:27	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-20 14:11:58	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:12:07	<--	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-20 14:12:29	<--	amira (Mibbit@moz-mfi0p5.versanet.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 14:12:56	<--	oms (oms@moz-vr3thd.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-20 14:13:32	-->	alatiera_ (alatiera@moz-4vsfg2.access.hol.gr) has joined #rust-beginners
2018-09-20 14:15:28	dikinova	a simple question here, at https://gist.github.com/rust-play/4422f89710b55fd673e0158fa699e4be , thanks
2018-09-20 14:16:16	<--	alatiera__ (alatiera@moz-rn8f18.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 14:17:12	clarkema	It seems that the trick is to box the reader itself and then always call from_reader, rather than swapping between from_reader and from_path.  That way the ultimate type of always csv::Reader<Box<io::Read>>
2018-09-20 14:17:15	clarkema	Thanks kimundi :)
2018-09-20 14:17:20	kimundi	dikinova: Being copyable in Rust does not mean that the value remains in its original location, just that it moves instead
2018-09-20 14:17:39	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 14:17:45	sarnold	https://play.rust-lang.org/?gist=4422f89710b55fd673e0158fa699e4be
2018-09-20 14:17:47	kimundi	dikinova: A Copy in Rust is a move that allows you to use the original location afterwards
2018-09-20 14:17:56	clarkema	This is what did it: https://gist.github.com/clarkema/6fbbf97fd83b5cc5c8078716610edeee
2018-09-20 14:18:18	-->	FreeFull (freefull@moz-t4nkmd.ip-54-37-16.eu) has joined #rust-beginners
2018-09-20 14:18:21	kimundi	dikinova: so in your case, you are moving the [SA; 1] array out of the function on the return
2018-09-20 14:18:39	clarkema	I need to go and think about about why that works; but it _does_ work
2018-09-20 14:18:55	kimundi	dikinova: (A move and a copy are logical operations, in the actual machine code both are pretty much just a memcpy of the bytes of the struct, unless optimized away by the compiler)
2018-09-20 14:19:06	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-20 14:19:47	kimundi	clarkema: Basically, the csv::Reader<T> accepts any T that implements Read. a Box<dyn Read> implements Read
2018-09-20 14:20:13	kimundi	Box<dyn Read> is a Read trait object that uses virtual dispatch to the underlying actual type
2018-09-20 14:20:32	clarkema	That makes sense
2018-09-20 14:20:35	kimundi	s basically you hide the _actual_ struct, and only get access the to the Read interface
2018-09-20 14:20:45	clarkema	I think I started off trying to box up the wrong thing
2018-09-20 14:21:00	kimundi	And that allows you to dynamically have different sources of the original dyn Read, created from arbitrary types
2018-09-20 14:21:40	kimundi	yeah, you need to baiscally have a Box<ConcreteType> first that you then let autonmatically cast to a Box<dyn Read>
2018-09-20 14:22:10	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:23:05	-->	moltonel (moltonel@moz-537.aik.43.64.IP) has joined #rust-beginners
2018-09-20 14:23:22	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-20 14:24:52	-->	fsasm (fsasm@moz-5fd.qra.178.62.IP) has joined #rust-beginners
2018-09-20 14:25:04	-->	alatiera__ (alatiera@moz-2us8kf.access.hol.gr) has joined #rust-beginners
2018-09-20 14:25:25	clarkema	For now though, time to get some food. Thanks again kimundi!
2018-09-20 14:25:38	<--	clarkema (clarkema@moz-vo1829.karoo.kcom.com) has quit (Client exited)
2018-09-20 14:26:06	dikinova	kimundi: thanks, but i still don't follow you.  you mean, when the array returned, it is copied to the main function frame?
2018-09-20 14:27:40	<--	raingloom (raingloom@moz-r4fk1q.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-20 14:27:44	kimundi	dikinova: yes, but its semantically a move
2018-09-20 14:27:46	<--	alatiera_ (alatiera@moz-4vsfg2.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 14:27:52	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 14:27:53	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 14:27:55	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 14:27:58	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 14:28:01	kimundi	since there is only accessible instance before and after
2018-09-20 14:29:00	kimundi	dikinova: copy vs move in Rust is about the logical operation: "Is the original location still accessible afterwards"
2018-09-20 14:29:19	kimundi	But the actual behavior and generated code is the same for both
2018-09-20 14:31:52	dpc1	dikinova: you got an answer on the forum too :)
2018-09-20 14:32:02	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 14:32:02	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 14:32:02	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 14:32:23	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:32:29	-->	alatiera_ (alatiera@moz-492is8.access.hol.gr) has joined #rust-beginners
2018-09-20 14:33:50	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (The TLS connection was non-properly terminated.)
2018-09-20 14:34:32	dikinova	dpc1 kimundi: thanks
2018-09-20 14:35:16	<--	alatiera__ (alatiera@moz-2us8kf.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 14:37:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 14:37:17	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-20 14:37:26	dpc1	:)
2018-09-20 14:38:04	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 14:39:01	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-20 14:39:31	-->	nairware (CELLIS-W10@moz-p67.9ua.206.67.IP) has joined #rust-beginners
2018-09-20 14:39:52	-->	faitswulff (faitswulff@moz-16pbrm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 14:40:42	-->	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has joined #rust-beginners
2018-09-20 14:41:23	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 14:42:32	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-20 14:42:34	jeromegn	is it possible to `take(1)` on a `futures::stream::Stream` and get a "single" Future? I'm using `Box::new(stream.take(1).and_then())` but that future is not compatible with `Future<Item = Something, Error = String>`.
2018-09-20 14:42:35	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:44:26	stephaneyfx	jeromegn: You can use .into_future().map(...)
2018-09-20 14:44:48	jeromegn	After take?
2018-09-20 14:45:02	stephaneyfx	jeromegn: Note that this will give you Future<Item = Option<Something>>
2018-09-20 14:45:12	stephaneyfx	No, instead of `take`
2018-09-20 14:45:24	-->	taorg (textual@moz-6f0r06.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-20 14:45:25	stephaneyfx	That is, stream.into_future().map(...)
2018-09-20 14:46:01	jeromegn	Oh and that just gives me 1? I need this future to stop after 1 (getting it from a future channel)
2018-09-20 14:46:17	stephaneyfx	1 or zero
2018-09-20 14:47:07	stephaneyfx	It gives you a Future that resolves to the next item (if any, otherwise None) and the remaining Stream (which you can discard)
2018-09-20 14:48:17	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 14:48:30	jeromegn	oh, interesting
2018-09-20 14:50:48	<--	Bill (Bill@moz-o541gg.41vf.jq5i.0e34.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:52:06	-->	siddhartharao17 (siddharthar@moz-t78lin.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-20 14:52:20	elichai2	I'm pretty sure I'm misunderstanding how iterators/closures works, can anyone point me to why i'm doing this wrong? thanks! https://play.rust-lang.org/?gist=510a65414a6b9b3f6fcde14c1e39eb0d
2018-09-20 14:52:31	jeromegn	stephaneyfx: in which conditions will it give me a None?
2018-09-20 14:53:11	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:53:36	jeromegn	oh, if the stream terminates
2018-09-20 14:53:37	jeromegn	I see!
2018-09-20 14:53:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 14:54:28	<--	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-20 14:54:29	-->	dmerigoux (quassel@moz-af1vp6.ip-193-70-87.eu) has joined #rust-beginners
2018-09-20 14:55:51	-->	siddhart_ (siddharthar@moz-ue1qck.fefe.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-20 14:56:11	sdrodge	Is there a cleaner way to convert an iterator of (&&str, &f64) items into an iterator of (&str, f64) items than doing .map(|(s, x)| (*s, *x))
2018-09-20 14:56:11	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-20 14:56:19	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 14:57:00	-->	mib_00spwo (Mibbit@moz-b52.lv4.204.49.IP) has joined #rust-beginners
2018-09-20 14:57:09	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-20 14:57:13	<--	siddhartharao17 (siddharthar@moz-t78lin.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 14:57:13	<--	mib_00spwo (Mibbit@moz-b52.lv4.204.49.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 14:57:17	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 14:58:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 14:58:36	kimundi	sdrodge: don't think so
2018-09-20 14:58:51	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 14:59:50	-->	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has joined #rust-beginners
2018-09-20 15:00:50	-->	pachuco (Mibbit@moz-mfi0p5.versanet.de) has joined #rust-beginners
2018-09-20 15:01:04	-->	alatiera__ (alatiera@moz-9de8aq.access.hol.gr) has joined #rust-beginners
2018-09-20 15:01:11	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-20 15:01:20	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:01:32	-->	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has joined #rust-beginners
2018-09-20 15:01:41	<--	taorg (textual@moz-6f0r06.dynamicip.rima-tde.net) has quit (Ping timeout: 121 seconds)
2018-09-20 15:03:00	<--	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-20 15:03:23	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:03:46	<--	alatiera_ (alatiera@moz-492is8.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 15:04:20	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-20 15:05:38	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (The TLS connection was non-properly terminated.)
2018-09-20 15:06:34	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-20 15:07:57	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-20 15:08:35	-->	siggi_t (jb@moz-p4ai8h.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-20 15:09:04	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 15:09:37	-->	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-20 15:11:18	pachuco	hello, could somebody look at my codeblock extract function and do a little code-review on how i may improve it :)? https://play.integer32.com/?gist=d177915485f769178ae46cd8c529945d&version=stable&mode=debug&edition=2015
2018-09-20 15:11:21	<--	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 15:11:34	pachuco	the main contains tests
2018-09-20 15:11:47	-->	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-20 15:13:36	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:13:44	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 15:14:48	<--	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 15:14:52	-->	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-20 15:14:58	siggi_t	Some time ago someone posted a link to a website where you could paste your code and have a look at the assembly, etc. It was kind of like the playground but in more detail. You would have a colored highlighting of the rust to assembly mapping (per line?). Does anyone know what site I'm speaking of?
2018-09-20 15:15:24	sarnold	godbolt
2018-09-20 15:15:39	sarnold	https://rust.godbolt.org/#
2018-09-20 15:16:44	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-20 15:17:02	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-20 15:17:15	siggi_t	sarnold: Yes, that's it!! Thank you so much!
2018-09-20 15:17:22	sarnold	:D
2018-09-20 15:17:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 15:18:27	-->	alatiera_ (alatiera@moz-fnhtp7.access.hol.gr) has joined #rust-beginners
2018-09-20 15:18:30	<--	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 15:18:34	-->	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-20 15:19:17	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 15:19:31	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-20 15:20:02	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-20 15:20:34	Herby	  o/
2018-09-20 15:21:01	-->	mudpit (Mibbit@moz-tda.d3o.220.37.IP) has joined #rust-beginners
2018-09-20 15:21:04	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-20 15:21:16	<--	alatiera__ (alatiera@moz-9de8aq.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 15:21:45	<--	mudpit (Mibbit@moz-tda.d3o.220.37.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 15:22:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 15:23:50	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:24:04	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-20 15:24:14	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-20 15:25:15	-->	emerent (emerentius@moz-0o8q0v.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 15:26:58	<--	dler (Mibbit@moz-01h.ms3.12.31.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 15:27:28	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-20 15:27:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 15:28:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 15:29:16	-->	jolisper (jolisper@moz-liv.vra.119.181.IP) has joined #rust-beginners
2018-09-20 15:29:30	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 15:30:13	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-20 15:30:30	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:30:42	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-20 15:30:55	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 15:31:09	-->	hryniuk (hryniuk@moz-6p53rs.dialog.net.pl) has joined #rust-beginners
2018-09-20 15:32:01	<--	j0nthn (jonathan@moz-6br3pp.rev.sfr.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-20 15:32:24	-->	alatiera__ (alatiera@moz-ihv2tj.access.hol.gr) has joined #rust-beginners
2018-09-20 15:32:51	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:33:54	<--	Undead_Leech_ (Mibbit@moz-l4h.nt9.200.195.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 15:34:01	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:34:15	<--	siggi_t (jb@moz-p4ai8h.pools.vodafone-ip.de) has quit (Quit: Leaving.)
2018-09-20 15:35:16	<--	alatiera_ (alatiera@moz-fnhtp7.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 15:35:24	-->	Bill (Bill@moz-o541gg.41vf.jq5i.0e34.2a01.IP) has joined #rust-beginners
2018-09-20 15:35:47	-->	jvillasante (jvillasante@moz-dm8gin.cust.tzulo.com) has joined #rust-beginners
2018-09-20 15:36:31	<--	jvillasante (jvillasante@moz-dm8gin.cust.tzulo.com) has left #rust-beginners
2018-09-20 15:36:31	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-20 15:36:33	-->	jvillasante (jvillasante@moz-dm8gin.cust.tzulo.com) has joined #rust-beginners
2018-09-20 15:37:03	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-20 15:37:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 15:37:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 15:38:14	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-20 15:38:25	jvillasante	So, I came accross iterators, finaly and is super confusing. for a `Vec` the iterator returned from `iter()` yields references and the iterator returned from `into_iter()` yields values, but for an `array` they both yield references. What is going on here? 
2018-09-20 15:38:26	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-20 15:38:44	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-20 15:39:01	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-20 15:39:42	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 15:40:00	jvillasante	I was thinking that, `iter()` will borrow and `into_iter()` will move. But it seems that's not the case, it is dependent on the actual type you're iterating
2018-09-20 15:40:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-20 15:41:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 15:41:26	sarnold	"An array itself is not iterable:" -- https://doc.rust-lang.org/std/primitive.array.html -- are you sure you've tested what you think you've tested?
2018-09-20 15:41:27	<--	somewone (somewone@moz-rg0.h2s.113.141.IP) has quit (Connection closed)
2018-09-20 15:41:32	<--	JAlbers (jalbers@moz-gbmisn.il.comcast.net) has quit (Connection closed)
2018-09-20 15:41:37	<--	dikinova (Mibbit@moz-ke1.4sb.91.47.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 15:41:54	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 15:42:17	-->	somewone (somewone@moz-6bn.h2s.113.141.IP) has joined #rust-beginners
2018-09-20 15:42:56	-->	justsomequestions (gumble@moz-5kv.9af.94.194.IP) has joined #rust-beginners
2018-09-20 15:42:59	jvillasante	I didn't test it, I know the why but it seems like a hack
2018-09-20 15:43:34	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:43:46	jvillasante	I mean, on C++ you iterate over something that give you an iterator that when dereferenced gives you the value_type
2018-09-20 15:43:58	-->	mohan43u (mohan43u@moz-32u.fsr.23.1.IP) has joined #rust-beginners
2018-09-20 15:43:59	jvillasante	anywyas, I have to read more about this
2018-09-20 15:44:00	jvillasante	:)
2018-09-20 15:44:13	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:44:38	jvillasante	Basically: So, `iter()` will borrow for `Vec` and `array` but `into_iter()` will move for `Vec` and borrow for `array`
2018-09-20 15:44:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 15:45:08	jvillasante	it is that defining an API that says. This is how it works, except when the underlying type is an array it works differently
2018-09-20 15:45:15	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-20 15:45:16	<--	jolisper (jolisper@moz-liv.vra.119.181.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 15:45:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:45:29	jvillasante	oh wait, is there any other underlying type where it works differently?
2018-09-20 15:45:56	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:46:13	<--	justsomequestions (gumble@moz-5kv.9af.94.194.IP) has quit (Connection closed)
2018-09-20 15:46:47	-->	alx741 (alx741@moz-tgq.k67.178.186.IP) has joined #rust-beginners
2018-09-20 15:47:11	jvillasante	Or another way to say it: `iter()` and `iter_mut()` are consistent whatever the underlying type, they both yield `reference` or `mut reference`. But `into_iter` is dependent on context, which is weird
2018-09-20 15:47:21	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-20 15:48:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 15:48:21	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 15:48:30	sarnold	jvillasante: how about &foo vs owned-foo?
2018-09-20 15:49:06	<--	federico_ (federico@moz-obq.vbi.108.201.IP) has quit (Quit: Leaving)
2018-09-20 15:49:40	sebk	legacy.
2018-09-20 15:49:41	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-20 15:49:55	sarnold	https://rust-lang-nursery.github.io/api-guidelines/naming.html#c-iter  may also be relevant?
2018-09-20 15:49:55	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 15:49:57	sebk	iter() is a function that only has some conventions
2018-09-20 15:50:03	sebk	nothing binding
2018-09-20 15:50:13	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-20 15:50:22	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-20 15:50:24	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-20 15:50:31	sebk	arrays could implement into_iter() to yield items
2018-09-20 15:50:37	sebk	but they don't
2018-09-20 15:50:41	pachuco	can somebody maybe give a little code review for my codeblock extraction function? https://play.integer32.com/?gist=0a244ee8879786b54e6ead7c60cc67d7&version=stable&mode=debug&edition=2015
2018-09-20 15:51:07	jvillasante	as a newbie I look at `into_iter` and it takes `self`, so I would think it would be moved
2018-09-20 15:51:14	sebk	pachuco: can you give me the link to the raw text?
2018-09-20 15:51:17	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 15:51:24	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-20 15:51:25	jvillasante	now, moving for arrays is not cheap, why then implement `IntoIter` for arrays in the first place?
2018-09-20 15:51:55	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-20 15:51:58	 *	sebk does not know
2018-09-20 15:52:05	pachuco	sebk is gist okay? https://gist.github.com/rust-play/2ce79031b8fc3e1de62ec4faa7248898
2018-09-20 15:52:07	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Connection closed)
2018-09-20 15:52:14	-->	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has joined #rust-beginners
2018-09-20 15:52:15	kimundi	jvillasante: Its actually the case that arrays _don't_ implement into_iter().
2018-09-20 15:52:26	pachuco	the main function contains a test that is a bit messy due to raw strings
2018-09-20 15:52:30	kimundi	Rather, it does a autref and calls &[T]'s into_iter() implementation
2018-09-20 15:53:10	kimundi	which is actually a kinda sad blocker for a future in which we actually _could_ implement into_iter on arrays, and would want to do so
2018-09-20 15:53:20	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-20 15:53:32	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 15:53:36	jvillasante	Ohh, ok... it works throug deref coersion?
2018-09-20 15:53:38	kimundi	(About it being cheap or expensive: it depends on how large your array is)
2018-09-20 15:53:39	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-20 15:53:59	jvillasante	[T] does not implement it, &[T] does and rust is happy doing the coersion
2018-09-20 15:54:02	kimundi	jvillasante: Well its, not deref coercion, just auto-ref and normal coercion
2018-09-20 15:54:11	sebk	pachuco: what happens when the code contains "// >>>" ?
2018-09-20 15:54:15	<--	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-20 15:54:17	kimundi	"deref coercion" is going &T -> &U automatically
2018-09-20 15:54:31	kimundi	[T] -> &[T] is autoref
2018-09-20 15:54:38	-->	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has joined #rust-beginners
2018-09-20 15:54:40	jvillasante	@kimundi Ok, thanks
2018-09-20 15:54:42	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-20 15:54:43	jvillasante	I get it now!
2018-09-20 15:54:46	kimundi	and autoref only happens on method calls, as opposed to deref coercions
2018-09-20 15:54:48	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:55:00	pachuco	sebk: when the code contains >>>, the forum will not parse it properly anyway, one would have to escape it 
2018-09-20 15:55:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:55:24	jvillasante	@kimundi any doc that talks more about autoref, deref?
2018-09-20 15:55:30	-->	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has joined #rust-beginners
2018-09-20 15:55:52	kimundi	Presumably the rust book and/or reference
2018-09-20 15:56:42	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-20 15:57:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 15:57:29	pachuco	sebk: just tested it, you cannot post >>> inside the code blocks :S
2018-09-20 15:57:35	pachuco	so it's whatever
2018-09-20 15:57:44	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-20 15:57:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 15:57:58	<--	mohan43u (mohan43u@moz-32u.fsr.23.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:58:38	-->	Urania (textual@moz-bss.hnj.1.35.IP) has joined #rust-beginners
2018-09-20 15:59:50	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-20 15:59:50	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-20 15:59:53	<--	siddhart_ (siddharthar@moz-ue1qck.fefe.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 15:59:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 16:00:11	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-20 16:00:29	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 16:00:57	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 16:00:57	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 16:01:36	<--	Urania (textual@moz-bss.hnj.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 16:02:07	<--	paulvt (paul.van.ti@moz-5svlqa.fb56.nn7d.a446.2a02.IP) has quit (Client exited)
2018-09-20 16:04:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:04:51	-->	snowe (snowe@moz-ri3.15m.177.128.IP) has joined #rust-beginners
2018-09-20 16:05:02	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:07:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 16:08:02	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-20 16:08:42	<--	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has quit (Quit: Leaving)
2018-09-20 16:08:52	-->	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-20 16:10:17	-->	siddhartharao17 (siddharthar@moz-ue1qck.fefe.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-20 16:10:42	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 16:13:54	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 16:14:12	<--	jvillasante (jvillasante@moz-dm8gin.cust.tzulo.com) has quit (Quit: )
2018-09-20 16:14:12	-->	mib_6mj3v2 (Mibbit@moz-7aqaoe.moscow.rt.ru) has joined #rust-beginners
2018-09-20 16:14:22	<--	mib_6mj3v2 (Mibbit@moz-7aqaoe.moscow.rt.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 16:14:31	sebk	looks good otherwise
2018-09-20 16:14:43	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 16:14:46	sebk	actually, you could return Vec<&str>
2018-09-20 16:14:51	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-20 16:15:06	pachuco	i was worried about the tons of if lets and breaks sebk oh, yea i guess
2018-09-20 16:15:15	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:15:40	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 16:15:43	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 16:15:47	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 16:16:29	sebk	let block = block + progress;
2018-09-20 16:16:40	sebk	thats suboptimal (shadows a variable with a different value)
2018-09-20 16:17:25	-->	Urania (textual@moz-bss.hnj.1.35.IP) has joined #rust-beginners
2018-09-20 16:17:48	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 16:18:04	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Quit: Leaving)
2018-09-20 16:18:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 16:18:20	pachuco	sebk i am surprised += is not implemented for usize actually
2018-09-20 16:19:32	pachuco	sebk: hm, yea i use a lot of shadowing because the slice indexes i get are always not considering the already done advancement
2018-09-20 16:19:39	gentlehelm	how can i make a function public for unit testing purposes?
2018-09-20 16:19:40	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-20 16:19:42	ilmari	pachuco: it is: https://doc.rust-lang.org/std/primitive.usize.html#impl-AddAssign%3Cusize%3E
2018-09-20 16:19:47	sebk	it is
2018-09-20 16:19:49	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 16:19:49	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 16:19:50	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 16:19:56	pachuco	so why does rust complain?
2018-09-20 16:19:58	gentlehelm	or rather, how can i test a private function?
2018-09-20 16:20:06	sebk	while let Some(mut block) = …
2018-09-20 16:20:15	<--	somewone (somewone@moz-6bn.h2s.113.141.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 16:20:21	ilmari	eval: let mut foo: usize  = 42; foo += 37; foo
2018-09-20 16:20:24	--	Notice(eval): 79
2018-09-20 16:20:39	pachuco	sebk: it says: expected one of `:` , ...
2018-09-20 16:20:44	sebk	gentlehelm: put #[test] test_function() { func(); } into the code
2018-09-20 16:20:55	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 16:21:05	ilmari	pachuco: please show actual code and error in the playground
2018-09-20 16:21:23	sebk	eval: if let Some(mut i) = Some(1) { i += 1; }
2018-09-20 16:21:25	--	Notice(eval): ()
2018-09-20 16:21:44	pachuco	oh wait, it works in the playground but not on my computer 
2018-09-20 16:21:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:22:23	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-20 16:22:24	pachuco	probably rls error
2018-09-20 16:23:28	<--	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:23:45	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-20 16:25:27	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:26:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 16:27:11	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-20 16:27:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 16:27:50	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-20 16:27:58	-->	mib_583w33 (Mibbit@moz-opk9ij.ca.comcast.net) has joined #rust-beginners
2018-09-20 16:28:40	mib_583w33	Do the arms in a match statement define a scope?
2018-09-20 16:28:57	mib_583w33	Also does the same thing apply for a while loop?
2018-09-20 16:29:05	mib_583w33	things inside of { } are dopped?
2018-09-20 16:29:08	mib_583w33	dropped?
2018-09-20 16:29:09	-->	alatiera_ (alatiera@moz-5r8p40.access.hol.gr) has joined #rust-beginners
2018-09-20 16:29:29	gentlehelm	yes
2018-09-20 16:29:30	sebk	yes
2018-09-20 16:29:37	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:29:38	gentlehelm	every {} is a "new scope"
2018-09-20 16:30:03	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 16:30:04	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 16:30:15	gentlehelm	but you can make it return to a var in a let statement
2018-09-20 16:30:38	gentlehelm	like `let x = if y > 1 { y + 1 } else { y - 1 };
2018-09-20 16:30:43	gentlehelm	`
2018-09-20 16:30:51	-->	simonadameit (simonadamei@moz-m6e5ch.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 16:31:07	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 16:31:46	<--	alatiera__ (alatiera@moz-ihv2tj.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 16:31:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:32:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 16:32:49	mib_583w33	So you can't assign a reference to something new in a { .. } without it being dropped.
2018-09-20 16:33:20	-->	mib_c3p99v (Mibbit@moz-qt0jsv.dynamic.orange.es) has joined #rust-beginners
2018-09-20 16:33:30	sebk	the same rules apply as with every block
2018-09-20 16:33:40	-->	ggbit (Mibbit@moz-3dqv43.ip76.fastwebnet.it) has joined #rust-beginners
2018-09-20 16:34:32	gentlehelm	if you wanna use something created in that block you could just return it
2018-09-20 16:34:54	sebk	everything is dropped, unless it moved
2018-09-20 16:35:30	gentlehelm	if the last stmt is an expression it is moved
2018-09-20 16:35:38	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:35:49	mib_c3p99v	Hi, I've just started wiyth rust and don't fully understand how slices can help 
2018-09-20 16:36:21	-->	a_chou (Thunderbird@moz-fpscad.fios.verizon.net) has joined #rust-beginners
2018-09-20 16:36:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 16:36:32	-->	insidious (insidious@moz-cfo.dfl.198.134.IP) has joined #rust-beginners
2018-09-20 16:36:44	<--	seiji (seiji@moz-766438.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-20 16:36:46	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-20 16:37:52	Fr0stBit	Ok guys i'm learning Rust and porting some engine code over and I need a little help: https://play.rust-lang.org/?gist=7c721f98a45a137a9645329d50e71825&version=nightly&mode=debug&edition=2018
2018-09-20 16:38:17	Fr0stBit	I'm trying to figure out how can i make function pointers work
2018-09-20 16:38:31	<--	mib_c3p99v (Mibbit@moz-qt0jsv.dynamic.orange.es) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 16:38:49	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 16:38:54	-->	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has joined #rust-beginners
2018-09-20 16:39:38	ZeroWalker	if i use a for loop enumerate, shouldn't the borrow give back ownership once it's done:s?
2018-09-20 16:40:08	pachuco	sebk thanks for your code review : ) i replaced all overshadowing with mutables now 
2018-09-20 16:40:22	cmyr	I believe `for` uses into_iter under the hood, which consumes the collection.
2018-09-20 16:40:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:40:41	ZeroWalker	oh
2018-09-20 16:40:45	pachuco	sebk: and put Vec<&'a str> as return type
2018-09-20 16:40:47	cmyr	you can explicitly do, say, `for item in collection.iter()` to borrow
2018-09-20 16:40:49	ZeroWalker	are there alternativees maybe?
2018-09-20 16:40:53	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-20 16:40:55	ZeroWalker	ah
2018-09-20 16:41:03	cmyr	iter borrows, into_iter consumes.
2018-09-20 16:41:14	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:41:20	ZeroWalker	ah okay, just tried into_iter so explains why that didn't change anything
2018-09-20 16:41:31	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 16:42:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 16:42:32	ZeroWalker	okay it doesn't even have .iter() sadly
2018-09-20 16:42:38	cmyr	what is it?
2018-09-20 16:42:52	ZeroWalker	an excel data type thing, calamine
2018-09-20 16:43:09	cmyr	but it has into_iter?
2018-09-20 16:43:13	ZeroWalker	yeah
2018-09-20 16:43:47	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Connection closed)
2018-09-20 16:43:59	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-20 16:44:14	GreenJello	Fr0stBit, I don't think you can use a function pointer for a struct method
2018-09-20 16:44:20	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-20 16:44:54	Fr0stBit	GreenJello: I've done it somehow a year ago
2018-09-20 16:45:00	Fr0stBit	Why did i toss that code..
2018-09-20 16:45:27	<--	himi (sjjf@moz-e6bo53.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:45:52	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:45:54	cmyr	ZeroWalker: let me try and find some docs
2018-09-20 16:46:00	-->	re-l124c41 (re-l124c41@moz-6aiql6.4kh6.ni31.0908.2a02.IP) has joined #rust-beginners
2018-09-20 16:46:19	cmyr	what type are you dealing with?
2018-09-20 16:46:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 16:47:07	<--	eibwen (eibwen@moz-hko7r1.wlan.hu-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-20 16:47:34	ZeroWalker	cmyr, https://docs.rs/calamine/0.14.6/calamine/struct.Rows.html
2018-09-20 16:47:35	<--	pachuco (Mibbit@moz-mfi0p5.versanet.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 16:47:46	cmyr	ah okay
2018-09-20 16:47:56	cmyr	so Rows is itself an iterator over some other borrowed data.
2018-09-20 16:48:17	cmyr	once you've consumed it, you've consumed it, but making another one should be cheap.
2018-09-20 16:49:14	cmyr	you can also convert it a collection like a Vec, if you need more controlled access to various items
2018-09-20 16:49:19	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-09-20 16:49:22	ZeroWalker	so it just consumes the iterator, not the data it can access?
2018-09-20 16:49:33	<--	uberjay (uberjay@moz-19ghv2.zanq.org) has quit (Quit: Leaving...)
2018-09-20 16:49:38	-->	uberjay (uberjay@moz-3jlplg.paradoxical.net) has joined #rust-beginners
2018-09-20 16:49:50	cmyr	yea, it consumes the iterator, and each item it produces is a reference to the underlying data.
2018-09-20 16:50:02	ZeroWalker	ah
2018-09-20 16:50:17	cmyr	...I'm sort of assuming that's what's going on, but I think it's a fair assumption.
2018-09-20 16:50:42	ZeroWalker	sounds logical, will just make a new iterator then:)
2018-09-20 16:51:13	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-20 16:51:32	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 16:51:35	cmyr	yea I think that's reasonable
2018-09-20 16:51:46	<--	Icefoz (Icefoz@moz-ej1n77.alopex.li) has left #rust-beginners ("foo!")
2018-09-20 16:52:16	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 16:52:33	-->	krebbit (Mibbit@moz-90f.2pt.189.64.IP) has joined #rust-beginners
2018-09-20 16:53:50	-->	alatiera__ (alatiera@moz-p69ve4.access.hol.gr) has joined #rust-beginners
2018-09-20 16:53:55	ZeroWalker	ty
2018-09-20 16:54:18	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 16:54:40	Fr0stBit	Can somebody explain me this: 
2018-09-20 16:54:42	Fr0stBit	5 |     update_cb: Fn(f32),
2018-09-20 16:54:44	Fr0stBit	  |     ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
2018-09-20 16:54:59	cmyr	yea, there's a good section in the book...
2018-09-20 16:55:17	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:55:17	cmyr	https://doc.rust-lang.org/book/second-edition/ch19-05-advanced-functions-and-closures.html
2018-09-20 16:55:39	Fr0stBit	Oh i haven't reached that far, thanks
2018-09-20 16:55:51	cmyr	basically you need to put the closure/fn on the heap
2018-09-20 16:55:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 16:56:46	<--	alatiera_ (alatiera@moz-5r8p40.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 16:57:21	<--	napoleon (Mibbit@moz-gsr.v1q.152.61.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 16:57:24	-->	eyans (a@moz-c877d3.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-20 16:57:35	sebk	Fr0stBit: you can use Box<Fn(f32)> for now
2018-09-20 16:57:50	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-20 16:57:59	kimundi	cmyr: (any kind of pointer indirection will do actually, doesn't need to be the heap specifically)
2018-09-20 16:58:03	sebk	(that gives it a fixed size)
2018-09-20 16:58:22	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 16:58:30	Fr0stBit	Can Box<> hold an Option<Fn>?
2018-09-20 16:58:37	<--	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2018-09-20 16:58:39	cmyr	kimundi: okay yea, thanks, that's conceptually clearer too
2018-09-20 16:58:44	-->	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has joined #rust-beginners
2018-09-20 16:59:01	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 16:59:05	sebk	Option<Box<Fn>> will work
2018-09-20 16:59:13	gentlehelm	Fr0stBit: Box can hold almost anything
2018-09-20 16:59:30	cmyr	it's a _very_ big box
2018-09-20 16:59:44	Fr0stBit	sebk: Yep just tried that
2018-09-20 16:59:53	Fr0stBit	works, i got different errors now XD
2018-09-20 16:59:59	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 17:00:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:00:50	gentlehelm	yep, that's progress
2018-09-20 17:00:51	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:01:00	<--	a_chou (Thunderbird@moz-fpscad.fios.verizon.net) has quit (Client exited)
2018-09-20 17:01:21	<--	faitswulff (faitswulff@moz-16pbrm.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 17:01:49	drozdziak1	How do I ask serde to default a given field to another field in the same struct?
2018-09-20 17:01:52	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:01:54	-->	faitswulff (faitswulff@moz-16pbrm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 17:01:54	<--	faitswulff (faitswulff@moz-16pbrm.94t7.i167.1702.2600.IP) has quit (Connection closed)
2018-09-20 17:01:56	-->	faitswulff (faitswulff@moz-16pbrm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-20 17:01:58	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 17:02:15	<--	krebbit (Mibbit@moz-90f.2pt.189.64.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 17:02:56	<--	fsasm (fsasm@moz-5fd.qra.178.62.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:03:00	-->	himi (sjjf@moz-r3ta53.internode.on.net) has joined #rust-beginners
2018-09-20 17:04:01	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-20 17:04:13	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 17:05:12	-->	jperras_ (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-20 17:05:31	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Connection closed)
2018-09-20 17:06:06	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-20 17:06:30	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:08:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:08:39	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 17:09:27	<--	jperras_ (jperras@moz-07dvop.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-20 17:09:39	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Connection closed)
2018-09-20 17:10:10	-->	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has joined #rust-beginners
2018-09-20 17:10:31	<--	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has left #rust-beginners
2018-09-20 17:11:19	Fr0stBit	Ok, how should i add lifetimes in Boxes to make this thing valid? https://play.rust-lang.org/?gist=b12fe306df410a3662d7dd0de3b16ce7&version=nightly&mode=debug&edition=2018
2018-09-20 17:12:20	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 17:12:34	<--	siddhartharao17 (siddharthar@moz-ue1qck.fefe.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 17:12:48	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-20 17:12:50	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 17:12:55	ZeroWalker	can i return a result/option that may be unitialized, and use that as an error?
2018-09-20 17:13:34	<--	ggbit (Mibbit@moz-3dqv43.ip76.fastwebnet.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 17:14:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:14:10	sebk	the default 'static is probably best
2018-09-20 17:14:28	sebk	ZeroWalker: no
2018-09-20 17:14:43	sebk	you cannot return uninitialized values in safe rust
2018-09-20 17:14:48	kimundi	Fr0stBit: Don't have much time for explanaitions right now, but I can tell you that conceptually what you are trying there will not work - you can not have multiple closures that capture the "game" variable mutably at the sam time
2018-09-20 17:15:06	ZeroWalker	can i have some check (if unitialized, return none) etc?
2018-09-20 17:15:24	sebk	if you already use Option, why not use None instead?
2018-09-20 17:15:39	sebk	how do you check against uninitialized?
2018-09-20 17:15:50	sebk	it is UB to read an uninitialized value
2018-09-20 17:16:03	Fr0stBit	kimundi: What would be a better design? I'm trying to abstract the mainloop from the actual functions it will use (different platforms use different loops in games e.g. for mobile i need to use a constant game loop)
2018-09-20 17:16:07	sebk	Fr0stBit: you can use Fn(&mut Game)
2018-09-20 17:16:07	ZeroWalker	well thing is, i don't know before hand if it's valid or not. I grab data in a for loop
2018-09-20 17:16:13	kimundi	But just for completness: Box<Fn()> is actually short for  Box<Fn() + 'static>. You need to either make sure the closure has a static bound by using the `mover |..|` syntax to capture all variables by value, or you could change it to Box<Fn() + 'a> and add lifetiem parameters to the struct
2018-09-20 17:16:36	ZeroWalker	i can just give the integer some absurd value as a check if that's what it takes
2018-09-20 17:16:50	kimundi	ZeroWalker: You could make ti so that each closure gets passed a &mut Game as a argument instead
2018-09-20 17:16:51	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:16:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:17:14	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:17:15	ZeroWalker	guess that wasn't for me?
2018-09-20 17:17:22	sebk	ZeroWalker: hmm
2018-09-20 17:17:29	kimundi	Ah sorry, @ Fr0stBit 
2018-09-20 17:17:40	sebk	why not let mut data = None; loop { … data = Some(actual data); }
2018-09-20 17:17:46	<--	Bill (Bill@moz-o541gg.41vf.jq5i.0e34.2a01.IP) has quit (Quit: Leaving)
2018-09-20 17:19:26	Fr0stBit	kimundi: Would making MainLoopData<T> be a more viable option, and then holding a &mut T ref in struct, that i will use in turn to pass into the functions?
2018-09-20 17:19:55	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 17:19:59	ZeroWalker	sebk, i am stupid lol, you can clearly do that, you can even return from the loop in my case and just have None outside xd
2018-09-20 17:20:01	kimundi	sure, that could work
2018-09-20 17:20:56	KiChjang	how do you return an Option<&mut T> if you have a Vec<Box<T>>?
2018-09-20 17:21:30	Fr0stBit	Another quick question: If i have a struct that has a &mut userdata member, and i wanna pass this ref to another struct do i still need to do &mut some_struct.userdata or some_struct.data is enough?
2018-09-20 17:21:35	kimundi	Uhm, that depends on the operation between thiose two types
2018-09-20 17:21:44	kimundi	(@ KiChjang )
2018-09-20 17:21:52	KiChjang	is it just as simple as fn get_mut(&self, index: usize) -> Option<&mut T> { self.vec.get(index).map(|x| &*x) }
2018-09-20 17:22:07	KiChjang	kinda makes me doubt that &*
2018-09-20 17:22:12	kimundi	Some(&mut *vec[0]) would work for example
2018-09-20 17:22:28	KiChjang	but that'll panic if 0 doesn't exist
2018-09-20 17:22:31	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 17:22:33	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 17:22:39	KiChjang	unless you wanna do a range check before
2018-09-20 17:22:39	kimundi	That was not part of your original question :P
2018-09-20 17:22:48	KiChjang	that is not rust is about if it just panics
2018-09-20 17:22:49	kimundi	self.vec.get(index).map(|x| &mut *x)
2018-09-20 17:23:01	KiChjang	yeah, wouldn't that &mut *x not be valid though?
2018-09-20 17:23:11	KiChjang	cuz i would think that the ref only exists in that closure
2018-09-20 17:23:15	kimundi	KiChjang: I'd object to that, since panics are a normal part of Rusts API, but whatever :P
2018-09-20 17:23:15	KiChjang	and the lifetime wouldn't be long enough
2018-09-20 17:23:33	kimundi	KiChjang: No? That is perfectly fine
2018-09-20 17:23:44	kimundi	There is no copy/move made into that local scope
2018-09-20 17:23:58	kimundi	ah wait
2018-09-20 17:24:01	kimundi	I see what you mean
2018-09-20 17:24:11	kimundi	.as_mut().map(|x| &mut **x)
2018-09-20 17:24:11	<--	faitswulff (faitswulff@moz-16pbrm.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-20 17:24:29	kimundi	needs to start out as a Option<&mut Box<T>> of course
2018-09-20 17:24:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 17:24:44	kimundi	... which it does with get() though
2018-09-20 17:24:58	KiChjang	yes, i saw Option<&mut Box<T>> and i felt like it's wrong
2018-09-20 17:25:03	kimundi	okay, final version: vec.get_mut(index).map(|x| &mut *x)
2018-09-20 17:25:35	kimundi	If you have a Vec<Box<T>>, then Option<&mut Box<T>> is just what .get_mut() returns
2018-09-20 17:26:53	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-20 17:26:58	<--	simonadameit (simonadamei@moz-m6e5ch.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-20 17:27:04	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:27:06	KiChjang	it is, but there's no reason to expose such a type when a simple Option<&mut T> would just do
2018-09-20 17:27:29	kimundi	sure, hence your question about how to convert that
2018-09-20 17:27:41	shrydar	should "cargo fix" be working on stable at the moment?  
2018-09-20 17:28:01	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-20 17:28:10	shrydar	I'm getting failed to execute compile/Bad relative path on an entirely fresh project, with nothing more than a hello world main.rs
2018-09-20 17:28:29	shrydar	(OS X)
2018-09-20 17:28:40	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-20 17:28:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:29:14	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 17:29:33	-->	Binero (Binero@moz-rt0vju.bacj.ns1j.a03f.2a02.IP) has joined #rust-beginners
2018-09-20 17:30:23	<--	Lilly (Lilly@moz-8r5.b80.132.178.IP) has quit (Quit: Zzz...)
2018-09-20 17:30:44	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 17:30:46	-->	simonadameit (simonadamei@moz-ggdr35.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 17:31:55	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Quit: WeeChat 2.1)
2018-09-20 17:32:18	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-20 17:32:45	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 17:33:54	<--	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has quit (Quit: Leaving)
2018-09-20 17:34:48	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:35:07	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-20 17:36:51	<--	simonadameit (simonadamei@moz-ggdr35.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 17:37:03	-->	qazwsx (Mibbit@moz-fd6.thf.149.169.IP) has joined #rust-beginners
2018-09-20 17:37:05	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:37:17	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:38:07	-->	ChaiTRex (ChaiTRex@moz-h6m.f2j.46.71.IP) has joined #rust-beginners
2018-09-20 17:38:38	-->	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 17:39:24	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-20 17:39:41	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:40:42	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 17:40:53	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-20 17:41:49	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 17:42:42	<--	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 17:42:58	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 17:44:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:44:58	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 17:45:11	-->	Aqo (Aqo@moz-11t4ij.inter.net.il) has joined #rust-beginners
2018-09-20 17:45:41	-->	alatiera_ (alatiera@moz-g5ku23.access.hol.gr) has joined #rust-beginners
2018-09-20 17:45:48	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:45:53	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 17:46:21	-->	mib_dxenl4 (Mibbit@moz-20k.j6l.116.212.IP) has joined #rust-beginners
2018-09-20 17:46:34	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 17:46:35	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 17:47:30	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:48:12	-->	alatiera (alatiera@moz-d83jtc.access.hol.gr) has joined #rust-beginners
2018-09-20 17:48:17	mib_dxenl4	im trying to map the values of a vector using a function `foo` that takes ownership, but `myvec.iter().map(|x| foo(x)).collect();` doesn't work because iterators don't take ownership from the vector
2018-09-20 17:48:21	mib_dxenl4	how can i fix this?
2018-09-20 17:48:47	<--	alatiera__ (alatiera@moz-p69ve4.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 17:48:49	kimundi	iter() -> into_iter()
2018-09-20 17:48:58	Fr0stBit	Ok i managed to fix it guys, but it compiles successfully in nightly, not in stable https://play.rust-lang.org/?gist=516080c18281714254e86a24ee7f90da&version=nightly&mode=debug&edition=2015 why is that?
2018-09-20 17:49:02	<--	hryniuk (hryniuk@moz-6p53rs.dialog.net.pl) has quit (The TLS connection was non-properly terminated.)
2018-09-20 17:49:06	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:49:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 17:50:02	<--	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 17:50:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 17:50:34	-->	alatiera__ (alatiera@moz-qrrqnl.access.hol.gr) has joined #rust-beginners
2018-09-20 17:50:45	<--	alatiera_ (alatiera@moz-g5ku23.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 17:53:10	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 17:53:15	<--	alatiera (alatiera@moz-d83jtc.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 17:53:18	ZeroWalker	does for e in &x  call iter() and otherwise it's into_iter() by default?
2018-09-20 17:53:41	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 17:53:55	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 17:54:02	mib_dxenl4	thanks a ton, i've been looking for this for a while now
2018-09-20 17:54:05	@mbrubeck	ZeroWalker: It calls `(&x).into_iter()` which in the case of types like `&Vec<T>` calls out to `Vec::iter`: https://doc.rust-lang.org/src/alloc/vec.rs.html#1807-1814
2018-09-20 17:54:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 17:54:36	@mbrubeck	That is, `(&x).into_iter()` is the same as `x.iter()`, by convention
2018-09-20 17:55:43	@mbrubeck	Fr0stBit: In stable you have to explicitly put a `T: 'a` bound https://play.rust-lang.org/?gist=8b52a92a7989092ed37c71974eb444af&version=stable&mode=debug&edition=2015
2018-09-20 17:56:12	@mbrubeck	Fr0stBit: This will no longer be needed in Rust 1.30, which will be on the stable channel in late October.
2018-09-20 17:56:28	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 17:56:30	ZeroWalker	ah, the source was hard to understand, not that good with Rust yet to get the relations. But that explains why it behaved the same,
2018-09-20 17:58:59	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-20 17:59:04	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-20 17:59:22	Fr0stBit	mbrubeck: Thank you
2018-09-20 17:59:24	<--	Moongoodgirl{K} (LunarToyK@sugar-belle.blackl.net) has quit (Client exited)
2018-09-20 17:59:40	-->	siddhartharao17 (siddharthar@moz-jdh.sr5.107.128.IP) has joined #rust-beginners
2018-09-20 18:01:24	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 18:03:01	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-20 18:03:07	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-20 18:03:17	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 18:03:27	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 18:03:29	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 18:03:32	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 18:03:36	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 18:04:06	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-20 18:04:35	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:04:35	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:05:21	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-20 18:06:05	<--	ChaiTRex (ChaiTRex@moz-h6m.f2j.46.71.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:07:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 18:07:23	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-20 18:07:36	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:07:36	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:07:36	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:08:08	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:08:18	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Connection closed)
2018-09-20 18:08:28	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-20 18:08:30	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-20 18:09:43	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-20 18:10:07	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-09-20 18:10:11	-->	mib_way60b (Mibbit@moz-mna0nc.res.rr.com) has joined #rust-beginners
2018-09-20 18:11:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:11:32	<--	qazwsx (Mibbit@moz-fd6.thf.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 18:12:42	<--	mib_dxenl4 (Mibbit@moz-20k.j6l.116.212.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 18:13:05	mib_way60b	at the end of chapter 3 of TRPL, there were some exercises that were very helpful and helped me learn a lot, but at the end of chapter 4 there aren't any... Would yall reccomend any?
2018-09-20 18:13:30	mib_way60b	Also are there any Anki (the flashcard app) decks about Rust? I am building one but wonder how complete it is so far.
2018-09-20 18:14:00	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 18:14:12	-->	Aimai (Aimai@moz-8p30d7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 18:14:20	@mbrubeck	mib_way60b: http://intorust.com/ has some relevant exercises
2018-09-20 18:14:57	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 18:15:02	<--	Urania (textual@moz-bss.hnj.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 18:15:19	Aimai	What's the reasoning behind macros being handled differently from traits, structs and functions?
2018-09-20 18:15:31	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-20 18:15:36	ZeroWalker	asked this before i think, don't remember if i got an answe back then. Shouldn't String.truncate(len - 1); String += "X"; be the same as "String.insert(len,"X")"
2018-09-20 18:15:39	Aimai	and is this something that is still subject to change?
2018-09-20 18:15:40	ZeroWalker	hope i wrote that right
2018-09-20 18:16:37	kimundi	ZeroWalker: What is it instead?
2018-09-20 18:16:54	GreenJello	Aimai, https://rust-lang-nursery.github.io/edition-guide/rust-2018/macros/macro-changes.html
2018-09-20 18:17:08	GreenJello	Aimai, the way you import them is changing
2018-09-20 18:17:09	kimundi	ZeroWalker: Though actually, I think the len - 1 would be wrong
2018-09-20 18:17:12	<--	Aimai (Aimai@moz-8p30d7.dip0.t-ipconnect.de) has quit (Quit: Lost terminal)
2018-09-20 18:17:26	-->	Aimai (Aimai@moz-8p30d7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 18:17:28	ZeroWalker	if i remember correctly it didn't end up right with the insert, or it failed, couldn't figure out why
2018-09-20 18:17:34	Aimai	I'm sorry could you post that link again?
2018-09-20 18:17:39	ZeroWalker	that one is waht actually works though
2018-09-20 18:18:06	-->	liquidnight (marcus@moz-a7hfpg.305i.abqi.0c22.2a01.IP) has joined #rust-beginners
2018-09-20 18:18:14	ZeroWalker	kinda tricky at times with this stuff as sometimes the length might be the Actual length, or length + 1 or whatnot xd
2018-09-20 18:18:18	kimundi	ZeroWalker: Can you make a example pn the playground?
2018-09-20 18:18:28	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:18:32	kimundi	ZeroWalker: Usually in Rust everywhere length == length
2018-09-20 18:18:35	<--	laalaa (asdf@moz-vfjfm8.dhcp.inet.fi) has quit (Ping timeout: 121 seconds)
2018-09-20 18:18:46	kimundi	ZeroWalker: Afaik the APIs are very consistent in that regard
2018-09-20 18:19:13	ZeroWalker	not sure waht playground is? but need to replace the stuff i have with the truncate, then i can fix a test case
2018-09-20 18:19:17	ZeroWalker	nice that's great
2018-09-20 18:19:21	kimundi	https://play.rust-lang.org
2018-09-20 18:19:34	-->	Urania (textual@moz-bss.hnj.1.35.IP) has joined #rust-beginners
2018-09-20 18:19:34	kimundi	Youc an poste rust code there and share a link, and its runnable in the browser
2018-09-20 18:19:46	ZeroWalker	in C++ it's a total mess for me, never know what counts for what when it comes to strings haha xd
2018-09-20 18:19:50	ZeroWalker	ah neat
2018-09-20 18:19:57	@mbrubeck	Aimai: https://rust-lang-nursery.github.io/edition-guide/rust-2018/macros/macro-changes.html
2018-09-20 18:19:59	kimundi	In this case, you could show how the two calls you qwrote differ, because that is not obvios to me :P
2018-09-20 18:20:04	Aimai	thanks
2018-09-20 18:21:12	kimundi	ZeroWalker: For Rust just keep in mind that all lengths for Strings are byte lengths unless explicitly stated otherwise - and this is true for all positions as well
2018-09-20 18:21:14	@mbrubeck	Aimai: For some more details, https://rust-lang.github.io/rfcs/1561-macro-naming.html
2018-09-20 18:21:21	<--	elichai2 (uid212594@moz-racuhj.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-20 18:21:52	kimundi	ZeroWalker: Some langauges use char counts instead, but with unicode and utf8 that is very ambiguous and has performance implications
2018-09-20 18:22:02	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-20 18:22:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:22:55	ZeroWalker	never get it with utf8, isn't that 1 byte as well?
2018-09-20 18:23:29	-->	AtumT_ (IRC@moz-idq.5u6.95.179.IP) has joined #rust-beginners
2018-09-20 18:23:34	kimundi	ZeroWalker: In utf8 a unicode codepoint can be encoded in 1-4 bytes
2018-09-20 18:23:52	kimundi	Rust "char" type is a codepoint
2018-09-20 18:24:01	kimundi	(technically a unicode scalar value)
2018-09-20 18:24:12	kimundi	eval: "ä".len()
2018-09-20 18:24:14	--	Notice(eval): 2
2018-09-20 18:24:21	kimundi	eval: 'ä' as u32
2018-09-20 18:24:23	--	Notice(eval): 228
2018-09-20 18:24:28	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 18:25:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 18:25:36	kimundi	So, treating utf8 as bytes is fine, but if want to say "get the first 10 codepoints", then you would need to iterate through the utf8 encoding for all 10 chars to find the actual byte offsets
2018-09-20 18:25:50	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:25:57	kimundi	as opposed to "get the first 10 bytes" where you can just do a pointer offste
2018-09-20 18:26:03	<--	AtumT (IRC@moz-mevkqt.gvt.net.br) has quit (Ping timeout: 121 seconds)
2018-09-20 18:26:50	ZeroWalker	okay did a qwuick test on the site, at least it works, kinda weird though, inserts allow you to give a character beyond what's currently available, or i guess len() isn't what i think it is:s
2018-09-20 18:27:01	ZeroWalker	ehm, okay you kinda lost me there with the code points
2018-09-20 18:27:06	ZeroWalker	eval: 'ä' as u8
2018-09-20 18:27:08	--	Notice(eval): 228
2018-09-20 18:27:56	kimundi	ZeroWalker: insert() "Inserts a character into this String at a byte position."
2018-09-20 18:28:06	ZeroWalker	i am used to the ANSI table, so i always just see 1 byte as being 256 different characters, and index X gives you a certain character
2018-09-20 18:28:12	kimundi	The last location of a string is a valid byte position, considering that you will append the thing anyway
2018-09-20 18:28:14	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 18:28:24	kimundi	as in, the position 1 past the end
2018-09-20 18:28:34	kimundi	and that is always equal to the current length
2018-09-20 18:28:40	ZeroWalker	wait so len is actually, string + 1 byte or something
2018-09-20 18:28:43	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:28:45	ZeroWalker	like a null terminator
2018-09-20 18:28:48	kimundi	no
2018-09-20 18:28:54	ZeroWalker	:(
2018-09-20 18:28:59	kimundi	len == count of elements
2018-09-20 18:29:12	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-20 18:29:14	kimundi	count of elements == offset to get the first location after all other elements
2018-09-20 18:29:15	ZeroWalker	oh
2018-09-20 18:29:20	-->	dfan (Mibbit@moz-iiu.6si.71.137.IP) has joined #rust-beginners
2018-09-20 18:29:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:29:43	kimundi	insert(len, ...) says "insert the data after all other elements"
2018-09-20 18:29:57	kimundi	len - 1 would be "insert before the last element"
2018-09-20 18:30:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 18:30:05	kimundi	Its ll 0-index based
2018-09-20 18:30:17	ZeroWalker	hmm
2018-09-20 18:30:40	ZeroWalker	a bit confusing, but think i get it
2018-09-20 18:30:55	<--	starblue1 (juergen@moz-7qvrtj.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-20 18:30:58	kimundi	Not to confuse you more, but this is also why slicing in Rust is half inclusive: The range 0..10 is the elements 0,1,...,7,8,9
2018-09-20 18:30:59	-->	alatiera_ (alatiera@moz-8h6fdp.access.hol.gr) has joined #rust-beginners
2018-09-20 18:31:04	<--	mib_583w33 (Mibbit@moz-opk9ij.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 18:31:17	kimundi	so foo[x..(x+n)] results in a slice of n elements
2018-09-20 18:31:23	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 18:31:41	ZeroWalker	ah, well i am used to the 0 index system itself, i prefer it, i do hate if they switch between them though 
2018-09-20 18:31:43	Arnavion	To make something clear, the reason   "ä".len()   is 2 is that "ä" is two bytes long, not one byte
2018-09-20 18:32:00	kimundi	ZeroWalker: Yeah, the std lib keeps it consistent in that regard
2018-09-20 18:32:17	Proximyst	eval: "ä".len()
2018-09-20 18:32:19	--	Notice(eval): 2
2018-09-20 18:32:23	ZeroWalker	is it cause of the "" that you get that extra byte?
2018-09-20 18:32:26	Proximyst	interesting, but yeah, probably, Arnavion 
2018-09-20 18:32:31	Arnavion	No.
2018-09-20 18:32:41	Arnavion	It's because it requires two bytes to encode in utf-8
2018-09-20 18:32:43	ZeroWalker	damn this just makes me think of the null terminator lol
2018-09-20 18:32:46	Arnavion	and Rust Strings are utf-8
2018-09-20 18:32:47	kimundi	ZeroWalker: "" is a string literal, which is utf8 encoded, '' is a char literal, which is just the integer value of the codepoint
2018-09-20 18:32:57	kimundi	char has a size of 32 bit for that reason
2018-09-20 18:33:21	Arnavion	As you saw above, 'ä' has a code point of 228, which is > 127, so it cannot be encoded in a single byte
2018-09-20 18:33:27	kimundi	So the binary representation of a char in a string is different that of a standalone char
2018-09-20 18:33:40	ZeroWalker	but, 1 byte = 0-255;s
2018-09-20 18:33:45	<--	alatiera__ (alatiera@moz-qrrqnl.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 18:33:58	-->	alatiera__ (alatiera@moz-7htd80.access.hol.gr) has joined #rust-beginners
2018-09-20 18:33:58	-->	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 18:34:01	kimundi	ZeroWalker: ASCII is 0-127
2018-09-20 18:34:13	Arnavion	If you encoded all 0-255 in a single byte how would you encode the character for codepoint 256 and above?
2018-09-20 18:34:18	kimundi	Which is about the maximum of a "non unicode" standard you can hope for
2018-09-20 18:34:19	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:34:23	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 18:34:25	Arnavion	Read the utf-8 encoding format and you'll figure it out
2018-09-20 18:34:41	@mbrubeck	eval: "ä".as_bytes()
2018-09-20 18:34:45	--	Notice(eval): [195, 164]
2018-09-20 18:35:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 18:35:31	ZeroWalker	so basically, it uses an extension system, kinda like older cpus that could have 1 byte instruction telling it to look at the another table in order to get more than just 256 instructions etc
2018-09-20 18:35:39	Arnavion	The short version is that anything greater than 127 has a 1 in the MSB of the first byte to indicate it's the start of a multi-byte sequence
2018-09-20 18:35:45	-->	alatiera (alatiera@moz-8roppa.access.hol.gr) has joined #rust-beginners
2018-09-20 18:35:45	ZeroWalker	though that just needed 1 byte so that's not the same but
2018-09-20 18:35:49	ZeroWalker	bit*
2018-09-20 18:35:56	@mbrubeck	ZeroWalker: yeah, very similar
2018-09-20 18:35:58	kimundi	ZeroWalker: C++ for example does not really have a convention for the encoding of a std::string or char* literals, so you usually just implicitly assume its ASCII or whatever encoding you got from wherever
2018-09-20 18:36:03	ZeroWalker	yay
2018-09-20 18:36:15	<--	alatiera_ (alatiera@moz-8h6fdp.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 18:36:19	-->	kapoira (Mibbit@moz-pie1qc.user.ono.com) has joined #rust-beginners
2018-09-20 18:37:04	<--	techne (techne@moz-e8j.p3t.76.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:37:12	-->	AtumT (IRC@moz-soe.d2s.113.187.IP) has joined #rust-beginners
2018-09-20 18:37:13	ZeroWalker	yeah i mean i always just see it as 1 byte, 256 characters. i am used to just being able to go by that, so it's kinda weird when it's not like that xd
2018-09-20 18:37:28	<--	AbrarSyed (AbrarSyedZN@moz-18co96.abrarsyed.com) has quit (Ping timeout: 121 seconds)
2018-09-20 18:37:30	<--	AtumT_ (IRC@moz-idq.5u6.95.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:37:35	mib_way60b	mbrubeck: Thanks intorust.com exercise was perfect
2018-09-20 18:37:35	kimundi	ZeroWalker: Its actually a pretty neat encoding with nice properties, like that a shorter encoding is never part of a larger encoding. So searching for the bytes of "ä" will not get you false positives even if you just search for a byte sequence
2018-09-20 18:37:49	kimundi	ZeroWalker: Yeah, its something to get used to
2018-09-20 18:37:54	ZeroWalker	but it make sense that it needs some data in order to extend it
2018-09-20 18:38:07	<--	alatiera__ (alatiera@moz-7htd80.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 18:38:12	-->	kapil___ (uid36151@moz-7g0ahg.highgate.irccloud.com) has joined #rust-beginners
2018-09-20 18:38:27	kapoira	https://play.rust-lang.org/?gist=0b6f26ac7df7a28a6d4ea65fd5338827&version=stable&mode=debug&edition=2015
2018-09-20 18:38:27	kimundi	ZeroWalker: Basically you either live ASCII-only, or get a headache trying to be unicode conform. everything in-between just ends up buggy and subtle wrong
2018-09-20 18:38:55	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:39:04	kapoira	hello where i can post a question about hyper, with hyper-tls to obtain the body of the response in utf8
2018-09-20 18:39:05	ZeroWalker	so you can never not know that a character exists before going through the codepoints, it's clear from the getgo?
2018-09-20 18:39:09	-->	alatiera_ (alatiera@moz-8roppa.access.hol.gr) has joined #rust-beginners
2018-09-20 18:39:15	<--	alatiera (alatiera@moz-8roppa.access.hol.gr) has quit (Connection closed)
2018-09-20 18:39:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:39:39	ZeroWalker	kapoira, i use hyper as well, you know how to get a POST request?
2018-09-20 18:39:40	kimundi	And in the worst case you end up with C++'s wchar, the char type in java, and windows unicode API: The worst aspects of both world-views, without any of the benefits
2018-09-20 18:40:01	ZeroWalker	used wchar_t and windows unicode;)
2018-09-20 18:40:08	kapoira	with the new version of hyper, no....
2018-09-20 18:40:10	<--	moltonel (moltonel@moz-537.aik.43.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:40:27	ZeroWalker	though as i always just use the default characters, it's all fine most of the time so never ran into any issues
2018-09-20 18:40:54	ZeroWalker	okay, very new to it so barely know anything, so sadly can't help you with your question
2018-09-20 18:41:01	kimundi	ZeroWalker: Yeah, the issue is that mot of the complexity usually does not come up
2018-09-20 18:41:24	kapoira	i use the client, to obtain the html, but i don't know how to transform the response in to the html.... i can consult the status of the response, but i can solve how to convert the body of the response in utf8
2018-09-20 18:41:27	ZeroWalker	guess it's one of those things, you don't notice the mess until you are in it
2018-09-20 18:41:47	ZeroWalker	hmm
2018-09-20 18:42:04	ZeroWalker	think i recall being able to print some response more or less. but it might just have been the header
2018-09-20 18:42:24	kimundi	ZeroWalker: For example, you can not expect Windows filesystem paths to be valid unicode, because they are just 16bit wchar arrays, and encoding unicode with 16 bit units needs utf-16, which like utf-8 requires mult-wchar characters to always be kept together
2018-09-20 18:42:41	kapoira	expected slice, found struct `hyper::Body`
2018-09-20 18:42:42	kimundi	But may places in the API do not enforce that, so you can end up with split wchar pairs
2018-09-20 18:42:57	-->	BearOfJade (Alex@moz-tlmk36.wireless.uvic.ca) has joined #rust-beginners
2018-09-20 18:43:18	ZeroWalker	can it show any utf-16? or does it always need one byte more
2018-09-20 18:43:32	kimundi	can what show what?
2018-09-20 18:44:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 18:44:22	kimundi	Rusts filesystem API is basically based on "paths from the OS are their own container of bytes, but you can _try_ to convert them to unicode"
2018-09-20 18:44:36	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 18:44:55	kimundi	If they are valid unicode you can print them from Rust fine, if not you can either output a error message, or replace faulty bytes with a valid replacement character
2018-09-20 18:45:04	kapoira	the example with the .and_then go to the stdout, but i'm trying with the .map (all the response is done), and i get a hyper::body but i don't know how to transform this in the html in utf8..
2018-09-20 18:45:58	kimundi	ZeroWalker: Got to go for a bit, but if you have more questions later feel free to ask :)
2018-09-20 18:46:12	ZeroWalker	cya, thanks for the help:D
2018-09-20 18:46:16	<--	liquidnight (marcus@moz-a7hfpg.305i.abqi.0c22.2a01.IP) has quit (Connection closed)
2018-09-20 18:46:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 18:46:51	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:47:14	ZeroWalker	wait, are you trying to get the body from the request or response?
2018-09-20 18:47:19	ZeroWalker	the request right?
2018-09-20 18:47:49	-->	AbrarSyed (AbrarSyedZN@moz-18co96.abrarsyed.com) has joined #rust-beginners
2018-09-20 18:47:52	-->	techne (techne@moz-ovkci8.msh6.qo20.19f0.2001.IP) has joined #rust-beginners
2018-09-20 18:48:14	kapoira	https://play.rust-lang.org/?gist=0b6f26ac7df7a28a6d4ea65fd5338827&version=stable&mode=debug&edition=2015
2018-09-20 18:48:19	kapoira	part of the coding
2018-09-20 18:48:24	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:48:31	-->	wikkit (Mibbit@moz-59g8f5.dynamic.amis.hr) has joined #rust-beginners
2018-09-20 18:49:01	-->	Dariost (Dariost@moz-euo.lj4.20.151.IP) has joined #rust-beginners
2018-09-20 18:49:06	kapoira	you can see  in the function i think that i have obtained a response
2018-09-20 18:49:07	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 18:49:11	-->	starblue (juergen@moz-7qvrtj.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-20 18:50:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:50:41	wikkit	Hi everyone. I have an enum, `Val`, that I want to be able to serialize (with serde) to two different variants of JSON, as needed. If I derive Serialize and Deserialize for `Val`, that boxes me into a single variant. How can I have two different variants?
2018-09-20 18:51:33	dpc1	wikkit: how would you know which variant to choose?
2018-09-20 18:51:42	wikkit	e.g. in one variant I want to serialize `7i64` as `"7"`, in another as `"{\"$numberLong\":\"7\"}"`.
2018-09-20 18:51:54	wikkit	It's a command line argument.
2018-09-20 18:52:07	wikkit	I call either one function or the other. Two different ways to serialize, let's say.
2018-09-20 18:52:11	@mbrubeck	You could have a wrapper type `struct Longhand(Val);` that implements Serialize/Deserialize differently
2018-09-20 18:53:31	dpc1	wikkit: or create 2 traits that ser/deser 
2018-09-20 18:53:54	wikkit	mbrubeck: That seems like it could work! Would this mean that `Val` itself couldn't use serde's automatic derive stuff? Because as soon as I put any on `Val`, it would dirty things up before `Longhand` has a chance to work?
2018-09-20 18:54:01	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 18:54:13	wikkit	dpc1: How do you mean?
2018-09-20 18:54:48	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 18:55:07	wikkit	I thought Serialize and Deserialize are traits already.
2018-09-20 18:55:35	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-20 18:56:02	dpc1	they are traits already but i was talking about wrapper traits
2018-09-20 18:56:18	@mbrubeck	wikkit: You could still have one of one of the types use derived impls; the wrapper could have custom impls that don't call out to the derived impls on the inner type
2018-09-20 18:56:36	dpc1	if i have a str and call to_owned() on it, it should return a String right or &str is fine?
2018-09-20 18:56:49	kapoira	@ZeroWalker you have any example of hyper getting the html with the .map ?¿ or i must do it with the and_then
2018-09-20 18:57:05	wikkit	dpc1: Ah I haven't used those yet, I'll give them a look!
2018-09-20 18:57:12	@mbrubeck	There might be ways to use derive on both, with appropriate field attributes, but I'm not sure...
2018-09-20 18:57:17	wikkit	mbrubeck: I'll try this out!
2018-09-20 18:57:21	wikkit	Thanks guys!
2018-09-20 18:57:27	dpc1	np
2018-09-20 18:58:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 18:59:14	s34n	In going through rust koans, I'm puzzled with koans/struct.rs::revoking_mutability(). I'm not clear on what is expected.
2018-09-20 18:59:52	-->	patrl (patrl@moz-8islbn.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-20 19:00:20	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 19:01:53	<--	ketralnis (ketralnis@moz-61c9db.ketralnis.com) has quit (The TLS connection was non-properly terminated.)
2018-09-20 19:01:55	-->	ketralnis (ketralnis@moz-61c9db.ketralnis.com) has joined #rust-beginners
2018-09-20 19:02:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 19:03:17	ZeroWalker	kapoira, sadly no, i am quite the beginner in rust overall, so can't such much on that:(
2018-09-20 19:03:26	<--	dfan (Mibbit@moz-iiu.6si.71.137.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 19:04:50	kapoira	thanks... i will try in the hyper channel
2018-09-20 19:05:14	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 19:05:58	wikkit	s34n: I don't have context, but possibly if you have a mutable value, you might want to be hiding it behind an immutable one of the same name.
2018-09-20 19:06:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 19:07:02	<--	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 19:07:11	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-20 19:07:24	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 19:08:50	dpc1	why is that?
2018-09-20 19:09:13	<--	christer (christer@moz-1vu5b9.tmi.telenormobil.no) has quit (Quit: WeeChat 2.1)
2018-09-20 19:09:45	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 19:10:21	s34n	wikkit: that test demonstrates that you can take a mutable struct and it immutable. Fine. Now I need to make the test pass. Obviously, I can just remove the last assignment and change the assert!. But it seems that I'm supposed to be able to make the assignment succeed.
2018-09-20 19:10:25	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-20 19:10:28	-->	blackgoat (blackgoat@moz-jh3.cup.194.211.IP) has joined #rust-beginners
2018-09-20 19:10:49	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 19:11:27	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-20 19:12:53	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 19:13:20	@mbrubeck	s34n: can you think of a way to "un-revoke" mutability?
2018-09-20 19:13:38	<--	Urania (textual@moz-bss.hnj.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 19:14:26	s34n	mbrubeck: no
2018-09-20 19:14:56	@mbrubeck	s34n: revoking it here was done with shadowing -- moving the value into a new variable with the same name as the old one (but different mutability)
2018-09-20 19:15:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 19:15:19	@mbrubeck	The same technique can be used to do the reverse
2018-09-20 19:15:29	s34n	hmm
2018-09-20 19:15:30	-->	Urania (textual@moz-bss.hnj.1.35.IP) has joined #rust-beginners
2018-09-20 19:15:30	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Ping timeout: 121 seconds)
2018-09-20 19:15:36	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 19:15:55	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-20 19:15:57	<--	nicoulaj (nicoulaj@moz-0b5h75.net) has quit (Quit: ZNC - https://znc.in)
2018-09-20 19:17:56	s34n	mbrubeck: I figured it was trying to teach something else. A shadow followed immediately by a shadow seemed like I was missing some point of the exercise.
2018-09-20 19:18:27	-->	nicoulaj (nicoulaj@moz-0b5h75.net) has joined #rust-beginners
2018-09-20 19:18:29	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-20 19:18:31	-->	ca1ek (dawid@moz-9d1mn7.internetia.net.pl) has joined #rust-beginners
2018-09-20 19:18:33	@mbrubeck	s34n: Honestly I'm not sure what the expected "answer" is, but that's one way to make the code compile...
2018-09-20 19:20:06	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 19:20:14	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 19:20:24	ca1ek	I've got this code, I print! some stuff, run a really time-heavy function, then i println! more details, https://gist.github.com/ca1ek/dcdac6023fd18b2114c255cc7884259c
2018-09-20 19:20:29	s34n	mbrubeck: thanks. I'll shrug my shoulders and move on
2018-09-20 19:20:39	ca1ek	but the print!ed text doesn't show up until after the println!
2018-09-20 19:21:43	kimundi	ZeroWalker: (re, if you still have questions :))
2018-09-20 19:21:59	-->	sprocket (Mibbit@moz-f2r.ms7.111.176.IP) has joined #rust-beginners
2018-09-20 19:22:17	sprocket	hi, how can i read an integer from stdin?
2018-09-20 19:22:25	sprocket	like in c++ int x; std::cin >> x;
2018-09-20 19:22:57	ZeroWalker	wb, could ask forever probably in the messy windows and unicode, but got a better picture at the basics on utf itself so hopefully i am fine for awhile haha;d
2018-09-20 19:23:14	ZeroWalker	another question i have though is on rls and nightly
2018-09-20 19:23:16	<--	BearOfJade (Alex@moz-tlmk36.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 19:23:48	ca1ek	sprocket: std::io::stdin.read_line(&mut some_string);
2018-09-20 19:23:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-20 19:23:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 19:24:17	ca1ek	then some_string.parse::<i32>()
2018-09-20 19:25:03	ZeroWalker	i got rls running on vscode, but the nightly doesn't even have rls on the nightly atm, so not sure where it's even coming from. And i guess that would explain why it doesn't detect some errors that the compiler tells me when i build. So trying to get the latest nightly which has rls and fix it up
2018-09-20 19:25:14	-->	durlicc (Mibbit@moz-bve6rq.slc.googlefiber.net) has joined #rust-beginners
2018-09-20 19:25:18	-->	corka (corka@moz-i3l3q3.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 19:25:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 19:25:42	kimundi	ZeroWalker: No idea about the rls sadly :)
2018-09-20 19:25:48	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 19:26:00	ZeroWalker	ah, thought it was like, the thing, guess not xd
2018-09-20 19:26:26	kimundi	ZeroWalker: When I started with Rust the best there was was a text editor without highliting, so I never needed it xD
2018-09-20 19:27:07	ZeroWalker	ah, impressive, i need my damn IDE xD
2018-09-20 19:30:20	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 19:30:32	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 19:31:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 19:31:28	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-20 19:34:08	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-20 19:34:57	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-20 19:35:21	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 19:35:30	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Quit: Leaving)
2018-09-20 19:35:32	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 19:35:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 19:36:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 19:37:28	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 19:39:10	<--	codesections (codesection@moz-e45.7hn.29.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 19:39:33	-->	codesections (codesection@moz-e45.7hn.29.38.IP) has joined #rust-beginners
2018-09-20 19:40:17	--	KiChjang_ is now known as KiChjang
2018-09-20 19:40:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 19:40:59	-->	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-20 19:41:31	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 19:41:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 19:45:04	-->	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 19:45:15	-->	oms (oms@moz-vr3thd.dyn.telefonica.de) has joined #rust-beginners
2018-09-20 19:45:22	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 19:45:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 19:47:26	-->	DaQue (Mutter@moz-9hq.4hv.116.199.IP) has joined #rust-beginners
2018-09-20 19:49:24	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-09-20 19:49:31	-->	Orez (Orez@moz-i1o.vhq.252.206.IP) has joined #rust-beginners
2018-09-20 19:49:34	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-20 19:49:35	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 19:50:24	<--	durlicc (Mibbit@moz-bve6rq.slc.googlefiber.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 19:51:07	ca1ek	what way do you find the type to use when the crate is doing crazy stuff with them and you just wanna store some stuff in a struct
2018-09-20 19:51:12	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 19:51:13	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 19:51:15	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 19:51:25	dpc1	uhmm?
2018-09-20 19:51:25	<--	DaQue (Mutter@moz-9hq.4hv.116.199.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-20 19:51:29	ca1ek	I can't nail down the type of the synchronous websocket server from the "websocket" crate
2018-09-20 19:51:52	dpc1	check the function definition?
2018-09-20 19:52:11	-->	raingloom (raingloom@moz-fidtda.pool.telekom.hu) has joined #rust-beginners
2018-09-20 19:53:44	-->	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-20 19:54:26	Orez	is there a way to match an Option<Rc<SomeEnum>> with a single match? i've found you can `match *foo` for Rc<SomeEnum>, and you can `Some(ref SomeEnum::Bar) =>` for Option<&SomeEnum>, but i'm not sure what to do for Option<Rc<SomeEnum>>
2018-09-20 19:55:19	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 19:55:19	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 19:55:19	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 19:55:22	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-20 19:57:28	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Quit: Leaving)
2018-09-20 19:57:43	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 19:58:09	Lumpio-	ca1ek: You can also deliberately cause a compiler error
2018-09-20 19:58:14	Lumpio-	let () = something;
2018-09-20 19:58:15	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-20 19:58:18	Lumpio-	The error will tell you the type heh
2018-09-20 19:59:29	ca1ek	yeah, i already found what I needed, but it was hidden between two type aliases. ws server takes in an empty struct type to mark if you're using SSL or not.
2018-09-20 19:59:56	Lumpio-	nice
2018-09-20 20:01:26	<--	Binero (Binero@moz-rt0vju.bacj.ns1j.a03f.2a02.IP) has quit (Client exited)
2018-09-20 20:01:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:02:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 20:03:53	<--	Aankhen`` (notasquid@moz-inm.am1.207.49.IP) has quit (Quit: Sorry, was AFK)
2018-09-20 20:06:01	<--	patrl (patrl@moz-8islbn.dynamic.kabel-deutschland.de) has quit (Quit: WeeChat 2.2)
2018-09-20 20:06:07	<--	corka (corka@moz-i3l3q3.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-20 20:06:56	<--	nicoulaj (nicoulaj@moz-0b5h75.net) has quit (Quit: ZNC - https://znc.in)
2018-09-20 20:07:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:07:05	-->	nicoulaj (nicoulaj@moz-0b5h75.net) has joined #rust-beginners
2018-09-20 20:07:55	-->	BearOfJade (Alex@moz-8nk3oj.wireless.uvic.ca) has joined #rust-beginners
2018-09-20 20:08:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 20:12:21	<--	mib_zc40al (Mibbit@moz-q1c.rs4.77.62.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 20:14:26	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-20 20:14:55	-->	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-20 20:15:40	<--	Urania (textual@moz-bss.hnj.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 20:17:14	-->	Urania (textual@moz-bss.hnj.1.35.IP) has joined #rust-beginners
2018-09-20 20:18:12	<--	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 20:18:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:18:32	-->	enterprisey (enterprisey@moz-qf6b12.cit.cornell.edu) has joined #rust-beginners
2018-09-20 20:19:52	-->	artfwo (artfwo@moz-ud4.gls.120.37.IP) has joined #rust-beginners
2018-09-20 20:21:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 20:21:35	<--	jbalint (jbalint@moz-941und.wi.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-20 20:22:03	-->	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 20:23:25	-->	jbalint (jbalint@moz-941und.wi.charter.com) has joined #rust-beginners
2018-09-20 20:24:43	-->	mib_l6d8rb (Mibbit@moz-fshriu.fbx.proxad.net) has joined #rust-beginners
2018-09-20 20:25:24	<--	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 20:25:28	<--	mib_l6d8rb (Mibbit@moz-fshriu.fbx.proxad.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 20:25:47	-->	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-20 20:27:14	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-20 20:27:21	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-20 20:27:38	<--	codesections (codesection@moz-e45.7hn.29.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 20:28:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-20 20:28:22	-->	codesections (codesection@moz-e45.7hn.29.38.IP) has joined #rust-beginners
2018-09-20 20:29:09	s34n	I koans/traits.rs::trait_constraints_on_structs(), I impl<T: &'static str>. The compiler rejects this, but accepts impl<T: 'static>. What's wrong with impl<T:&'static str>?
2018-09-20 20:29:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:29:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 20:29:23	s34n	s/I/In/
2018-09-20 20:29:48	<--	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:33:29	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 20:33:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:34:04	-->	niconii (nicole@moz-gr2hus.midco.net) has joined #rust-beginners
2018-09-20 20:34:04	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-20 20:34:08	-->	neverfox_ (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-20 20:34:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 20:35:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 20:35:06	<--	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 20:37:01	<--	kapoira (Mibbit@moz-pie1qc.user.ono.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 20:37:40	<--	sprocket (Mibbit@moz-f2r.ms7.111.176.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 20:38:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:39:03	<--	BearOfJade (Alex@moz-8nk3oj.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 20:39:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 20:39:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 20:39:43	-->	jcalve (jcalve@moz-v4qft6.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-20 20:40:15	-->	mib_qpx8fi (Mibbit@moz-t1q.3aj.147.46.IP) has joined #rust-beginners
2018-09-20 20:40:24	<--	mib_qpx8fi (Mibbit@moz-t1q.3aj.147.46.IP) has left #rust-beginners
2018-09-20 20:40:34	-->	BearOfJade (Alex@moz-8nk3oj.wireless.uvic.ca) has joined #rust-beginners
2018-09-20 20:40:37	<--	xorrox (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 20:42:12	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 20:42:56	<--	jbalint (jbalint@moz-941und.wi.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-20 20:43:17	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:43:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:44:27	dpc1	s34n: trait bound should be a trait not a type
2018-09-20 20:44:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 20:45:11	s34n	dpc1: or a lifetime?
2018-09-20 20:46:19	-->	jbalint (jbalint@moz-941und.wi.charter.com) has joined #rust-beginners
2018-09-20 20:47:04	dpc1	yeh
2018-09-20 20:48:18	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 20:48:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:49:21	s34n	dpc1: so I really should bound T to whatever trait allows something to be an operand in a '>=' operation?
2018-09-20 20:50:23	<--	BearOfJade (Alex@moz-8nk3oj.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 20:51:07	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 20:51:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 20:52:35	dpc1	yep thats right. 
2018-09-20 20:52:50	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 20:53:35	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-20 20:55:19	-->	faitswulff (faitswulff@moz-2cnov8.il.comcast.net) has joined #rust-beginners
2018-09-20 20:55:33	<--	Urania (textual@moz-bss.hnj.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 20:55:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 20:58:32	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 21:02:16	-->	nineczar (nate@moz-al9sd1.ma.comcast.net) has joined #rust-beginners
2018-09-20 21:03:04	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 21:03:06	s34n	dpc1: seriously, what am I expected to put there?
2018-09-20 21:03:18	-->	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-20 21:03:31	dpc1	s34n: what do you need as such?
2018-09-20 21:03:57	-->	chrisdotcode (quassel@moz-egk3sj.jv55.dlrr.fcc8.2607.IP) has joined #rust-beginners
2018-09-20 21:03:58	<--	eyans (a@moz-c877d3.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-20 21:04:07	dpc1	generally say you have multiple types that are all satisfied by a trait Foo, you'd do <T:Foo>
2018-09-20 21:05:19	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 21:05:21	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 21:05:23	s34n	In this case, the type needs to allow &'static str. It needs to make sense in a >= expression.
2018-09-20 21:05:24	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-20 21:06:19	<--	alatiera_ (alatiera@moz-8roppa.access.hol.gr) has quit (Connection closed)
2018-09-20 21:06:33	-->	alatiera_ (alatiera@moz-8roppa.access.hol.gr) has joined #rust-beginners
2018-09-20 21:06:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 21:06:58	-->	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has joined #rust-beginners
2018-09-20 21:07:29	<--	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-20 21:07:44	ZeroWalker	okay now i get the issue with string.insert, basically i can never replace the last character, i either get in front of it or after it. Guess the element offsets don't align or something?
2018-09-20 21:07:44	dpc1	does the fn have to be generic?
2018-09-20 21:08:00	<--	faitswulff (faitswulff@moz-2cnov8.il.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 21:08:33	kimundi	ZeroWalker: Well insert... inserts, it does not replace :)
2018-09-20 21:08:37	s34n	dpc1: The point of the koan it to teach about trait bounds
2018-09-20 21:08:45	ZeroWalker	oh
2018-09-20 21:08:47	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 21:09:12	ZeroWalker	what does that then, i want to replace it, overwrite
2018-09-20 21:09:28	kimundi	There is a replace() method, not sure right now if that has the right API though
2018-09-20 21:09:35	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 21:09:37	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 21:09:37	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-20 21:09:43	<--	badboy (badboy_@moz-r416mt.rediger.net) has quit (Ping timeout: 121 seconds)
2018-09-20 21:09:52	ZeroWalker	doesn't that look for a string though?
2018-09-20 21:10:22	dpc1	s34n: fair enough. then you could use AsRef traits
2018-09-20 21:10:22	kimundi	thats what I emant with not being sure about its API :)
2018-09-20 21:10:34	-->	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has joined #rust-beginners
2018-09-20 21:10:52	kimundi	ZeroWalker: Ah, there is replace_range
2018-09-20 21:10:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 21:11:08	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-20 21:11:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 21:11:23	ZeroWalker	yeah saw that, but doesn't that replace a certain range within the string to replace or something like that?
2018-09-20 21:11:58	kimundi	ZeroWalker: Sure, in this case your range would be the last character
2018-09-20 21:12:42	ZeroWalker	ah so it's not the range within the string i am using to replace, then that will work
2018-09-20 21:13:16	kimundi	It would be a ugly few lines of code though, I grant you that - but repalcing a utf-8 encoded character is a problematic thing anyway. If you are only working with ASCII, maybe you'll want to work on Vec<u8> directly instead?
2018-09-20 21:13:17	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 21:14:50	ZeroWalker	well i duno about that in this case, ASCII has been the default in many older project, but those have been with C/C++ and often winapi
2018-09-20 21:15:13	ZeroWalker	here i think a ton expects utf8, so i would have to convert back and forth which wouldn't be that great
2018-09-20 21:15:27	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 21:15:45	kimundi	eval: let mut s = "abcäöü".to_string(); let idx = s.char_indices().rev().next().unwrap().0; s.replace_range(idx..s.len(), "!"); s
2018-09-20 21:15:47	--	Notice(eval): error[E0502]: cannot borrow `s` as immutable because it is also borrowed as mutable
2018-09-20 21:15:50	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=4d5c1355c6e325c8d30cc7ce2401aee1&version=stable&mode=debug
2018-09-20 21:16:14	kimundi	eval: let mut s = "abcäöü".to_string(); let l = s.len(); let idx = s.char_indices().rev().next().unwrap().0; s.replace_range(idx..l, "!"); s
2018-09-20 21:16:17	--	Notice(eval): "abcäö!"
2018-09-20 21:16:23	<--	oms (oms@moz-vr3thd.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-20 21:16:28	ZeroWalker	i did thought that utf8 still was 2 bytes, guess that wasn't the case, so the elements aren't fixed size in a String?
2018-09-20 21:16:36	ZeroWalker	hmm
2018-09-20 21:16:47	gentlehelm	ZeroWalker: utf8 is a variable-width encoding set
2018-09-20 21:16:51	kimundi	eval: let mut s = "abcäöü".to_string(); let c = '$'; let l = s.len(); let idx = s.char_indices().rev().next().unwrap().0; s.replace_range(idx..l, c.encode_utf8(&mut [0; 4])); s
2018-09-20 21:16:54	--	Notice(eval): "abcäö$"
2018-09-20 21:17:03	ZeroWalker	now that was a ton of functions to achieve that xd
2018-09-20 21:17:04	gentlehelm	on some "Languages", a char can be even 6 bytes
2018-09-20 21:17:18	kimundi	ZeroWalker: Ah, I though that was clear earlier: utf-8 uses 1 to 4 bytes per character
2018-09-20 21:17:30	kimundi	ZeroWalker: So any individual char might take up 1 byte, 2, 3, or 4
2018-09-20 21:17:34	--	l is now known as hexjay
2018-09-20 21:17:57	ZeroWalker	oh, oaky i failed to get that part. Thought it was guaranteed to use 2 bytes, cause 1 was always used to determine the rest
2018-09-20 21:18:01	kimundi	gentlehelm: But only if they do not correctly implement current utf-8 :)
2018-09-20 21:18:08	ZeroWalker	damn that 8 is confusing lol
2018-09-20 21:18:16	gentlehelm	and that's why it is better to use an iterator on strings, becase if you use index on a fixed-width byte count, you may end up in the middle of the char
2018-09-20 21:18:18	ZeroWalker	8 stands for 8 bits, 1 byte!
2018-09-20 21:18:19	kimundi	ZeroWalker: Its 8 because the encoding units use 8 bits
2018-09-20 21:18:47	kimundi	ZeroWalker: wikipedia has a ncie table for it: https://en.wikipedia.org/wiki/UTF-8
2018-09-20 21:19:00	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 21:19:09	gentlehelm	ZeroWalker: utf8 is actually a very brilliant-made enconding set
2018-09-20 21:19:10	kimundi	its really not complicated - the first few bits determine how many bytes follow per character, and that's it
2018-09-20 21:19:42	ZeroWalker	wiki won't even load, guess that table must be popular!
2018-09-20 21:19:59	kimundi	check your ISP then xD
2018-09-20 21:20:21	ZeroWalker	they are against me knowing how it works, how dare they;(
2018-09-20 21:21:26	ZeroWalker	well at least that make sense why i can't replace it. i guess the String itself doesn't keep track where which element is until it actually reads it
2018-09-20 21:21:33	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 21:21:59	kimundi	ZeroWalker: Right, you need to explicitly rember the bounds of each individual char for that to be possible
2018-09-20 21:22:21	kimundi	ZeroWalker: Adn tehn you might just as well store the String with utf-32 - aka a 32 bit integer per character
2018-09-20 21:22:27	ZeroWalker	yeah, and can't see that being viable without quite some impact haha
2018-09-20 21:22:31	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-20 21:22:56	ZeroWalker	so that's the max unicode?
2018-09-20 21:22:58	-->	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 21:23:04	kimundi	Thats why Rusts string API uses byte indices for everything - its the only cheap way to do it
2018-09-20 21:23:26	kimundi	unicode is restricted to 21 bits
2018-09-20 21:23:27	gentlehelm	Unicode is "limitless"
2018-09-20 21:23:28	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 21:23:33	gentlehelm	(technically)
2018-09-20 21:23:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 21:23:58	ZeroWalker	i guess they have reserved bits if they need to add stuff
2018-09-20 21:23:58	gentlehelm	implementations of Unicode, like utf8, have some hard restrictions
2018-09-20 21:24:09	kimundi	of which barely 10% are asssigned up to know, so it will probably be enough for quite a few centuries, especially considering how we globally tend to less variations in language, not more :P
2018-09-20 21:24:20	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-20 21:25:05	ZeroWalker	yeah can't see us run out of that before it's unusable cause of some other future hardware design or whatnot lol
2018-09-20 21:25:16	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-20 21:25:23	kimundi	Unicode 1.0 was defined with 16 bit, which they noticed was a bit... less than actually needed
2018-09-20 21:25:42	ZeroWalker	nmm, well i can just use my forced replace, it's a bit ugly but better than what i have to do in your example xd
2018-09-20 21:25:53	ZeroWalker	ah
2018-09-20 21:26:08	kimundi	Sadly when they enlarged their codepoint space all kinds of modern technolgies had embraced 16-bit unicode, which is why working with it is such a pain today :P
2018-09-20 21:26:32	gentlehelm	unless you were Microsoft
2018-09-20 21:26:44	gentlehelm	which create their ISO-9someshit
2018-09-20 21:26:46	<--	luizdepra (luizdepra@moz-o99kto.7lsd.eidl.1284.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 21:26:47	ZeroWalker	wait how does it differ from now when you used it?
2018-09-20 21:26:48	kimundi	They also embrached 16-bit based unicode
2018-09-20 21:26:53	gentlehelm	which was, you guessed, utter shit
2018-09-20 21:26:59	kimundi	ZeroWalker: What do you mean?
2018-09-20 21:26:59	<--	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 21:27:16	ZeroWalker	you said it's a pain today from before, in what way
2018-09-20 21:27:30	gentlehelm	before Unicode, people used only ASCII
2018-09-20 21:27:37	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 21:27:39	kimundi	gentlehelm: I'd actually see that as predating uncidoe support in a sense - microsoft _did_ embrace unicode for their windows API, its just all build around broken utf-16 :P
2018-09-20 21:27:45	ZeroWalker	i mean the 16bit day
2018-09-20 21:27:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 21:28:08	-->	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 21:28:10	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-20 21:28:20	ZeroWalker	ASCII is great.. as long as there is one, but.. yeah
2018-09-20 21:28:27	gentlehelm	because i think it was incompatible
2018-09-20 21:28:28	kimundi	ZeroWalker: When unicode was 16 bit, eveone though "Great! We just have arrays with 16 bit integers instead of 8-bit ones, and can do all the same direct-indexing stuff as before"
2018-09-20 21:28:31	<--	kapil___ (uid36151@moz-7g0ahg.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-20 21:28:56	dowwie	is there a way to use --test-threads=1  only for one module of tests but parallel test the other modules?
2018-09-20 21:29:04	-->	liquidnight (marcus@moz-a7hfpg.305i.abqi.0c22.2a01.IP) has joined #rust-beginners
2018-09-20 21:29:09	ZeroWalker	ah, even though the system was technically like now? so it's the utf-32 of yesterday?
2018-09-20 21:29:10	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 21:29:46	kimundi	ZeroWalker: Then when it became 21 bits, the simple 16-bit arrays where replaced with utf-16 - which is the same idea as utf8: Every char is encoded with either one or two 16-bit integer, and you need to scan through everything to know how many characters there actually are
2018-09-20 21:29:47	ZeroWalker	cause i mean, if you have the max size, you can just use it like an index i think
2018-09-20 21:29:55	kimundi	yeah
2018-09-20 21:30:00	-->	oats (oats@moz-ebn.8go.99.167.IP) has joined #rust-beginners
2018-09-20 21:30:36	ZeroWalker	oh damn confusing again lol, so the 16bit unicode wasn't called utf-16 xd
2018-09-20 21:30:59	kimundi	But all the old APIs often never got fixed to treat the strings as proper utf-16, so often they just support "broken utf-16" where you can split up pairs of 16 bit integer that should always be next to each other to form a whole character
2018-09-20 21:31:10	ZeroWalker	weird that it's not just better to use 32bit in a lot of cases except where there's a TON of text
2018-09-20 21:31:32	gentlehelm	32bit is a lot to contain what is simple text
2018-09-20 21:32:00	ZeroWalker	okay that sounded broken in itself lol
2018-09-20 21:32:11	<--	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 21:32:14	ZeroWalker	yeah well it's 4 times larger;s
2018-09-20 21:32:17	oats	hi folks, anybody know if there's any vim/nvim plugins that could do something like show a function signature in the status bar when hovering over/writing a function call?
2018-09-20 21:32:17	gentlehelm	if it wasn't variable width, 32bits to represent a simple 'a' or 'b' is waste
2018-09-20 21:32:35	ZeroWalker	but still, not that bad if you think in application terms, not logs and similar
2018-09-20 21:32:40	kimundi	ZeroWalker: This a design specae that got explored like 15 years ago though, where memory was a bit more of an issue still
2018-09-20 21:32:47	gentlehelm	oats: LanguageClient-neovim + rls
2018-09-20 21:32:53	ZeroWalker	yeah i meant today
2018-09-20 21:32:55	kimundi	ZeroWalker: But also, utf-32 is actually not enough for convenient operations
2018-09-20 21:33:04	ZeroWalker	not enough?
2018-09-20 21:33:09	<--	wikkit (Mibbit@moz-59g8f5.dynamic.amis.hr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 21:33:19	kimundi	Why? Because unicode codepoints are not the same as visible characters!
2018-09-20 21:34:06	kimundi	What you actually see on your display depends on your locale, the font used, and wether the codepoints are combining characters
2018-09-20 21:34:08	ZeroWalker	but, does that matter when it comes to it not being enough;o
2018-09-20 21:34:19	-->	faitswulff (faitswulff@moz-2cnov8.il.comcast.net) has joined #rust-beginners
2018-09-20 21:34:31	emerent	it means you often can't index anyway
2018-09-20 21:34:49	kimundi	For example: "ä" - it can be written in two was with unicode: as a single-codepoint "ä", or as a "a" with a combining character that adds the two dots
2018-09-20 21:34:51	ZeroWalker	oh
2018-09-20 21:35:21	ZeroWalker	ah
2018-09-20 21:35:22	emerent	say you want to print 80 characters to fill your terminal at its current width, you can't just do s[..80]
2018-09-20 21:35:55	ZeroWalker	might maybe explain a bug i have where Ä actually becomes A, but it's with UTF8, does that support thet other way
2018-09-20 21:36:05	kimundi	ZeroWalker: So the practical situation is: Either you just care about storing the text, which makes bytes all you need to know - or you want to manipulate true real text as a user understands it, in which case you need specialized library and knowledge, and likly specialized datastructures as well
2018-09-20 21:36:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 21:36:35	-->	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 21:37:10	-->	xarcus (Mibbit@moz-mt7.agt.105.176.IP) has joined #rust-beginners
2018-09-20 21:37:11	<--	xarcus (Mibbit@moz-mt7.agt.105.176.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 21:37:15	kimundi	So for storage, utf-8 is a nice kind of compression scheme, and for everything else it does not matter if utf-8 direclty is inconvenient as you would not use it directly for serious work anyway
2018-09-20 21:37:57	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-20 21:38:19	ZeroWalker	serious work as in, processing a ton of text in some matter or form?
2018-09-20 21:38:27	kimundi	Of course, "codepoints" are a nice clear technical represetnation of the text somewhere in between the two extremes, so its convenient to have them as well - they just are not the upper end of complexity
2018-09-20 21:38:48	kimundi	ZeroWalker: Processing text as text, rather than just a special sequence of integers
2018-09-20 21:38:52	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-20 21:38:56	ZeroWalker	well to me it's complex enough xd
2018-09-20 21:39:15	kimundi	Eg, say you want to be able to select a visible character in your text editor - the editor nweeds to know how many codepoints that visible text is made of
2018-09-20 21:39:25	gentlehelm	good thing of utf8 is that it is compatible with ASCII
2018-09-20 21:39:29	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-20 21:39:55	kimundi	eval: "Z̺A̵̬̭̙̭L͖̕G̫̤̬̫̝̖O̸̭̹̙̥͍!̫̮̀"
2018-09-20 21:39:57	--	Notice(eval): "Z\u{33a}A\u{335}\u{32c}\u{32d}\u{319}\u{32d}L\u{315}\u{356}G\u{32b}\u{324}\u{32c}\u{32b}\u{31d}\u{316}O\u{338}\u{32d}\u{339}\u{319}\u{325}\u{34d}!\u{340}\u{32b}\u{32e}"
2018-09-20 21:39:59	gentlehelm	the same 255 char table of ASCII can be represented with utf8, like U+60..95
2018-09-20 21:40:22	kimundi	eval: let s = "Z̺A̵̬̭̙̭L͖̕G̫̤̬̫̝̖O̸̭̹̙̥͍!̫̮̀"; (s.chars().count(), s.len())
2018-09-20 21:40:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 21:40:26	--	Notice(eval): (29, 52)
2018-09-20 21:40:32	<--	insidious (insidious@moz-cfo.dfl.198.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 21:40:37	<--	simonadameit (simonadamei@moz-l38th6.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 21:40:38	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 21:40:41	ZeroWalker	oh
2018-09-20 21:40:49	ZeroWalker	tricky characters
2018-09-20 21:40:58	gentlehelm	i don't remember which encode impl was, but there was one that left-padded all points with 00
2018-09-20 21:41:06	kimundi	There, that is a text consisting of the visible characters for the word "ZALGO!" with a ton of modificator codepoints - its 29 codepoints, and 52 bytes
2018-09-20 21:41:08	ZeroWalker	i thought only the first 127 was compatible, and also that the rest was ANSI not ASCII
2018-09-20 21:41:11	gentlehelm	so it was incompatible with ASCII and it always broke during conversion
2018-09-20 21:41:16	ZeroWalker	or am i confusing those two
2018-09-20 21:41:47	gentlehelm	ASCII is the whole table, 255
2018-09-20 21:41:58	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-20 21:41:59	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 21:42:05	gentlehelm	ANSI is entity for american standards, i think
2018-09-20 21:42:06	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-20 21:42:17	ZeroWalker	so all those code points basically just say, check X in the next byte, check Y in the next byte etc, until the actual character?
2018-09-20 21:42:29	kimundi	ZeroWalker: ASCII is 7 bit, and the basis for unicode itself and the utf-8 encoding. SO the first 128 codepoints are the same as ascii, and any ascii text is valid utf-8.
2018-09-20 21:42:35	ZeroWalker	ah thought it was the reverse
2018-09-20 21:42:43	ZeroWalker	oh wait hten it is like that:s
2018-09-20 21:42:46	kimundi	gentlehelm: ASCII is just 7 bits,
2018-09-20 21:42:53	ZeroWalker	and ANSI is 8bits right?
2018-09-20 21:42:58	ZeroWalker	but it has many versions
2018-09-20 21:43:04	gentlehelm	kimundi: yeah, i just remembered
2018-09-20 21:43:04	ZeroWalker	depending on, weird shit
2018-09-20 21:43:24	gentlehelm	kimundi: because the last bit was the "problem", where people of different nations did put whatever shit they wanted, which caused problems
2018-09-20 21:43:26	ZeroWalker	but the first 7 bits are always the same in all locales i think?
2018-09-20 21:43:35	-->	bletch (Mibbit@moz-mmp3vp.tx.frontiernet.net) has joined #rust-beginners
2018-09-20 21:43:38	ZeroWalker	yeah remember reading that
2018-09-20 21:43:41	kimundi	ZeroWalker: There are many different 8-bit encoding, and what is called ANSI is one of them, yeah
2018-09-20 21:43:45	ZeroWalker	it was first used as some checksum i think
2018-09-20 21:43:52	kimundi	https://en.wikipedia.org/wiki/ANSI_character_set
2018-09-20 21:43:52	<--	bletch (Mibbit@moz-mmp3vp.tx.frontiernet.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 21:44:12	kimundi	Usually https://en.wikipedia.org/wiki/Windows-1252 is called ANSI, as it was most common
2018-09-20 21:44:41	ZeroWalker	oh though ANSI was just, the Template or something, and you needed the "Iso whatever" that told it what was in that last bit
2018-09-20 21:44:49	ZeroWalker	ah
2018-09-20 21:45:08	ZeroWalker	okay though all those were, "ANSI versions"
2018-09-20 21:45:10	ZeroWalker	or something
2018-09-20 21:45:19	ZeroWalker	guess it's not all wrong but
2018-09-20 21:45:27	kimundi	ZeroWalker: Baiscally, "ANSI" is the name of the organization that defined a bunch of those codepages, but its not an exact definition, people just calledd the most common encoding ANSI
2018-09-20 21:45:38	ZeroWalker	ah
2018-09-20 21:46:01	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 21:46:07	kimundi	WHich is not very helpful if you want to read old text data today, and only know about it that it was encoded with "ANSI" :D
2018-09-20 21:46:09	ZeroWalker	i love how unclear things are at times, even though it's so common
2018-09-20 21:46:19	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 21:46:24	ZeroWalker	haha xd
2018-09-20 21:46:28	CognitiveRadiation	ANTSY C
2018-09-20 21:46:32	gentlehelm	ZeroWalker: ANSI is kinda like ISO, which is an international organization for standards, only that it is American
2018-09-20 21:46:36	gentlehelm	ZeroWalker: https://en.wikipedia.org/wiki/American_National_Standards_Institute
2018-09-20 21:46:38	ZeroWalker	you just try until you think it's readable lol
2018-09-20 21:47:06	ZeroWalker	yeah think i actually knew that, but i ignored them and just saw ANSI as "ASCII plus"
2018-09-20 21:47:13	gentlehelm	ZeroWalker: they even defined the 89 version of C (i think), which is often called ANSI C
2018-09-20 21:47:16	<--	m_101 (m_101@moz-623tcv.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-20 21:47:22	ZeroWalker	oh
2018-09-20 21:47:25	kimundi	ZeroWalker: https://en.wikipedia.org/wiki/Mojibake
2018-09-20 21:47:42	kimundi	ZeroWalker: ^ That is what you get when you try to guess without any info and guess wrong xD
2018-09-20 21:47:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 21:47:53	ZeroWalker	sadly wiki doesn't work still for some reason, just gives timeout
2018-09-20 21:47:55	kimundi	A phneomen so common it has its own wiki page
2018-09-20 21:48:03	ZeroWalker	xd
2018-09-20 21:48:30	-->	Hao (Mibbit@moz-piv6cp.xlate.ufl.edu) has joined #rust-beginners
2018-09-20 21:49:17	kimundi	ZeroWalker: Does this work: https://web.archive.org/web/20180915082408/https://en.wikipedia.org/wiki/Mojibake
2018-09-20 21:49:20	-->	m_101 (m_101@moz-3lv891.abo.wanadoo.fr) has joined #rust-beginners
2018-09-20 21:50:36	ZeroWalker	yes!
2018-09-20 21:50:40	-->	danecando (danecando@moz-7plmci.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-20 21:51:04	kimundi	Hm, then you should also be able to navigate to the other sites we linked with that :D
2018-09-20 21:51:06	ZeroWalker	so that messed up text has a name, thought it would be some weird monster cause of the name, so was preparing myself xd
2018-09-20 21:51:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 21:51:49	kimundi	https://web.archive.org/web/20180907180536/https://en.wikipedia.org/wiki/Utf-8
2018-09-20 21:52:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 21:52:59	gentlehelm	maybe his DNS provider is messed up
2018-09-20 21:53:57	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Connection closed)
2018-09-20 21:55:05	ZeroWalker	okay solved it
2018-09-20 21:55:15	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-20 21:55:38	ZeroWalker	was my routers skynet thing blocking the ips
2018-09-20 21:56:27	<--	xet7 (xet7@moz-i703qr.rev.dnainternet.fi) has quit (Quit: Leaving)
2018-09-20 21:56:34	Orez	is it possible for a function to return, i guess, a Chain or an Empty? or at least, something that iterates like either of those things?
2018-09-20 21:56:48	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 21:57:27	<--	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 21:58:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 22:00:08	-->	jcob (user@moz-kfr.6e5.7.152.IP) has joined #rust-beginners
2018-09-20 22:01:05	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-20 22:03:08	Orez	oooooof. i tried to trick it by just doing empty().chain(empty()), but now it's mad that i'm returning both Chain<Empty, Empty> and Chain<Once, TakeWhile>
2018-09-20 22:05:00	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-20 22:06:01	<--	oats (oats@moz-ebn.8go.99.167.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-20 22:06:41	-->	ferris_noob (Mibbit@moz-6sjsko.ca.comcast.net) has joined #rust-beginners
2018-09-20 22:07:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 22:08:30	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 22:09:01	ferris_noob	I'm using arm64, which doesn't get rust-docs built. How can I get the documentation offline? I've tried adding a x86 toolchain, but ideally I just want the rust-docs component.
2018-09-20 22:09:11	ferris_noob	$ rustup component add rust-docs \nerror: toolchain 'nightly-aarch64-unknown-linux-gnu' does not contain component 'rust-docs' for target 'aarch64-unknown-linux-gnu'
2018-09-20 22:09:38	durka42	Orez: you can just return `impl Iterator<Item=T>`
2018-09-20 22:09:41	durka42	for the correct T
2018-09-20 22:10:03	<--	cpl (cpl@moz-vcfefs.dyn.forthnet.gr) has quit (Ping timeout: 121 seconds)
2018-09-20 22:10:18	durka42	ferris_noob: I guess you would have to check out the source and build the docs yourself
2018-09-20 22:10:27	-->	cpl (cpl@moz-vcfefs.dyn.forthnet.gr) has joined #rust-beginners
2018-09-20 22:10:30	<--	Hao (Mibbit@moz-piv6cp.xlate.ufl.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 22:10:34	ferris_noob	true, I'll give that a shot
2018-09-20 22:11:59	emerent	durka42: iiuc he wants to conditionally have different types
2018-09-20 22:12:08	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 22:12:12	durka42	oh right
2018-09-20 22:12:14	durka42	then it needs to be boxed
2018-09-20 22:12:37	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 22:12:53	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 22:13:17	emerent	I suppose it would also be possible to hack the types to be equal
2018-09-20 22:13:29	emerent	e.g. use `Option::into_iter` instead of `Empty` and `Once`
2018-09-20 22:13:58	emerent	and use a take_while(|_| false) for the Chain<Empty, Empty> case
2018-09-20 22:14:37	dutchie	should I use `match *self { Foo => {}, }` or `match self { &Foo => {}, }`? is there a difference?
2018-09-20 22:15:09	Orez	hm interesting. i think it probably makes sense to just Box the result (or maybe just collect() and Vec em)
2018-09-20 22:15:22	-->	DaQue (Mutter@moz-h6qa57.4ap6.qokt.0001.2600.IP) has joined #rust-beginners
2018-09-20 22:15:38	Orez	thanks for the help!
2018-09-20 22:15:55	durka42	dutchie: no difference if Foo doesn't have fields
2018-09-20 22:16:09	<--	enterprisey (enterprisey@moz-qf6b12.cit.cornell.edu) has quit (Connection closed)
2018-09-20 22:16:26	dutchie	and if it does?
2018-09-20 22:17:06	<--	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 22:17:32	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 22:17:44	<--	nairware (CELLIS-W10@moz-p67.9ua.206.67.IP) has quit (Quit: Leaving.)
2018-09-20 22:17:50	durka42	I think there is still no difference
2018-09-20 22:18:04	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 22:18:23	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 22:18:43	dutchie	ok, so just a matter of style then. Is one more standard/idiomatic than the other?
2018-09-20 22:19:42	durka42	pretty sure clippy will push you towards the first
2018-09-20 22:20:00	durka42	but in the new edition, it will just be `match self { Foo => {} }`
2018-09-20 22:20:07	<--	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has quit (Connection closed)
2018-09-20 22:20:45	-->	insidious (insidious@moz-cfo.dfl.198.134.IP) has joined #rust-beginners
2018-09-20 22:21:47	-->	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has joined #rust-beginners
2018-09-20 22:22:01	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Connection closed)
2018-09-20 22:22:03	s34n	I need help with this koan: https://play.rust-lang.org/?gist=00c86822ec0798840c56ab29d00f4be3&version=stable&mode=debug&edition=2015
2018-09-20 22:22:21	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-20 22:22:25	<--	DaQue (Mutter@moz-h6qa57.4ap6.qokt.0001.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 22:22:47	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 22:23:06	sumeet	hello! so i had, what i thought was, a good idea for getting my rust project to, at compile time, be able to depend on different toolkits. i was going to use something like `#[cfg(feature = "default")]` right above `mod a_toolkit as toolkit;` and then refer to `toolkit::something`
2018-09-20 22:23:33	<--	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 22:23:54	<--	faitswulff (faitswulff@moz-2cnov8.il.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 22:23:59	-->	panther99 (Mibbit@moz-4am8ge.isp.telekom.rs) has joined #rust-beginners
2018-09-20 22:23:59	sumeet	the problem with this is, it doesn't seem like the `mod x as something_else` syntax is actually available. has anyone ever done something similar to what i'm trying to do, or know of any examples?
2018-09-20 22:24:32	durka42	s34n: other.thingy (but why don't you just #[derive(PartialOrd)]?)
2018-09-20 22:24:34	<--	Necronian-M (necronianm@moz-522p1u.matrix.org) has left #rust-beginners ("User left")
2018-09-20 22:24:37	-->	faitswulff (faitswulff@moz-2cnov8.il.comcast.net) has joined #rust-beginners
2018-09-20 22:24:54	<--	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has quit (Quit: Leaving)
2018-09-20 22:25:03	sumeet	i basically want to have my code separated in a way such that, if certain dependencies or compile flags are passed, i can switch behavior easily
2018-09-20 22:25:17	<--	ferris_noob (Mibbit@moz-6sjsko.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 22:25:33	sumeet	sorry if that's too vague, i can try to explain better. i'm really new with rust, so i'm kinda not sure how exactly to phrase it
2018-09-20 22:25:50	s34n	durka42: the koan comes with everything but line 15 and want me to supply line 15.
2018-09-20 22:26:23	s34n	durka42: but your answer is correct and I feel extra dumb for not getting it. :)
2018-09-20 22:26:40	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 22:26:44	durka42	okay, well a koan asking you to reimplement #[derive(PartialOrd)] is pretty weird IMO
2018-09-20 22:26:49	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 22:27:42	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 22:28:39	s34n	durka42: I think it's just trying to illustrate "inheritance"
2018-09-20 22:29:43	<--	voiceftp (voiceftp@moz-i3f0e0.academ.org) has quit (Connection closed)
2018-09-20 22:30:22	panther99	Hello everyone! I have a method add_child on the structure Node which as a parameter (child) takes another Node. Now, I want to set current Node as a parent of the child in that same method. Here is the code: https://pastebin.com/bKnQMEx2 
2018-09-20 22:30:30	panther99	I need advice on how to do that
2018-09-20 22:30:48	-->	voiceftp (voiceftp@moz-i3f0e0.academ.org) has joined #rust-beginners
2018-09-20 22:31:12	s34n	panther99: it looks you are trying to implement linked lists
2018-09-20 22:31:35	panther99	Tree actually
2018-09-20 22:31:37	s34n	panther99: this is a path to madness as a "get to know Rust" project
2018-09-20 22:31:44	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 22:31:45	panther99	Haha
2018-09-20 22:31:51	<--	mib_way60b (Mibbit@moz-mna0nc.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 22:32:00	s34n	panther99: I'm not kidding. Don't do this.
2018-09-20 22:32:33	panther99	You suggest me to use some pre-made solution?
2018-09-20 22:32:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 22:32:55	<--	ufobat___ (Martin@moz-b6u4od.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-20 22:32:58	-->	unter_nichts (unter_nicht@moz-iso5ra.it4b.pitv.8108.2a02.IP) has joined #rust-beginners
2018-09-20 22:33:02	s34n	panther99: no. I'm just saying that this is a very very bad first project
2018-09-20 22:33:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 22:33:42	<--	unter_nichts (unter_nicht@moz-iso5ra.it4b.pitv.8108.2a02.IP) has left #rust-beginners ("WeeChat 1.9.1")
2018-09-20 22:33:43	panther99	No, it's not my first project, I did Tic tac toe in Rust and regex tool from documentation
2018-09-20 22:34:15	-->	unter_nichts (unter_nicht@moz-iso5ra.it4b.pitv.8108.2a02.IP) has joined #rust-beginners
2018-09-20 22:34:16	panther99	I need this particular structure in my project as I'm working with filesystem
2018-09-20 22:34:43	s34n	panther99: there are tricks to store nodes in Vecs and use the vec index, and do generational indexing, etc.
2018-09-20 22:35:35	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 22:35:36	s34n	panther99: there are crated specifically to help with that
2018-09-20 22:35:43	s34n	s/crated/crates/
2018-09-20 22:35:52	panther99	Cool, I'll take a look then
2018-09-20 22:35:56	-->	stomper (Mibbit@moz-opk9ij.ca.comcast.net) has joined #rust-beginners
2018-09-20 22:36:06	s34n	slotmap, perhaps
2018-09-20 22:36:16	dpc1	!crate walk-dir
2018-09-20 22:36:16	+rustbot	Crate 'walk-dir' does not exist.
2018-09-20 22:36:19	dpc1	!crate walkdir
2018-09-20 22:36:19	+rustbot	walkdir (2.2.5) - Recursively walk a directory. -> https://crates.io/crates/walkdir <https://docs.rs/walkdir>
2018-09-20 22:36:47	<--	stomper (Mibbit@moz-opk9ij.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 22:36:48	panther99	Wow, cool, that crate is just what I need for my project! Thanks rustbot hahahaha
2018-09-20 22:36:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 22:36:56	dpc1	:)
2018-09-20 22:37:03	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-20 22:37:06	panther99	Oh, thanks dpc1 hahahha
2018-09-20 22:37:10	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-20 22:37:10	dpc1	xD
2018-09-20 22:37:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 22:38:48	-->	badboy (badboy_@moz-r416mt.rediger.net) has joined #rust-beginners
2018-09-20 22:39:24	<--	unter_nichts (unter_nicht@moz-iso5ra.it4b.pitv.8108.2a02.IP) has quit (Quit: WeeChat 1.9.1)
2018-09-20 22:39:29	<--	insidious (insidious@moz-cfo.dfl.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-20 22:40:25	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 22:41:58	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 22:42:05	<--	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 22:43:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 22:45:03	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 22:47:32	-->	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has joined #rust-beginners
2018-09-20 22:49:34	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-20 22:50:43	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-20 22:53:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 22:53:54	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-20 22:54:57	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 22:55:47	panicbit	panther99: be careful when filtering out dirs tho
2018-09-20 22:56:00	panther99	what do you mean?
2018-09-20 22:56:10	panicbit	if you filter out dirs, then it won't descend into them
2018-09-20 22:56:30	panther99	ah, sure
2018-09-20 22:56:32	panther99	thanks
2018-09-20 22:56:35	panicbit	so you have to filter those out using the standard iterator stuff
2018-09-20 22:56:42	panicbit	which is super annoying because of Result
2018-09-20 22:56:51	panicbit	so {?crate iterr} helps there
2018-09-20 22:56:51	--	Notice(eval): iterr (0.2.0) - Combinators for dealing with iterators of `Result`s. -> https://crates.io/crates/iterr [https://docs.rs/crate/iterr]
2018-09-20 22:57:16	panicbit	panther99: See https://gist.github.com/panicbit/276ee80561b2842512297753b166aba5
2018-09-20 22:57:35	panicbit	(lift_err is from iterr)
2018-09-20 22:57:46	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-20 22:57:56	panther99	Nice! I'll keep this
2018-09-20 22:58:00	panther99	Thanks again
2018-09-20 22:58:01	panicbit	<3
2018-09-20 22:58:06	dpc1	panicbit: make a crate xD
2018-09-20 22:58:22	panicbit	Eh, there are probably other walkdir crates
2018-09-20 22:58:22	panther99	this is why I love Rust
2018-09-20 22:58:28	panther99	because of it's amazing community
2018-09-20 22:58:32	panicbit	Which even deal with this properly
2018-09-20 22:58:53	dpc1	yeah ik was jk :D
2018-09-20 22:59:16	panicbit	I may have been using glob the last time I did this stuff?
2018-09-20 22:59:43	<--	voiceftp (voiceftp@moz-i3f0e0.academ.org) has quit (Connection closed)
2018-09-20 22:59:52	-->	voiceftp (voiceftp@moz-i3f0e0.academ.org) has joined #rust-beginners
2018-09-20 22:59:52	<--	snowe (snowe@moz-ri3.15m.177.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:01:32	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-20 23:01:58	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:02:19	panicbit	hm naw, I used walkdir too ¯\_(ツ)_/¯
2018-09-20 23:02:51	dpc1	:)
2018-09-20 23:02:52	<--	Aimai (Aimai@moz-8p30d7.dip0.t-ipconnect.de) has quit (Quit: leaving)
2018-09-20 23:02:58	panicbit	Ah right, back then I just flat_mapped and ignored any errors
2018-09-20 23:02:59	<--	Dariost (Dariost@moz-euo.lj4.20.151.IP) has quit (Client exited)
2018-09-20 23:03:15	panicbit	fun times
2018-09-20 23:03:31	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 23:03:41	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-20 23:06:41	panther99	When I was on the toilet I realized how stupid thing I did in my example. I set parent as an Option<&'a Node<'a>> and I'll have to destroy children anyhow when parent is removed. 
2018-09-20 23:07:04	panther99	It's fascinating how bathroom allows you to think about problems thoroughly...
2018-09-20 23:07:20	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Quit: Leaving)
2018-09-20 23:07:23	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-20 23:07:34	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:07:35	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:08:12	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:08:54	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 23:09:11	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 23:11:17	<--	badboy (badboy_@moz-r416mt.rediger.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 23:11:49	dpc1	Toilet Driven Development xD
2018-09-20 23:12:43	panicbit	>.>
2018-09-20 23:14:39	<--	faitswulff (faitswulff@moz-2cnov8.il.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-20 23:16:54	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:17:33	-->	wilma (Mibbit@moz-fd6.thf.149.169.IP) has joined #rust-beginners
2018-09-20 23:17:41	panther99	dpc1 hahahhaa
2018-09-20 23:17:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-20 23:18:08	panther99	F*ck Agile, we're moving to Toilet Driven Development
2018-09-20 23:18:10	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 23:18:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 23:19:30	dpc1	xD
2018-09-20 23:19:52	dpc1	panther99: daily scrums with Toilet driven development will be good for health though xD
2018-09-20 23:19:54	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:20:25	s34n	I'm trying to port a class hierarchy and struggling to get my head around Trait inheritance, etc.
2018-09-20 23:20:40	panicbit	there is no inheritance
2018-09-20 23:21:00	s34n	right
2018-09-20 23:21:14	panicbit	So porting this directly is likely to be unsuccessfu
2018-09-20 23:21:16	panicbit	l
2018-09-20 23:21:52	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:22:31	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 23:22:46	panicbit	s34n: Is there anything in particular that you have trouble with?
2018-09-20 23:22:47	s34n	So my Class C inherits B which inherits A keeps turning into struct B{a: A, ...} and reimplenting all of A's methods to self.a.method(...)
2018-09-20 23:23:16	-->	mib_92y094 (Mibbit@moz-no8eb8.jcsnms.sbcglobal.net) has joined #rust-beginners
2018-09-20 23:23:44	panicbit	It's probably best to identify first what is inherited from A
2018-09-20 23:23:59	s34n	then stuct C{b:B} has to reimplement B's methods which include all of A's methods
2018-09-20 23:24:09	panicbit	is it only attributes, only methods or both?
2018-09-20 23:24:22	s34n	both
2018-09-20 23:24:26	panicbit	urgh
2018-09-20 23:24:34	panicbit	ok
2018-09-20 23:24:36	panicbit	so
2018-09-20 23:24:46	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 23:24:47	panicbit	hm
2018-09-20 23:24:54	-->	chasinglogic (chasinglogi@moz-hrh.47r.65.159.IP) has joined #rust-beginners
2018-09-20 23:24:55	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-20 23:25:40	panicbit	for the methods you can just have traits for A and B
2018-09-20 23:25:52	panicbit	where `trait B: A { … }`
2018-09-20 23:26:03	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:26:11	panicbit	tho, ideally you would have only one trait
2018-09-20 23:26:21	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:26:25	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:26:30	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-20 23:26:36	s34n	panicbit: I have traits for A and B
2018-09-20 23:26:41	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 23:26:44	panicbit	and instead of inheriting, structs would use other structs to implement the trait
2018-09-20 23:26:50	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:26:53	panicbit	i.e. using composition
2018-09-20 23:27:02	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:27:08	s34n	panicbit: isn't that what I did above?
2018-09-20 23:27:09	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-20 23:27:23	panicbit	oh yeah, it is
2018-09-20 23:27:37	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:27:50	s34n	which makes me repeat my implementations over and over
2018-09-20 23:27:52	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:27:55	panicbit	yes
2018-09-20 23:28:03	mib_92y094	Can anyone help with a question about returning text from reqwest...i'm so lost...
2018-09-20 23:28:13	<--	raingloom (raingloom@moz-fidtda.pool.telekom.hu) has quit (Quit: WeeChat 2.2)
2018-09-20 23:28:24	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:28:40	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:28:48	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-20 23:28:48	<--	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has quit (Ping timeout: 121 seconds)
2018-09-20 23:29:03	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-20 23:29:05	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-20 23:29:11	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:29:17	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-20 23:29:18	panicbit	s34n: If you forward ALL methods of a trait to a single field, then maybe implementing the trait is not really necessary?
2018-09-20 23:29:29	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:29:55	panicbit	Like, you might be able to get away with just implementing Deref<Item = A> for B
2018-09-20 23:29:56	wilma	how should I earn rust after going through the book already 
2018-09-20 23:29:58	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:30:13	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:30:40	panther99	wilma The same way you would do for every language - by making projects
2018-09-20 23:30:42	panicbit	wilma: Try to write code, run into issues, and then discuss them here
2018-09-20 23:30:45	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:30:51	panicbit	:)
2018-09-20 23:30:59	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:31:04	panicbit	Failing is an integral part of learning
2018-09-20 23:31:10	panther99	wilma Think about things you would like to write and just start. If you run into issues just come for help here
2018-09-20 23:31:14	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-20 23:31:16	panther99	panicbit True
2018-09-20 23:31:32	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:31:38	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-20 23:31:43	s34n	panicbit: my complaint is the mushrooming methods that I have to re-implement at each layer
2018-09-20 23:31:44	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:31:45	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-20 23:31:54	panicbit	the what?
2018-09-20 23:32:18	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:32:30	s34n	but perhaps Deref solves that
2018-09-20 23:32:31	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:33:03	panicbit	it would allow you to get an &A from a &B easily
2018-09-20 23:33:05	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:33:14	wilma	Rust is kinda the first proper language I learned and the only thing till now I was able to make was https://github.com/sn99/rust_sample_game
2018-09-20 23:33:17	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-20 23:33:18	panicbit	the same way how you can turn a &Vec<T> into a &[T]
2018-09-20 23:33:52	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-20 23:34:22	<--	mib_92y094 (Mibbit@moz-no8eb8.jcsnms.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 23:34:29	-->	voice_ftp (voiceftp@moz-i3f0e0.academ.org) has joined #rust-beginners
2018-09-20 23:34:52	panicbit	wilma: quite creative
2018-09-20 23:35:38	s34n	wilma: once you have compiled, you don't need to distribute rustc and cargo
2018-09-20 23:35:39	<--	voiceftp (voiceftp@moz-i3f0e0.academ.org) has quit (Ping timeout: 121 seconds)
2018-09-20 23:35:41	panicbit	Other standard stuff to do is implementing minesweeper or conways game of life
2018-09-20 23:36:10	s34n	wilma: just distribute the executable and json files
2018-09-20 23:36:30	panicbit	s34n: Well, unless your dependencies depend on some compiler internal stuff :'D
2018-09-20 23:36:38	wilma	panicbit: I tried graphics but they just seem to go above my head
2018-09-20 23:37:07	panicbit	wilma: You can just do some fun terminal stuff with rustbox
2018-09-20 23:37:42	panicbit	tho, rustbox may not compile properly right now because termbox has changed something in their buildsystem
2018-09-20 23:38:03	wilma	s34n: The audio still not works for windows and I thought I will distribute the linux binary with the windows.exe :) (I got to know a bit later about target in rustc)
2018-09-20 23:38:12	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Quit: WeeChat 2.1)
2018-09-20 23:38:25	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-20 23:38:42	wilma	panicbit: conways way of life in terminal ?
2018-09-20 23:38:48	panicbit	yup
2018-09-20 23:38:54	panicbit	wilma: I did that ;)
2018-09-20 23:38:58	-->	enterprisey (enterprisey@moz-qf6b12.cit.cornell.edu) has joined #rust-beginners
2018-09-20 23:39:04	panicbit	with mouse interaction <3
2018-09-20 23:39:04	dpc1	:D
2018-09-20 23:39:14	dpc1	terminal gods won't be happy xD
2018-09-20 23:39:44	panicbit	wilma: https://github.com/panicbit/game_of_life
2018-09-20 23:40:10	panicbit	oh my
2018-09-20 23:40:13	panicbit	it doesn't even build
2018-09-20 23:40:28	dpc1	xD
2018-09-20 23:40:35	panicbit	because I deleted some forked repository
2018-09-20 23:40:40	panicbit	probably
2018-09-20 23:40:55	panicbit	I think I even was the one that added mouse support
2018-09-20 23:41:01	panicbit	to rustbox
2018-09-20 23:41:45	panicbit	oh boy fun
2018-09-20 23:42:43	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:43:11	dpc1	time for game_of_life 2018 ed panicbit xD
2018-09-20 23:43:24	<--	ca1ek (dawid@moz-9d1mn7.internetia.net.pl) has quit (The TLS connection was non-properly terminated.)
2018-09-20 23:43:34	panicbit	if only rustbox would compile properly *sigh*
2018-09-20 23:43:51	dpc1	anywayz, off for the night :) ciao
2018-09-20 23:43:56	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:43:57	<--	panther99 (Mibbit@moz-4am8ge.isp.telekom.rs) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 23:44:20	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-20 23:44:39	<--	wilma (Mibbit@moz-fd6.thf.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-20 23:44:46	panicbit	wtf is happening
2018-09-20 23:44:52	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-20 23:44:53	panicbit	everyone is leaving :(
2018-09-20 23:48:44	panicbit	I think I can move to termion
2018-09-20 23:49:36	-->	pbalcer_ (piotrb@moz-gl7.r6t.134.134.IP) has joined #rust-beginners
2018-09-20 23:50:09	<--	pbalcer (piotrb@moz-gl7.r6t.134.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-20 23:52:13	panicbit	oh my
2018-09-20 23:52:20	panicbit	> use std::time::duration::Duration;
2018-09-20 23:52:21	<--	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-20 23:52:25	panicbit	That's pretty old
2018-09-20 23:52:32	panicbit	Duration was still unstable then
2018-09-20 23:52:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-20 23:56:11	-->	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has joined #rust-beginners
2018-09-20 23:57:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-20 23:58:10	panicbit	So er
2018-09-20 23:58:17	panicbit	termion is a little bit too low level
2018-09-20 23:58:40	panicbit	but termion claims to be a fully fledged alternative to termbox
2018-09-20 23:58:44	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-20 23:58:54	panicbit	So I'm gonna fork rustbox and replace the termbox stuff with termion
2018-09-20 23:59:09	panicbit	^ this is how I find projects
2018-09-20 23:59:25	panicbit	"This sucks, I'm gonna fix it"
2018-09-21 00:00:42	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-21 00:00:51	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 00:01:14	-->	ljhms (ljhms@moz-95m2u0.cust.bahnhof.se) has joined #rust-beginners
2018-09-21 00:01:20	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 00:01:34	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-21 00:03:17	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 00:05:08	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:05:52	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-21 00:06:57	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:07:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 00:08:59	-->	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has joined #rust-beginners
2018-09-21 00:10:14	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-21 00:12:29	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 00:12:45	<--	GreenJello (GreenJello@moz-hrncfv.7di5.9nhv.8800.2600.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 00:13:21	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 00:18:11	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 00:18:40	-->	insidious (insidious@moz-cfo.dfl.198.134.IP) has joined #rust-beginners
2018-09-21 00:19:50	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:20:20	-->	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has joined #rust-beginners
2018-09-21 00:20:59	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-21 00:21:11	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 00:21:25	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 00:22:29	<--	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has quit (Connection closed)
2018-09-21 00:22:41	-->	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has joined #rust-beginners
2018-09-21 00:23:11	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-21 00:23:18	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-21 00:23:42	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-21 00:24:09	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-21 00:25:11	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 00:25:46	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 00:26:29	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 00:27:27	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-21 00:28:13	-->	jacknsipe_ (Mibbit@moz-04rbqv.dyn.optonline.net) has joined #rust-beginners
2018-09-21 00:29:24	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-21 00:29:46	<--	jacknsipe_ (Mibbit@moz-04rbqv.dyn.optonline.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 00:29:57	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 00:32:21	<--	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:32:36	-->	ken (ken@moz-60fncd.sasknet.sk.ca) has joined #rust-beginners
2018-09-21 00:33:07	dutchie	https://play.rust-lang.org/?gist=63b39304472fbaa64fab0ee318afb5cf&version=stable&mode=debug&edition=2015
2018-09-21 00:33:15	<--	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:33:29	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:33:58	dutchie	what's going on here? how can I implement the intended behaviour?
2018-09-21 00:34:14	<--	dous (dous@moz-3m5.4db.139.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 00:34:30	<--	BearOfJade (Alex@moz-u8u21c.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-21 00:35:01	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 00:35:07	stephaneyfx	dutchie: This compiles: https://play.rust-lang.org/?gist=6a5269a0757f42621b16eee9cf6ca121&version=stable&mode=debug&edition=2015
2018-09-21 00:35:11	dutchie	I don't see what's being moved. I have similar `match *self.0` in other methods
2018-09-21 00:35:37	 *	dutchie blinks
2018-09-21 00:35:38	stephaneyfx	dutchie: The difference is that you're creating the pair *before* matching, and this creation performs a move
2018-09-21 00:36:08	stephaneyfx	dutchie: I should say attemps to perform a move
2018-09-21 00:36:10	dutchie	oh right! it's thet upling
2018-09-21 00:36:12	dutchie	tupling*
2018-09-21 00:36:13	stephaneyfx	*attempts
2018-09-21 00:36:13	gentlehelm	dutchie: you can also disregard the Deref and get a mut ref
2018-09-21 00:36:19	gentlehelm	dutchie: with &mut
2018-09-21 00:36:45	<--	alx741 (alx741@moz-tgq.k67.178.186.IP) has quit (Client exited)
2018-09-21 00:37:08	dutchie	why would i use &mut? I don't need mutability
2018-09-21 00:38:44	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-21 00:39:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:39:33	-->	dous (dous@moz-3m5.4db.139.37.IP) has joined #rust-beginners
2018-09-21 00:39:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 00:40:33	-->	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has joined #rust-beginners
2018-09-21 00:42:34	-->	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has joined #rust-beginners
2018-09-21 00:43:09	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-21 00:43:11	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-21 00:43:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 00:43:44	<--	enterprisey (enterprisey@moz-qf6b12.cit.cornell.edu) has quit (Connection closed)
2018-09-21 00:43:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 00:44:51	gentlehelm	i don't get why you take ref and then Deref
2018-09-21 00:47:43	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-21 00:47:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:50:00	-->	wilma (Mibbit@moz-ma9edt.ip45.fastwebnet.it) has joined #rust-beginners
2018-09-21 00:50:14	<--	wilma (Mibbit@moz-ma9edt.ip45.fastwebnet.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 00:51:36	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-21 00:51:51	<--	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 00:54:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 00:54:59	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-21 00:55:53	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 00:56:24	<--	Orez (Orez@moz-i1o.vhq.252.206.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 00:56:33	<--	blackgoat (blackgoat@moz-jh3.cup.194.211.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 00:56:49	-->	Orez (Orez@moz-i1o.vhq.252.206.IP) has joined #rust-beginners
2018-09-21 00:56:56	-->	zpeters (Mibbit@moz-no8eb8.jcsnms.sbcglobal.net) has joined #rust-beginners
2018-09-21 00:58:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 00:59:01	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-21 01:00:13	-->	ksqsf (ksqsf@moz-dv99lg.h0dd.vs72.0da8.2001.IP) has joined #rust-beginners
2018-09-21 01:00:57	<--	Orez (Orez@moz-i1o.vhq.252.206.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 01:01:59	-->	rotty (rotty@moz-07gt5n.chaostreff.at) has joined #rust-beginners
2018-09-21 01:02:44	<--	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:03:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 01:03:32	<--	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:03:42	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:03:45	rotty	It seems I can't move a box into a closure: https://play.rust-lang.org/?gist=75b467f014d47abe337fa5868a75ec7d&version=stable&mode=debug&edition=2015
2018-09-21 01:04:02	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:04:08	rotty	(box containing a trait object, that is)
2018-09-21 01:04:46	<--	zpeters (Mibbit@moz-no8eb8.jcsnms.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 01:05:38	-->	Mateon2 (Thunderbird@moz-3pdumf.supernova.orange.pl) has joined #rust-beginners
2018-09-21 01:05:43	ZeroWalker	i am trying to read and process some json that i know only at runtime, and i can't seem to figure out how to make it work out. i am using serde_json
2018-09-21 01:06:09	-->	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has joined #rust-beginners
2018-09-21 01:06:17	rotty	I would have assumed that inside plus_1, the Box named "func" would be moved into the closure -- I don't see why the compiler needs to know the size of the type inside the box.
2018-09-21 01:06:24	<--	Mateon1 (Thunderbird@moz-m1al4c.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 01:06:25	--	Mateon2 is now known as Mateon1
2018-09-21 01:07:00	<--	AtumT (IRC@moz-soe.d2s.113.187.IP) has quit (Client exited)
2018-09-21 01:07:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:07:21	-->	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has joined #rust-beginners
2018-09-21 01:07:32	stephaneyfx	rotty: The issue is with invoking a Box<FnOnce>
2018-09-21 01:07:49	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-21 01:07:59	-->	emilsp (emilsp@moz-ru5vj7.cable.virginm.net) has joined #rust-beginners
2018-09-21 01:08:25	stephaneyfx	rotty: Shorter example: https://play.rust-lang.org/?gist=669d8ce3c1bce9556c4c0649a696de6e&version=stable&mode=debug&edition=2015
2018-09-21 01:08:59	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-21 01:09:25	stephaneyfx	rotty: FnOnce requires to move the closure but one can't move out of a Box<dyn Trait> because, as the error says, the size is not known at compile-time
2018-09-21 01:09:58	<--	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 01:10:01	-->	faitswulff (faitswulff@moz-7b02kd.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 01:10:08	<--	faitswulff (faitswulff@moz-7b02kd.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 01:10:43	stephaneyfx	rotty: A workaround is to use Box<FnMut> instead, potentially wrapping the environment in Option and `take`-ing it if it needs to be consumed during the call
2018-09-21 01:11:30	rotty	stephaneyfx: thanks; that helps! Is this behavior described in the book?
2018-09-21 01:12:38	stephaneyfx	rotty: Not sure. I know this alludes to it briefly: https://doc.rust-lang.org/std/boxed/trait.FnBox.html
2018-09-21 01:13:02	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 01:13:04	<--	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-21 01:13:09	stephaneyfx	rotty: The linked issue may have more material
2018-09-21 01:13:51	-->	icarus (Mibbit@moz-55hco7.dsl.bell.ca) has joined #rust-beginners
2018-09-21 01:15:57	rotty	stephaneyfx: cool, thx
2018-09-21 01:18:39	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-21 01:20:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 01:20:51	-->	fatpoint1 (wadadli@moz-mig04k.oik1.u6vv.e000.2605.IP) has joined #rust-beginners
2018-09-21 01:21:01	<--	fatpoint1 (wadadli@moz-mig04k.oik1.u6vv.e000.2605.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 01:21:06	<--	alatiera_ (alatiera@moz-8roppa.access.hol.gr) has quit (Quit: Leaving)
2018-09-21 01:23:15	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-21 01:24:04	-->	Arcaelyx (Arcaelyx@moz-l5o5ff.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-09-21 01:24:04	-->	alx741 (alx741@moz-tgq.k67.178.186.IP) has joined #rust-beginners
2018-09-21 01:24:06	<--	Arcaelyx (Arcaelyx@moz-l5o5ff.77ht.vv5c.2000.2604.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-21 01:24:48	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:25:10	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 01:25:35	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-21 01:26:06	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 01:26:17	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-21 01:26:27	icarus	Before I write it myself, I'm wondering if there is already a standard library widget that does something along the lines of what is in the stack overflow question for Haskell
2018-09-21 01:26:27	icarus	https://softwareengineering.stackexchange.com/questions/226599/mapping-a-list-of-optional-values-to-an-optional-list-of-values
2018-09-21 01:29:10	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 01:29:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 01:30:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:31:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 01:33:08	<--	siddhartharao17 (siddharthar@moz-jdh.sr5.107.128.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 01:33:19	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:34:47	<--	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 01:35:18	-->	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has joined #rust-beginners
2018-09-21 01:35:37	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-21 01:36:04	-->	erich_ (erich@moz-usk.7m2.55.192.IP) has joined #rust-beginners
2018-09-21 01:36:58	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 01:37:29	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 01:38:08	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-09-21 01:38:20	<--	ericho (erich@moz-usk.7m2.55.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 01:38:52	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-21 01:41:09	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:41:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 01:41:27	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 01:41:31	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 01:42:17	-->	faitswulff (faitswulff@moz-7b02kd.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 01:42:51	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-21 01:42:58	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-21 01:43:15	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 01:46:18	<--	faitswulff (faitswulff@moz-7b02kd.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 01:46:23	-->	ibrokemypie (conor@moz-9vl.sfd.59.139.IP) has joined #rust-beginners
2018-09-21 01:46:25	-->	rumpler (Mibbit@moz-t5r.0oo.7.179.IP) has joined #rust-beginners
2018-09-21 01:46:40	-->	faitswulff (faitswulff@moz-7b02kd.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 01:46:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:47:17	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 01:48:11	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-21 01:48:41	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 01:48:53	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-21 01:52:16	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 01:54:40	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 01:56:24	<--	ibrokemypie (conor@moz-9vl.sfd.59.139.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 01:56:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 01:56:34	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-21 01:56:40	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-21 01:57:05	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 01:57:56	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-21 01:57:57	-->	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 01:58:40	-->	JAlbers_ (jalbers@moz-3q1o0p.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 01:58:52	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 01:59:08	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 02:00:40	<--	JAlbers_ (jalbers@moz-3q1o0p.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-21 02:00:42	-->	JAlbers_ (jalbers@moz-3q1o0p.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 02:00:48	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:01:08	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-21 02:01:26	<--	JAlbers_ (jalbers@moz-3q1o0p.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-21 02:01:34	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 02:01:58	<--	JAlbers (jalbers@moz-im7rmb.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 02:02:28	<--	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:03:20	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:03:34	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 02:03:54	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 02:04:13	-->	MomusInvictus (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has joined #rust-beginners
2018-09-21 02:04:22	<--	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has quit (Connection closed)
2018-09-21 02:05:47	-->	JAlbers (jalbers@moz-3q1o0p.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 02:06:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 02:06:03	<--	JAlbers (jalbers@moz-3q1o0p.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-21 02:06:03	-->	JAlbers_ (jalbers@moz-gbmisn.il.comcast.net) has joined #rust-beginners
2018-09-21 02:06:28	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-21 02:06:54	<--	insidious (insidious@moz-cfo.dfl.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 02:07:14	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-21 02:08:06	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 02:10:00	-->	insidious (insidious@moz-cfo.dfl.198.134.IP) has joined #rust-beginners
2018-09-21 02:10:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:10:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 02:10:51	-->	bellows (Mibbit@moz-ir2c34.fios.verizon.net) has joined #rust-beginners
2018-09-21 02:11:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 02:12:18	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:14:43	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 02:15:11	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-21 02:15:19	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:16:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 02:16:31	<--	JAlbers_ (jalbers@moz-gbmisn.il.comcast.net) has quit (Connection closed)
2018-09-21 02:16:42	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 02:17:03	-->	JAlbers (jalbers@moz-3q1o0p.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 02:17:51	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 02:17:53	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-21 02:19:20	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-21 02:19:30	<--	ksqsf (ksqsf@moz-dv99lg.h0dd.vs72.0da8.2001.IP) has quit (Client exited)
2018-09-21 02:20:13	-->	JAlbers_ (jalbers@moz-gbmisn.il.comcast.net) has joined #rust-beginners
2018-09-21 02:20:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:20:59	-->	sparky8251 (quassel@moz-dqudgl.1jj3.dq59.00c6.2601.IP) has joined #rust-beginners
2018-09-21 02:21:04	<--	JAlbers (jalbers@moz-3q1o0p.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 02:22:06	sparky8251	anyone have a recommendation for a crate that can be used to interact with an existing RESTful API? i cant seem to find anything that stands out as being capable of such
2018-09-21 02:22:38	-->	mud (mud@moz-hktlq7.scu7.kdko.8800.2600.IP) has joined #rust-beginners
2018-09-21 02:23:09	-->	starblue1 (juergen@moz-jc37pa.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-21 02:23:28	<--	starblue (juergen@moz-7qvrtj.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-21 02:24:53	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:24:54	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:25:11	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 02:27:17	-->	mib_5xehj9 (Mibbit@moz-nho.e7r.17.27.IP) has joined #rust-beginners
2018-09-21 02:27:49	<--	mib_5xehj9 (Mibbit@moz-nho.e7r.17.27.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 02:31:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 02:32:30	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-21 02:33:05	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 02:34:02	-->	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has joined #rust-beginners
2018-09-21 02:34:15	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Connection closed)
2018-09-21 02:34:27	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 02:34:54	insidious	sparky8251: have you looked into reqwest? 
2018-09-21 02:34:56	-->	enterprisey (enterprisey@moz-qf6b12.cit.cornell.edu) has joined #rust-beginners
2018-09-21 02:35:20	<--	rumpler (Mibbit@moz-t5r.0oo.7.179.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 02:35:27	insidious	sparky8251: https://crates.io/crates/reqwest
2018-09-21 02:36:16	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:36:19	<--	danecando (danecando@moz-7plmci.sdba.4jle.1700.2600.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 02:36:36	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 02:36:43	sparky8251	insidious: that looks a lot simpler than hyper! i only need 1-2 requests each time the program runs, so speed like hyper boasts isnt what i wanted
2018-09-21 02:36:47	sparky8251	thanks man!
2018-09-21 02:37:15	insidious	sparky8251: np! hyper is meant to be more low-level, reqwest is the higher-level library using hyper under the hood :)
2018-09-21 02:37:35	sparky8251	even better!
2018-09-21 02:37:47	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-21 02:39:09	sparky8251	you wouldnt happen to know of a similar high level library for interacting with unix sockets would you?
2018-09-21 02:41:03	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-21 02:42:29	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:43:19	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Quit: WeeChat 2.0.1)
2018-09-21 02:43:40	<--	weeji (jihi@moz-bc8pd7.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 02:47:14	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 02:47:46	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:47:50	<--	mud (mud@moz-hktlq7.scu7.kdko.8800.2600.IP) has quit (Quit: bye)
2018-09-21 02:47:52	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 02:48:41	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-21 02:50:00	<--	JAlbers_ (jalbers@moz-gbmisn.il.comcast.net) has quit (Connection closed)
2018-09-21 02:51:16	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 02:52:12	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-21 02:53:06	<--	liquidnight (marcus@moz-a7hfpg.305i.abqi.0c22.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 02:56:35	-->	weeji (jihi@moz-kgms3j.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 02:57:19	-->	ubuntourist (kjcole@moz-g5jhd1.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 02:57:36	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 02:58:36	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-21 02:59:50	<--	ubuntourist (kjcole@moz-g5jhd1.hfc.comcastbusiness.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 03:00:40	<--	jdhorwitz (sid307004@moz-989ngn.stonehaven.irccloud.com) has quit (Quit: )
2018-09-21 03:01:22	-->	LurkingFrog (dfogelson@moz-2ip9s3.hs.gigamonster.net) has joined #rust-beginners
2018-09-21 03:01:40	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 03:01:52	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-21 03:04:39	<--	drivel (me@moz-iqulob.maltekraus.de) has quit (Connection closed)
2018-09-21 03:04:52	<--	x7C3 (x7C3@moz-263qav.jm7b.9t5s.04f8.2a01.IP) has quit (Quit: Another one bites the dust)
2018-09-21 03:04:53	<--	elomatreb (elomatreb@moz-ev25t9.am) has quit (Quit: mep mep)
2018-09-21 03:05:03	-->	x7C3 (x7C3@moz-g7v.ded.9.5.IP) has joined #rust-beginners
2018-09-21 03:05:09	<--	martin-t (quassel@moz-ic0vc6.de) has quit (Quit: No Ping reply in 120 seconds.)
2018-09-21 03:05:12	<--	ventos (ventos@moz-991isa.coding4coffee.org) has quit (Ping timeout: 121 seconds)
2018-09-21 03:05:21	<--	teratorn_ (teratorn@moz-m65973.0rhs.isan.04f8.2a01.IP) has quit (Quit: ZNC - https://znc.in)
2018-09-21 03:05:24	<--	SWW13 (SWW13@moz-4fok16.brn.li) has quit (Quit: You know you're gonna miss me when I'm gone.)
2018-09-21 03:05:36	<--	jkhsjdhjs (jkhsjdhjs@totally.rip) has quit (Quit: Error: Leaving not permitted)
2018-09-21 03:05:42	-->	jkhsjdhjs (jkhsjdhjs@totally.rip) has joined #rust-beginners
2018-09-21 03:06:06	<--	devurandom (quassel@moz-43g9on.kynes.de) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-21 03:06:07	<--	lucus (quassel@moz-0128j4.rasusan.nl) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-21 03:06:11	<--	heftig (heftig@soyuz.archlinux.org) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-21 03:06:12	-->	drivel (me@moz-iqulob.maltekraus.de) has joined #rust-beginners
2018-09-21 03:06:34	-->	teratorn (teratorn@moz-tmgcht.vmpanel.net) has joined #rust-beginners
2018-09-21 03:06:35	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:06:38	<--	gcp (gcp@moz-nlrjr8.c4tt.2uic.04f8.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 03:06:43	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 03:06:54	<--	moritzheiber (moritzheibe@moz-mbam7c.heiber.im) has quit (Ping timeout: 121 seconds)
2018-09-21 03:06:54	<--	svenstaro (svenstaro@moz-4uavuc.de) has quit (Ping timeout: 121 seconds)
2018-09-21 03:07:08	<--	yath (yath@moz-masl5h.yath.de) has quit (Ping timeout: 121 seconds)
2018-09-21 03:07:11	-->	martin-t (quassel@moz-ic0vc6.de) has joined #rust-beginners
2018-09-21 03:07:22	<--	WakiMiko (WakiMiko@moz-lcmap3.irt6.onk9.04f8.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 03:07:24	<--	lara (lara@moz-t7stsh.eu) has quit (Ping timeout: 121 seconds)
2018-09-21 03:07:26	<--	PyroLagus (PyroLagus@moz-6a3juu.on.coding4coffee.org) has quit (Ping timeout: 121 seconds)
2018-09-21 03:07:27	-->	elomatreb (elomatreb@moz-ev25t9.am) has joined #rust-beginners
2018-09-21 03:07:32	-->	SWW13 (SWW13@moz-4fok16.brn.li) has joined #rust-beginners
2018-09-21 03:07:33	-->	gcp (gcp@moz-aoi.4l3.201.138.IP) has joined #rust-beginners
2018-09-21 03:07:35	-->	ventos (ventos@moz-991isa.coding4coffee.org) has joined #rust-beginners
2018-09-21 03:07:39	-->	lucus (quassel@moz-0128j4.rasusan.nl) has joined #rust-beginners
2018-09-21 03:07:43	<--	microcolonel (microcolone@moz-3q2nm5.linux-mips.org) has quit (Ping timeout: 121 seconds)
2018-09-21 03:07:44	-->	heftig (heftig@soyuz.archlinux.org) has joined #rust-beginners
2018-09-21 03:07:45	-->	kimundi- (kimundi@moz-f2o7tc.versanet.de) has joined #rust-beginners
2018-09-21 03:07:47	-->	devurandom (quassel@moz-43g9on.kynes.de) has joined #rust-beginners
2018-09-21 03:08:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 03:08:12	-->	yath (yath@moz-masl5h.yath.de) has joined #rust-beginners
2018-09-21 03:08:14	-->	moritzheiber (moritzheibe@moz-mbam7c.heiber.im) has joined #rust-beginners
2018-09-21 03:08:23	-->	lara (lara@moz-t7stsh.eu) has joined #rust-beginners
2018-09-21 03:08:24	-->	svenstaro (svenstaro@moz-4uavuc.de) has joined #rust-beginners
2018-09-21 03:08:43	-->	PyroLagus (PyroLagus@moz-6a3juu.on.coding4coffee.org) has joined #rust-beginners
2018-09-21 03:08:46	-->	WakiMiko (WakiMiko@moz-lcmap3.irt6.onk9.04f8.2a01.IP) has joined #rust-beginners
2018-09-21 03:08:50	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 03:08:51	<--	kimundi (kimundi@moz-ddbaiq.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-21 03:08:52	--	kimundi- is now known as kimundi
2018-09-21 03:08:55	-->	microcolonel (microcolone@moz-3q2nm5.linux-mips.org) has joined #rust-beginners
2018-09-21 03:09:10	-->	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 03:09:45	-->	neal_ (neal@moz-qchabn.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 03:11:03	-->	super119x (super119@moz-om6.h52.116.180.IP) has joined #rust-beginners
2018-09-21 03:11:59	super119x	A simple question: https://play.rust-lang.org/?gist=89552ac26cf06530b0a955f287693758&version=stable&mode=debug&edition=2015
2018-09-21 03:12:13	super119x	this tiny program tries to initialize an array
2018-09-21 03:12:30	super119x	but I will get a build error like: error[E0381]: use of possibly uninitialized variable: `test_array`
2018-09-21 03:12:39	<--	neal (neal@moz-68os61.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 03:13:01	super119x	so this is awkward, I want to initialize an array but compiler tells me I must initialize the array when declaring.
2018-09-21 03:13:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:14:45	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 03:15:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 03:15:47	emerent	super119x: the compiler doesn't understand indexing the way it does struct members
2018-09-21 03:16:28	<--	neverfox_ (neverfox@moz-325q8o.res.rr.com) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-21 03:16:41	emerent	you'll have to give it some intermediate value first or explicitly give it unitialized memory
2018-09-21 03:16:58	insidious	sparky8251: what are you trying to accomplish with sockets?
2018-09-21 03:17:17	super119x	emerent yeah so how to "give it uninitialized memory"?
2018-09-21 03:17:27	super119x	explicitly
2018-09-21 03:17:37	insidious	sparky8251: in many cases, mpsc messages may suffice if you're just communicating between threads
2018-09-21 03:17:58	insidious	otherwise something like tokio or zmq (or zmq-tokio) might be of interest
2018-09-21 03:18:00	sparky8251	insidious: communication with the docker daemon. HTTP/JSON is one way, sockets are the other
2018-09-21 03:18:05	insidious	ahh i see
2018-09-21 03:18:28	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-21 03:18:37	emerent	super119x: std::mem::uninitialized, but unless you're doing this for something that doesn't have a cheap dummy value to put there
2018-09-21 03:18:39	insidious	zmq/zmq-tokio aren't very 'high-level' but they provide pretty standard asynchronous abstractions
2018-09-21 03:19:00	emerent	I recommend you don't use unsafe code for such a case
2018-09-21 03:19:27	insidious	i mean, they are abstract but i'm not sure if they're what you're looking for
2018-09-21 03:19:41	emerent	and if the things you want to initialize have `Drop` implementations, you can't do this via assignment through indices
2018-09-21 03:20:01	super119x	emerent ok thanks. yeah, I think we often put a struct in array, for some big struct, I don't think we have any cheap dummy value for them. How do you handle this normally?
2018-09-21 03:20:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:20:49	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 03:21:14	super119x	> if the things you want to initialize have `Drop` implementations, you can't do this via assignment through indices
2018-09-21 03:21:26	sparky8251	insidious: reqwest has some really strange return requirements. i might just drop down to hyper to not have to deal with it... as for sockets, i'll play with zmq/tokizmq and see which i end up preferring. thanks man!
2018-09-21 03:21:34	super119x	Is this compiler enforced or we should follow this manually?
2018-09-21 03:22:15	super119x	also can I understand this like, the Drop trait won't be called when change the array element via assignment through indices?
2018-09-21 03:22:26	insidious	sparky8251: haha np. what do you mean by strange return requirements?
2018-09-21 03:22:49	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 03:22:56	<--	chrisdotcode (quassel@moz-egk3sj.jv55.dlrr.fcc8.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 03:23:11	emerent	super119x: you can do it, but it may explode in your face
2018-09-21 03:23:33	emerent	because the memory will be treated as valid and it will attempt to drop the previous value
2018-09-21 03:23:47	emerent	std::ptr::write avoids that
2018-09-21 03:24:30	emerent	another issue is that if there's a panic during construction, everything in the array will be dropped as if it were already initialized
2018-09-21 03:24:35	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-21 03:24:44	sparky8251	insidious: all their examples show that i need to wrap their GET and PUT in a function that returns Result<(), Box<std::error::Error>>. trying to match and return a value doesnt seem to work well since it seems they implement their own internal reqwest::Result that doesnt seem to play well with the std Result
2018-09-21 03:25:28	emerent	super119x: a MaybeUninit type is planned to be added to make this safer
2018-09-21 03:25:38	emerent	but honestly, the easiest thing you can do
2018-09-21 03:25:53	emerent	is use something like `Option<T>` or a stackvec
2018-09-21 03:26:21	emerent	or just a vec
2018-09-21 03:26:31	<--	nineczar (nate@moz-al9sd1.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:26:37	-->	guacamole (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-21 03:26:42	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:26:58	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 03:27:03	insidious	sparky8251: that's pretty normal, sometimes libraries will wrap Result<> to get rid of the second type parameter making function definitions a bit cleaner. It seems reqwests' Result<> is this way: https://docs.rs/reqwest/0.9.1/reqwest/type.Result.html
2018-09-21 03:27:07	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 03:27:52	insidious	sparky8251: you have a few options, either you can return a Result<> type yourself (with a error type for your crate), or unwrap()/expect() (good for prototyping/examples), handle it yourself with match{}, etc.
2018-09-21 03:27:57	guacamole	I'm using a project that has to be built using RUSTFLAGS='--cfg procmacro2_semver_exempt'. The problem is if I try to run the binary I get a dyld: Library not loaded: @rpath/libproc_macro-b4a065906c9148de.dylib
2018-09-21 03:28:05	-->	jkkm (sid181533@moz-2va6as.hathersage.irccloud.com) has joined #rust-beginners
2018-09-21 03:28:09	guacamole	Is there someway to statically link libproc?
2018-09-21 03:28:47	insidious	sparky8251: ie, reqest::Result returns T (the value you want) and their error (reqwest::Error)
2018-09-21 03:29:14	<--	jkkm (sid181533@moz-2va6as.hathersage.irccloud.com) has quit (Quit: Updating details, brb)
2018-09-21 03:29:15	-->	jkkm (sid181533@moz-2va6as.hathersage.irccloud.com) has joined #rust-beginners
2018-09-21 03:30:00	insidious	sparky8251: if you return Result<> yourself, you would have to have a way to convert reqwest::Error to your own error type, usually using the `From` trait
2018-09-21 03:30:06	-->	DeltaManiac (DeltaManiac@moz-na1.i3d.97.59.IP) has joined #rust-beginners
2018-09-21 03:31:01	<--	DeltaManiac (DeltaManiac@moz-na1.i3d.97.59.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 03:31:08	-->	DeltaManiac (DeltaManiac@moz-na1.i3d.97.59.IP) has joined #rust-beginners
2018-09-21 03:31:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:31:33	sparky8251	insidious: yeah... no idea what that really entails sadly. ive tried doing match{} but it just moans about type mismatches, same for unwrap()
2018-09-21 03:32:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 03:32:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 03:34:41	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-21 03:34:55	-->	i-amd3 (i-amd3@moz-rs9bf0.ucom.ne.jp) has joined #rust-beginners
2018-09-21 03:34:56	super119x	emerent Got it, thanks.
2018-09-21 03:34:57	<--	i-amd3 (i-amd3@moz-rs9bf0.ucom.ne.jp) has quit (Connection closed)
2018-09-21 03:35:01	<--	DeltaManiac (DeltaManiac@moz-na1.i3d.97.59.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 03:36:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:36:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 03:37:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 03:37:30	-->	DeltaManiac (DeltaManiac@moz-na1.i3d.97.59.IP) has joined #rust-beginners
2018-09-21 03:37:34	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-21 03:41:28	<--	guacamole (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 03:41:59	-->	DeltaMan_ (DeltaManiac@moz-sts.5q9.13.203.IP) has joined #rust-beginners
2018-09-21 03:42:54	insidious	sparky8251: this chapter of the rust book might help ya out a bit: https://doc.rust-lang.org/book/second-edition/ch09-00-error-handling.html
2018-09-21 03:43:20	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:43:29	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 03:44:09	sparky8251	insidious: maybe. but i just found that its response::json that causing me headaches and not response::text with match{}
2018-09-21 03:44:13	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 03:44:31	<--	DeltaManiac (DeltaManiac@moz-na1.i3d.97.59.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 03:45:21	insidious	sparky8251: if want, you can send some code via pastebin and i can take a quick look, a bit hard to figure out otherwise haha
2018-09-21 03:45:29	<--	simonadameit (simonadamei@moz-rjts8s.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 03:47:21	sparky8251	insidious: http://dpaste.com/05WXPM8 complains that i need a type annotation. my understanding is that i have one with the struct? plus, im sure ive mangled the code somehow too XD
2018-09-21 03:47:53	<--	DeltaMan_ (DeltaManiac@moz-sts.5q9.13.203.IP) has quit (Quit: )
2018-09-21 03:47:58	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 03:48:04	-->	DeltaManiac (DeltaManiac@moz-sts.5q9.13.203.IP) has joined #rust-beginners
2018-09-21 03:48:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:50:34	-->	simonadameit (simonadamei@moz-258595.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 03:51:20	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-21 03:51:42	<--	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-21 03:52:08	-->	subhojit777 (subhojit777@moz-mvu.gqm.163.122.IP) has joined #rust-beginners
2018-09-21 03:52:49	<--	faitswulff (faitswulff@moz-7b02kd.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 03:53:10	-->	faitswulff (faitswulff@moz-7b02kd.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 03:53:55	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 03:54:36	insidious	sparky8251: here's one way of doing it (albeit, it panics and does not do any error handling): https://gist.github.com/
2018-09-21 03:54:36	<--	simonadameit (simonadamei@moz-258595.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 03:55:11	-->	i-amd3 (i-amd3@moz-rs9bf0.ucom.ne.jp) has joined #rust-beginners
2018-09-21 03:55:18	insidious	a match needs to return the same time in each arm (or panic, killing the program)
2018-09-21 03:55:19	<--	i-amd3 (i-amd3@moz-rs9bf0.ucom.ne.jp) has quit (Quit: Leaving...)
2018-09-21 03:56:01	sparky8251	insidious: that link doesnt seem to go anywhere
2018-09-21 03:56:43	insidious	sparky8251: whoops, lol https://gist.github.com/rust-play/ab3b2bd2d6df69c45eb278d6421eff0b
2018-09-21 03:57:12	<--	faitswulff (faitswulff@moz-7b02kd.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 03:58:41	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 03:58:53	insidious	sparky8251: here's another way of doing it, this one handling errors: https://gist.github.com/rust-play/1eabdb814e17d815f4c6beb2b3422dae
2018-09-21 03:59:02	insidious	or passing them up to whatever function is calling them
2018-09-21 03:59:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 03:59:41	insidious	then in your main you'd have one match{} dealing with error types or something like that. there are also libraries like Failure which get rid of some of the boilerplate of doing this
2018-09-21 04:00:21	sparky8251	insidious: ok, i see most of where i went wrong now. thanks for the example! however... its still panicing despite the struct matching the json on that website
2018-09-21 04:00:51	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-21 04:01:01	insidious	seems like a `serde` error then, what's the error message say?
2018-09-21 04:01:06	-->	Xinayder (alex@moz-9db894.gvt.net.br) has joined #rust-beginners
2018-09-21 04:01:25	sparky8251	thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Inner { kind: Json(Error("invalid type: map, expected unit", line: 1, column: 1)), url: None }', libcore/result.rs:1009:5
2018-09-21 04:01:27	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-21 04:01:40	<--	Aerath (Aerath@moz-sth8hf.bncfor.me) has quit (Ping timeout: 121 seconds)
2018-09-21 04:02:08	<--	astocko (astocko@moz-5nh.5t9.236.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:02:21	<--	energizer (energizer@moz-0bh.vp8.131.104.IP) has quit (Quit: ZNC 1.7.0+deb0+xenial1 - https://znc.in)
2018-09-21 04:02:30	-->	energizer (energizer@moz-0bh.vp8.131.104.IP) has joined #rust-beginners
2018-09-21 04:02:59	<--	MomusInvictus (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has quit (Quit: Leaving)
2018-09-21 04:03:29	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 04:05:09	-->	astocko (astocko@moz-5nh.5t9.236.104.IP) has joined #rust-beginners
2018-09-21 04:05:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 04:05:57	sparky8251	is it bad form to nest match? if its not, whats the typical Ok and Err variables for the inner match?
2018-09-21 04:07:11	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 04:09:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 04:11:37	<--	graphitemaster (graphitemas@moz-3l1gea.i2gt.qoll.a880.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:12:04	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-21 04:12:06	-->	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 04:13:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:13:19	super119x	emerent using Option<T> also doesn't help. Compiler still complains that "T" is not copy-able.
2018-09-21 04:13:21	super119x	https://play.rust-lang.org/?gist=7a353c358f9c1e6cb376aeb58fe28cf7&version=stable&mode=debug&edition=2015
2018-09-21 04:13:58	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-21 04:14:07	super119x	https://play.rust-lang.org/?gist=7a353c358f9c1e6cb376aeb58fe28cf7&version=stable&mode=debug&edition=2015
2018-09-21 04:15:35	insidious	sparky8251: generally, yes. You might want to use the try! macro or `?` which is just syntactic sugar for match{}(ing) over errors
2018-09-21 04:15:58	super119x	https://play.rust-lang.org/?gist=90fb19972f7787c360c8773fe3823aa5&version=stable&mode=debug&edition=2015
2018-09-21 04:16:17	super119x	sorry the last link is the right one.
2018-09-21 04:18:14	sparky8251	insidious: using the `?` doesnt seem to work with reqwest::Response.json() (one of my original issues). regardless... i'm getting closer to finding my answer, i think i just need sleep
2018-09-21 04:18:33	-->	Aerath (Aerath@moz-sth8hf.bncfor.me) has joined #rust-beginners
2018-09-21 04:19:04	insidious	sparky8251: i sent you a gist with how to use `?` and reqwest
2018-09-21 04:19:57	@mbrubeck	super119x: If you use `mem::uninitialized` then you can use `ptr::write` to initialize it without potentially dropping uninitialized data
2018-09-21 04:20:11	@mbrubeck	super119x: Or you can use a library like https://crates.io/crates/array-init that wraps this in a safe API
2018-09-21 04:20:12	sparky8251	insidious: ah yes... told you i need sleep
2018-09-21 04:20:17	insidious	haha allgood
2018-09-21 04:21:40	-->	timsim (sid201842@moz-546u3d.hathersage.irccloud.com) has joined #rust-beginners
2018-09-21 04:21:47	super119x	mbrubeck thanks I'll take a look at array-init
2018-09-21 04:22:03	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 04:23:20	<--	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 04:23:23	-->	simonadameit (simonadamei@moz-4rebfs.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 04:24:15	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-21 04:24:59	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 04:25:54	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-21 04:28:57	<--	Xinayder (alex@moz-9db894.gvt.net.br) has quit (The TLS connection was non-properly terminated.)
2018-09-21 04:29:27	-->	Xinayder (alex@moz-9db894.gvt.net.br) has joined #rust-beginners
2018-09-21 04:32:13	timsim	hello! I was playing around with JSON serialization with serde and was trying to figure out the nicest way to handle an error that could happen, someone pointed me to the failure crate and it looked great. But I'm running into this issue: https://github.com/TimSimmons/failure_test (distilled for simplicity, but I can link the original code if desired). Any help would be greatly appreciated :)
2018-09-21 04:32:25	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 04:32:49	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 04:33:02	<--	DeltaManiac (DeltaManiac@moz-sts.5q9.13.203.IP) has quit (Quit: )
2018-09-21 04:33:31	-->	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-21 04:33:47	<--	billiob (billiob@moz-0ilt8a.fau.re) has quit (The TLS connection was non-properly terminated.)
2018-09-21 04:33:50	-->	billiob (billiob@moz-0ilt8a.fau.re) has joined #rust-beginners
2018-09-21 04:34:43	<--	jcob (user@moz-kfr.6e5.7.152.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:35:52	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 04:35:53	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-21 04:36:02	<--	dav1d (dav1d@moz-5e2ht0.8ovk.lncg.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:36:56	-->	graphitemaster (graphitemas@moz-3l1gea.i2gt.qoll.a880.2604.IP) has joined #rust-beginners
2018-09-21 04:37:31	<--	Faux (irssi@moz-8pnms6.xxx) has quit (Ping timeout: 121 seconds)
2018-09-21 04:40:39	-->	dav1d (dav1d@moz-5e2ht0.8ovk.lncg.41d0.2001.IP) has joined #rust-beginners
2018-09-21 04:40:53	-->	neverfox_ (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-21 04:41:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 04:41:38	<--	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:41:42	-->	Tyheman (Mibbit@moz-i3daao.pa.comcast.net) has joined #rust-beginners
2018-09-21 04:41:53	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 04:41:58	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 04:42:27	-->	mib_m7fdje (Mibbit@moz-iigdhl.ca.comcast.net) has joined #rust-beginners
2018-09-21 04:43:05	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 04:43:24	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-21 04:43:47	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-21 04:44:02	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-21 04:44:11	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-21 04:44:12	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-21 04:44:48	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 04:45:11	-->	castilho_ (castilho@moz-nml76d.s0tm.pvhs.014c.2804.IP) has joined #rust-beginners
2018-09-21 04:46:17	<--	Guest4641 (nj0rd@moz-fh4l3b.dip.versatel-1u1.de) has quit (Ping timeout: 121 seconds)
2018-09-21 04:46:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 04:48:22	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:49:09	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-21 04:49:40	<--	Tyheman (Mibbit@moz-i3daao.pa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 04:51:35	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-21 04:52:02	-->	Faux (irssi@moz-8pnms6.xxx) has joined #rust-beginners
2018-09-21 04:52:14	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 04:54:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 04:55:35	<--	super119x (super119@moz-om6.h52.116.180.IP) has quit (Connection closed)
2018-09-21 04:55:37	<--	azdle (azdle@moz-tb3.eb7.236.104.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-21 04:55:37	<--	rfolsom (rfolsom@moz-qun.o6u.131.104.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-21 04:55:38	<--	astocko (astocko@moz-5nh.5t9.236.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:55:39	<--	Raychen (Thunderbird@moz-14l.9q5.175.61.IP) has quit (Connection closed)
2018-09-21 04:55:43	-->	super119x (super119@moz-om6.h52.116.180.IP) has joined #rust-beginners
2018-09-21 04:55:43	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-21 04:55:50	<--	energizer (energizer@moz-0bh.vp8.131.104.IP) has quit (Connection closed)
2018-09-21 04:56:05	-->	astocko (astocko@moz-5nh.5t9.236.104.IP) has joined #rust-beginners
2018-09-21 04:56:19	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-21 04:56:36	<--	simonadameit (simonadamei@moz-4rebfs.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 04:57:01	-->	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 04:57:08	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-21 04:57:16	<--	Razaekel (Astra@moz-vsm.kin.236.104.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-21 04:57:23	<--	castilho_ (castilho@moz-nml76d.s0tm.pvhs.014c.2804.IP) has quit (Connection closed)
2018-09-21 04:57:52	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 04:57:56	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-21 04:58:20	-->	energizer (energizer@moz-0bh.vp8.131.104.IP) has joined #rust-beginners
2018-09-21 04:58:21	-->	Razaekel (Astra@moz-vsm.kin.236.104.IP) has joined #rust-beginners
2018-09-21 04:58:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 04:58:26	-->	azdle (azdle@moz-tb3.eb7.236.104.IP) has joined #rust-beginners
2018-09-21 04:58:31	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 04:58:57	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 04:58:59	-->	Guest4641 (nj0rd@moz-0cfbup.dip.versatel-1u1.de) has joined #rust-beginners
2018-09-21 04:59:02	cubetastic	How do I find out what apps are running in the background using Rust?
2018-09-21 04:59:44	-->	rfolsom (rfolsom@moz-qun.o6u.131.104.IP) has joined #rust-beginners
2018-09-21 04:59:46	dwg	cubetastic, that has much more to do with the OS and environment than the programming language
2018-09-21 05:00:06	cubetastic	Okay - for Linux?
2018-09-21 05:00:33	cubetastic	dwg: and what do you mean by environment?
2018-09-21 05:00:54	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 05:01:03	<--	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:01:09	dwg	cubetastic, well, what exactly you mean by "app in the background" could vary depending on the context you're talking about
2018-09-21 05:01:29	dwg	cubetastic, there are certainly Unix/Linux process listing interfaces for Rust, though I'm not particularly familiar with any of them
2018-09-21 05:01:57	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:02:07	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 05:02:29	<--	mib_m7fdje (Mibbit@moz-iigdhl.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 05:02:34	cubetastic	dwg: Okay, well, for example - I currently have Chrome, Firefox, Hangouts, VSCode, VSCode Insiders, Voltra, Discord ,and two terminal instances running, and I'm using thinderbird atm.
2018-09-21 05:02:43	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 05:03:02	cubetastic	I want to be able to identify these processes are running using rust
2018-09-21 05:03:07	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 05:03:09	dwg	ah
2018-09-21 05:03:21	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-21 05:03:30	dwg	ok, so looking at things running in the current windowing environment - not system daemons and the like (that's part of what I mean by environment)
2018-09-21 05:04:15	dwg	erm, the interfaces must exist because things like window managers and desktop environments use them.  Chances are there are existing Rust bindings, but that's all I know, sorry.
2018-09-21 05:04:21	cubetastic	I guess discord does something similar to find out what games you play?
2018-09-21 05:04:38	dwg	I don't know, I've never used discord
2018-09-21 05:05:07	cubetastic	where would I start to look for these rust bindings?
2018-09-21 05:05:47	dwg	erm, I guess look for "x windows" "X11" and in particular "X11 inter process communication" on crates.io ?
2018-09-21 05:06:10	cubetastic	what is x windows?
2018-09-21 05:06:24	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 05:06:35	dwg	maybe look for "window manager" or "desktop environment" - that'll probably find a lot of irrelevant stuff as well, though
2018-09-21 05:06:45	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 05:06:58	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Connection closed)
2018-09-21 05:07:10	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 05:07:16	dwg	cubetastic, X windows aka "X11" is the low-level windowing / graphical environment used on Linux.  Usually.  A growing number of modern systems have moved from X windows to Wayland
2018-09-21 05:07:40	dwg	things like Gnome or KDE run on top of X windows (or, more recently, Wayland)
2018-09-21 05:07:43	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-21 05:09:00	cubetastic	ohh like xorg
2018-09-21 05:09:26	dwg	cubetastic, right "X windows" is the more generic name for the system, that xorg is a particular implementation of
2018-09-21 05:09:48	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 05:09:48	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-21 05:10:09	dwg	(xorg being from "X.org" the current name of the organization behind standardization and specification of the X window system)
2018-09-21 05:10:38	cubetastic	dwg: something like this? https://crates.io/crates/x11
2018-09-21 05:10:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 05:11:06	<--	alx741 (alx741@moz-tgq.k67.178.186.IP) has quit (Client exited)
2018-09-21 05:11:27	dwg	cubetastic, so, that'll have low-level bindings.  it's almost certainly possible with that crate, but I suspect pretty involved / inconvenient
2018-09-21 05:11:47	dwg	there may be existing code making what you want easier, but then again there may not
2018-09-21 05:12:00	<--	subhojit777 (subhojit777@moz-mvu.gqm.163.122.IP) has quit (Quit: Leaving)
2018-09-21 05:12:28	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 05:12:32	dwg	[disclaimer: I'm an experienced Linux system programmer, but I don't know a lot about X or other graphical environments, and I'm pretty new to Rust as well]
2018-09-21 05:12:45	-->	j0nthn (jonathan@moz-6br3pp.rev.sfr.net) has joined #rust-beginners
2018-09-21 05:14:43	cubetastic	Okay, I'm going to ask the same thing in other IRC chats
2018-09-21 05:14:49	dwg	fair enough
2018-09-21 05:15:19	cubetastic	dwg: which would be a better choice? #rust-osdev or #rust
2018-09-21 05:15:30	dwg	no idea, sorry
2018-09-21 05:16:04	cubetastic	I chose #rust because way more people are there
2018-09-21 05:16:10	dwg	it's the middle of the night in the US, which means this probably isn't the best time for questions
2018-09-21 05:16:28	cubetastic	Ohhh
2018-09-21 05:16:56	cubetastic	considering the majority of people here are probably from the US.
2018-09-21 05:17:03	dwg	exactly
2018-09-21 05:17:15	dwg	I'm in Australia, but there's probably more people around during US hours
2018-09-21 05:17:34	dwg	or European hours for that matter - they might start waking up in the next few hours
2018-09-21 05:17:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 05:17:57	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:18:01	cubetastic	Okay - so I'll ask it in the rust daily discussion thread in reddit
2018-09-21 05:18:25	dwg	cubetastic, you might be better off looking up documentation for your desktop environment (although that will likely be C focussed)
2018-09-21 05:18:41	cubetastic	yeah - that's the issue. idk C
2018-09-21 05:18:45	dwg	cubetastic, then when you have a more specific idea of the system interfaces you need, you'll have some search terms to look for Rust bindings
2018-09-21 05:19:02	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 05:19:22	<--	Defcronyke (Defcronyke@moz-fpuejq.com) has quit (Quit: Goodbye)
2018-09-21 05:19:23	dwg	cubetastic, right, but unless there's already a crate doing exactly what you need, which is possible but I suspect nbot all that likely
2018-09-21 05:19:54	-->	Defcronyke (Defcronyke@moz-fpuejq.com) has joined #rust-beginners
2018-09-21 05:20:00	dwg	then you'll probably need more general concept background before being able to effectively use the system interfaces to get what you need
2018-09-21 05:20:13	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-21 05:20:28	cubetastic	Do you have any idea where I can find some problem statements?
2018-09-21 05:20:38	dwg	uh.. not sure what you mean by that
2018-09-21 05:20:58	cubetastic	I'm looking for project ideas, so it would be nice if people could say what they want/need
2018-09-21 05:21:12	dwg	ah, right
2018-09-21 05:21:17	dwg	can't help with that, I'm afraid
2018-09-21 05:21:19	cubetastic	Problem statement is basically stating some problem you have, something that they need
2018-09-21 05:22:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 05:26:25	-->	NancyXC (Mibbit@moz-99a.29j.216.91.IP) has joined #rust-beginners
2018-09-21 05:26:52	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-21 05:27:49	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-21 05:29:12	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 05:29:18	<--	neverfox_ (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 05:29:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 05:30:14	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-21 05:31:03	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-21 05:31:18	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 05:31:31	<--	bellows (Mibbit@moz-ir2c34.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 05:32:22	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-21 05:33:46	-->	simonadameit (simonadamei@moz-1jbb2q.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 05:37:27	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:37:46	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 05:38:08	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 05:39:57	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 05:41:01	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 05:41:59	-->	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has joined #rust-beginners
2018-09-21 05:42:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 05:43:52	-->	cubetastic1 (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 05:44:00	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:45:02	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:45:03	--	cubetastic1 is now known as cubetastic
2018-09-21 05:45:20	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-21 05:45:38	-->	castilho (castilho@moz-nml76d.s0tm.pvhs.014c.2804.IP) has joined #rust-beginners
2018-09-21 05:45:47	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-21 05:48:25	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 05:48:42	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-21 05:49:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 05:50:00	<--	castilho (castilho@moz-nml76d.s0tm.pvhs.014c.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:50:31	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 05:51:55	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 05:52:11	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-21 05:52:14	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-21 05:52:42	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:52:49	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:52:58	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-21 05:53:11	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:53:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 05:53:29	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 05:53:30	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-21 05:53:36	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-21 05:55:10	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 05:55:18	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-21 05:55:18	-->	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 05:55:28	<--	efskap (dmitry@moz-8eejl0.sierrawireless.com) has quit (Ping timeout: 121 seconds)
2018-09-21 05:56:10	<--	NancyXC (Mibbit@moz-99a.29j.216.91.IP) has quit (G-Lined: no spamming here)
2018-09-21 05:56:31	-->	ufobat___ (Martin@moz-pu6v0s.dyn.telefonica.de) has joined #rust-beginners
2018-09-21 05:56:41	-->	efskap (dmitry@moz-8eejl0.sierrawireless.com) has joined #rust-beginners
2018-09-21 05:59:00	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:59:04	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-21 05:59:17	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 05:59:20	<--	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 05:59:37	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 06:00:03	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 06:02:27	<--	Houm (Houm@moz-838.l3c.51.5.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 06:03:25	-->	qqw (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-21 06:04:51	qqw	I compile a program that uses proc-macro2 specifically unstable features (RUSTFLAGS='--cfg procmacro2_semver_exempt') okay my main.rs compiles and I have a binary when run it it with cargo run it works fine but when I try to execute the binary itself I get dyld: Library not loaded: @rpath/libproc_macro-b4a065906c9148de.dylib
2018-09-21 06:04:56	qqw	What should I do
2018-09-21 06:05:23	qqw	How do I statically link libproc?
2018-09-21 06:05:47	-->	orph (orph@moz-3ljh01.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-21 06:06:18	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 06:06:59	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:07:19	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:08:19	<--	simonadameit (simonadamei@moz-1jbb2q.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 06:08:26	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-21 06:09:22	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 06:10:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:12:07	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 06:12:29	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 06:12:36	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 06:13:01	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-21 06:14:43	<--	qqw (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 06:15:02	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 06:15:28	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 06:16:29	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 06:17:40	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 06:19:06	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-21 06:19:45	<--	orph (orph@moz-3ljh01.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 06:20:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 06:20:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:20:54	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 06:21:53	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 06:22:23	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 06:25:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:25:20	-->	chinaxing (Mibbit@moz-jpp.lo0.120.42.IP) has joined #rust-beginners
2018-09-21 06:25:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 06:25:58	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-21 06:26:49	chinaxing	why rust type infer cant works the following code : http://mibpaste.com/QCRouO 
2018-09-21 06:26:57	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 06:27:47	durka42	!mibpaste
2018-09-21 06:27:47	+rustbot	mibpaste is buggy and even when it works it deletes whitespace. Instead use https://gist.github.com or https://play.rust-lang.org .
2018-09-21 06:28:04	chinaxing	why rust type infer cant works the following code  : http://mibpaste.com/aMrJWo 
2018-09-21 06:28:24	durka42	your links aren't working because mibpaste is a piece of crap
2018-09-21 06:28:24	chinaxing	yes, the mipaste not works.
2018-09-21 06:28:26	durka42	use another pastebin
2018-09-21 06:28:34	chinaxing	ok
2018-09-21 06:29:12	-->	orph (orph@moz-3ljh01.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-21 06:29:29	chinaxing	code is here : http://www.mpaste.com/p/xkUB6Wf
2018-09-21 06:30:10	chinaxing	x can't be inferred in
2018-09-21 06:30:28	emerent	chinaxing: sum is generic in both input and output
2018-09-21 06:30:37	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:30:38	emerent	v.iter().sum::<YourType>()
2018-09-21 06:31:02	emerent	for example: v.iter().sum::<i32>()
2018-09-21 06:31:12	chinaxing	from v.iter(), we can guess the iterrator's type , and then , we can get the type of sum
2018-09-21 06:31:17	<--	dozn (dozn@moz-3pudru.vs.shawcable.net) has quit (Connection closed)
2018-09-21 06:31:27	-->	dozn (dozn@moz-3pudru.vs.shawcable.net) has joined #rust-beginners
2018-09-21 06:31:28	durka42	yeah unfortunately sum almost always needs the type to be specified
2018-09-21 06:31:43	chinaxing	does any other language like haskell. this should be done ?
2018-09-21 06:32:56	durka42	sorry don't understand your question
2018-09-21 06:33:00	-->	Aankhen`` (notasquid@moz-inm.am1.207.49.IP) has joined #rust-beginners
2018-09-21 06:33:10	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 06:33:46	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:33:55	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 06:34:31	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 06:35:19	-->	oms (oms@moz-oe36dj.dyn.telefonica.de) has joined #rust-beginners
2018-09-21 06:35:40	-->	arunkumar413 (arunkumar41@moz-3ic.gjo.48.157.IP) has joined #rust-beginners
2018-09-21 06:36:34	chinaxing	@durka42, my means in other static type language, for example Haskell, auto infer the type of x can be done ?
2018-09-21 06:36:43	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 06:37:16	panicbit	the type of the sum can be inferred if you are returning it somewhere or passing it into somewhere
2018-09-21 06:37:31	panicbit	But if you are just trying to print it, then it cannot be inferred
2018-09-21 06:37:34	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-21 06:37:43	panicbit	why? because you can pick the result type
2018-09-21 06:37:43	durka42	yeah I'm not sure, I know haskell type inference is more powerful than rust, but it's hard to draw a direct comparison
2018-09-21 06:37:51	durka42	panicbit: except you can't really
2018-09-21 06:37:54	chinaxing	but human can, why compiler can't ?
2018-09-21 06:38:00	durka42	the Sum trait is implemented only for a small set of types
2018-09-21 06:38:05	durka42	so it's super annoying that it won't pick the impl
2018-09-21 06:38:11	durka42	basically a design mistake
2018-09-21 06:38:26	panicbit	chinaxing: well, what is the type of summing a few i32s?
2018-09-21 06:38:34	joris	the problem most of the time comes from integer literals
2018-09-21 06:38:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 06:38:39	panicbit	is it i32? or i64? maybe you want a f32
2018-09-21 06:38:48	joris	lack of syntaxic distinction between all int/float types
2018-09-21 06:38:48	panicbit	And you get to choose that
2018-09-21 06:38:58	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 06:39:14	panicbit	If you don't tell the compiler what you wnat as result, then it errors
2018-09-21 06:39:19	panicbit	want*
2018-09-21 06:39:22	durka42	sum::<f32>() doesn't actually work though
2018-09-21 06:39:31	-->	simonadameit (simonadamei@moz-1jbb2q.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 06:39:34	panicbit	durka42: It does
2018-09-21 06:39:34	durka42	but we could add it, that would be nice
2018-09-21 06:39:40	durka42	no lol, I'm trying it
2018-09-21 06:39:40	panicbit	durka42: Maybe not for int types
2018-09-21 06:39:49	durka42	exactly
2018-09-21 06:39:50	panicbit	durka42: You don't know what you are talking about
2018-09-21 06:40:05	durka42	there's not actually a choice for the output type, given that you know the input
2018-09-21 06:40:16	panicbit	durka42: the thing is that I can define a wrapper around f32 and sum into that if I wanted to
2018-09-21 06:40:18	durka42	but Sum was defined with a generic, not an associated type, for some reason
2018-09-21 06:40:19	durka42	so we are stuck
2018-09-21 06:40:21	joris	but you don't always know the input
2018-09-21 06:40:50	chinaxing	in the code chain, the type is decidable, i think.
2018-09-21 06:40:56	joris	[1; 2; 3].iter().sum() or [1.0; 2.0; 3.0].iter().sum()
2018-09-21 06:41:06	joris	neither you nor the compiler knows the input
2018-09-21 06:41:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:41:21	joris	as long as there is no ambiguity no annotation is needed
2018-09-21 06:41:25	chinaxing	input is vector
2018-09-21 06:41:30	panicbit	eval: [1, 2, 3_i32].iter().sum::<i32>()
2018-09-21 06:41:33	--	Notice(eval): 6
2018-09-21 06:41:34	panicbit	eval: [1, 2, 3_i32].iter().sum::<i64>()
2018-09-21 06:41:36	--	Notice(eval): error[E0277]: the trait bound `i64: std::iter::Sum<&i32>` is not satisfied
2018-09-21 06:41:38	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=8e3af418d2bd90b7832310574c933911&version=stable&mode=debug
2018-09-21 06:41:39	panicbit	hm
2018-09-21 06:41:50	panicbit	well, that sucks
2018-09-21 06:41:57	panicbit	These impls should exist
2018-09-21 06:42:06	joris	bwarf
2018-09-21 06:42:15	durka42	the compiler could go here https://doc.rust-lang.org/std/iter/trait.Sum.html and say "welp, the only impl for Sum<&i32> is i32"
2018-09-21 06:42:17	durka42	but it doesn't
2018-09-21 06:42:31	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 06:42:31	durka42	I guess it's because as you said, I could define my own SumIntsToFloat wrapper type and impl Sum for that
2018-09-21 06:42:31	joris	eval: [1, 2, 3].iter().cloned().map(i64::from).sum()
2018-09-21 06:42:33	--	Notice(eval): error[E0283]: type annotations required: cannot resolve `_: std::iter::Sum<i64>`
2018-09-21 06:42:35	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=9c4c7a20a86b724831241978a1802c8d&version=stable&mode=debug
2018-09-21 06:42:44	joris	eval: [1, 2, 3i32].iter().cloned().map(i64::from).sum()
2018-09-21 06:42:47	--	Notice(eval): error[E0283]: type annotations required: cannot resolve `_: std::iter::Sum<i64>`
2018-09-21 06:42:49	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=3f89b8705a9df909cb6b4455802b9d6a&version=stable&mode=debug
2018-09-21 06:42:51	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-21 06:42:53	panicbit	you need to annotate what you want
2018-09-21 06:43:02	panicbit	eval: [1, 2, 3i32].iter().cloned().map(i64::from).sum::<i64>()
2018-09-21 06:43:04	--	Notice(eval): 6
2018-09-21 06:43:14	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 06:43:17	-->	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-21 06:43:21	durka42	this is the entire reason associated types were invented
2018-09-21 06:43:22	joris	either way i mean it's not a big deal not to have auto impls 
2018-09-21 06:43:28	panicbit	It is annoying, but it also allows some flexibility
2018-09-21 06:43:29	durka42	because it's annoying to specify generics when there's only one choice
2018-09-21 06:43:35	<--	simonadameit (simonadamei@moz-1jbb2q.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 06:43:38	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 06:43:44	durka42	Sum missed the memo somehow
2018-09-21 06:44:01	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 06:44:07	chinaxing	this not works , x can't be inferred : let v : Vec<i32> = vec![1,2,3]; 
2018-09-21 06:44:13	joris	eval: [1, 2, 3u32].iter().min()
2018-09-21 06:44:15	--	Notice(eval): Some(1)
2018-09-21 06:44:27	panicbit	durka42: Maybe we can fix it in the 20XX edition
2018-09-21 06:44:27	joris	yeah i was actually confused because min/max work 
2018-09-21 06:44:40	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-21 06:45:01	durka42	chinaxing: the end result of all this, you must always annotate the result of sum, either with ::<> or by specifying the type of what it's assigned/passed to
2018-09-21 06:45:01	chinaxing	eval: [1,2,3].iter().sum()
2018-09-21 06:45:03	--	Notice(eval): error[E0283]: type annotations required: cannot resolve `_: std::iter::Sum<&i32>`
2018-09-21 06:45:06	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=23cdb97590695e02ed00f9f055d3a35a&version=stable&mode=debug
2018-09-21 06:45:18	joris	but that's different because min does not support other type Output 
2018-09-21 06:45:34	panicbit	and doesn't need to
2018-09-21 06:45:43	chinaxing	eval [1,2,3].iter().min()
2018-09-21 06:45:47	emerent	panicbit: oh btw, Sum<U> for Option<T> (which we've talked about some time back) isn't happening
2018-09-21 06:45:54	chinaxing	eval: [1,2,3].iter().min()
2018-09-21 06:45:56	--	Notice(eval): Some(1)
2018-09-21 06:45:56	panicbit	because min/max is always stays in the same type
2018-09-21 06:45:58	-->	simonadameit (simonadamei@moz-1jbb2q.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 06:45:58	emerent	inconsistent with the Result impl
2018-09-21 06:46:01	panicbit	which isn't guaranteed for sum
2018-09-21 06:46:10	joris	panicbit: yes it's basically what i just said :D
2018-09-21 06:46:11	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-21 06:46:17	panicbit	yeah
2018-09-21 06:46:24	panicbit	paraphrasing is a thing
2018-09-21 06:46:58	panicbit	So for thigs that can overflow or underflow, having the option to select the output type is pretty nice
2018-09-21 06:48:14	-->	sproing (Mibbit@moz-cvn.v1u.149.169.IP) has joined #rust-beginners
2018-09-21 06:48:16	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 06:48:20	<--	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-21 06:48:50	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 06:49:41	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-21 06:49:46	<--	Orez (Orez@moz-mov3sf.res.rr.com) has left #rust-beginners
2018-09-21 06:52:19	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-21 06:53:12	<--	sproing (Mibbit@moz-cvn.v1u.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 06:55:02	<--	insidious (insidious@moz-cfo.dfl.198.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 06:55:25	<--	enterprisey (enterprisey@moz-qf6b12.cit.cornell.edu) has quit (Quit: Leaving)
2018-09-21 06:56:20	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-21 06:58:34	-->	arunkumar314 (arunkumar41@moz-3ic.gjo.48.157.IP) has joined #rust-beginners
2018-09-21 06:59:37	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 06:59:58	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 07:01:33	-->	mib (Mibbit@moz-cvn.v1u.149.169.IP) has joined #rust-beginners
2018-09-21 07:02:07	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 07:02:08	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 07:04:08	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 07:07:35	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-21 07:07:48	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 07:08:15	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 07:10:28	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 07:10:49	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 07:10:56	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 07:11:32	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 07:13:22	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-21 07:13:28	mib	should I use rustbox or is there anyother better library for CLI apps ?
2018-09-21 07:13:29	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 07:13:30	-->	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-21 07:13:31	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 07:14:58	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-21 07:14:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 07:16:11	<--	ystreet00 (ystreet00@moz-mkp.lgm.200.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 07:16:12	<--	artfwo (artfwo@moz-ud4.gls.120.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 07:16:23	-->	ystreet00 (ystreet00@moz-3u3.f44.200.185.IP) has joined #rust-beginners
2018-09-21 07:16:29	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 07:18:39	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-21 07:18:51	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2018-09-21 07:18:59	<--	simonadameit (simonadamei@moz-1jbb2q.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 07:20:22	<--	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-21 07:20:29	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-21 07:20:33	<--	mib (Mibbit@moz-cvn.v1u.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 07:23:18	-->	holmgr (holmgr@moz-oidp65.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-21 07:24:25	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-21 07:24:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 07:27:22	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-21 07:28:38	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 07:28:46	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 07:30:10	-->	xet7 (xet7@moz-uqb2bo.rev.dnainternet.fi) has joined #rust-beginners
2018-09-21 07:30:25	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 07:34:02	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 07:36:32	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 07:37:55	-->	emma (Mibbit@moz-akl6pu.range109-156.btcentralplus.com) has joined #rust-beginners
2018-09-21 07:38:07	<--	emma (Mibbit@moz-akl6pu.range109-156.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 07:38:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 07:40:41	<--	orph (orph@moz-3ljh01.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 07:41:04	<--	holmgr (holmgr@moz-oidp65.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-21 07:41:20	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 07:41:42	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 07:41:53	<--	GrayShade (quassel@moz-8de2v1.leje.sn81.2f05.2a02.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-21 07:42:14	-->	holmgr (holmgr@moz-t3kvdc.eduroam.liu.se) has joined #rust-beginners
2018-09-21 07:42:17	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 07:42:29	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-21 07:42:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 07:42:55	-->	GrayShade (quassel@moz-eraqgm.leje.sn81.2f05.2a02.IP) has joined #rust-beginners
2018-09-21 07:43:59	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 07:44:50	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 07:44:51	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 07:45:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 07:47:30	-->	wikkit (Mibbit@moz-e5l.ac6.209.82.IP) has joined #rust-beginners
2018-09-21 07:48:16	<--	wikkit (Mibbit@moz-e5l.ac6.209.82.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 07:48:24	-->	ksqsf (ksqsf@moz-sr5.uv4.214.221.IP) has joined #rust-beginners
2018-09-21 07:51:20	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-21 07:51:26	-->	tsal_ (tsal@moz-s8qahs.versanet.de) has joined #rust-beginners
2018-09-21 07:51:41	<--	tsal (tsal@moz-q57g96.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-21 07:52:43	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 07:52:44	--	Raychen1 is now known as Raychen
2018-09-21 07:53:23	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 07:55:16	<--	chinaxing (Mibbit@moz-jpp.lo0.120.42.IP) has left #rust-beginners
2018-09-21 07:55:36	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 07:55:50	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 07:55:54	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 07:56:06	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 07:56:20	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 07:56:21	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 07:56:24	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 07:57:47	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Connection closed)
2018-09-21 07:58:36	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 08:00:34	-->	simonadameit (simonadamei@moz-1jbb2q.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 08:02:18	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-21 08:02:26	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 08:02:36	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-21 08:02:58	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 08:03:04	-->	cel35 (cel35@moz-ga73mo.isp.belgacom.be) has joined #rust-beginners
2018-09-21 08:03:09	--	cel35 is now known as Gertm
2018-09-21 08:03:50	<--	ksqsf (ksqsf@moz-sr5.uv4.214.221.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 08:03:52	-->	ksqsf_ (ksqsf@moz-sr5.uv4.214.221.IP) has joined #rust-beginners
2018-09-21 08:06:35	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 08:06:57	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 08:07:36	<--	Gertm (cel35@moz-ga73mo.isp.belgacom.be) has quit (Quit: leaving)
2018-09-21 08:08:04	-->	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has joined #rust-beginners
2018-09-21 08:08:18	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Connection closed)
2018-09-21 08:08:39	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 08:09:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 08:10:13	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 08:10:28	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-21 08:10:59	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 08:14:05	-->	Gertm (gertm@moz-ga73mo.isp.belgacom.be) has joined #rust-beginners
2018-09-21 08:15:23	<--	Gertm (gertm@moz-ga73mo.isp.belgacom.be) has quit (Quit: leaving)
2018-09-21 08:15:38	-->	plusone (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-21 08:15:46	<--	ksqsf_ (ksqsf@moz-sr5.uv4.214.221.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 08:17:00	<--	re-l124c41 (re-l124c41@moz-6aiql6.4kh6.ni31.0908.2a02.IP) has quit (Connection closed)
2018-09-21 08:17:16	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 08:17:44	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-21 08:17:50	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 08:17:55	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-21 08:18:09	-->	Gertm (gert@moz-ga73mo.isp.belgacom.be) has joined #rust-beginners
2018-09-21 08:18:09	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Connection closed)
2018-09-21 08:18:17	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 08:30:33	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-21 08:30:44	-->	Moongoodboy{K} (LunarToyK@sugar-belle.blackl.net) has joined #rust-beginners
2018-09-21 08:31:21	-->	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has joined #rust-beginners
2018-09-21 08:32:00	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 08:32:01	--	Raychen1 is now known as Raychen
2018-09-21 08:32:42	<--	simonadameit (simonadamei@moz-1jbb2q.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 08:34:34	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-21 08:34:44	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 08:35:08	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-21 08:35:12	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has left #rust-beginners ("WeeChat 2.1")
2018-09-21 08:35:19	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-21 08:37:46	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 08:38:45	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 08:39:01	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 08:39:27	-->	simonadameit (simonadamei@moz-rv12q5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 08:43:29	<--	simonadameit (simonadamei@moz-rv12q5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 08:43:52	-->	gnzlbg (gnzlbg@moz-c8j.gvm.130.134.IP) has joined #rust-beginners
2018-09-21 08:44:08	<--	gnzlbg (gnzlbg@moz-c8j.gvm.130.134.IP) has quit (Connection closed)
2018-09-21 08:44:29	-->	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has joined #rust-beginners
2018-09-21 08:46:59	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-09-21 08:47:36	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-21 08:51:40	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 08:52:31	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Client exited)
2018-09-21 08:53:05	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 08:53:59	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Quit: Leaving)
2018-09-21 08:54:21	<--	holmgr (holmgr@moz-t3kvdc.eduroam.liu.se) has quit (Connection closed)
2018-09-21 08:58:04	-->	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has joined #rust-beginners
2018-09-21 08:58:06	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-21 08:58:57	<--	D_ (D_@moz-v7iusd.adsl.inetia.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 08:59:43	-->	D_ (D_@moz-v7iusd.adsl.inetia.pl) has joined #rust-beginners
2018-09-21 08:59:59	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 09:00:47	-->	Lilly (Lilly@moz-8r5.b80.132.178.IP) has joined #rust-beginners
2018-09-21 09:01:09	<--	Lilly (Lilly@moz-8r5.b80.132.178.IP) has quit (Quit: Zzz...)
2018-09-21 09:01:34	-->	Lilly (Lilly@moz-8r5.b80.132.178.IP) has joined #rust-beginners
2018-09-21 09:02:09	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 09:02:30	-->	xorrox (custom@moz-2nap38.skybroadband.com) has joined #rust-beginners
2018-09-21 09:03:42	-->	fsasm (fsasm@moz-u0aefh.dynamic.surfer.at) has joined #rust-beginners
2018-09-21 09:04:13	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 09:04:30	-->	holmgr (holmgr@moz-t3kvdc.eduroam.liu.se) has joined #rust-beginners
2018-09-21 09:04:32	-->	castilho (castilho@moz-nml76d.s0tm.pvhs.014c.2804.IP) has joined #rust-beginners
2018-09-21 09:05:05	<--	holmgr (holmgr@moz-t3kvdc.eduroam.liu.se) has quit (Connection closed)
2018-09-21 09:05:09	<--	plusone (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-21 09:08:34	<--	castilho (castilho@moz-nml76d.s0tm.pvhs.014c.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 09:09:00	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 09:10:42	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 09:10:51	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 09:11:32	<--	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has quit (Ping timeout: 121 seconds)
2018-09-21 09:12:08	<--	arunkumar314 (arunkumar41@moz-3ic.gjo.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 09:12:25	<--	arunkumar413 (arunkumar41@moz-3ic.gjo.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 09:12:55	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 09:14:52	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 09:16:06	-->	lundibundi (lundibundi@moz-15r.6ia.73.37.IP) has joined #rust-beginners
2018-09-21 09:16:53	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 09:18:41	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-09-21 09:21:27	-->	GreenJello (GreenJello@moz-diuscq.7di5.9nhv.8800.2600.IP) has joined #rust-beginners
2018-09-21 09:21:48	-->	laalaa (asdf@moz-vfjfm8.dhcp.inet.fi) has joined #rust-beginners
2018-09-21 09:22:54	-->	zako (zako@moz-qn0.jpe.241.150.IP) has joined #rust-beginners
2018-09-21 09:25:54	-->	fuogo (Mibbit@moz-knojak.paris.inria.fr) has joined #rust-beginners
2018-09-21 09:26:49	<--	fuogo (Mibbit@moz-knojak.paris.inria.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 09:27:04	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 09:27:07	<--	lundibundi (lundibundi@moz-15r.6ia.73.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 09:31:20	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 09:32:19	-->	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has joined #rust-beginners
2018-09-21 09:32:28	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-21 09:35:22	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 09:35:43	-->	arunkumar413 (arunkumar41@moz-3ic.gjo.48.157.IP) has joined #rust-beginners
2018-09-21 09:35:46	<--	herder (herder@moz-en65c0.bc.googleusercontent.com) has quit (Quit: WeeChat 1.9.1)
2018-09-21 09:35:54	-->	arunkumar314 (arunkumar41@moz-3ic.gjo.48.157.IP) has joined #rust-beginners
2018-09-21 09:40:51	<--	super119x (super119@moz-om6.h52.116.180.IP) has quit (Quit: Leaving)
2018-09-21 09:41:28	-->	simonadameit (simonadamei@moz-q7106g.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 09:42:31	-->	herder (herder@moz-en65c0.bc.googleusercontent.com) has joined #rust-beginners
2018-09-21 09:45:30	<--	simonadameit (simonadamei@moz-q7106g.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 09:50:19	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 09:52:04	<--	GrayShade (quassel@moz-eraqgm.leje.sn81.2f05.2a02.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-21 09:53:15	-->	GrayShade (quassel@moz-p4ara4.leje.sn81.2f05.2a02.IP) has joined #rust-beginners
2018-09-21 09:53:22	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Ping timeout: 121 seconds)
2018-09-21 09:54:23	-->	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has joined #rust-beginners
2018-09-21 09:54:38	-->	moltonel (moltonel@moz-56v.qib.233.80.IP) has joined #rust-beginners
2018-09-21 09:55:47	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-21 09:56:25	<--	leotaku (leotaku@moz-lnm2k9.highway.a1.net) has quit (Ping timeout: 121 seconds)
2018-09-21 09:57:45	<--	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-21 09:58:13	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-21 09:59:15	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-21 10:00:01	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-21 10:00:01	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-21 10:01:16	-->	vmx (vmx@moz-ge4e5v.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 10:01:17	-->	liquidnight (marcus@moz-1jvmti.mdkm.1vl7.0c22.2a01.IP) has joined #rust-beginners
2018-09-21 10:01:34	-->	castilho (castilho@moz-nml76d.s0tm.pvhs.014c.2804.IP) has joined #rust-beginners
2018-09-21 10:02:19	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 10:02:44	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-09-21 10:04:42	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-21 10:05:39	<--	castilho (castilho@moz-nml76d.s0tm.pvhs.014c.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 10:08:22	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-21 10:10:00	-->	bochecha_ (bochecha@moz-vg1.h61.173.37.IP) has joined #rust-beginners
2018-09-21 10:10:09	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-09-21 10:10:10	--	bochecha_ is now known as bochecha
2018-09-21 10:11:34	<--	jiyuu (dror@moz-dsi3mo.ap.nuro.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 10:13:53	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-21 10:14:01	-->	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has joined #rust-beginners
2018-09-21 10:14:42	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 10:14:59	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 10:16:40	-->	simonadameit (simonadamei@moz-q7106g.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 10:16:49	-->	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has joined #rust-beginners
2018-09-21 10:18:44	<--	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has quit (Quit: Leaving)
2018-09-21 10:21:06	<--	cubetastic (Thunderbird@moz-m1f.717.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 10:24:11	<--	niconii (nicole@moz-gr2hus.midco.net) has quit (Quit: leaving)
2018-09-21 10:25:22	-->	bochecha_ (bochecha@moz-vg1.h61.173.37.IP) has joined #rust-beginners
2018-09-21 10:25:22	<--	bochecha (bochecha@moz-vg1.h61.173.37.IP) has quit (Connection closed)
2018-09-21 10:25:28	--	bochecha_ is now known as bochecha
2018-09-21 10:25:43	-->	Cincinpif (Mutter@moz-u8cpv2.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-21 10:30:50	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-21 10:31:08	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 10:32:24	-->	panther99 (Mibbit@moz-4am8ge.isp.telekom.rs) has joined #rust-beginners
2018-09-21 10:32:59	<--	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has quit (Quit: )
2018-09-21 10:36:28	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 10:38:05	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-21 10:38:32	-->	super119 (super119@moz-om6.h52.116.180.IP) has joined #rust-beginners
2018-09-21 10:38:59	super119	say if I write this: "let a: usize = 1000;
2018-09-21 10:39:00	super119	 let b: u16 = a as u16;"
2018-09-21 10:39:21	<--	Cincinpif (Mutter@moz-u8cpv2.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-21 10:39:33	super119	the interesting thing is, build passes without any warning or error.
2018-09-21 10:40:31	super119	I understand u32 -> u64 is safe, but u64->u16 might lose data. so why doesn't rust compiler complain that?
2018-09-21 10:41:30	super119	or the keywoard "as" means -> you take the risk yourself?
2018-09-21 10:44:04	cjd	I believe yes, 'as' = caviat emptor
2018-09-21 10:44:15	GreenJello	super119, yeah, it's an explicit cast so the compiler trusts that you know what you're doing
2018-09-21 10:44:34	GreenJello	super119, in nightly you can do this: https://play.rust-lang.org/?gist=27022dd4d0eb27acfb1817b311ab6017&version=nightly&mode=debug&edition=2015
2018-09-21 10:45:03	super119	I see, thanks guys!
2018-09-21 10:46:05	-->	holmgr (holmgr@moz-jlfbva.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-21 10:46:26	-->	Cincinpif (Mutter@moz-u8cpv2.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-21 10:47:13	GreenJello	this is actually an interesting case, as a conversion on usize is platform-specific
2018-09-21 10:47:33	<--	Cincinpif (Mutter@moz-u8cpv2.dynamic.kabel-deutschland.de) has left #rust-beginners ("Bin später zurück...")
2018-09-21 10:48:26	GreenJello	er I guess that's not a concern in this case, but a conversion from u64 to usize would be a concern
2018-09-21 10:48:56	<--	simonadameit (simonadamei@moz-q7106g.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 10:49:34	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 10:49:46	super119	honestly I don't understand why we need usize :) I mean, u8, u16, u32, u64 should be enough for programmers.
2018-09-21 10:50:22	sarnold	there's something to be said for "how many objects can I fit in the address space available to my process"
2018-09-21 10:50:37	kimundi	super119: You need a integer type for the same size as native pointers
2018-09-21 10:51:19	GreenJello	also 64 bit programs take up more memory, but running on 32 bit means all of the usize values are cheaper
2018-09-21 10:51:46	GreenJello	I'm not exactly sure what 32 bit systems are used for currently
2018-09-21 10:51:57	super119	oh yes I'm stupid. With usize, programmer is able to not worry about different platforms.
2018-09-21 10:52:40	super119	some embedded systems, MCU chips
2018-09-21 10:52:48	GreenJello	ah okay
2018-09-21 10:54:03	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 10:58:04	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-21 10:58:04	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Error in the push function.)
2018-09-21 10:58:05	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 10:58:16	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-21 11:00:45	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-21 11:01:05	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-21 11:02:07	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-21 11:02:56	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-21 11:03:11	-->	hug-dev (Mibbit@moz-pkt.o9r.140.217.IP) has joined #rust-beginners
2018-09-21 11:04:03	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 11:04:23	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 11:04:54	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-21 11:05:00	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Quit: Leaving)
2018-09-21 11:05:18	hug-dev	Hi
2018-09-21 11:05:31	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-21 11:06:07	hug-dev	do you have this issue that when you send a message there is "Cannot send to channel: #rust-beginners"?
2018-09-21 11:06:10	<--	hexjay (l@moz-te8rsi.40s0.fghv.a03f.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 11:06:34	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-21 11:07:29	<--	adoa (awachtel@moz-tls.v74.64.158.IP) has quit (Client exited)
2018-09-21 11:07:39	-->	adoa (awachtel@moz-tls.v74.64.158.IP) has joined #rust-beginners
2018-09-21 11:07:57	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 11:08:05	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 11:08:15	<--	holmgr (holmgr@moz-jlfbva.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-21 11:08:45	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 11:08:47	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (The TLS connection was non-properly terminated.)
2018-09-21 11:09:05	kimundi	hug-dev: there is a large spam wave going for a few weeks now
2018-09-21 11:09:07	sarnold	hug-dev: try not including greetings
2018-09-21 11:09:09	-->	mib_edh36m (Mibbit@moz-uvl.2tf.82.183.IP) has joined #rust-beginners
2018-09-21 11:09:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 11:09:15	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 11:09:23	kimundi	hug-dev: they consist of new usernames coming online and writing some short greeting
2018-09-21 11:09:25	hug-dev	lol ok lol
2018-09-21 11:09:34	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 11:09:43	kimundi	So anyone who does that even if they are not a spam bot risks getting blocked at first :D
2018-09-21 11:09:59	hug-dev	kimundi: haha :D let's be blunt then
2018-09-21 11:10:28	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 11:12:00	<--	adoa (awachtel@moz-tls.v74.64.158.IP) has quit (Client exited)
2018-09-21 11:12:10	-->	adoa (awachtel@moz-tls.v74.64.158.IP) has joined #rust-beginners
2018-09-21 11:12:29	-->	shakyshane (Mibbit@moz-jv9.ijn.67.156.IP) has joined #rust-beginners
2018-09-21 11:13:16	shakyshane	Hey any Serde users :) is this possible? I want to partially serialize, then later take a serde_json::Value and cast it to another struct https://play.rust-lang.org/?gist=77777c9ddc701cfc83fe3fdb2da52f14&version=stable&mode=debug&edition=2015
2018-09-21 11:13:37	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 11:13:49	shakyshane	seems like it should be possible, I'm trying to avoid implementing Deserialize if I don't have to
2018-09-21 11:13:58	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 11:14:52	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 11:15:24	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 11:16:46	sarnold	shakyshane: maybe .as_object()? or something similar?
2018-09-21 11:17:03	Xion	This works but maybe you want a HashMap?
2018-09-21 11:17:15	GreenJello	skade, serde_json::from_value(value)
2018-09-21 11:17:18	GreenJello	shakyshane*
2018-09-21 11:17:29	GreenJello	https://docs.serde.rs/serde_json/value/fn.from_value.html
2018-09-21 11:17:41	sarnold	ohho
2018-09-21 11:17:46	sarnold	that looks better :)
2018-09-21 11:18:23	GreenJello	really cool that you can do this
2018-09-21 11:19:13	Xion	I once did this: https://github.com/Xion/ezomyte/blob/master/src/common/util/json.rs to provide serde_json::Value with all the Deserializer trait impls
2018-09-21 11:19:29	Xion	(so you would be able to just call deserialize() on it)
2018-09-21 11:19:56	GreenJello	super simple implementation, too, it's just M2Preset::deserialize(p.options)
2018-09-21 11:20:51	shakyshane	Perfect, thanks all - from_value was exactly what I was looking for :)
2018-09-21 11:21:27	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-21 11:21:47	shakyshane	this makes some really cools patterns possible
2018-09-21 11:21:54	<--	shakyshane (Mibbit@moz-jv9.ijn.67.156.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 11:22:45	<--	ystreet00 (ystreet00@moz-3u3.f44.200.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 11:23:01	-->	ystreet00 (ystreet00@moz-mkp.lgm.200.185.IP) has joined #rust-beginners
2018-09-21 11:23:18	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-21 11:23:46	<--	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2018-09-21 11:24:03	-->	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has joined #rust-beginners
2018-09-21 11:24:55	-->	mib_1s9eyu (Mibbit@moz-tqdp2l.mynts.ru) has joined #rust-beginners
2018-09-21 11:25:05	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 11:25:16	<--	mib_1s9eyu (Mibbit@moz-tqdp2l.mynts.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 11:26:27	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-21 11:26:28	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-21 11:27:02	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 11:29:17	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 11:31:01	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 11:32:31	-->	simonadameit (simonadamei@moz-6hlbar.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 11:32:53	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 11:32:58	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 11:33:37	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 11:35:00	-->	tom (Mibbit@moz-8r1.k4p.189.207.IP) has joined #rust-beginners
2018-09-21 11:35:52	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-21 11:36:03	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-21 11:37:53	<--	tom (Mibbit@moz-8r1.k4p.189.207.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 11:38:43	-->	l (l@moz-a5kte8.isp.belgacom.be) has joined #rust-beginners
2018-09-21 11:39:05	<--	quartz55 (quartz@moz-h9vjov.mog-technologies.com) has quit (Connection closed)
2018-09-21 11:39:08	<--	quartz (jcosta@moz-h9vjov.mog-technologies.com) has quit (Quit: WeeChat 2.2)
2018-09-21 11:39:21	-->	castilho (castilho@moz-1i86c6.ikh6.q8k6.0214.2804.IP) has joined #rust-beginners
2018-09-21 11:40:08	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-21 11:41:16	<--	mib_edh36m (Mibbit@moz-uvl.2tf.82.183.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 11:42:14	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 11:42:17	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 11:42:38	<--	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has quit (Connection closed)
2018-09-21 11:43:01	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-21 11:45:01	-->	quartz (quartz@moz-h9vjov.mog-technologies.com) has joined #rust-beginners
2018-09-21 11:45:37	<--	liquidnight (marcus@moz-1jvmti.mdkm.1vl7.0c22.2a01.IP) has quit (Connection closed)
2018-09-21 11:47:04	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 11:47:05	-->	bochecha_ (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-21 11:50:46	<--	bochecha (bochecha@moz-vg1.h61.173.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 11:50:47	--	bochecha_ is now known as bochecha
2018-09-21 11:52:02	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 11:55:05	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-21 11:55:35	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 11:55:44	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (The TLS connection was non-properly terminated.)
2018-09-21 11:56:54	<--	icarus (Mibbit@moz-55hco7.dsl.bell.ca) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 11:58:37	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-21 12:01:24	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-21 12:01:48	<--	super119 (super119@moz-om6.h52.116.180.IP) has quit (Quit: Leaving)
2018-09-21 12:04:44	<--	simonadameit (simonadamei@moz-6hlbar.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 12:08:37	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 12:09:23	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 12:11:23	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-21 12:17:05	<--	castilho (castilho@moz-1i86c6.ikh6.q8k6.0214.2804.IP) has quit (Connection closed)
2018-09-21 12:17:27	-->	castilho (castilho@moz-1i86c6.ikh6.q8k6.0214.2804.IP) has joined #rust-beginners
2018-09-21 12:19:20	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 12:20:09	<--	xet7 (xet7@moz-uqb2bo.rev.dnainternet.fi) has quit (The TLS connection was non-properly terminated.)
2018-09-21 12:21:28	<--	castilho (castilho@moz-1i86c6.ikh6.q8k6.0214.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 12:22:04	-->	alatiera (alatiera@moz-0d0n4c.access.hol.gr) has joined #rust-beginners
2018-09-21 12:22:48	-->	xet7 (xet7@moz-3qeqqf.rev.dnainternet.fi) has joined #rust-beginners
2018-09-21 12:23:12	<--	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has quit (Connection closed)
2018-09-21 12:23:47	<--	panther99 (Mibbit@moz-4am8ge.isp.telekom.rs) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 12:24:28	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 12:25:05	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-21 12:27:26	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 12:29:09	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 12:30:27	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 12:31:31	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-21 12:31:33	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 12:31:35	-->	mib_skp6fr (Mibbit@moz-tfk7k5.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-21 12:31:39	<--	mib_skp6fr (Mibbit@moz-tfk7k5.dynamicip.rima-tde.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 12:32:01	-->	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has joined #rust-beginners
2018-09-21 12:33:07	<--	ianbattersby (ianbattersb@moz-su0.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 12:34:14	-->	nico (nico@moz-77jo1t.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 12:38:42	<--	moltonel (moltonel@moz-56v.qib.233.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 12:40:46	-->	schnozzle (Mibbit@moz-n1nq5p.okcbok.sbcglobal.net) has joined #rust-beginners
2018-09-21 12:42:26	schnozzle	how do i get the size (in bytes) of a vector?  I need to know how many bytes of memory that the vector takes up
2018-09-21 12:42:28	schnozzle	 mem::size_of_val(&vec)   <--- not it right?
2018-09-21 12:42:36	schnozzle	 mem :: size_of_val(&vec)   <--- not it right?
2018-09-21 12:43:50	schnozzle	i was thinking it would be: mem :: size_of_val(&vec[0]) * vec.len()
2018-09-21 12:45:39	-->	luizdepra (luizdepra@moz-o99kto.7lsd.eidl.1284.2001.IP) has joined #rust-beginners
2018-09-21 12:45:50	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 12:48:58	nico	that should  work as long as the vec is not empty
2018-09-21 12:49:14	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-21 12:49:46	nico	schnozzle your example works in the playground https://play.rust-lang.org/?gist=81cae4558904d72baec4bd97824713d6&version=stable&mode=debug&edition=2015
2018-09-21 12:51:33	-->	liquidnight (marcus@moz-1jvmti.mdkm.1vl7.0c22.2a01.IP) has joined #rust-beginners
2018-09-21 12:51:39	-->	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-21 12:52:13	schnozzle	ok thanks! i need to remember the playground
2018-09-21 12:52:27	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-21 12:53:16	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-21 12:54:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 12:55:20	<--	hug-dev (Mibbit@moz-pkt.o9r.140.217.IP) has left #rust-beginners
2018-09-21 12:55:32	nico	schnozzle glad I could be of help :)
2018-09-21 12:56:51	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-21 12:57:09	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-21 12:57:47	nico	I'm encountering behaviour I don't quite understand when implementing a trait for references of a type that already implements the trait
2018-09-21 12:57:52	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 12:58:41	<--	LurkingFrog (dfogelson@moz-2ip9s3.hs.gigamonster.net) has quit (Quit: Ex-Chat)
2018-09-21 12:58:59	dpc1	nico: can you share some code?
2018-09-21 12:59:53	nico	dpcl typing it down on the playground really quick, would be too much to post directly in irc
2018-09-21 12:59:56	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-21 13:01:04	dpc1	it is 1 not l ;)
2018-09-21 13:01:20	dpc1	ya you'll get kicked if you paste more than 5 lines so xD
2018-09-21 13:01:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 13:02:19	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-21 13:02:37	--	l is now known as hexjay
2018-09-21 13:03:37	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-21 13:03:52	nico	dpc1, sorry, they look way too similar :>
2018-09-21 13:04:11	nico	https://play.rust-lang.org/?gist=402bdbc68075079ff7cd57ac5c25dbf1&version=stable&mode=debug&edition=2015
2018-09-21 13:08:08	-->	JAlbers (jalbers@moz-gbmisn.il.comcast.net) has joined #rust-beginners
2018-09-21 13:08:37	<--	schnozzle (Mibbit@moz-n1nq5p.okcbok.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 13:09:50	nico	it's quite confusing, rls shows me the first type is  &&'a T and the second type is  &&'a mut T, so theoretically the would both need two derefs to get T
2018-09-21 13:11:23	nico	My guess is that rust coerces the second deref for &&'a T but not for &&'a mut T
2018-09-21 13:14:47	<--	zako (zako@moz-qn0.jpe.241.150.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 13:16:07	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 13:17:58	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 13:20:03	-->	moltonel (moltonel@moz-537.aik.43.64.IP) has joined #rust-beginners
2018-09-21 13:20:15	-->	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 13:20:22	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-21 13:24:31	emerent	nico: it doesn't coerce
2018-09-21 13:24:48	emerent	the function takes &self so it doesn't need to do anything with it
2018-09-21 13:25:03	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 13:25:04	emerent	it just passes &T along
2018-09-21 13:25:06	<--	JAlbers (jalbers@moz-gbmisn.il.comcast.net) has quit (Connection closed)
2018-09-21 13:25:08	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 13:25:42	emerent	with &mut T it first tries auto-reffing it to &&mut T
2018-09-21 13:25:51	emerent	which works and then it's stuck in a recursion
2018-09-21 13:25:52	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-21 13:25:54	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 13:25:55	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-21 13:26:10	emerent	deref-coercion would come if auto-reffing wouldn't have worked already
2018-09-21 13:26:38	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-21 13:27:02	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 13:27:03	-->	DaQue (Mutter@moz-5pt.4hv.116.199.IP) has joined #rust-beginners
2018-09-21 13:29:35	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 13:30:14	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-21 13:30:15	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-21 13:30:50	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Quit: Leaving)
2018-09-21 13:31:04	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 13:31:05	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-21 13:31:54	-->	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-21 13:33:27	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-21 13:35:23	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 13:37:28	nico	emerent awesome, thanks for the explanation!
2018-09-21 13:38:35	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 13:38:58	-->	kreca (Mibbit@moz-khs9lg.corp.bahnhof.se) has joined #rust-beginners
2018-09-21 13:39:28	kreca	Hi, the rust book seems to point to a broken rust installer... https://doc.rust-lang.org/cargo/getting-started/installation.html
2018-09-21 13:39:54	kreca	Looks like the new url is https://sh.rustup.rs
2018-09-21 13:40:08	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 13:40:16	kreca	the file should also be removed since rustup wont be installed after running it
2018-09-21 13:40:44	-->	mib_6zexb0 (Mibbit@moz-eg4.rg1.184.195.IP) has joined #rust-beginners
2018-09-21 13:41:27	<--	mib_6zexb0 (Mibbit@moz-eg4.rg1.184.195.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 13:41:59	kreca	got to the page by googling "rustup mac" 
2018-09-21 13:42:32	sarnold	which part is busted? https://static.rust-lang.org/rustup.sh still seems to be there..
2018-09-21 13:43:53	kreca	Yeah, but it seems to be an old installer. It uses sudo to install stuff in /usr/local and the command rustup is not found after using it
2018-09-21 13:44:57	-->	livingsilver94 (Mibbit@moz-9fvkmv.business.telecomitalia.it) has joined #rust-beginners
2018-09-21 13:45:00	-->	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has joined #rust-beginners
2018-09-21 13:45:00	kreca	find ~/ -name "rustup" && find /usr/local -name "rustup" yields no results
2018-09-21 13:45:12	<--	zako (zako@moz-qah1qi.dynamicip.rima-tde.net) has quit (Ping timeout: 121 seconds)
2018-09-21 13:45:21	kreca	and ~/.cargo is not created
2018-09-21 13:46:10	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-21 13:46:15	-->	zako (zako@moz-tlmnl8.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-21 13:46:45	livingsilver94	hello! I need an enum that must specify if I'm at the beginning or inside a set of elements. If i'm at the beginning, the enum variant has no value associated. If I'm in the body, there's a value associated. This is basically what Option is, but its name doesn't reflect what's i'm using it for
2018-09-21 13:46:59	livingsilver94	what would you do? Using an Option or defining my own enum?
2018-09-21 13:47:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 13:47:34	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 13:47:45	sarnold	I think using your own enum would be better documentation
2018-09-21 13:47:52	-->	Aimai (Aimai@moz-ormsrn.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 13:47:54	sarnold	would you miss any of the pre-supplied Option metohds?
2018-09-21 13:48:20	livingsilver94	sarnold: nope. I don't need all the Option "API"
2018-09-21 13:49:06	sarnold	livingsilver94: okay, cool, I think that's further support for making your own enum
2018-09-21 13:49:22	livingsilver94	great! Thank you for your help
2018-09-21 13:50:35	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 13:51:14	nico	kreca that sounds to me like MAC SIP blocking your install
2018-09-21 13:51:41	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 13:53:45	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 13:54:41	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 13:55:37	nico	kreca the same happened when I tried to install homebrew on osx with SIP enabled - a quick google will tell you how to turn it off
2018-09-21 13:57:07	-->	tumdum_ (tumdum@moz-qsmo8l.dynamic.chello.pl) has joined #rust-beginners
2018-09-21 13:57:42	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-21 13:58:33	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-21 13:59:19	-->	simonadameit (simonadamei@moz-4t02i7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 13:59:21	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-21 13:59:29	<--	tumdum (tumdum@moz-qsmo8l.dynamic.chello.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 14:00:09	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-21 14:00:20	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-21 14:00:37	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-21 14:00:39	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-21 14:01:38	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-21 14:02:01	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 14:02:28	-->	lundibundi (lundibundi@moz-lfb.r74.73.37.IP) has joined #rust-beginners
2018-09-21 14:03:12	-->	tophatsteve (tophatsteve@moz-c4i5ql.static.enta.net) has joined #rust-beginners
2018-09-21 14:04:30	<--	tophatsteve (tophatsteve@moz-c4i5ql.static.enta.net) has quit (Quit: Leaving)
2018-09-21 14:04:39	-->	Urania (textual@moz-82n.h1m.1.35.IP) has joined #rust-beginners
2018-09-21 14:05:32	-->	tophatsteve (tophatsteve@moz-c4i5ql.static.enta.net) has joined #rust-beginners
2018-09-21 14:05:52	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-21 14:08:48	kreca	nico: Using https://sh.rustup.rs worked perfectly for me
2018-09-21 14:08:48	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-21 14:09:00	kreca	don't think sip should be disabled to use rust :)
2018-09-21 14:14:13	-->	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-21 14:16:09	<--	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 14:16:11	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 14:17:06	<--	nico (nico@moz-77jo1t.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.9.1)
2018-09-21 14:18:11	-->	DaQue_ (Mutter@moz-2q9.4hv.116.199.IP) has joined #rust-beginners
2018-09-21 14:21:05	-->	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 14:21:24	-->	panther99 (Mibbit@moz-4am8ge.isp.telekom.rs) has joined #rust-beginners
2018-09-21 14:22:02	<--	DaQue (Mutter@moz-5pt.4hv.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 14:22:11	panther99	Does anyone know easy way to generate SHA1 from file in Rust?
2018-09-21 14:22:21	<--	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 14:22:23	-->	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 14:22:40	<--	faitswulff (faitswulff@moz-d93mu2.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 14:23:02	<--	Gertm (gert@moz-ga73mo.isp.belgacom.be) has quit (Quit: leaving)
2018-09-21 14:24:00	<--	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has quit (Client exited)
2018-09-21 14:24:07	sarnold	panther99: https://docs.rs/sha1/0.6.0/ looks tolerable on a quick glance
2018-09-21 14:25:10	panther99	Yeah, I already have a crate
2018-09-21 14:25:14	panther99	I'm using rust-crypto
2018-09-21 14:25:25	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-21 14:25:25	panther99	So basically I just have to load file content in string and pass it?
2018-09-21 14:25:25	<--	lundibundi (lundibundi@moz-lfb.r74.73.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 14:25:41	sarnold	no... sorry, I've got to run
2018-09-21 14:25:47	panther99	Ah, okay
2018-09-21 14:25:49	panther99	Thanks anyway
2018-09-21 14:25:50	sarnold	the usual approach is to read in a big block, feed it to the hash..
2018-09-21 14:25:56	sarnold	and iterate until you've read the whole file
2018-09-21 14:26:00	sarnold	have fun :)
2018-09-21 14:26:06	panther99	Okay thanks!
2018-09-21 14:26:35	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-21 14:26:52	-->	nairware (CELLIS-W10@moz-p67.9ua.206.67.IP) has joined #rust-beginners
2018-09-21 14:27:45	-->	Arcaelyx (Arcaelyx@moz-l5o5ff.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-09-21 14:31:25	<--	simonadameit (simonadamei@moz-4t02i7.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 14:32:04	<--	livingsilver94 (Mibbit@moz-9fvkmv.business.telecomitalia.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 14:33:10	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Connection closed)
2018-09-21 14:33:27	-->	mib_3e4ota (Mibbit@moz-0mt2qh.nat.rutgers.edu) has joined #rust-beginners
2018-09-21 14:33:51	<--	mib_3e4ota (Mibbit@moz-0mt2qh.nat.rutgers.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 14:34:33	<--	panther99 (Mibbit@moz-4am8ge.isp.telekom.rs) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 14:34:47	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 14:35:42	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-21 14:36:37	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-21 14:38:41	-->	deepio (kvirc@moz-lru19k.ewe-ip-backbone.de) has joined #rust-beginners
2018-09-21 14:38:44	<--	martin1 (martin@moz-c7v.9s6.64.190.IP) has quit (Connection closed)
2018-09-21 14:40:04	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 14:41:06	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-21 14:41:08	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-21 14:42:00	-->	re-l124c41 (re-l124c41@moz-kr0b11.4kh6.ni31.0908.2a02.IP) has joined #rust-beginners
2018-09-21 14:44:17	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-21 14:44:52	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 14:52:05	<--	fsasm (fsasm@moz-u0aefh.dynamic.surfer.at) has quit (Ping timeout: 121 seconds)
2018-09-21 14:55:16	-->	jcob (user@moz-8sa.6e5.7.152.IP) has joined #rust-beginners
2018-09-21 14:55:47	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 14:57:24	-->	castilho (castilho@moz-k5vb3o.ikh6.q8k6.0214.2804.IP) has joined #rust-beginners
2018-09-21 14:58:38	-->	eibwen (eibwen@moz-9kbrpu.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 14:59:49	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 15:01:06	<--	Urania (textual@moz-82n.h1m.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 15:01:37	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-21 15:01:45	<--	tophatsteve (tophatsteve@moz-c4i5ql.static.enta.net) has quit (Quit: Leaving)
2018-09-21 15:03:23	-->	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has joined #rust-beginners
2018-09-21 15:03:59	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-21 15:04:33	-->	jony (jony@moz-d9m.uk2.248.5.IP) has joined #rust-beginners
2018-09-21 15:04:46	<--	DaQue_ (Mutter@moz-2q9.4hv.116.199.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 15:05:11	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-21 15:07:10	-->	simonadameit (simonadamei@moz-4t02i7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 15:07:14	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-21 15:07:28	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-21 15:07:55	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-21 15:07:58	-->	tophatsteve (tophatsteve@moz-ir6.26l.205.213.IP) has joined #rust-beginners
2018-09-21 15:08:22	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-21 15:08:35	<--	tophatsteve (tophatsteve@moz-ir6.26l.205.213.IP) has quit (Quit: Leaving)
2018-09-21 15:09:17	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Connection closed)
2018-09-21 15:09:32	-->	simonada_ (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 15:09:57	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-21 15:09:59	<--	techne (techne@moz-ovkci8.msh6.qo20.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 15:10:47	-->	Guest4 (textual@moz-rm1.kn1.111.42.IP) has joined #rust-beginners
2018-09-21 15:10:50	<--	eibwen (eibwen@moz-9kbrpu.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 15:10:58	-->	techne (techne@moz-e8j.p3t.76.45.IP) has joined #rust-beginners
2018-09-21 15:11:15	<--	simonadameit (simonadamei@moz-4t02i7.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 15:11:16	<--	vmx (vmx@moz-ge4e5v.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-21 15:11:57	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-21 15:12:38	<--	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has quit (Quit: Leaving)
2018-09-21 15:13:12	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-21 15:13:37	-->	Urania (textual@moz-82n.h1m.1.35.IP) has joined #rust-beginners
2018-09-21 15:13:42	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-21 15:14:39	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-21 15:15:45	<--	simonada_ (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-21 15:15:47	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 15:16:34	<--	castilho (castilho@moz-k5vb3o.ikh6.q8k6.0214.2804.IP) has quit (Connection closed)
2018-09-21 15:16:56	-->	castilho (castilho@moz-ofo.6g7.40.189.IP) has joined #rust-beginners
2018-09-21 15:17:25	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 15:17:42	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (The TLS connection was non-properly terminated.)
2018-09-21 15:18:09	<--	j0nthn (jonathan@moz-6br3pp.rev.sfr.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-21 15:18:16	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 15:18:47	<--	castilho (castilho@moz-ofo.6g7.40.189.IP) has quit (Connection closed)
2018-09-21 15:22:05	-->	federico (federico@moz-f42.qua.108.201.IP) has joined #rust-beginners
2018-09-21 15:22:45	<--	UnlawfulMonad (unlawfulm@moz-65qdhr.ltu1.t7vv.a880.2604.IP) has quit (Quit: Meh)
2018-09-21 15:24:13	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (The TLS connection was non-properly terminated.)
2018-09-21 15:25:00	<--	liquidnight (marcus@moz-1jvmti.mdkm.1vl7.0c22.2a01.IP) has quit (Connection closed)
2018-09-21 15:28:30	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-21 15:29:58	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 15:30:39	<--	jony (jony@moz-d9m.uk2.248.5.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 15:31:59	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 15:32:53	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-21 15:33:26	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-21 15:36:07	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 15:36:58	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 15:38:58	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-21 15:42:42	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 15:43:01	-->	castilho (castilho@moz-iule1u.ikh6.q8k6.0214.2804.IP) has joined #rust-beginners
2018-09-21 15:43:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 15:43:44	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 15:44:22	<--	arunkumar413 (arunkumar41@moz-3ic.gjo.48.157.IP) has quit (Quit: Leaving)
2018-09-21 15:44:33	<--	arunkumar314 (arunkumar41@moz-3ic.gjo.48.157.IP) has quit (Quit: Leaving)
2018-09-21 15:44:41	<--	dorfsmay (dorfsmay@moz-2ir.517.207.12.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 15:45:20	<--	jcob (user@moz-8sa.6e5.7.152.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 15:47:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 15:48:10	-->	DaQue_ (Mutter@moz-1r8.4hv.116.199.IP) has joined #rust-beginners
2018-09-21 15:48:13	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-21 15:48:39	<--	brucem (textual@moz-lrrokt.ivsr.hm43.9800.2405.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 15:49:47	sparky8251	having trouble using serde to deserialize some json. keeps saying "invalid type: map" and im unsure what im missing. http://dpaste.com/0MAEZ0Z is my code along with a comment at the top explaining the format the json is in. anyone able to point out where im failing?
2018-09-21 15:50:29	-->	brucem (textual@moz-il3bfq.ivsr.hm43.9800.2405.IP) has joined #rust-beginners
2018-09-21 15:51:26	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 15:53:53	-->	insidious (insidious@moz-3cvg75.librarylab.scranton.edu) has joined #rust-beginners
2018-09-21 15:54:18	<--	deepio (kvirc@moz-lru19k.ewe-ip-backbone.de) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2018-09-21 15:54:38	GreenJello	sparky8251, try extracting it as a string, and println!(the_string)
2018-09-21 15:55:13	GreenJello	sparky8251, maybe it's returning something different from what you expect, or even what you receive in curl due to headers
2018-09-21 15:55:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 15:55:42	<--	Lilly (Lilly@moz-8r5.b80.132.178.IP) has quit (Connection closed)
2018-09-21 15:55:47	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-21 15:56:44	-->	jbradberry (jrb@moz-gvi5fm.biz.rr.com) has joined #rust-beginners
2018-09-21 15:57:48	sparky8251	GreenJello: same issue if i drop the Vec<> and just go String. still says it got a map when it was expecting something else
2018-09-21 15:58:18	GreenJello	sparky8251, I mean ask reqwest for a string instead of v.json()
2018-09-21 15:59:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 15:59:54	<--	Urania (textual@moz-82n.h1m.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 16:00:58	sparky8251	GreenJello: it certainly returns a mass of JSON with "Names": ["/bored_feynman"] in it
2018-09-21 16:01:10	<--	alatiera (alatiera@moz-0d0n4c.access.hol.gr) has quit (Quit: Leaving)
2018-09-21 16:02:02	sparky8251	do i have to define each field in the returned JSON to get out a single entry like Names?
2018-09-21 16:02:30	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:03:19	<--	bobkare (bob@moz-9gdk59.net) has quit (Ping timeout: 121 seconds)
2018-09-21 16:03:43	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:04:51	-->	bobkare (bob@moz-9gdk59.net) has joined #rust-beginners
2018-09-21 16:07:58	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 16:08:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:09:04	-->	alatiera (alatiera@moz-0d0n4c.access.hol.gr) has joined #rust-beginners
2018-09-21 16:10:44	sparky8251	GreenJello: ah... i think i see what its doing.... it looks more like [{"Names": ["/boring_feynman"]}]. guess thats because it returns multiple large JSON blobs if they exist. pretty sure i got my answer now, so thanks for the help!
2018-09-21 16:12:02	-->	ferris_noob (Mibbit@moz-6sjsko.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:12:26	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 16:12:38	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-21 16:13:13	ferris_noob	testing hello
2018-09-21 16:13:46	<--	ferris_noob (Mibbit@moz-6sjsko.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 16:13:48	dpc1	hello xD
2018-09-21 16:15:42	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 16:16:04	-->	mib_fefcgn (Mibbit@moz-6sjsko.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:16:09	<--	castilho (castilho@moz-iule1u.ikh6.q8k6.0214.2804.IP) has quit (Connection closed)
2018-09-21 16:16:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:16:30	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 16:16:33	-->	castilho (castilho@moz-iule1u.ikh6.q8k6.0214.2804.IP) has joined #rust-beginners
2018-09-21 16:16:58	-->	faitswulff (faitswulff@moz-rur14p.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 16:18:33	-->	DaQue__ (Mutter@moz-uha.4hv.116.199.IP) has joined #rust-beginners
2018-09-21 16:18:39	<--	mib_fefcgn (Mibbit@moz-6sjsko.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 16:20:26	-->	wippler (Mibbit@moz-6sjsko.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:20:36	<--	castilho (castilho@moz-iule1u.ikh6.q8k6.0214.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 16:20:56	wippler	Hmm, I keep 
2018-09-21 16:20:57	wippler	getting 
2018-09-21 16:21:01	wippler	cannot sent to channel :(
2018-09-21 16:21:17	wippler	rust-docs component isn't built for my target, arm64
2018-09-21 16:21:22	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 16:21:23	wippler	and I want to read the std reference offline
2018-09-21 16:21:39	wippler	I'm unable to build them from the rust repo, 'cargo doc' fails 
2018-09-21 16:21:48	wippler	due to missing clippy/Cargo.toml
2018-09-21 16:21:50	wippler	what should I do?
2018-09-21 16:22:08	<--	DaQue_ (Mutter@moz-1r8.4hv.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 16:22:24	-->	eevv (Mibbit@moz-v2vhh5.splius.lt) has joined #rust-beginners
2018-09-21 16:22:48	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Connection closed)
2018-09-21 16:22:58	eevv	I have a situation where I need to read a variable from different closures and save to the variable from 1 closure, how should I do it?
2018-09-21 16:23:09	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2018-09-21 16:23:27	wippler	ah, I didn't pull the rust submodules... trying again now
2018-09-21 16:23:42	<--	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has quit (Connection closed)
2018-09-21 16:24:53	-->	Aqo (Aqo@moz-11t4ij.inter.net.il) has joined #rust-beginners
2018-09-21 16:25:05	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-21 16:25:20	<--	kreca (Mibbit@moz-khs9lg.corp.bahnhof.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 16:25:23	<--	Aankhen`` (notasquid@moz-inm.am1.207.49.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 16:26:27	-->	koechm (Mibbit@moz-u4c.0pc.21.188.IP) has joined #rust-beginners
2018-09-21 16:26:45	-->	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has joined #rust-beginners
2018-09-21 16:28:29	<--	koechm (Mibbit@moz-u4c.0pc.21.188.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 16:30:29	<--	_0x40_ (0x40@moz-e7l29c.mobileonline.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-21 16:32:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 16:35:31	justsomequestions	does anyone here use clion with the rust plugin? When I create a new rust project everything is fine but when I import a project I can't choose rust anywhere so it always tries to interpret rust as C++
2018-09-21 16:35:44	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 16:37:17	<--	Kisoku (Kisoku@moz-fkq2oi.dhcp.inet.fi) has quit (Connection closed)
2018-09-21 16:37:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:38:31	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 16:41:34	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-21 16:42:50	<--	Guest4 (textual@moz-rm1.kn1.111.42.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 16:43:16	eevv	I have a situation where I need to read a variable from different closures and save to the variable from 1 closure, how should I do it?
2018-09-21 16:43:28	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 16:44:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:46:15	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-21 16:47:55	<--	StarlitGhost (SG@2604:a880:800:a1::12:e001) has quit (Quit: WeeChat 2.3-dev)
2018-09-21 16:48:58	-->	StarlitGhost (SG@2604:a880:800:a1::12:e001) has joined #rust-beginners
2018-09-21 16:49:00	<--	xorrox (custom@moz-2nap38.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-21 16:49:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 16:50:06	<--	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-21 16:50:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:51:26	-->	gretchen (Mibbit@moz-soe4k5.retail.telecomitalia.it) has joined #rust-beginners
2018-09-21 16:52:00	<--	gretchen (Mibbit@moz-soe4k5.retail.telecomitalia.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 16:52:34	-->	Houm (Houm@moz-838.l3c.51.5.IP) has joined #rust-beginners
2018-09-21 16:53:39	-->	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has joined #rust-beginners
2018-09-21 16:54:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 16:54:44	<--	jbradberry (jrb@moz-gvi5fm.biz.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 16:55:16	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 16:55:17	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 16:55:27	alercah	eevv: depends on exactly what the closures are doing
2018-09-21 16:55:35	alercah	RefCell may be the most straightforward option, though
2018-09-21 16:55:42	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 16:56:26	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-21 16:57:48	-->	Guest4 (textual@moz-rm1.kn1.111.42.IP) has joined #rust-beginners
2018-09-21 16:58:26	@mbrubeck	(or RwLock if they are running on different threads)
2018-09-21 16:59:01	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-21 16:59:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 16:59:42	sparky8251	is there a rust crate that can output information in rows/columns? so i can have a top line like "ID        NAME" and then under ID and NAME print IDs and NAMEs?
2018-09-21 16:59:47	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:00:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 17:00:30	<--	eevv (Mibbit@moz-v2vhh5.splius.lt) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 17:01:31	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 17:01:32	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-21 17:02:28	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 17:02:47	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:03:50	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:04:27	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:04:37	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-21 17:04:57	-->	Urania (textual@moz-82n.h1m.1.35.IP) has joined #rust-beginners
2018-09-21 17:05:06	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Connection closed)
2018-09-21 17:05:10	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 17:05:19	<--	wippler (Mibbit@moz-6sjsko.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 17:05:31	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-09-21 17:06:08	-->	mortisha (Mibbit@moz-et9f71.etb.net.co) has joined #rust-beginners
2018-09-21 17:07:23	mortisha	 Mysql Error 1040 (HY00): oo many connections
2018-09-21 17:07:32	mortisha	Hi i have this issue
2018-09-21 17:07:41	mortisha	What's the best way to close connections after querying?
2018-09-21 17:07:49	<--	DaQue__ (Mutter@moz-uha.4hv.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 17:09:13	-->	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has joined #rust-beginners
2018-09-21 17:09:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:10:20	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-21 17:10:21	stephaneyfx	mortisha: If you're using a Rust crate to connect to your database, I would expect the Drop implementation of one of the types in this crate do tear down the connection. So, short answer, when the appropriate object goes out of scope, the connection should be closed.
2018-09-21 17:10:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 17:10:35	stephaneyfx	*to tear down
2018-09-21 17:11:33	-->	siddhartharao17 (siddharthar@moz-q4a.sr5.107.128.IP) has joined #rust-beginners
2018-09-21 17:11:46	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-21 17:14:16	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-21 17:16:20	mortisha	stephaneyfx do you have any example about that?
2018-09-21 17:16:49	stephaneyfx	mortisha: It depends on what crate you're using to deal with your database
2018-09-21 17:17:02	mortisha	but the crate doen't have drop implementation
2018-09-21 17:17:27	mortisha	https://docs.rs/mysql/14.1.0/mysql/
2018-09-21 17:17:59	stephaneyfx	mortisha: This does: https://docs.rs/mysql/14.1.0/mysql/struct.Conn.html
2018-09-21 17:17:59	ZeroWalker	why are static vectors "unstable" in rust, i know it's a bad way to solve things, but it can be hard (For me at least) to find a way to keep something alive if it's not in some threaded loop etc
2018-09-21 17:18:48	@mbrubeck	ZeroWalker: If you want to use global mutable state there's always `lazy_static`
2018-09-21 17:19:03	ZeroWalker	what's the difference?
2018-09-21 17:19:27	@mbrubeck	`lazy_static` creates a global variable initialized on first access (rather than at compile time)
2018-09-21 17:19:29	ZeroWalker	to me it could be "locally static" but i don't think that concept exists
2018-09-21 17:19:55	ZeroWalker	ah, is that stable in rust?
2018-09-21 17:20:09	@mbrubeck	It's a stable library, maintained by the Rust libs team: https://crates.io/crates/lazy_static
2018-09-21 17:20:11	ZeroWalker	cause it doesn't really matter for me, i usually prefer compile time
2018-09-21 17:20:14	mortisha	so i should use the drop implementation to close the connections
2018-09-21 17:20:16	mortisha	rigth
2018-09-21 17:20:17	-->	liquidnight (marcus@moz-1jvmti.mdkm.1vl7.0c22.2a01.IP) has joined #rust-beginners
2018-09-21 17:20:22	<--	Urania (textual@moz-82n.h1m.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:20:23	ZeroWalker	oh
2018-09-21 17:20:29	ZeroWalker	i thought it was an inbuilt type thing
2018-09-21 17:20:37	awygle	is rust 2018 getting rid of the thing where you have to have a whole separate crate just for proc macros?
2018-09-21 17:20:57	stephaneyfx	mortisha: You don't have to use the Drop implementation. When your Conn instance goes out of scope, it will be dropped and presumably tear down the connection
2018-09-21 17:21:01	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Connection closed)
2018-09-21 17:21:40	stephaneyfx	mortisha: What I mean is that it's all done implicitly, and you don't really need to do anything
2018-09-21 17:22:11	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-21 17:22:12	mortisha	but the mysql accumulate the mysql connections
2018-09-21 17:22:18	ZeroWalker	in my case it's essentially for caching a file so i don't need to read it again as it's accessed from an event based system (hence the problematics of keeping it alive)
2018-09-21 17:22:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:22:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 17:22:49	stephaneyfx	mortisha: Where does it do that?
2018-09-21 17:23:00	mortisha	after querying
2018-09-21 17:23:06	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-21 17:23:22	@mbrubeck	awygle: There are a lot of reasons that you *want* proc macros to be in a separate compilation unit from non-macro code
2018-09-21 17:23:43	@mbrubeck	The proc macro code gets loaded by the compiler and runs at compile time; there's no need to link it into the final program
2018-09-21 17:23:56	-->	Aqo_ (Aqo@moz-11t4ij.inter.net.il) has joined #rust-beginners
2018-09-21 17:24:08	ZeroWalker	but need to rewrite it anyhow cause of added complexity into the project, so i might find something else. otherwise i will have a look at that lazy_static, though i do prefer compile time. And would like to know Why it's unstable, new to Rust so not sure how it defines stuff, and it seems many "unstable" aren't unstable per se, just "we aren't 100% sure it will work cause we haven't tested it"
2018-09-21 17:24:25	ZeroWalker	proc macro? are there different macros?
2018-09-21 17:24:42	mortisha	Thanks
2018-09-21 17:24:46	@mbrubeck	and if you're cross-compiling, you *have* to compile them separately
2018-09-21 17:25:31	ZeroWalker	i do btw use 2018, and i don't understand why it's only available in nightly, the beta are close enough in dates, so why doesn't it have it?
2018-09-21 17:25:33	stephaneyfx	mortisha: I am not familiar with this crate. Maybe try to come up with a minimal example reproducing the issue and share a link to it here.
2018-09-21 17:25:44	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Ping timeout: 121 seconds)
2018-09-21 17:25:49	--	Aqo_ is now known as Aqo
2018-09-21 17:25:55	ZeroWalker	but you have to compile another build anyway right, no matter ho many runtime parts you have
2018-09-21 17:26:02	mortisha	stephaneyfx i contact you later thanks
2018-09-21 17:26:02	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-21 17:26:31	awygle	mbrubeck: that doesn't sound like a good reason. It'll be eliminated by dead code elim even if the compiler isn't smart enough not to link it.
2018-09-21 17:26:39	@mbrubeck	ZeroWalker: It was released to beta yesterday https://internals.rust-lang.org/t/rust-2018-rc1-is-available/8435
2018-09-21 17:26:40	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 17:26:44	awygle	Cross compiling is a better one but still doesn't really persuade me
2018-09-21 17:26:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:27:07	awygle	Arguing about it isn't really my intent here tho. Thanks for the info.
2018-09-21 17:27:54	@mbrubeck	awygle: It'd be nice if at the very least Cargo could hide the fact that there was a separate crate, or something
2018-09-21 17:28:01	@mbrubeck	awygle: This probably doesn't need to be an edition-specific change, though.
2018-09-21 17:28:48	@mbrubeck	The only changes so far that are specific to the 2018 edition are the module system changes and new reserved keywords.
2018-09-21 17:29:06	<--	mortisha (Mibbit@moz-et9f71.etb.net.co) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 17:31:55	-->	Grilinctus (notasquid@moz-n20.nku.227.110.IP) has joined #rust-beginners
2018-09-21 17:31:55	ZeroWalker	mbrubeck, oh, hmm, wait a sec, when  did it arrive to nightly, was it very recently?
2018-09-21 17:32:24	<--	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 17:32:27	-->	ubuntourist (kjcole@moz-sforbn.cgn.spcsdns.net) has joined #rust-beginners
2018-09-21 17:32:31	@mbrubeck	ZeroWalker: What's "it" in this case?  The 2018 Edition preview, or the `const_vec_new` feature?
2018-09-21 17:32:36	--	Grilinctus is now known as Aankhen``
2018-09-21 17:33:10	-->	flabbergaster (Mibbit@moz-ilg.jmr.159.109.IP) has joined #rust-beginners
2018-09-21 17:33:11	<--	flabbergaster (Mibbit@moz-ilg.jmr.159.109.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 17:33:12	ZeroWalker	in my case i must say 2018 it much easier to share function and stuff between your modules etc. Now i am quite sure it's not a feature in itself, but rather that it's easier to work with which makes me.. well get it to work ;P
2018-09-21 17:33:19	@mbrubeck	The 2018 Edition release candidate is available on the beta channel as of yesterday.
2018-09-21 17:33:30	ZeroWalker	the 2018 itself
2018-09-21 17:33:53	ZeroWalker	cause i know it's been on nightly before, and as it got to beta yesterday, i wanted to see if the dates make sense
2018-09-21 17:34:11	@mbrubeck	Stuff isn't enabled on beta until it's stabilized or (or in this case, uniquely, very close to stabilizing)
2018-09-21 17:34:34	ZeroWalker	ah okay, so it's not "okay now the nightly of this date becomes the new beta"
2018-09-21 17:34:43	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-21 17:35:22	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:35:24	-->	Urania (textual@moz-82n.h1m.1.35.IP) has joined #rust-beginners
2018-09-21 17:35:40	@mbrubeck	Right.  The *code* for nightly becomes the new beta, but it's no longer compiled with unstable features enabled.
2018-09-21 17:35:41	ZeroWalker	well then i might go with the beta now i guess, but duno, kinda like using nightly as i can try stuff out. But it's messy with RLS, but then again RLS is messy for me all the time sadly
2018-09-21 17:35:43	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:36:04	ZeroWalker	oh, so it's really a "copy paste" just with the unstable disabled?
2018-09-21 17:36:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 17:36:08	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:36:18	@mbrubeck	Yeah
2018-09-21 17:36:19	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:36:20	ZeroWalker	makes it easier to understand as it's in sync
2018-09-21 17:36:54	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:36:56	ZeroWalker	was thinking, maybe it's different lines and stuff (duno how it's usually handles with branches like this). But in that case even i understand it!
2018-09-21 17:37:08	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:37:10	ZeroWalker	did vec make it to beta?
2018-09-21 17:37:18	ZeroWalker	const vec static sthing
2018-09-21 17:37:40	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:37:49	-->	mib_fe3lpu (Mibbit@moz-ca2.d7b.49.176.IP) has joined #rust-beginners
2018-09-21 17:37:52	<--	mib_fe3lpu (Mibbit@moz-ca2.d7b.49.176.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 17:37:54	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:38:26	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:38:31	-->	sono (Mibbit@moz-okfb6j.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-21 17:38:40	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:38:50	@mbrubeck	ZeroWalker: No, it's not stable and isn't part of the 2018 preview. https://github.com/rust-lang/rust/issues/24111
2018-09-21 17:38:57	<--	liquidnight (marcus@moz-1jvmti.mdkm.1vl7.0c22.2a01.IP) has quit (Connection closed)
2018-09-21 17:39:10	ZeroWalker	ah okay
2018-09-21 17:39:12	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:39:26	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:39:49	@mbrubeck	err, hmm, there's no specific tracking issues for that one. :/
2018-09-21 17:39:50	ZeroWalker	would be ideal to make it go away in my case anyhow as i am assuming it's best to not go unsafe
2018-09-21 17:39:59	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:40:05	ZeroWalker	oh like, issues that they know it's causing?
2018-09-21 17:40:13	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:40:22	@mbrubeck	no, just an issue tracking the stabilization process
2018-09-21 17:40:26	@mbrubeck	Anyway, yeah, don't use global mutable state.  :)
2018-09-21 17:40:45	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:40:49	-->	enterprisey (enterprisey@moz-alem99.cit.cornell.edu) has joined #rust-beginners
2018-09-21 17:40:56	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:41:09	ZeroWalker	ah
2018-09-21 17:41:14	<--	enterprisey (enterprisey@moz-alem99.cit.cornell.edu) has quit (Quit: Leaving)
2018-09-21 17:41:30	ZeroWalker	yeah never been a good thing, even when you know it should be all fine
2018-09-21 17:41:31	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:41:42	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 17:41:54	ZeroWalker	it's one of those simple solutions that just work, dangerous!
2018-09-21 17:42:18	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:42:19	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:42:25	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-21 17:43:00	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-21 17:44:02	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-21 17:46:54	awygle	mbrubeck: ah OK. I thought it would need to be part of modules. Are we getting rid of #[macro_use] or whatever it is? I thought there was some macro change
2018-09-21 17:47:20	@mbrubeck	yeah
2018-09-21 17:47:37	@mbrubeck	https://rust-lang-nursery.github.io/edition-guide/rust-2018/macros/macro-changes.html
2018-09-21 17:47:38	Arnavion	macro_use is still needed for older macros that have references to other macros in their crate
2018-09-21 17:48:03	Arnavion	(... and don't opt in to the "assume all references to macros from my expansion come from my crate" feature)
2018-09-21 17:48:07	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-21 17:48:17	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 17:48:37	@mbrubeck	heh, there's a typo on that page (#[macro_rules] should be #[macro_use])
2018-09-21 17:48:46	Arnavion	If you're only using macros without unqualified references to other macros from their crate, or if you're writing new macros that can take advantage of that, then you don't need macro_use
2018-09-21 17:50:23	@mbrubeck	https://github.com/rust-lang-nursery/edition-guide/pull/110
2018-09-21 17:51:21	-->	masonk (mason@moz-tuvq7p.ca.comcast.net) has joined #rust-beginners
2018-09-21 17:52:01	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:52:09	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-21 17:53:44	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:55:00	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 17:55:21	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 17:55:37	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Connection closed)
2018-09-21 17:55:57	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-21 17:56:42	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:57:15	<--	Urania (textual@moz-82n.h1m.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 17:58:18	awygle	the "only works for other people's macros" thing is weird. i'm sure there's a good reason though...
2018-09-21 17:59:31	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 17:59:55	-->	slimer (Mibbit@moz-tb3.lit.149.169.IP) has joined #rust-beginners
2018-09-21 18:00:23	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 18:00:58	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 18:01:15	-->	xorcon (Mibbit@moz-s8o.s62.74.96.IP) has joined #rust-beginners
2018-09-21 18:01:25	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-21 18:01:46	xorcon	https://play.rust-lang.org/?gist=510ccf5cc417f89d221d9b91cff30b4c&version=stable&mode=debug&edition=2015
2018-09-21 18:01:59	xorcon	can some one explain the error having hard time undesrstanding
2018-09-21 18:02:05	xorcon	understanding 
2018-09-21 18:02:11	xorcon	im a novice
2018-09-21 18:02:57	<--	Guest4 (textual@moz-rm1.kn1.111.42.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-21 18:04:12	stephaneyfx	xorcon: https://play.rust-lang.org/?gist=94a5afe36659159c331f58d42c6c22ef&version=stable&mode=debug&edition=2015
2018-09-21 18:04:18	orph	is rust going to switch to crossbeam-channel from mpsc? should i just building using that now?
2018-09-21 18:04:43	awygle	you know how python has multiprocessing, where it will just take a python function and run it in a new process? don't suppose rust has anything like that?
2018-09-21 18:04:44	xorcon	ok that makes sense
2018-09-21 18:05:08	stephaneyfx	xorcon: To understand why, you can look at the types implementing Pattern and check that String is not one of them: https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html
2018-09-21 18:05:15	xorcon	I tried that but didn't reference the query in contains I just passed it 
2018-09-21 18:06:08	-->	Urania (textual@moz-82n.h1m.1.35.IP) has joined #rust-beginners
2018-09-21 18:06:23	@mbrubeck	orph: maybe, but no immediate plans.  See https://users.rust-lang.org/t/replace-channel-with-crossbeam-channel/17798
2018-09-21 18:06:43	@mbrubeck	orph: Feel free to use crossbeam-channel now
2018-09-21 18:07:05	<--	xorcon (Mibbit@moz-s8o.s62.74.96.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 18:07:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 18:07:44	@mbrubeck	Servo just switched to crossbeam-channel
2018-09-21 18:08:33	drager	I'm having some trouble with slog. Error and relevant code; https://gist.github.com/drager/9f1ff1bf9f06c43ec797babdb1adf9ca
2018-09-21 18:08:50	slimer	I currently use linux and want to cross compile my code to windows to be able to play audio ... is there an audio library available for it ?
2018-09-21 18:09:05	Yaniel	!crate cpal
2018-09-21 18:09:05	+rustbot	cpal (0.8.2) - Low-level cross-platform audio playing library in pure Rust. -> https://crates.io/crates/cpal <https://docs.rs/cpal>
2018-09-21 18:09:05	<--	moltonel (moltonel@moz-537.aik.43.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 18:09:24	-->	jbradberry (jrb@moz-gvi5fm.biz.rr.com) has joined #rust-beginners
2018-09-21 18:09:24	Yaniel	or if you want something higher level, {!crate rodio}
2018-09-21 18:09:24	+rustbot	rodio (0.8.1) - Audio playback library -> https://crates.io/crates/rodio <https://docs.rs/rodio>
2018-09-21 18:10:09	slimer	Yaniel: I just want to play a sound
2018-09-21 18:10:50	Yaniel	rodio should be fine then?
2018-09-21 18:11:09	Yaniel	check the example snippets in the docs
2018-09-21 18:11:48	slimer	Yaniel: I have no idea about songs
2018-09-21 18:11:53	slimer	*audio
2018-09-21 18:12:05	Yaniel	> chech the snippets in the docs
2018-09-21 18:12:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 18:12:26	Yaniel	let source = rodio::Decoder::new(BufReader::new(file)).unwrap();
2018-09-21 18:12:28	Yaniel	rodio::play_raw(&device, source.convert_samples());
2018-09-21 18:12:32	Yaniel	looks simple enough IMHO
2018-09-21 18:13:44	orph	@mbrubeck i'm running into various problems with mpsc, and i don't know if i just need to learn the model better or use something else. also select across multiple channels seems deprecated?
2018-09-21 18:13:55	Yaniel	(I have to admit that I'm slightly biased when it comes to audio things thouhg)
2018-09-21 18:14:39	slimer	I use rodio currently but it does not seem to work on windows when I cross compile 
2018-09-21 18:15:02	@mbrubeck	orph: Yeah, you should definitely use crossbeam-channel if you want `select!`
2018-09-21 18:15:21	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-09-21 18:15:29	orph	@mbrubeck for instance, i want to pass a Receiver into a thread, but have the consumer thread created through start/stop on the main thread. but once i pass the Receiver into the worker thread, I don't think there's a way to get it "back out" to send to another worker thread later
2018-09-21 18:15:35	@mbrubeck	orph: This was a major motivation for Servo's switch https://github.com/servo/servo/pull/21325
2018-09-21 18:15:55	<--	dinfuehr (dinfuehr@moz-qq783k.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-21 18:17:39	orph	@mbrubeck does that particular problem make sense? or am i misunderstanding something. how do people work around that with mpsc?
2018-09-21 18:17:39	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-21 18:17:39	@mbrubeck	orph: Typically the parent thread would keep a copy of the Receiver around so it can clone it whenever it creates a new child thread.
2018-09-21 18:17:39	orph	@mbrubeck right but Receivers aren't cloneable
2018-09-21 18:17:39	@mbrubeck	oh wait, sorry, I mixed up receiver/sender
2018-09-21 18:18:32	orph	I guess use an Arc?
2018-09-21 18:18:34	Rembane	Hm...
2018-09-21 18:18:34	@mbrubeck	Do you need multiple worker threads to have access to the Receiver, or just one at a time?
2018-09-21 18:18:34	@mbrubeck	If the former, you should look for a MPMC library
2018-09-21 18:18:34	-->	dinfuehr (dinfuehr@moz-pi69pd.highway.telekom.at) has joined #rust-beginners
2018-09-21 18:18:38	orph	@mbrubeck let's assume one worker thread for now
2018-09-21 18:19:11	@mbrubeck	Yeah, you could use an `Arc<Mutex<Receiver>>` or `&Mutex<Receiver>` shared across threads
2018-09-21 18:19:23	@mbrubeck	or you could move the Receiver back out of the thread when it no longer needs it
2018-09-21 18:19:31	@mbrubeck	by returning it from the thread, or by sending it back on another channel
2018-09-21 18:20:17	orph	oh! you can return things from threads?! which have previously been moved into the thread?
2018-09-21 18:21:04	-->	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-21 18:22:17	@mbrubeck	yes
2018-09-21 18:22:24	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 18:22:45	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 18:23:46	@mbrubeck	orph: The return value is returned when you .join() the thread
2018-09-21 18:24:06	@mbrubeck	May not work for a long-running thread where you never join it
2018-09-21 18:24:28	orph	ahh super cool!  i would still need an exit signal for the thread to know when to exit it's `recv` loop and complete the join.
2018-09-21 18:25:34	orph	which would have to come via the same channel since i can't select
2018-09-21 18:27:01	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 18:27:42	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-21 18:27:50	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 18:28:10	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-21 18:30:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 18:30:33	slimer	I can play audio audio from a funtion in rust ? Currently if I remove the audio playing code to funtion and call the code it does not play the audio ... I use rodio 
2018-09-21 18:30:55	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-21 18:31:16	@mbrubeck	slimer: All Rust code is in functions... there's no way to run anything *not* in a function.
2018-09-21 18:32:39	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 18:33:42	-->	Grilinctus (notasquid@moz-cqe.k3h.207.49.IP) has joined #rust-beginners
2018-09-21 18:34:25	<--	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 18:34:39	--	Grilinctus is now known as Aankhen``
2018-09-21 18:34:42	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 18:36:50	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 18:37:01	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-21 18:37:02	slimer	mbrubeck: it simple does not play the audio unless and until the audio code is in main function
2018-09-21 18:37:28	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 18:38:40	@mbrubeck	slimer: It's probably stopping the sound when the function returns, because it's dropping the rodio::Sink
2018-09-21 18:39:00	@mbrubeck	slimer: You could create the Sink outside the function and pass it in by reference (so it outlives the function call)
2018-09-21 18:39:05	@mbrubeck	slimer: or return it from the function
2018-09-21 18:39:15	@mbrubeck	slimer: or use Sink::detach https://docs.rs/rodio/0.8.1/rodio/struct.Sink.html#method.detach
2018-09-21 18:40:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 18:41:04	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 18:41:30	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 18:42:02	-->	enterprisey (enterprisey@moz-alem99.cit.cornell.edu) has joined #rust-beginners
2018-09-21 18:42:05	<--	enterprisey (enterprisey@moz-alem99.cit.cornell.edu) has quit (Connection closed)
2018-09-21 18:42:48	slimer	mbrubeck: thanks
2018-09-21 18:42:56	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 18:44:05	<--	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 18:44:21	<--	faitswulff (faitswulff@moz-rur14p.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 18:44:44	-->	faitswulff (faitswulff@moz-rur14p.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-21 18:45:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 18:45:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 18:46:19	-->	maksim (maksim@moz-he03ei.at.cox.net) has joined #rust-beginners
2018-09-21 18:46:45	maksim	what's a really light way to implement html templating? like i literally have 1-2 html files i need to interpolate 
2018-09-21 18:47:02	maksim	reluctant to use a full-fledged templating engine for something lke that
2018-09-21 18:47:53	-->	proc (aron@moz-9b1bju.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 18:48:03	@mbrubeck	maksim: run `str::replace` on the template contents?
2018-09-21 18:48:39	maksim	yea i think of that (using some kind of control chars like $#$) but i was wondering if there was something built in that was smarter
2018-09-21 18:48:45	<--	faitswulff (faitswulff@moz-rur14p.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 18:48:54	maksim	for example if i read a string from a file that has {} in it can i use format! ?
2018-09-21 18:49:07	maksim	or are {} read in with escapes?
2018-09-21 18:49:07	@mbrubeck	You could use Rust's built-in string interpolation but only if you include the templates into your Rust source as string literals
2018-09-21 18:49:18	@mbrubeck	e.g. using https://doc.rust-lang.org/std/macro.include_str.html
2018-09-21 18:49:19	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 18:49:20	<--	re-l124c41 (re-l124c41@moz-kr0b11.4kh6.ni31.0908.2a02.IP) has quit (Connection closed)
2018-09-21 18:49:23	maksim	yea because format! is compile time right?
2018-09-21 18:49:29	@mbrubeck	yeah
2018-09-21 18:49:32	maksim	i want to read real time
2018-09-21 18:50:05	@mbrubeck	There are run-time versions, but that's basically the same as using a template library... https://crates.io/crates/runtime-fmt
2018-09-21 18:50:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 18:50:18	@mbrubeck	oops, and that one is nightly-only
2018-09-21 18:50:36	maksim	that's fine i don't have a problem compiling on nightly
2018-09-21 18:51:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 18:53:07	maksim	mbrubeck,     email_body.replace("{personality}", personality); doesn't work
2018-09-21 18:53:12	maksim	where in my template i have {personality}
2018-09-21 18:53:22	maksim	do the braces need to be escaped?
2018-09-21 18:53:32	@mbrubeck	note that `replace` doesn't mutate the original string
2018-09-21 18:53:34	@mbrubeck	it returns a new one
2018-09-21 18:53:37	maksim	ah
2018-09-21 18:53:45	-->	kido (satori@moz-a21vmc.moe) has joined #rust-beginners
2018-09-21 18:54:20	maksim	cool! thanks mbrubeck 
2018-09-21 18:54:32	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-21 18:54:48	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-21 18:55:09	-->	re-l124c41 (re-l124c41@moz-48q2ti.4kh6.ni31.0908.2a02.IP) has joined #rust-beginners
2018-09-21 18:55:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 18:56:01	-->	enterprisey (enterprisey@moz-alem99.cit.cornell.edu) has joined #rust-beginners
2018-09-21 18:56:03	<--	enterprisey (enterprisey@moz-alem99.cit.cornell.edu) has quit (Connection closed)
2018-09-21 18:56:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 18:58:16	justsomequestions	CLion (Intellij Idea) somehow manages to even go to the .cargo directory and then find definitions of my extern crates when I do go to definition
2018-09-21 18:58:40	maksim	CLion is great
2018-09-21 18:58:41	maksim	a little slow
2018-09-21 18:58:42	maksim	but great
2018-09-21 18:58:44	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-21 18:58:44	justsomequestions	is there any chance to get similar behaviour in vscode?
2018-09-21 18:59:32	justsomequestions	maksim: yeah it is pretty nice but I wanted to give vscode a chance too as it seems that everyone here is team vscode :D
2018-09-21 18:59:39	justsomequestions	ok and some emacs
2018-09-21 19:00:02	maksim	the first thing that pisses me off about vscode is the vim bindings
2018-09-21 19:00:11	maksim	which intellij gets pretty damn close to correct
2018-09-21 19:00:18	-->	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 19:00:42	justsomequestions	what do you mean?
2018-09-21 19:00:49	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 19:00:51	justsomequestions	vscode feels very inspired by vim bindings to me
2018-09-21 19:00:55	justsomequestions	but vim is a while ago for me
2018-09-21 19:01:05	maksim	i used vim bindings in all editors that allow me
2018-09-21 19:01:35	maksim	vscode for example undoes 2-3 previous edits when hitting u
2018-09-21 19:01:37	maksim	rather than 1
2018-09-21 19:01:41	-->	faitswul_ (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 19:03:04	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 19:03:27	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-21 19:04:09	-->	mohawk (Mibbit@moz-gpq6s9.rev.numericable.fr) has joined #rust-beginners
2018-09-21 19:04:19	mohawk	Hello
2018-09-21 19:04:20	<--	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:04:24	maksim	hello
2018-09-21 19:04:27	mohawk	I have a question related to some code design
2018-09-21 19:04:57	dpc1	mohawk: go ahead
2018-09-21 19:05:10	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-21 19:05:28	mohawk	which is better suited for rust, making a trait impl that has internal state and a convention about a method reset() that resets that internal state for reuse, or having a stateless trai impl that returns the state that can be repassed on future calls?
2018-09-21 19:05:50	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-21 19:05:54	maksim	depends on how big your app is
2018-09-21 19:06:02	mohawk	My issue with using a state parameter is I don't know if it's possible for multiple trait impls/clojures if it's possible to store different types of state and repass them to the appropriate trait/closure in a type-safe way
2018-09-21 19:06:17	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-21 19:06:38	maksim	mohawk, why do you have different types of state?
2018-09-21 19:06:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 19:07:07	-->	spear3 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-21 19:07:09	mohawk	well I haven't made this yet, but when thinking about it it might be necessary
2018-09-21 19:07:12	<--	spear3 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-21 19:07:25	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 19:07:48	maksim	in my imagination you have one big state object
2018-09-21 19:07:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 19:08:03	mohawk	I am looking into making a lexer, and having a trait that represents the recognizion of a particular lexical unit, so I was thinking either each impl has an internal state and I can call reset on them, or they give me a state that I give it back to them on each call and discard when I don't have a match or have a full match etc
2018-09-21 19:08:17	-->	BearOfJade1 (Thunderbird@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-21 19:09:18	maksim	lexer = tokenizer?
2018-09-21 19:09:21	maksim	==
2018-09-21 19:09:23	mohawk	I think that only having the accumulator of the partial match and the current character to match should be sufficient, but I am not sure
2018-09-21 19:09:25	mohawk	yes
2018-09-21 19:09:47	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:09:50	mohawk	but I don't know if in terms of code it's good, for example if you know the partial match is "test and current char is " you can deduct that you've already matches the initial "
2018-09-21 19:10:13	mohawk	but somehow I think having an explicit state might be better
2018-09-21 19:10:14	 *	mohawk shrugs
2018-09-21 19:10:53	maksim	what lexing algo are you using? table or recursive descent?
2018-09-21 19:11:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:11:11	maksim	(i'm out of my depth here mostly - i did write a recursive descent parser in grad school but it's been a while)
2018-09-21 19:11:51	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-21 19:11:53	mohawk	well I don't think the lexing will be recursive, it's before parsing
2018-09-21 19:12:03	maksim	oh yes you're right
2018-09-21 19:12:18	maksim	sorry got confused for a second
2018-09-21 19:12:31	maksim	yes i don't know why you need state per tokenizer
2018-09-21 19:12:49	maksim	it's just a big state machine right?
2018-09-21 19:12:58	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-21 19:13:35	mohawk	basically I want a trait something like this match(partialMath : &str, current_char: char) -> Match ( None, Partial, Full) and I want to grow strings, and have registered analyzers and just run a match on each then filter all the ones that don't parse, check if there is a full match then repeat while either I get a full match or I go to end of string
2018-09-21 19:14:08	-->	enterprisey (enterprisey@moz-alem99.cit.cornell.edu) has joined #rust-beginners
2018-09-21 19:14:24	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-21 19:14:24	mohawk	my issue is more with how to implement a trait that recognizes a lexical unit, initially I wanted it to have an internal state and I call reset on each to reuse them, but I was thinking that no state at all could work, since you can deduce where you are by the partially accumulated string and current char
2018-09-21 19:14:53	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 19:14:54	mohawk	maksim: well if you match a "anything here " you need to know if you're at first " in the middle and end "
2018-09-21 19:15:05	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-21 19:15:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 19:15:33	maksim	mohawk, sorry one sec
2018-09-21 19:16:08	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:17:55	<--	dalley (dalley@moz-5ib9oe.res.spectrum.com) has quit (Ping timeout: 121 seconds)
2018-09-21 19:18:12	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 19:18:34	<--	BearOfJade1 (Thunderbird@moz-ua1m7r.wireless.uvic.ca) has quit (Client exited)
2018-09-21 19:19:09	<--	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has quit (Connection closed)
2018-09-21 19:19:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:19:28	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 19:20:18	<--	GenghisJohn (GenghisJohn@moz-crk71v.user.start.ca) has quit (Ping timeout: 121 seconds)
2018-09-21 19:20:45	<--	ubuntourist (kjcole@moz-sforbn.cgn.spcsdns.net) has quit (Connection closed)
2018-09-21 19:21:31	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 19:22:17	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-21 19:23:20	<--	matt-h (matt-h@moz-t1ckfj.biz.rr.com) has quit (The TLS connection was non-properly terminated.)
2018-09-21 19:23:21	-->	check_mate (Mibbit@moz-347.pd1.249.45.IP) has joined #rust-beginners
2018-09-21 19:24:34	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-21 19:26:19	drager	I'm having some trouble with slog. Error and relevant code; https://gist.github.com/drager/9f1ff1bf9f06c43ec797babdb1adf9ca Any ideas?
2018-09-21 19:26:31	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 19:29:49	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-21 19:30:41	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:33:44	justsomequestions	if I have a line like this: let ctx = &mut cb.build().unwrap() and cb.build returns a struct who is now the owner of the struct?
2018-09-21 19:33:51	justsomequestions	if it is directly only saved as reference?
2018-09-21 19:34:09	-->	UnlawfulMonad (unlawfulm@moz-65qdhr.ltu1.t7vv.a880.2604.IP) has joined #rust-beginners
2018-09-21 19:34:21	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:34:59	-->	blackgoat (blackgoat@moz-vr5.k72.224.211.IP) has joined #rust-beginners
2018-09-21 19:35:13	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-21 19:36:13	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-21 19:36:45	<--	misdreavus (qm@moz-k1oktq.quietmisdreavus.net) has quit (Quit: server updates)
2018-09-21 19:38:57	<--	slimer (Mibbit@moz-tb3.lit.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 19:40:15	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-21 19:41:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 19:41:44	-->	matt-h (matt-h@moz-t1ckfj.biz.rr.com) has joined #rust-beginners
2018-09-21 19:41:59	-->	misdreavus (qm@moz-k1oktq.quietmisdreavus.net) has joined #rust-beginners
2018-09-21 19:42:35	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-21 19:43:28	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-21 19:44:21	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-21 19:44:24	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-21 19:44:30	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-21 19:45:12	-->	liquidnight (marcus@moz-1jvmti.mdkm.1vl7.0c22.2a01.IP) has joined #rust-beginners
2018-09-21 19:45:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:47:39	-->	pingwin (brian@moz-r6puto.res.rr.com) has joined #rust-beginners
2018-09-21 19:48:47	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-21 19:50:30	<--	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 19:55:02	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 19:56:03	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-21 19:58:48	-->	mib_juksdo (Mibbit@moz-b80g1e.abhsia.telus.net) has joined #rust-beginners
2018-09-21 19:59:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 19:59:24	<--	mib_juksdo (Mibbit@moz-b80g1e.abhsia.telus.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 19:59:37	-->	Arcaelyx_ (Arcaelyx@moz-vvba2c.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-09-21 20:00:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:00:29	-->	Fold (Mibbit@moz-bub.ipm.6.209.IP) has joined #rust-beginners
2018-09-21 20:00:31	-->	nico (nico@moz-1gdj74.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 20:00:40	Eric-M	Hi folks, is there a way to host our own crates.io repository, something like Sonatype Nexus?
2018-09-21 20:00:44	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 20:00:57	<--	Arcaelyx (Arcaelyx@moz-l5o5ff.77ht.vv5c.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 20:01:05	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-21 20:02:05	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-21 20:03:15	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-21 20:04:13	nico	Eric-M I recommend you read the following article about alternative registries https://boats.gitlab.io/blog/post/2017-10-28-alternative-registries/
2018-09-21 20:04:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:04:42	<--	mohawk (Mibbit@moz-gpq6s9.rev.numericable.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 20:05:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:05:21	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-21 20:05:57	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-21 20:07:41	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-21 20:08:42	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-21 20:08:53	nico	Is there a way to enable certain features of a dependency by default in Cargo.toml?
2018-09-21 20:09:03	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-21 20:09:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:09:49	@mbrubeck	nico: Do you want them to be always enabled, or enabled by default but possible to disable?
2018-09-21 20:10:10	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 20:10:13	@mbrubeck	For "always enabled" use `[depencies] foo = { version = "1.0", features = ["some_feature"] }`
2018-09-21 20:10:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:10:31	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 20:10:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 20:10:58	@mbrubeck	for "enabled by default" use `[features] default = ["foo/some_feature"]`
2018-09-21 20:11:31	@mbrubeck	or possibly https://paste.rs/5Ae
2018-09-21 20:12:43	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 20:13:07	-->	Guest4 (textual@moz-f57q0d.h786.dhr0.3a80.2402.IP) has joined #rust-beginners
2018-09-21 20:13:18	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-21 20:13:59	nico	@mbrubeck I've tried the first one, it does compile but changes the behaviour of the library
2018-09-21 20:14:32	@mbrubeck	nico: How so?
2018-09-21 20:14:41	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 20:14:41	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:14:53	@mbrubeck	All of these should have the same effect in a default build:  "foo" will be compiled with the "some_feature" feature enabled.
2018-09-21 20:15:13	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 20:15:13	<--	maksim (maksim@moz-he03ei.at.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:16:00	nico	@mbrubeck should they still work `#[cfg(all(feature="myfeature"))]` annotations in my code? I think that's what's going wrong
2018-09-21 20:16:14	nico	*trigger, not work
2018-09-21 20:17:00	@mbrubeck	nico: In which code?  The dependency or the crate that depends on it?
2018-09-21 20:17:23	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Connection closed)
2018-09-21 20:17:32	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-21 20:17:36	@mbrubeck	All of them enable "some_feature" in the "foo" dependency, but only the last one (https://paste.rs/5Ae ) sets a feature in the crate that depneds on it.
2018-09-21 20:20:16	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 20:20:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:21:14	nico	@mbrubeck: I think I need to do go back and do some more testing, this is all a bit confusing right now and I'd like to be able to at least properly explain my issue to you
2018-09-21 20:21:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:21:56	nico	I'm going to try the last one too, thank you
2018-09-21 20:21:57	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 20:25:31	-->	mib_y21z4r (Mibbit@moz-2be.etk.51.106.IP) has joined #rust-beginners
2018-09-21 20:25:37	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-21 20:25:39	-->	simonadameit (simonadamei@moz-brno35.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 20:25:55	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:25:59	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 20:26:21	<--	simonadameit (simonadamei@moz-brno35.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-21 20:26:24	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 20:26:38	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:27:07	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-21 20:27:11	-->	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 20:27:53	<--	simonadameit (simonadamei@moz-c2pkqm.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-21 20:28:14	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 20:28:35	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 20:28:43	-->	jedahan (textual@moz-4bstbi.res.rr.com) has joined #rust-beginners
2018-09-21 20:29:08	<--	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-21 20:29:32	<--	sono (Mibbit@moz-okfb6j.dynamic.kabel-deutschland.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 20:29:36	<--	Fold (Mibbit@moz-bub.ipm.6.209.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 20:29:58	<--	nico (nico@moz-1gdj74.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.9.1)
2018-09-21 20:30:23	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-21 20:31:49	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Connection closed)
2018-09-21 20:32:01	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-21 20:32:02	mib_y21z4r	Hi I am trying to impl a Blank trait for an Option<T>. It will have just one function is_blank(), which will check 
2018-09-21 20:32:17	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-21 20:32:42	Lumpio-	Is Blank your own trait or does it come from some external crate?
2018-09-21 20:32:45	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:32:56	mib_y21z4r	1. if T is string then whether T is empty string. 2. if T is i32 whethere it's 0.
2018-09-21 20:33:06	mib_y21z4r	Mine.
2018-09-21 20:33:30	mib_y21z4r	It'll be kinda a replacement for is_none().
2018-09-21 20:33:59	Lumpio-	tbh that sounds like it's kind of trying to beat the purpose of Option
2018-09-21 20:34:14	Lumpio-	Why would you want two "empty" values, None and Some("") ?
2018-09-21 20:34:25	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-21 20:35:07	@mbrubeck	mib_y21z4r: and if the option is `None` does it return true or false?
2018-09-21 20:35:50	<--	zako (zako@moz-tlmnl8.dynamicip.rima-tde.net) has quit (Connection closed)
2018-09-21 20:36:05	mib_y21z4r	We have apis in rust in which lets say we if we don't receive a parameter we want to return Error. So currently we do something like  if a.is_none() || a == Some("") return Err.
2018-09-21 20:36:26	Lumpio-	Why not make the parameter not an Option then
2018-09-21 20:36:38	@mbrubeck	mib_y21z4r: You could do something like https://play.rust-lang.org/?gist=355e57bc2ac79d39ee5bec5b1c61c67d&version=stable&mode=debug&edition=2015
2018-09-21 20:36:40	Lumpio-	If it's... not optional
2018-09-21 20:37:04	<--	Urania (textual@moz-82n.h1m.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 20:37:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:37:30	-->	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-21 20:37:39	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:40:00	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-21 20:40:09	-->	Urania (textual@moz-82n.h1m.1.35.IP) has joined #rust-beginners
2018-09-21 20:40:35	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 20:41:02	mib_y21z4r	mbrubeck yup that looks like it. thanks a ton. Hope I can some day write code in rust as fast as this. 
2018-09-21 20:41:03	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 20:41:13	<--	gunnarniels (quassel@moz-d8863v.redhat.com) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2018-09-21 20:41:18	<--	Guest4 (textual@moz-f57q0d.h786.dhr0.3a80.2402.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 20:41:45	-->	mib_v3ktra (Mibbit@moz-apvqi2.ad.twosigma.com) has joined #rust-beginners
2018-09-21 20:42:07	mib_v3ktra	Halp: https://play.rust-lang.org/?gist=3bba5b8f59e979c7340ca89c611c31e4&version=stable&mode=debug&edition=2015
2018-09-21 20:42:19	mib_v3ktra	How do I make this lock guard that contains both sub-lock guards?
2018-09-21 20:42:25	mib_v3ktra	I can't figure out this last lifetime bit
2018-09-21 20:42:50	<--	faitswul_ (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 20:44:31	mib_v3ktra	Basically there is a struct with "inner: RwLock<HashMap<u64, Mutex<Inner>>>", and I want to write this function lock_index(), which takes a read lock on the outer, and then locks the mutex, and returns a CustomGuard<Inner> which holds both of them until dropped
2018-09-21 20:45:05	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 20:46:09	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:46:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:47:08	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 20:47:21	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:48:22	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-21 20:48:34	<--	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-21 20:49:07	<--	Urania (textual@moz-82n.h1m.1.35.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 20:50:53	<--	enterprisey (enterprisey@moz-alem99.cit.cornell.edu) has quit (Ping timeout: 121 seconds)
2018-09-21 20:50:57	-->	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 20:51:17	<--	jbradberry (jrb@moz-gvi5fm.biz.rr.com) has quit (Quit: Leaving)
2018-09-21 20:51:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 20:52:51	-->	niconii (nicole@moz-aeo7a7.midco.net) has joined #rust-beginners
2018-09-21 20:52:51	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-21 20:53:38	@mbrubeck	mib_y21z4r: This is a variant of the "self-referential struct" problem
2018-09-21 20:53:40	stephaneyfx	mib_v3ktra: I think you can't really pack the RwLockReadGuard and MutexGuard together in a struct as the latter needs to borrow the former
2018-09-21 20:53:51	@mbrubeck	oops, mib_v3ktra not mib_y21z4r 
2018-09-21 20:54:14	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-21 20:54:19	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-21 20:54:22	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-21 20:54:39	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-21 20:55:09	@mbrubeck	The easiest solution might be to store only the RwLockReadGuard in the struct, and add a method to create the MutexGuard as needed
2018-09-21 20:55:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-21 20:56:34	-->	simonadameit (simonadamei@moz-brno35.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-21 20:58:01	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 20:58:44	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 20:58:47	<--	laalaa (asdf@moz-vfjfm8.dhcp.inet.fi) has quit (Ping timeout: 121 seconds)
2018-09-21 21:00:36	<--	simonadameit (simonadamei@moz-brno35.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-21 21:00:46	-->	maksim (maksim@moz-he03ei.at.cox.net) has joined #rust-beginners
2018-09-21 21:00:50	<--	maksim (maksim@moz-he03ei.at.cox.net) has quit (Connection closed)
2018-09-21 21:02:07	awygle	this feels like an "i'm a real dumbo" question, but, what's the difference between an owned variable and a mutably borrowed variable if there's only allowed to be 1 mutable borrow?
2018-09-21 21:02:55	<--	Aankhen`` (notasquid@moz-cqe.k3h.207.49.IP) has quit (Quit: Sorry, was AFK)
2018-09-21 21:02:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:03:04	-->	enterprisey (enterprisey@moz-fjjhvf.cit.cornell.edu) has joined #rust-beginners
2018-09-21 21:03:20	<--	jedahan (textual@moz-4bstbi.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 21:03:28	stephaneyfx	awygle: When the owner goes out of scope, the value is dropped
2018-09-21 21:03:32	-->	eyans (a@moz-c877d3.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-21 21:03:50	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 21:04:13	awygle	stephaneyfx: whereas when the mutable borrow goes out of scope it doesn't, i assume?
2018-09-21 21:04:21	stephaneyfx	awygle: That's right
2018-09-21 21:04:44	awygle	huh. i expected more difference than that lol
2018-09-21 21:04:56	@mbrubeck	awygle: They are very closely related.  In general you can take `fn(&mut T)` and transform it to `fn(T) -> T`
2018-09-21 21:05:05	Eric-M	<mozilla_nico "Eric I recommend you read the fo"> thanks a lot!
2018-09-21 21:05:17	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-21 21:06:43	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-21 21:07:13	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 21:07:31	<--	check_mate (Mibbit@moz-347.pd1.249.45.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 21:08:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:08:38	awygle	it's interesting that you can override [] but not .
2018-09-21 21:09:02	awygle	i suppose there's no real reason those should be similar but they feel like they live on the same abstraction level to me
2018-09-21 21:09:15	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-21 21:09:15	<--	eyans (a@moz-c877d3.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-21 21:10:18	@mbrubeck	The . "operator" does do auto-deref, so you can... sort of... overload its behavior with the Deref traits
2018-09-21 21:10:30	awygle	oh huh, interesting
2018-09-21 21:10:41	awygle	that sounds fairly evil
2018-09-21 21:10:43	awygle	but also kind of fun
2018-09-21 21:11:53	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 21:11:57	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-21 21:12:48	-->	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has joined #rust-beginners
2018-09-21 21:12:55	awygle	the thing that still consistently trips me up in rust, admittedly it's early days, that nobody seems to talk about is how structs are constructed
2018-09-21 21:13:42	nicoulaj	 /set irc.look.buffer_switch_autojoin off
2018-09-21 21:13:55	-->	bemeurer (bemeurer@moz-1hf.kr4.242.185.IP) has joined #rust-beginners
2018-09-21 21:14:09	dpc1	nicoulaj: ;)
2018-09-21 21:14:43	nicoulaj	sorry got tricked by that leading space :)
2018-09-21 21:14:44	bemeurer	Is there a way that I can, at compile time, determine the alignment of one struct, and then force the other struct to have the same alignment?
2018-09-21 21:14:52	<--	mib_v3ktra (Mibbit@moz-apvqi2.ad.twosigma.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 21:15:03	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 21:15:24	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 21:15:26	bemeurer	I tried writing a const fn that calls to std::mem::align_of() and then calling it inside `#[repr(align(align_of<Proxy>()))]` but it doesn't work
2018-09-21 21:15:30	bemeurer	it breaks the parser
2018-09-21 21:15:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 21:16:03	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 21:16:13	@mbrubeck	awygle: Anything in particular?  To my mind there's not much to talk about...
2018-09-21 21:16:26	bemeurer	This is pretty annoying; macros also don't work 
2018-09-21 21:17:27	@mbrubeck	bemeurer: The hack is to ensure your struct's first field is a zero-length array
2018-09-21 21:17:49	@mbrubeck	bemeurer: #[repr(C)] struct MyStruct { _align: [Proxy; 0], ... }
2018-09-21 21:17:57	bemeurer	mbrubeck: Like struct OpaqueThingamabob {hack: [int]}?
2018-09-21 21:18:08	awygle	mbrubeck: i think this might be a book bug, or a bug in the particular version of the book i'm looking at. there's no discussion of struct field visibility until like chapter 17? and coming from object oriented languages i expect "something like a constructor" which does exist, sort of, in that many structs have "new" methods, but there's no discussion of like... how to write one. 
2018-09-21 21:18:17	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-21 21:18:35	bemeurer	mbrubeck: Why does that do anything O.o
2018-09-21 21:18:41	awygle	(or at least i didn't find such a discussion when i went looking)
2018-09-21 21:19:03	@mbrubeck	awygle: Struct literals are the only built-in way to construct a struct: `Foo { x: 1, y: 2 }` (or `Foo(1, 2)` for tuple structs)
2018-09-21 21:19:18	@mbrubeck	awygle: Unlike C++, Rust doesn't have any sort of special syntax for constructor functions
2018-09-21 21:19:34	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:19:42	<--	prospector (prospector@moz-tl2.cn0.76.45.IP) has quit (Quit: Prospecting gems of CS)
2018-09-21 21:19:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:19:54	justsomequestions	if I have a line like this: let ctx = &mut cb.build().unwrap() and cb.build returns a struct who is now the owner of the struct?
2018-09-21 21:19:57	<--	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 21:20:01	justsomequestions	if it is directly only saved as reference
2018-09-21 21:20:04	@mbrubeck	awygle: It's just a convention to use the name `new` for a function that constructs and returns a new value of a type
2018-09-21 21:20:24	stephaneyfx	justsomequestions: An unnamed stack slot
2018-09-21 21:20:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 21:21:03	justsomequestions	stephaneyfx: do you see that from my example or bc u know the code is from ggez?
2018-09-21 21:21:18	awygle	mbrubeck: right, i figured that out, but it's very counterintuitive at first, or at least it was for me. and i'm still not clear on who _can_ construct a struct with a struct literal, in terms of visibility. is it "anybody in the same module", or...?
2018-09-21 21:21:29	justsomequestions	ah you mean the function stack in RAM?
2018-09-21 21:21:42	justsomequestions	so this code will automaticall create a local variable for that s.t. you can reference it?
2018-09-21 21:21:43	@mbrubeck	awygle: Yeah, it's interesting that struct fields are covered in chapter 7.2 ("Controlling visibility with pub")
2018-09-21 21:21:52	stephaneyfx	justsomequestions: You can think of it as `let mut _ctx = cb.build().unwrap(); let ctx = &mut _ctx;`
2018-09-21 21:22:04	awygle	mbrubeck: but they aren't even. there's no instance of the word "field" in that chapter.
2018-09-21 21:22:12	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-21 21:22:20	@mbrubeck	awygle: sorry, typo.  Mean't it's interesting they *aren't* covered
2018-09-21 21:22:24	justsomequestions	stephaneyfx: ok thank you, is there any part of the book that explains this?
2018-09-21 21:22:25	awygle	ah okay
2018-09-21 21:22:28	Lumpio-	awygle: Because a struct can only be constructed by specifying all the fields, they can only be constructed by whoever sees all the fields.
2018-09-21 21:22:39	Lumpio-	Which is at least the current module, but if everything is "pub" it can be other modules as well
2018-09-21 21:22:39	bemeurer	mbrubeck: ?
2018-09-21 21:22:52	@mbrubeck	awygle: Anyway, to answer your question, any use of a struct's field names (including for a struct literal) must be in a module where that field is visible
2018-09-21 21:23:05	stephaneyfx	justsomequestions: That I don't know. I found about it in blog posts or a RFC
2018-09-21 21:23:06	bemeurer	OH
2018-09-21 21:23:06	Lumpio-	Visibility can sometimes be a bit convoluted because you can have "pub" but the module itself is private and whatnot.
2018-09-21 21:23:07	bemeurer	I GET IT
2018-09-21 21:23:27	awygle	so can you put "pub" on a field? there's mention in 17.1 that just because you pub the struct doesn't mean the fields are pub...
2018-09-21 21:23:35	@mbrubeck	awygle: If the field is "pub" then it's visible anywhere the struct is.  If it's private, then it's visible within the module where it's defined (including in its submodules).
2018-09-21 21:23:42	-->	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 21:23:48	justsomequestions	stephaneyfx: ah ok, maybe I'll stumble upon it one day too, thanks
2018-09-21 21:23:51	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-21 21:23:57	@mbrubeck	awygle: And if it's "pub(something)" then it's visible in whatever the "something" refers to.
2018-09-21 21:24:12	justsomequestions	another question: Does anyone know how I get vscode jump to defintion to also check the .cargo folder for my extern crates (CLion does this by default)
2018-09-21 21:24:20	Lumpio-	Were there other pub's besides pub(crate)..?
2018-09-21 21:24:22	Lumpio-	I can't remember
2018-09-21 21:24:32	awygle	i don't think there's _any_ mention of pub on a field in the book. or at least it's not in 7.2 or 17.1.
2018-09-21 21:24:43	bemeurer	mbrubeck: This won't work, sadly :( 
2018-09-21 21:24:50	bemeurer	Because it explodes cbindgen
2018-09-21 21:25:18	awygle	the list of things that can be pub'd in 17.1 is "modules, types, functions, and methods"
2018-09-21 21:25:30	-->	faitswul_ (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 21:25:37	stephaneyfx	justsomequestions: Regarding your previous question, this section mentions it: https://doc.rust-lang.org/stable/reference/expressions.html#temporary-lifetimes
2018-09-21 21:25:55	awygle	there is one sentence "if we made list public instead" which technically implies that you can do that, but it's not spelled out afaict
2018-09-21 21:25:57	@mbrubeck	Lumpio-: pub(self), pub(super), pub(in path::to::module)
2018-09-21 21:26:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:26:24	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 21:26:28	Lumpio-	Oh I think I remember seeing pub(self) now that I think of it
2018-09-21 21:26:32	justsomequestions	stephaneyfx: many thanks
2018-09-21 21:26:33	Lumpio-	pub(in ...) is news to me heh
2018-09-21 21:26:39	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 21:26:39	@mbrubeck	awygle: yeah
2018-09-21 21:26:50	stephaneyfx	justsomequestions: many welcomes :)
2018-09-21 21:27:44	<--	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:28:05	awygle	oh hey, guess i can quit whining :p https://github.com/rust-lang/book/issues/1406
2018-09-21 21:28:50	Lumpio-	I don't think the way visibility works is entirely elegant in Rust tbh
2018-09-21 21:29:12	Lumpio-	I don't like the fact that I can't tell whether something is visible outside the crate or not by just looking at it for instance
2018-09-21 21:29:32	<--	faitswul_ (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:29:37	Lumpio-	Because it depends on whether the module it sits in and the module's parents are all public or whether it's "pub use"'d somewhere else or... you just can't know.
2018-09-21 21:30:07	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-21 21:30:37	awygle	yeah i agree. i find the whole module system baffling tbh, although maybe i'll like the 2018 one better? but i've never met a module system i actually like
2018-09-21 21:30:59	awygle	anytime i have to interact with python modules in a nontrivial way my blood pressure goes through the roof
2018-09-21 21:31:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:31:07	jeikobu	There's some RFC or similar to warn on things marked pub that aren't really (due to parents etc)
2018-09-21 21:31:08	-->	prospector (prospector@moz-tl2.cn0.76.45.IP) has joined #rust-beginners
2018-09-21 21:31:26	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-21 21:31:28	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 21:31:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 21:32:07	-->	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 21:32:12	<--	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 21:32:25	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 21:33:38	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-21 21:33:56	bemeurer	mbrubeck: Solved by using repr(align()) to the right number and adding a test that checks that they are correct
2018-09-21 21:34:36	jkt	So I tried running `cargo +nightly fix --edition` into my lib and it didn't make any changes. After amending the Cargo.toml I get warnings about trait and structs not being an external crate
2018-09-21 21:36:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:36:14	jkt	I think this might be related to me code generating parts of the code it's complaining about.
2018-09-21 21:36:27	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 21:36:39	jkt	Any pointers would be great
2018-09-21 21:37:27	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 21:38:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 21:39:08	-->	maksim (maksim@moz-he03ei.at.cox.net) has joined #rust-beginners
2018-09-21 21:39:11	dpc1	jkt: are they under feature gates?
2018-09-21 21:39:38	-->	mherstin (sp1ff@moz-lk4uju.u583.gjp6.0119.2620.IP) has joined #rust-beginners
2018-09-21 21:39:45	-->	Dariost (Dariost@moz-euo.lj4.20.151.IP) has joined #rust-beginners
2018-09-21 21:40:19	jkt	dpc1: Nope the code being generated is by a build.rs and getting injected into a lib.rs - the Struct is within the lib.rs that it's now complaining about not being in the generatedfile.rs
2018-09-21 21:40:19	<--	mherstin (sp1ff@moz-lk4uju.u583.gjp6.0119.2620.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 21:41:03	jkt	Perhaps the rules around generatedfile.rs have changed?
2018-09-21 21:41:19	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-21 21:42:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:43:24	-->	alx741 (alx741@moz-tgq.k67.178.186.IP) has joined #rust-beginners
2018-09-21 21:43:29	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 21:44:19	-->	sproing (Mibbit@moz-94n5re.pool.invitel.hu) has joined #rust-beginners
2018-09-21 21:44:36	-->	sp1ff (sp1ff@moz-lk4uju.u583.gjp6.0119.2620.IP) has joined #rust-beginners
2018-09-21 21:44:45	<--	sproing (Mibbit@moz-94n5re.pool.invitel.hu) has left #rust-beginners
2018-09-21 21:47:50	jkt	Also the cargo fix didn't seem to apply to other crates in my workspace either
2018-09-21 21:47:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 21:48:40	-->	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 21:49:15	-->	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-21 21:49:38	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 21:50:06	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-21 21:52:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:52:32	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-21 21:53:55	<--	hexjay (l@moz-a5kte8.isp.belgacom.be) has quit (Connection closed)
2018-09-21 21:54:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 21:56:47	jkt	Ah my initial issue appears not to be due to code generation.
2018-09-21 21:57:11	-->	dorfsmay (dorfsmay@moz-mqn.c2r.98.38.IP) has joined #rust-beginners
2018-09-21 21:57:47	jkt	https://play.rust-lang.org/?gist=aac3d0cf838a38ee1a3abd1ce41c7515&version=nightly&mode=debug&edition=2018 is the issue I have
2018-09-21 21:58:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 21:59:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 22:00:30	dpc1	yeh those you need to change to `crate::foo;`
2018-09-21 22:00:40	dpc1	but fix generally does that for you
2018-09-21 22:02:57	jkt	dpc1: ah cool I just learned about that. I guess being in code generation maybe it doesn't know about  scope
2018-09-21 22:03:15	jkt	it was a little odd that fix didn't work through my subcrates though
2018-09-21 22:03:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 22:04:47	dpc1	remember subcrates are treated as separate crates 
2018-09-21 22:05:32	<--	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-21 22:05:42	jkt	dpc1: doesn't workspaces make the cargo command work on all of them. cargo update does for example
2018-09-21 22:06:10	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-21 22:06:29	dpc1	i'm not sure how fix works for subcrates, but i was referring to the use statement issue you are facing
2018-09-21 22:08:09	-->	mayers (Mibbit@moz-mtgbdn.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-21 22:08:20	-->	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-21 22:08:24	jkt	Ah ok, the code generation is in a subcrate but the parent crate is where the code all ends up
2018-09-21 22:08:43	<--	mayers (Mibbit@moz-mtgbdn.sntcca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 22:09:04	jkt	I think the issue is likely the scope I put them in the crate:: thing I think is helping
2018-09-21 22:09:52	-->	DaQue__ (Mutter@moz-2q9.4hv.116.199.IP) has joined #rust-beginners
2018-09-21 22:10:15	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-21 22:10:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 22:11:28	<--	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:11:31	jkt	dpc1: yeah that fixed it adding crate:: to a few places
2018-09-21 22:11:34	jkt	thanks
2018-09-21 22:12:33	-->	DaQue___ (Mutter@moz-65hl5a.4ap6.qokt.0001.2600.IP) has joined #rust-beginners
2018-09-21 22:15:57	<--	DaQue__ (Mutter@moz-2q9.4hv.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:16:48	dpc1	jkt: np :)
2018-09-21 22:17:41	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:17:59	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-21 22:18:35	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-21 22:18:44	-->	mudpit (Mibbit@moz-ak8e4p.wireless.umass.edu) has joined #rust-beginners
2018-09-21 22:19:46	<--	mudpit (Mibbit@moz-ak8e4p.wireless.umass.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 22:20:20	<--	tvincent (tvincent@moz-ssa2kb.fbx.proxad.net) has quit (Connection closed)
2018-09-21 22:22:05	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:22:22	-->	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 22:22:37	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-21 22:22:53	-->	JAlbers_ (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 22:25:21	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-21 22:25:59	<--	dorfsmay (dorfsmay@moz-mqn.c2r.98.38.IP) has quit (Connection closed)
2018-09-21 22:26:04	<--	federico (federico@moz-f42.qua.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:26:24	<--	JAlbers (jalbers@moz-5mq2tr.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:26:53	-->	dorfsmay (dorfsmay@moz-mqn.c2r.98.38.IP) has joined #rust-beginners
2018-09-21 22:26:55	<--	JAlbers_ (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:26:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 22:27:11	<--	DaQue___ (Mutter@moz-65hl5a.4ap6.qokt.0001.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:27:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 22:27:46	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 22:28:08	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 22:28:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-21 22:29:16	<--	dorfsmay (dorfsmay@moz-mqn.c2r.98.38.IP) has quit (Connection closed)
2018-09-21 22:29:35	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 22:31:30	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-21 22:32:10	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 22:32:18	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-21 22:32:36	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-21 22:34:09	<--	D_ (D_@moz-v7iusd.adsl.inetia.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 22:34:53	-->	D_ (D_@moz-v7iusd.adsl.inetia.pl) has joined #rust-beginners
2018-09-21 22:35:11	-->	kulshrax (kulshrax@moz-fcat56.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-21 22:35:16	<--	kulshrax (kulshrax@moz-fcat56.8r4b.grs8.010d.2620.IP) has quit (Quit: Leaving...)
2018-09-21 22:35:34	-->	AtumT (IRC@moz-soe.d2s.113.187.IP) has joined #rust-beginners
2018-09-21 22:37:27	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 22:38:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 22:38:58	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-21 22:39:14	-->	greeenngrass (learning_so@moz-0951fj.mobile.att.net) has joined #rust-beginners
2018-09-21 22:40:19	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 22:42:04	-->	rsh (chatzilla@moz-obrqo6.8van.e53i.f2c0.2607.IP) has joined #rust-beginners
2018-09-21 22:42:53	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 22:43:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 22:44:12	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 22:46:22	<--	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (The TLS connection was non-properly terminated.)
2018-09-21 22:46:25	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-21 22:46:44	-->	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-21 22:47:53	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 22:48:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 22:48:55	<--	bemeurer (bemeurer@moz-1hf.kr4.242.185.IP) has quit (Quit: WeeChat 2.2)
2018-09-21 22:50:46	<--	faitswulff (faitswulff@moz-mk1dn0.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-21 22:54:34	<--	ufobat___ (Martin@moz-pu6v0s.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-21 22:57:03	<--	Aimai (Aimai@moz-ormsrn.dip0.t-ipconnect.de) has quit (Quit: Lost terminal)
2018-09-21 22:57:37	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 22:58:49	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-21 23:01:34	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-21 23:02:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 23:02:45	-->	thatsgobbles (lemoine@moz-taj9u4.oc.cox.net) has joined #rust-beginners
2018-09-21 23:02:47	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-21 23:03:05	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-21 23:03:29	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 23:03:38	thatsgobbles	Hey all, I'm encountering a lifetime error involving caching and using std::borrow::Cow, here's a minimalized example
2018-09-21 23:03:40	thatsgobbles	https://play.rust-lang.org/?gist=e2e780c8a8c4236e24321702ccd63573&version=stable&mode=debug&edition=2015
2018-09-21 23:04:22	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-21 23:05:43	-->	Mateon2 (Thunderbird@moz-6r707s.supernova.orange.pl) has joined #rust-beginners
2018-09-21 23:05:55	<--	Pistahh (pistahh@moz-lh6o8p.uid0.hu) has quit (Ping timeout: 121 seconds)
2018-09-21 23:06:36	-->	mib_3tf1bj (Mibbit@moz-rlq6b2.sd.cox.net) has joined #rust-beginners
2018-09-21 23:06:48	<--	rsh (chatzilla@moz-obrqo6.8van.e53i.f2c0.2607.IP) has quit (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
2018-09-21 23:07:11	<--	Mateon1 (Thunderbird@moz-3pdumf.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-21 23:07:11	--	Mateon2 is now known as Mateon1
2018-09-21 23:08:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 23:08:45	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Quit: WeeChat 2.0.1)
2018-09-21 23:10:34	@mbrubeck	thatsgobbles: In the case where `process_meta_file_cached` returns a `Cow::Owned`, this wouldn't work
2018-09-21 23:11:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 23:11:39	-->	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has joined #rust-beginners
2018-09-21 23:12:10	@mbrubeck	thatsgobbles: because this tries to return a borrowed reference to that HashMap, but the HashMap gets dropped before the function returns
2018-09-21 23:12:31	<--	maksim (maksim@moz-he03ei.at.cox.net) has quit (Quit: Leaving)
2018-09-21 23:12:35	 *	mbrubeck tries a fix
2018-09-21 23:13:23	-->	memoryruins (f@moz-se7o78.fl.comcast.net) has joined #rust-beginners
2018-09-21 23:13:53	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Connection closed)
2018-09-21 23:14:22	-->	Pistahh (pistahh@moz-lh6o8p.uid0.hu) has joined #rust-beginners
2018-09-21 23:15:11	@mbrubeck	thatsgobbles: Actually, what do you want to happen in that case?
2018-09-21 23:15:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 23:15:49	@mbrubeck	Right now it does not add the new file to the cache
2018-09-21 23:15:51	@mbrubeck	should it?
2018-09-21 23:16:00	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-21 23:16:27	<--	mib_y21z4r (Mibbit@moz-2be.etk.51.106.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-21 23:16:54	<--	greeenngrass (learning_so@moz-0951fj.mobile.att.net) has quit (Ping timeout: 121 seconds)
2018-09-21 23:17:08	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-21 23:17:47	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 23:18:04	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-21 23:18:24	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-21 23:21:03	thatsgobbles	mbrubeck: I was thinking of having the meta_* one take control of putting new items in the cache
2018-09-21 23:21:19	<--	bernte (Bernd@moz-uo0rvi.fams.de) has quit (Quit: Leaving)
2018-09-21 23:21:59	thatsgobbles	mbrubeck: And looking at it again, you're right, I did forget to actually put things in the cache!!
2018-09-21 23:22:06	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-21 23:23:17	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-21 23:23:31	@mbrubeck	thatsgobbles: I'd drop some or all of the Cow stuff and do something like https://play.rust-lang.org/?gist=7fb334dce3da864704b1f86e3e90f3d4&version=stable&mode=debug&edition=2015
2018-09-21 23:23:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 23:24:39	@mbrubeck	This never returns None or Cow::Owned so I'm not sure the Option or Cow are necessary in `process_item_file_cached`
2018-09-21 23:26:40	@mbrubeck	thatsgobbles: Here's a simpler version https://play.rust-lang.org/?gist=00c8e7bb8b8857344a777a697fb7e2d1&version=stable&mode=debug&edition=2015
2018-09-21 23:27:03	thatsgobbles	mbrubeck: I think that may be an artifact of my fast refactoring to get a minimum viable example to share, the original methods return Result<>
2018-09-21 23:27:16	@mbrubeck	got it
2018-09-21 23:27:51	thatsgobbles	But wow, that new `process_item_file_cached` looks super clean!
2018-09-21 23:28:30	thatsgobbles	Once again, it seems that Cow won't get used in my code, haha. I keep on thinking it'd be great to use, but it never quite fits, it seems
2018-09-21 23:28:39	@mbrubeck	Here's a Result version https://play.rust-lang.org/?gist=5f3104d38c6f467cd616cef2b223ac39&version=stable&mode=debug&edition=2015
2018-09-21 23:30:03	thatsgobbles	mbrubeck: Thanks so much for the help, and for the explanation as to why the initial example didn't work!
2018-09-21 23:33:31	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-21 23:33:51	-->	kyren_ (kyren@moz-pa87vs.q5rt.imr4.9001.2603.IP) has joined #rust-beginners
2018-09-21 23:34:23	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 23:35:11	<--	kyren_ (kyren@moz-pa87vs.q5rt.imr4.9001.2603.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-21 23:35:32	-->	kyren (kyren@moz-4v97l3.q5rt.imr4.9001.2603.IP) has joined #rust-beginners
2018-09-21 23:36:12	<--	oms (oms@moz-oe36dj.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-21 23:37:37	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-21 23:38:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 23:41:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 23:42:23	<--	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-21 23:42:28	<--	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-21 23:44:24	<--	nairware (CELLIS-W10@moz-p67.9ua.206.67.IP) has left #rust-beginners
2018-09-21 23:44:47	-->	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has joined #rust-beginners
2018-09-21 23:45:17	<--	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has quit (Quit: Gateway shutdown)
2018-09-21 23:48:42	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 23:50:16	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-21 23:52:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 23:53:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 23:54:04	-->	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has joined #rust-beginners
2018-09-21 23:54:04	<--	sp1ff (sp1ff@moz-lk4uju.u583.gjp6.0119.2620.IP) has quit (Connection closed)
2018-09-21 23:54:18	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 23:56:24	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-21 23:57:58	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Connection closed)
2018-09-21 23:58:07	<--	ibrokemypie (conor@moz-sfb.22j.146.120.IP) has quit (Ping timeout: 121 seconds)
2018-09-21 23:58:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-21 23:59:13	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-21 23:59:48	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-21 23:59:49	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 00:01:08	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 00:02:01	<--	alatiera (alatiera@moz-0d0n4c.access.hol.gr) has quit (Quit: Leaving)
2018-09-22 00:02:45	-->	mellowmaroon (mellowmaroo@moz-qrk6dg.va.comcast.net) has joined #rust-beginners
2018-09-22 00:03:55	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:04:00	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:04:06	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:06:52	-->	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has joined #rust-beginners
2018-09-22 00:07:05	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:07:05	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 00:08:09	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:09:06	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 00:09:07	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:09:25	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-22 00:09:30	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 00:10:49	-->	Betty28 (Betty28@moz-k0qe3s.dynvpn.flex.ru) has joined #rust-beginners
2018-09-22 00:11:05	Betty28	Hi!
2018-09-22 00:11:24	<--	Betty28 (Betty28@moz-k0qe3s.dynvpn.flex.ru) has quit (G-Lined: no spamming here)
2018-09-22 00:12:55	mellowmaroon	Betty28: Hello! :>
2018-09-22 00:13:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:14:37	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 00:14:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 00:15:32	-->	qre (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-22 00:15:52	qre	Is there a crate for a timer that will trigger a callback after duration and the timer can be reset?
2018-09-22 00:16:45	mellowmaroon	qre: maybe https://github.com/alexcrichton/futures-timer
2018-09-22 00:16:56	mellowmaroon	Not 100% though, never used it before
2018-09-22 00:17:17	qre	let me try it
2018-09-22 00:17:47	qre	i was looking at tokio::timer but it seems to want some kind of future with a poll method and non blocking message pass or something and i just need a cb at time x
2018-09-22 00:18:13	-->	martin1 (martin@moz-466pac.anteldata.net.uy) has joined #rust-beginners
2018-09-22 00:18:39	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 00:19:07	<--	mellowmaroon (mellowmaroo@moz-qrk6dg.va.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-22 00:19:11	-->	num8er (Mibbit@moz-fni.g6u.121.178.IP) has joined #rust-beginners
2018-09-22 00:19:36	<--	num8er (Mibbit@moz-fni.g6u.121.178.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 00:19:43	martin1	hey all! are there any go-to libraries for ML that people recommend? I'm trying to implement a deep neural network (just for the fun of it)
2018-09-22 00:22:24	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 00:22:26	<--	qre (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 00:22:42	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 00:24:07	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 00:25:04	<--	siddhartharao17 (siddharthar@moz-q4a.sr5.107.128.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 00:25:25	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-22 00:26:10	-->	jperras (jperras@moz-u54.oo6.48.24.IP) has joined #rust-beginners
2018-09-22 00:26:44	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 00:27:10	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-22 00:28:03	-->	siddhart_ (siddharthar@moz-q4a.sr5.107.128.IP) has joined #rust-beginners
2018-09-22 00:29:06	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:29:31	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 00:29:41	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 00:30:46	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 00:31:57	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Connection closed)
2018-09-22 00:32:08	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 00:32:16	<--	siddhart_ (siddharthar@moz-q4a.sr5.107.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 00:32:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 00:33:09	<--	LeshaInc (LeshaInc@moz-kl5p31.me) has quit (Quit: ZNC - https://znc.in)
2018-09-22 00:34:10	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Connection closed)
2018-09-22 00:34:17	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 00:34:17	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 00:36:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 00:37:10	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-22 00:37:45	cmyr	martin1: http://www.arewelearningyet.com/neural-networks/
2018-09-22 00:38:11	m_101	hi
2018-09-22 00:38:33	m_101	what crates would you guys suggest for system information? (CPU, disks, network, processes, etc)
2018-09-22 00:38:48	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:39:01	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 00:39:04	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 00:39:06	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 00:39:43	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 00:40:45	-->	LeshaInc (LeshaInc@moz-kl5p31.me) has joined #rust-beginners
2018-09-22 00:41:31	m_101	i'm looking at systemstat or sysinfo right now, but dunno which one is better yet
2018-09-22 00:41:58	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:42:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 00:42:03	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 00:42:45	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-22 00:43:10	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:43:10	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:43:10	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:43:31	<--	Dariost (Dariost@moz-euo.lj4.20.151.IP) has quit (Client exited)
2018-09-22 00:43:42	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-22 00:43:43	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-22 00:44:14	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-22 00:44:52	-->	mib_9c4jmc (Mibbit@moz-a6f.9te.17.201.IP) has joined #rust-beginners
2018-09-22 00:44:55	cmyr	m_101: there's also sys-info
2018-09-22 00:45:19	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 00:45:56	mib_9c4jmc	how can I run all my crates and root tests at once ?
2018-09-22 00:46:03	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 00:46:34	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 00:48:36	mib_9c4jmc	I can cd into every crate and cargo test each crate individually
2018-09-22 00:49:10	mib_9c4jmc	but if I run cargo test at root it doesn't run all crates
2018-09-22 00:49:50	stephaneyfx	mib_9c4jmc: You can create a workspace and do `cargo test --all` at the root of your workspace
2018-09-22 00:50:03	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 00:50:36	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 00:51:02	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Quit: WeeChat 2.0.1)
2018-09-22 00:51:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 00:51:24	-->	JAlbers (jalbers@moz-gbmisn.il.comcast.net) has joined #rust-beginners
2018-09-22 00:51:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 00:54:22	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-22 00:56:25	<--	xet7 (xet7@moz-3qeqqf.rev.dnainternet.fi) has quit (Quit: Leaving)
2018-09-22 01:01:34	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 01:02:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:03:10	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 01:04:27	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:05:36	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 01:05:56	-->	SenasOzys_ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-22 01:06:54	<--	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-22 01:07:25	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Connection closed)
2018-09-22 01:08:57	-->	memoryruins_ (f@moz-ec4.ubf.245.185.IP) has joined #rust-beginners
2018-09-22 01:09:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:10:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 01:11:13	m_101	cmyr: yeah i saw it but it hasn't been updated seen January and doesn't offer much info :s
2018-09-22 01:12:02	cmyr	m_101: yea I was just doing a quick search. :\
2018-09-22 01:12:15	m_101	most complete seems to be systemstat
2018-09-22 01:12:19	<--	memoryruins (f@moz-se7o78.fl.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:12:22	m_101	yeah thank you for that :)
2018-09-22 01:12:23	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 01:12:41	<--	Arcaelyx_ (Arcaelyx@moz-vvba2c.77ht.vv5c.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 01:13:03	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-22 01:14:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:15:02	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 01:15:20	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:15:29	-->	danecando (danecando@moz-qdbqv5.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-22 01:15:31	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:15:33	-->	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has joined #rust-beginners
2018-09-22 01:16:07	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:16:23	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:16:53	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:17:05	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:17:40	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:17:55	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:18:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 01:18:27	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:18:43	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:19:14	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:19:27	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:19:43	brianm	a thing is happening with creates and use that I do not understand
2018-09-22 01:19:55	brianm	I have a module with submodule that uses a crate
2018-09-22 01:20:01	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:20:02	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 01:20:12	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:20:23	brianm	and it *insists* I reference that crate as `use self::tantivy` instead of just `use tantivy`
2018-09-22 01:20:25	brianm	a la https://play.rust-lang.org/?gist=5fb385c9bf7221b7e2b15037a0181975&version=stable&mode=debug&edition=2015
2018-09-22 01:20:47	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:20:58	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:21:06	brianm	https://www.irccloud.com/pastebin/vkbSXM3D/
2018-09-22 01:21:08	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-22 01:21:13	brianm	help?
2018-09-22 01:21:22	<--	JAlbers (jalbers@moz-gbmisn.il.comcast.net) has quit (Connection closed)
2018-09-22 01:21:26	@mbrubeck	brianm: Paths in `use` statements are absolute paths; they start from the crate root
2018-09-22 01:21:34	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:21:42	brianm	right, and tantivy is an external crate
2018-09-22 01:21:45	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:22:03	<--	proc (aron@moz-9b1bju.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-22 01:22:06	@mbrubeck	brianm: `extern crate tantivy;` creates an item named `tantivy` inside the module where it appears
2018-09-22 01:22:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 01:22:15	brianm	I'd expect absolute path from crate root to resolve correctly if I use
2018-09-22 01:22:18	brianm	https://www.irccloud.com/pastebin/nJdxYVVA/
2018-09-22 01:22:18	-->	proc (aron@moz-9b1bju.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 01:22:21	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:22:23	proc	uhm
2018-09-22 01:22:27	brianm	er
2018-09-22 01:22:29	proc	 /quit works quite well here
2018-09-22 01:22:31	brianm	https://www.irccloud.com/pastebin/HxzdvTq9/
2018-09-22 01:22:32	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:22:40	@mbrubeck	so its path is `path::to::current::module::tantivy`, or `self::tantivy` if you're within that same module
2018-09-22 01:22:48	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 01:23:00	brianm	oh
2018-09-22 01:23:04	brianm	interesting
2018-09-22 01:23:07	@mbrubeck	brianm: The normal practice is to put all `extern crate` items in the root module (lib.rs or main.rs)
2018-09-22 01:23:08	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:23:18	@mbrubeck	so that the path to the crate is just `tantivy`
2018-09-22 01:23:19	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:23:22	brianm	that makes sense now
2018-09-22 01:23:38	@mbrubeck	brianm: Also, this will be simpler in Rust 2018 (currently in testing on the beta channel):
2018-09-22 01:23:55	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:24:00	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:24:02	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-22 01:24:06	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:24:07	-->	nap (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-22 01:24:17	@mbrubeck	brianm: you'll no longer need to write `extern crate` anywhere, and all crates from Cargo.toml will just be available in any namespace
2018-09-22 01:24:32	brianm	I didn't realize `extern create` "mounted" it, I had just been thinking of it as a directive to link against
2018-09-22 01:24:37	brianm	oooo
2018-09-22 01:24:41	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:24:43	-->	Jennifer_74 (Jennifer_74@moz-roe.ra2.232.188.IP) has joined #rust-beginners
2018-09-22 01:24:53	Jennifer_74	Hello!
2018-09-22 01:24:53	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 01:25:00	brianm	mbrubeck: thank you!
2018-09-22 01:25:10	nap	Hi, I'm using std::net::TcpStream:connect to connect to a netcat server listening on 127.0.0.1:6666 but I keep getting a Connection refused error. What is going on?
2018-09-22 01:25:10	<--	Jennifer_74 (Jennifer_74@moz-roe.ra2.232.188.IP) has quit (G-Lined: no spamming here)
2018-09-22 01:25:15	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 01:25:28	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:26:10	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 01:26:16	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Connection closed)
2018-09-22 01:26:59	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-22 01:27:21	-->	mib_puor82 (Mibbit@moz-1h11ul.dsl.bell.ca) has joined #rust-beginners
2018-09-22 01:27:40	<--	mib_puor82 (Mibbit@moz-1h11ul.dsl.bell.ca) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 01:27:40	<--	liquidnight (marcus@moz-1jvmti.mdkm.1vl7.0c22.2a01.IP) has quit (Connection closed)
2018-09-22 01:27:45	@mbrubeck	nap: Hmm.  Can you connect to it with a netcat client?
2018-09-22 01:27:58	nap	yup
2018-09-22 01:28:14	nap	echo "DFDF\n" | nc ::1 6666 works just fine
2018-09-22 01:28:42	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-22 01:29:13	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-22 01:29:17	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 01:29:20	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-22 01:29:38	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:29:45	nap	haha woops using ::1 address instead of 127.0.0.1
2018-09-22 01:29:54	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 01:29:54	nap	everyone point and laugh at me :D
2018-09-22 01:30:48	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-22 01:31:04	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 01:31:38	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:31:45	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:32:10	<--	nap (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 01:33:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:33:47	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 01:34:15	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 01:36:27	<--	thatsgobbles (lemoine@moz-taj9u4.oc.cox.net) has quit (Quit: WeeChat 1.4)
2018-09-22 01:37:45	-->	Arcaelyx (Arcaelyx@moz-rhacue.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-09-22 01:37:46	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 01:37:50	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 01:37:52	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 01:38:22	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-22 01:40:16	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 01:41:53	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:41:54	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:41:54	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:42:15	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-22 01:43:33	-->	mud (mud@moz-dbkaku.scu7.kdko.8800.2600.IP) has joined #rust-beginners
2018-09-22 01:44:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 01:45:26	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-22 01:49:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 01:52:04	-->	federico (federico@moz-f42.qua.108.201.IP) has joined #rust-beginners
2018-09-22 01:54:11	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 01:54:31	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-09-22 01:54:50	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 01:54:55	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 01:55:15	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-22 01:55:36	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-22 01:56:20	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 01:56:52	-->	castilho_ (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-22 01:56:57	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-22 01:57:43	<--	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has quit (Connection closed)
2018-09-22 01:58:59	<--	AtumT (IRC@moz-soe.d2s.113.187.IP) has quit (Client exited)
2018-09-22 02:01:25	<--	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-22 02:02:23	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-22 02:02:54	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 02:03:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 02:05:18	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-22 02:05:24	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 02:05:27	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 02:05:35	<--	mud (mud@moz-dbkaku.scu7.kdko.8800.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:07:12	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:07:14	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:07:40	<--	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has quit (Quit: I've fallen into /dev/null and can't get out!)
2018-09-22 02:07:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:07:58	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:08:00	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:08:12	<--	memoryruins_ (f@moz-ec4.ubf.245.185.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 02:08:27	-->	muvlon (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has joined #rust-beginners
2018-09-22 02:08:45	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:08:46	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:10:22	-->	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has joined #rust-beginners
2018-09-22 02:13:48	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 02:13:51	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 02:13:53	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 02:14:37	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:14:39	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:15:23	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:15:25	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:15:33	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-22 02:16:09	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:16:11	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:16:30	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 02:16:56	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:16:57	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:17:42	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:17:44	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:17:56	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 02:17:56	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 02:17:56	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 02:18:28	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:18:30	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:19:14	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:19:30	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-22 02:19:46	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:20:42	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 02:21:19	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:21:37	-->	starblue (juergen@moz-hqetfg.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 02:22:46	<--	starblue1 (juergen@moz-jc37pa.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-22 02:23:48	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:24:01	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:27:19	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-22 02:29:23	-->	Mary_82 (Mary_82@moz-0nv.neq.120.146.IP) has joined #rust-beginners
2018-09-22 02:29:31	Mary_82	Hi!
2018-09-22 02:29:31	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 02:29:51	<--	Mary_82 (Mary_82@moz-0nv.neq.120.146.IP) has quit (G-Lined: no spamming here)
2018-09-22 02:30:36	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 02:30:44	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-22 02:31:16	<--	jperras (jperras@moz-u54.oo6.48.24.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:31:16	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 02:31:21	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:32:30	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-22 02:32:50	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-22 02:33:11	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 02:33:14	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:33:27	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:33:29	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:33:40	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-22 02:34:08	-->	jazzpi (jazzpi@moz-i6l8pk.space) has joined #rust-beginners
2018-09-22 02:34:47	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 02:35:09	-->	muvlon_ (muvlon@moz-pd0.rrf.132.109.IP) has joined #rust-beginners
2018-09-22 02:35:29	-->	Aqo_ (Aqo@moz-11t4ij.inter.net.il) has joined #rust-beginners
2018-09-22 02:37:25	<--	muvlon (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:37:44	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Ping timeout: 121 seconds)
2018-09-22 02:37:54	--	Aqo_ is now known as Aqo
2018-09-22 02:38:53	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 02:39:23	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:39:54	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 02:41:01	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-22 02:41:32	-->	alatiera (alatiera@moz-0d0n4c.access.hol.gr) has joined #rust-beginners
2018-09-22 02:42:55	<--	weeji (jihi@moz-kgms3j.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-22 02:43:21	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 02:47:31	-->	halzy (halzy@moz-746.tac.64.63.IP) has joined #rust-beginners
2018-09-22 02:48:10	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:49:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 02:50:31	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 02:51:50	<--	halzy (halzy@moz-746.tac.64.63.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:51:56	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:53:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 02:54:05	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 02:54:49	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-22 02:55:48	-->	weeji (jihi@moz-bq1n3d.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 02:57:49	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 02:58:20	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 02:59:45	-->	jperras (jperras@moz-u54.oo6.48.24.IP) has joined #rust-beginners
2018-09-22 03:00:00	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 03:00:22	<--	castilho_ (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-22 03:00:49	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 03:00:58	-->	JAlbers_ (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 03:01:00	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 03:04:44	<--	danecando (danecando@moz-qdbqv5.sdba.4jle.1700.2600.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 03:05:46	<--	JAlbers_ (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 03:06:17	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 03:08:14	<--	kimundi (kimundi@moz-f2o7tc.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-22 03:09:41	-->	neal (neal@moz-fjv4pt.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 03:12:29	-->	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-22 03:12:38	<--	neal_ (neal@moz-qchabn.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-22 03:13:11	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-22 03:13:29	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 03:14:27	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-22 03:14:30	-->	kimundi (kimundi@moz-omv9lc.versanet.de) has joined #rust-beginners
2018-09-22 03:16:39	<--	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 03:17:41	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 03:18:40	<--	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-22 03:19:08	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-22 03:20:22	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-22 03:21:43	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 03:26:02	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:27:12	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-22 03:29:08	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 03:29:11	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 03:29:13	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 03:29:15	-->	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 03:29:29	<--	alatiera (alatiera@moz-0d0n4c.access.hol.gr) has quit (Quit: Leaving)
2018-09-22 03:30:02	<--	federico (federico@moz-f42.qua.108.201.IP) has quit (Quit: Leaving)
2018-09-22 03:31:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 03:32:07	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:33:17	<--	JAlbers (jalbers@moz-7gi5v4.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 03:33:17	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:33:17	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:33:17	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:34:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 03:35:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:37:12	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 03:38:36	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:38:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 03:39:12	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-22 03:40:34	-->	JAlbers (jalbers@moz-ucee1k.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 03:40:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 03:41:19	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-22 03:41:38	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 03:42:01	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 03:42:14	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 03:44:36	<--	JAlbers (jalbers@moz-ucee1k.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 03:45:03	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:45:40	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 03:45:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 03:46:01	<--	enterprisey (enterprisey@moz-fjjhvf.cit.cornell.edu) has quit (Quit: Leaving)
2018-09-22 03:46:03	-->	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 03:48:32	<--	jperras (jperras@moz-u54.oo6.48.24.IP) has quit (Quit: WeeChat 2.2)
2018-09-22 03:50:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:50:05	<--	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 03:51:22	-->	ibrokemypie (conor@moz-eli.4qi.136.1.IP) has joined #rust-beginners
2018-09-22 03:54:09	-->	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 03:56:40	<--	alx741 (alx741@moz-tgq.k67.178.186.IP) has quit (Client exited)
2018-09-22 03:57:11	ibrokemypie	how can you use an enum as the original type?
2018-09-22 03:57:22	ibrokemypie	I have an enum that is either PAthBuf or string
2018-09-22 03:57:34	ibrokemypie	how could I use the PathBuf as a PathBNuf?
2018-09-22 03:58:07	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 03:58:08	durka42	ibrokemypie: match on the enum value
2018-09-22 03:58:11	<--	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 03:58:23	ibrokemypie	what do you mean?
2018-09-22 03:58:29	durka42	well what does the enum look like precisely
2018-09-22 03:58:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 03:58:38	durka42	enum Foo { Path(PathBuf), ... } right?
2018-09-22 03:59:35	ibrokemypie	yes
2018-09-22 03:59:49	durka42	so to get at the fields you use a match statement
2018-09-22 03:59:59	durka42	match foo { Path(pb) => { /* use pb here */ }, ... }
2018-09-22 04:00:15	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 04:00:17	-->	dalley (dalley@moz-147tel.dyn6.twc.com) has joined #rust-beginners
2018-09-22 04:00:50	-->	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 04:01:00	ibrokemypie	uh
2018-09-22 04:02:25	durka42	is it unclear?
2018-09-22 04:02:44	<--	mib_9c4jmc (Mibbit@moz-a6f.9te.17.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 04:02:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 04:03:11	ibrokemypie	I am sure your explanation is clear, I'm just dense
2018-09-22 04:03:44	ibrokemypie	I have a vector with this enum which can be a pathbuf or string and I just want to get the first value which is always a pathbuf, as a pathbuf
2018-09-22 04:04:00	durka42	how do you know it's always a pathbuf
2018-09-22 04:04:03	ibrokemypie	I tried PathBuf::from(vector[0])
2018-09-22 04:04:21	durka42	I mean an enum tracks at runtime which variant it is
2018-09-22 04:04:26	ibrokemypie	because I define it as such
2018-09-22 04:04:28	durka42	there's no way to say "just trust me I know it's variant 1"
2018-09-22 04:04:35	durka42	you always have to match
2018-09-22 04:04:52	<--	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 04:04:58	ibrokemypie	I'm only using an enum because I couldnt work out a struct with optional fields
2018-09-22 04:05:00	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-22 04:05:05	durka42	(or `if let` which is a shortcut when you really only want one match arm)
2018-09-22 04:05:22	durka42	oh well a struct with optional fields is easy, you just use Option<Whatever> as the field type
2018-09-22 04:05:36	durka42	but I don't know enough about your program to know if that's a better choice than an enum
2018-09-22 04:05:40	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-22 04:05:59	ibrokemypie	I am essentially using the Vec<Enum> as a struct with optional types
2018-09-22 04:06:17	ibrokemypie	first value is a pathbuf, second is a string
2018-09-22 04:06:19	durka42	ah yeah that kinda sounds like a hack where Option fields would be better :)
2018-09-22 04:06:43	ibrokemypie	how would the struct with options work?
2018-09-22 04:07:04	durka42	struct Foo { a: Option<PathBuf>, b: Option<String> }
2018-09-22 04:07:16	durka42	can you tell me more about the purpose of the struct? that will affect its design
2018-09-22 04:08:02	ibrokemypie	Contains a path to a file and a field for a checksum which will be computed later
2018-09-22 04:08:15	ibrokemypie	There will be a Vector of these structs
2018-09-22 04:08:52	durka42	oh so the path isn't really optional
2018-09-22 04:08:54	durka42	but the checksum is
2018-09-22 04:08:56	ibrokemypie	basically getting the files in a directory, putting each in a struct, putting each struct in a vector, then later computing the checksum
2018-09-22 04:08:58	ibrokemypie	yeah
2018-09-22 04:08:59	durka42	and the string is for the checksum
2018-09-22 04:09:05	ibrokemypie	yes
2018-09-22 04:09:15	durka42	so, struct Foo { path: PathBuf, checksum: Option<String> }
2018-09-22 04:12:20	<--	proc (aron@moz-9b1bju.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-22 04:12:37	-->	proc (aron@moz-f34l7j.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 04:14:20	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-22 04:14:47	-->	mib_kaiycd (Mibbit@moz-iutg7d.wa.comcast.net) has joined #rust-beginners
2018-09-22 04:15:58	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 04:16:34	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 04:18:19	<--	ibrokemypie (conor@moz-eli.4qi.136.1.IP) has quit (Connection closed)
2018-09-22 04:18:56	mib_kaiycd	For regular expressions I can use the syntax "\x{000D}" to match a newline. Is there an equivalent format for matching newlines against String.as_ref()? (assume that I can't use "\n")
2018-09-22 04:20:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 04:20:31	-->	xurtis (curtis@moz-56vpf6.unsw.edu.au) has joined #rust-beginners
2018-09-22 04:20:39	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-22 04:20:59	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 04:21:17	<--	GreenJello (GreenJello@moz-diuscq.7di5.9nhv.8800.2600.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 04:24:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 04:24:32	<--	xurtis (curtis@moz-56vpf6.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-22 04:25:12	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 04:28:14	Moongoodboy{K}	mib_kaiycd: match as in the Rust keyword, or…?
2018-09-22 04:28:14	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-22 04:28:49	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-22 04:29:45	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 04:29:57	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 04:30:16	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 04:31:31	mib_kaiycd	Moongoodboy{K}: Yeah. Something like this https://play.rust-lang.org/?gist=48bcc5b11d87befa787be3194800c943&version=stable&mode=debug&edition=2015
2018-09-22 04:32:05	-->	quiggle (Mibbit@moz-ftm.6js.6.209.IP) has joined #rust-beginners
2018-09-22 04:32:26	<--	quiggle (Mibbit@moz-ftm.6js.6.209.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 04:32:51	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 04:32:58	Moongoodboy{K}	mib_kaiycd: …are you looking for the \u escape?
2018-09-22 04:33:15	Moongoodboy{K}	eval: '\u{1f600}'
2018-09-22 04:33:18	--	Notice(eval): '😀'
2018-09-22 04:33:32	-->	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 04:34:03	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-22 04:34:43	mib_kaiycd	Moongoodboy{K}: Wow. Yeah. I was starting with a regular expression which used \x and didn't know about \u
2018-09-22 04:36:36	Moongoodboy{K}	Yeah. \x is only for 0x00...0x7f in chars and strings, and 0x00...0xff in bytes and bytestrings.
2018-09-22 04:36:42	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 04:36:43	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 04:36:59	Moongoodboy{K}	There's \u for any Unicode codepoint (and of course you can always just stick the character in there)
2018-09-22 04:37:30	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 04:38:37	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-22 04:40:44	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 04:42:44	-->	charmander (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-22 04:42:56	mib_kaiycd	Interesting. Yeah, I was avoiding using the literal character. I'm trying to match characters which (to the eye) are nearly identical.
2018-09-22 04:43:21	charmander	Every now and again I get completely trapped with specifying lifetime annotations. Here is a simple example https://play.rust-lang.org/?gist=a4b074b62b6630149fe57a331482a7b7&version=stable&mode=debug&edition=2015
2018-09-22 04:43:45	charmander	I don't see a way to get out of that 
2018-09-22 04:44:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 04:45:05	<--	Guest4641 (nj0rd@moz-0cfbup.dip.versatel-1u1.de) has quit (Ping timeout: 121 seconds)
2018-09-22 04:45:34	durka42	charmander: indeed there's no way out
2018-09-22 04:45:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 04:45:44	durka42	the way the trait is designed, you can't store the reference
2018-09-22 04:45:53	durka42	you'd have to clone it
2018-09-22 04:45:59	charmander	Is there a way for me to clone/to_string or something?
2018-09-22 04:46:05	<--	re-l124c41 (re-l124c41@moz-48q2ti.4kh6.ni31.0908.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 04:46:08	durka42	yeah sure
2018-09-22 04:46:19	Moongoodboy{K}	mib_kaiycd: aha. :)
2018-09-22 04:46:21	charmander	Now I tried that
2018-09-22 04:46:24	Moongoodboy{K}	yeah probably a good idea then
2018-09-22 04:46:28	charmander	but I get even more stuck with "cannot infer an appropriate lifetime due to conflicting requirements"
2018-09-22 04:46:30	durka42	https://play.rust-lang.org/?gist=62ecb60cd89210b78f65751843a5abfb&version=stable&mode=debug&edition=2015
2018-09-22 04:46:50	charmander	ah
2018-09-22 04:46:53	durka42	once you clone it, you have a String and all the lifetimes go away
2018-09-22 04:46:54	charmander	whats the diff between clone() and to_owned()
2018-09-22 04:46:55	durka42	since it's owned
2018-09-22 04:47:12	charmander	I thought they did the same thing
2018-09-22 04:47:30	durka42	clone always goes from &T to T
2018-09-22 04:47:44	durka42	in this case &&str to &str which is... totally useless
2018-09-22 04:47:45	charmander	so iw ould have to &s.clone()
2018-09-22 04:48:09	durka42	&str -> String is not &T -> T since it isn't exactly the same type
2018-09-22 04:48:15	durka42	that's why there's the separate to_owned
2018-09-22 04:48:59	charmander	so in the foo func the variable s is &str or &&str? 
2018-09-22 04:49:03	charmander	in the body
2018-09-22 04:51:58	durka42	I'm just trying to explain what happens when you call .clone() which is the wrong choice here anyway
2018-09-22 04:52:06	durka42	you hit this impl https://doc.rust-lang.org/src/core/clone.rs.html#207-212 which just copies the &str
2018-09-22 04:52:10	durka42	doesn't make it owned at all
2018-09-22 04:52:25	-->	gurneesh (Mibbit@moz-ouc.kip.91.59.IP) has joined #rust-beginners
2018-09-22 04:52:48	durka42	I guess this is all my fault because I originally said "you should clone" when "you should to_owned it" is more precise
2018-09-22 04:52:53	charmander	I'm trying to understand it through types that usually makes it click for me :)
2018-09-22 04:53:03	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-22 04:53:19	durka42	well just look at how Clone and ToOwned are defined then
2018-09-22 04:53:28	durka42	Clone: fn clone(&self) -> Self
2018-09-22 04:53:50	durka42	ToOwned: fn to_owned(&self) -> Self::Owned
2018-09-22 04:53:51	charmander	what I am getting right now is that I have a &str. I call clone on it. clone gives me back str if I call it on &str?
2018-09-22 04:54:01	durka42	clone on &str gives you &str
2018-09-22 04:54:21	&niconii	charmander: str doesn't have a Clone impl, but &T does, so when you call .clone() you end up just cloning the reference itself, not the actual string data
2018-09-22 04:54:22	charmander	this is the part thats confusing me *self
2018-09-22 04:54:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 04:54:33	charmander	deref the &str (self)
2018-09-22 04:54:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 04:54:47	charmander	on the clone impl
2018-09-22 04:54:58	<--	gurneesh (Mibbit@moz-ouc.kip.91.59.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 04:55:00	-->	ibrokemypie (conor@moz-eli.4qi.136.1.IP) has joined #rust-beginners
2018-09-22 04:55:22	charmander	niconii okay I think im getting it
2018-09-22 04:55:38	&niconii	self is s: &str, so &self is &s: &&str, and it returns Self which is &str
2018-09-22 04:55:47	&niconii	you just end up getting another &str pointing to the same data
2018-09-22 04:56:12	<--	proc (aron@moz-f34l7j.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-22 04:56:28	charmander	is clone consistent like this for all references?
2018-09-22 04:56:45	charmander	that impl the base clone
2018-09-22 04:56:47	<--	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 04:56:50	durka42	yeah
2018-09-22 04:57:03	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-22 04:57:06	<--	niconii (nicole@moz-aeo7a7.midco.net) has quit (Quit: leaving)
2018-09-22 04:57:07	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 04:57:46	-->	Guest4641 (nj0rd@moz-k10ups.dip.versatel-1u1.de) has joined #rust-beginners
2018-09-22 04:58:24	charmander	the 2018 edition there was something about not needing to specify lifetime annos anymore for cases like struct Struct(&str) is that the case?
2018-09-22 04:58:36	charmander	I cant find it now
2018-09-22 04:58:48	durka42	it's actually for impls like the one you had originally, I believe
2018-09-22 04:58:49	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 04:58:50	durka42	not the struct definitions
2018-09-22 04:59:05	charmander	Non lexical lifetimes! thats it
2018-09-22 04:59:05	durka42	I mean it still won't work, but you wouldn't have to write <'a> :p
2018-09-22 04:59:12	durka42	no, that's totally different :)
2018-09-22 04:59:18	charmander	oh woops :D
2018-09-22 04:59:30	durka42	non lexical lifetimes is a big update making the lifetime system smarter
2018-09-22 04:59:51	durka42	there's an unrelated minor syntax change that lets you avoid writing lifetimes in more places (but doesn't change the meaning)
2018-09-22 04:59:58	charmander	ah
2018-09-22 05:00:29	charmander	It would be better at inferring but you would still need to be explicit in like a struct field def
2018-09-22 05:01:12	durka42	NLL changes how lifetimes are interpreted whether you write them or not
2018-09-22 05:01:20	durka42	the rules for where you can avoid writing them are called elision
2018-09-22 05:01:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:02:01	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 05:03:13	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 05:03:15	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 05:04:03	charmander	okay and just so I'm 100% clear on this coming away.. self as Self in the clone implementation.. when clone is called on a &T impl'ing base clone.. self IS a reference.. that is &T is a "type" all its own in way and thats why self in clone(&self) is actually &&T
2018-09-22 05:04:39	-->	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has joined #rust-beginners
2018-09-22 05:04:46	charmander	and therefore *self is &T in that scenario 
2018-09-22 05:05:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 05:05:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 05:06:06	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-22 05:06:12	charmander	I just read that back and it sounded confusing :p
2018-09-22 05:06:25	charmander	hope it made sense I think I actually got it
2018-09-22 05:06:56	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-22 05:06:58	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 05:07:48	-->	enterprisey (enterprisey@moz-fl8p64.cit.cornell.edu) has joined #rust-beginners
2018-09-22 05:08:41	<--	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:09:38	<--	masonk (mason@moz-tuvq7p.ca.comcast.net) has quit (Connection closed)
2018-09-22 05:09:41	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 05:10:23	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:10:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 05:11:11	<--	charmander (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 05:16:48	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:16:54	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 05:16:57	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 05:16:58	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 05:17:21	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Quit: Leaving)
2018-09-22 05:18:16	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:19:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 05:21:04	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:21:05	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:21:05	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:24:39	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 05:25:56	-->	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-22 05:26:08	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:28:57	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 05:29:41	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-22 05:29:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:30:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 05:30:09	<--	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 05:30:11	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-22 05:31:41	ibrokemypie	whats the best way to define a varialbe if the function doesnt fail and print the error otherwise?
2018-09-22 05:31:58	ibrokemypie	specifically for File::open
2018-09-22 05:32:28	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 05:32:36	stephaneyfx_	ibrokemypie: Print the error and exit the program?
2018-09-22 05:33:07	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 05:33:08	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-22 05:33:40	--	stephaneyfx_ is now known as stephaneyfx
2018-09-22 05:33:42	-->	Maria36 (Maria36@moz-nik.5v4.149.83.IP) has joined #rust-beginners
2018-09-22 05:33:50	Maria36	Hello!
2018-09-22 05:33:54	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-22 05:34:10	<--	Maria36 (Maria36@moz-nik.5v4.149.83.IP) has quit (G-Lined: no spamming here)
2018-09-22 05:35:26	ibrokemypie	ah, not, though I worked out a better way thanks!
2018-09-22 05:35:37	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 05:36:01	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-22 05:36:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:36:30	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 05:36:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 05:38:04	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:39:48	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-22 05:40:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:41:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 05:43:56	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:44:06	<--	blackgoat (blackgoat@moz-vr5.k72.224.211.IP) has quit (Quit: WeeChat 2.2)
2018-09-22 05:44:56	-->	akshay (Mibbit@moz-cab.gmi.41.103.IP) has joined #rust-beginners
2018-09-22 05:45:07	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-22 05:46:06	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-22 05:46:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:48:28	Moongoodboy{K}	let variable = match something_fallible() { Ok(value) => value, Err(_) => panic!() /* or return, or other diverging mechanism */ };  // ibrokemypie: this is the basic principle
2018-09-22 05:48:57	Moongoodboy{K}	there are similar things (in particular, Result::unwrap(), which is a shortcut for panicking in the Err case)
2018-09-22 05:49:26	Moongoodboy{K}	(and the ? operator, which is a shortcut for returning)
2018-09-22 05:51:06	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 05:53:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 05:53:24	-->	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 05:53:59	<--	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-22 05:54:55	<--	mib_kaiycd (Mibbit@moz-iutg7d.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 05:55:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 05:55:26	<--	enterprisey (enterprisey@moz-fl8p64.cit.cornell.edu) has quit (Connection closed)
2018-09-22 05:57:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 05:59:04	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-22 05:59:38	<--	akshay (Mibbit@moz-cab.gmi.41.103.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 05:59:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 06:00:23	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-22 06:00:27	-->	oms (oms@moz-1ijooc.dyn.telefonica.de) has joined #rust-beginners
2018-09-22 06:02:44	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-22 06:06:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:07:29	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-22 06:07:41	<--	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2018-09-22 06:07:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 06:09:36	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-22 06:10:06	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 06:12:11	-->	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-22 06:12:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:13:08	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-22 06:13:44	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 06:14:19	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 06:14:39	<--	ibrokemypie (conor@moz-eli.4qi.136.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 06:17:27	<--	kido (satori@moz-a21vmc.moe) has quit (Quit: WeeChat 2.1)
2018-09-22 06:20:59	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:21:18	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:22:51	-->	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 06:23:07	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:23:10	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 06:23:50	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 06:24:06	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-22 06:24:26	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-22 06:25:06	-->	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 06:26:41	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 06:28:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:29:28	-->	SenasOzys__ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-22 06:29:46	-->	emerentius (emerentius@moz-215tg4.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 06:29:47	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 06:30:10	<--	emerent (emerentius@moz-0o8q0v.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-22 06:30:43	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 06:31:37	-->	paidhi (Adium@moz-846u61.dynamic.surfer.at) has joined #rust-beginners
2018-09-22 06:32:04	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:32:05	<--	SenasOzys_ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:32:17	<--	paidhi (Adium@moz-846u61.dynamic.surfer.at) has left #rust-beginners
2018-09-22 06:33:25	<--	sam113101 (sam@moz-c4qco5.mc.videotron.ca) has quit (Ping timeout: 121 seconds)
2018-09-22 06:33:35	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-22 06:33:46	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-22 06:33:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 06:34:48	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 06:37:20	-->	castilho (castilho@moz-tpr4o4.s0tm.pvhs.014c.2804.IP) has joined #rust-beginners
2018-09-22 06:37:29	-->	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 06:37:32	<--	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-22 06:39:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:39:41	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-22 06:39:49	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 06:41:22	<--	castilho (castilho@moz-tpr4o4.s0tm.pvhs.014c.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 06:42:10	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 06:43:18	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 06:44:25	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-22 06:46:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 06:49:14	<--	acksys (acksys@moz-ti3fbf.ph.cox.net) has quit (Quit: WeeChat 2.2)
2018-09-22 06:52:40	-->	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-22 06:52:51	<--	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-22 06:53:34	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 06:56:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 06:57:03	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 06:57:17	-->	onix (Mibbit@moz-iko95s.ocn.ne.jp) has joined #rust-beginners
2018-09-22 06:57:36	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 06:57:48	<--	onix (Mibbit@moz-iko95s.ocn.ne.jp) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 06:59:01	<--	dozn (dozn@moz-3pudru.vs.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-22 06:59:09	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-22 06:59:24	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-22 07:01:03	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:03:27	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 07:04:39	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 07:04:43	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 07:04:45	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 07:06:37	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-22 07:06:39	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 07:07:56	-->	castilho (castilho@moz-tpr4o4.s0tm.pvhs.014c.2804.IP) has joined #rust-beginners
2018-09-22 07:08:24	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-22 07:08:49	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:08:49	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:08:49	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:11:59	<--	castilho (castilho@moz-tpr4o4.s0tm.pvhs.014c.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 07:12:32	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-22 07:13:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 07:13:50	-->	orph (orph@moz-sa4c8n.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-22 07:14:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 07:17:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 07:20:19	-->	anor (Mibbit@moz-6nb3vj.mobilinkinfinity.net.pk) has joined #rust-beginners
2018-09-22 07:20:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:20:41	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 07:20:56	<--	anor (Mibbit@moz-6nb3vj.mobilinkinfinity.net.pk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 07:21:15	<--	orph (orph@moz-sa4c8n.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 07:23:52	<--	insidious (insidious@moz-3cvg75.librarylab.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-22 07:24:43	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 07:27:06	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 07:27:55	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 07:30:23	-->	srz_lvr (Mibbit@moz-oqu.6bs.172.109.IP) has joined #rust-beginners
2018-09-22 07:31:11	<--	cgull (cgull@moz-u3u.ol1.15.216.IP) has quit (Quit: WeeChat 2.1)
2018-09-22 07:31:13	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 07:31:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:31:34	<--	srz_lvr (Mibbit@moz-oqu.6bs.172.109.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 07:33:00	-->	ibrokemypie (conor@moz-rne.pre.136.1.IP) has joined #rust-beginners
2018-09-22 07:33:01	<--	ibrokemypie (conor@moz-rne.pre.136.1.IP) has quit (Quit: WeeChat 2.2)
2018-09-22 07:34:38	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 07:35:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 07:38:53	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:39:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 07:39:57	-->	ibrokemypie (conor@moz-rne.pre.136.1.IP) has joined #rust-beginners
2018-09-22 07:41:05	-->	Shankar (Shankar@moz-dsmp3l.fmuq.5sju.4072.2409.IP) has joined #rust-beginners
2018-09-22 07:41:24	ibrokemypie	would it be faster to check if a file contains a substring by just checking string.contains or would it be faster to loop through each line and check whether the line starts with the substring, with the knowledge that if it contains the substring, it will be the start of a line
2018-09-22 07:41:55	-->	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-22 07:42:21	-->	orph (orph@moz-sa4c8n.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-22 07:43:41	ibrokemypie	also is there a way to match based on what substring a string contains?
2018-09-22 07:43:56	ibrokemypie	like, a better way to do different things depending on a string contains one thing or another without just writing a lot of if statements
2018-09-22 07:44:35	-->	xet7 (xet7@moz-9dktqv.rev.dnainternet.fi) has joined #rust-beginners
2018-09-22 07:45:41	-->	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-22 07:47:27	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-22 07:48:29	Moongoodboy{K}	if the files are known to be reasonably small, read_to_end() and contains() should be fine.
2018-09-22 07:48:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:48:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 07:49:03	Moongoodboy{K}	else if the lines in the files are known to be reasonably small, lines() and starts_with() are easy to code and should also be fine
2018-09-22 07:49:32	ibrokemypie	the files are between 15-50 lines long
2018-09-22 07:49:39	Moongoodboy{K}	else, you'll need to break out the buffers and stuff (but someone else has probably done this already) (does ripgrep have a lib crate yet?)
2018-09-22 07:49:41	ibrokemypie	the line that matches should be in the first 5 or so
2018-09-22 07:50:02	-->	cgull (cgull@moz-u3u.ol1.15.216.IP) has joined #rust-beginners
2018-09-22 07:50:10	<--	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 07:51:19	<--	cgull (cgull@moz-u3u.ol1.15.216.IP) has quit (Connection closed)
2018-09-22 07:51:27	-->	cgull (cgull@moz-u3u.ol1.15.216.IP) has joined #rust-beginners
2018-09-22 07:51:30	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-22 07:52:29	-->	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-22 07:52:31	<--	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 07:52:32	-->	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-22 07:55:42	-->	siddhart_ (siddharthar@moz-mjr.rrb.116.199.IP) has joined #rust-beginners
2018-09-22 07:55:51	ibrokemypie	what is the best way to write a match for string.starts_with()?
2018-09-22 07:56:07	<--	ystreet00 (ystreet00@moz-mkp.lgm.200.185.IP) has quit (Quit: Quit)
2018-09-22 07:56:30	ibrokemypie	In the lines loop, have a few options that it can start witht aht I want to change a variable to different values depending which one it is, and break the loop if any are found
2018-09-22 07:56:53	-->	ufobat___ (Martin@moz-0injkc.dyn.telefonica.de) has joined #rust-beginners
2018-09-22 07:56:58	-->	Aankhen`` (notasquid@moz-cqe.k3h.207.49.IP) has joined #rust-beginners
2018-09-22 07:57:27	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 07:58:08	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-22 07:58:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 07:58:32	<--	siddhartharao17 (siddharthar@moz-hm3o48.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 07:59:32	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-22 08:00:37	<--	orph (orph@moz-sa4c8n.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 08:01:16	-->	ystreet00 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has joined #rust-beginners
2018-09-22 08:02:54	<--	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 08:03:36	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:03:43	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:04:02	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 08:04:16	Moongoodboy{K}	!xy @ ibrokemypie
2018-09-22 08:04:16	+rustbot	ibrokemypie: The XY problem is asking about the solution you've attempted, when there may be a better approach to your problem if you explain it in full. More at https://meta.stackexchange.com/a/66378
2018-09-22 08:04:20	Moongoodboy{K}	what are you trying to do?
2018-09-22 08:04:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 08:05:00	ibrokemypie	trying to determine which of a set of substrings are in a file, and set the value of a variable based on which substring is found
2018-09-22 08:05:21	-->	nicholas_ (nicholasf@moz-f59.154.121.221.IP) has joined #rust-beginners
2018-09-22 08:05:40	ibrokemypie	eg if the file contains "one", let foo = 1, if "two", let foo = 2
2018-09-22 08:08:05	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-22 08:08:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 08:09:22	Moongoodboy{K}	why though?
2018-09-22 08:09:37	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-22 08:10:22	ibrokemypie	to determine what checksum type a package uses in it's pkgbuild
2018-09-22 08:10:39	ibrokemypie	itll either have "md5sums=()" or "sha256sums=()
2018-09-22 08:10:41	ibrokemypie	etc
2018-09-22 08:11:02	ibrokemypie	so I want to store which one (md5, sha1, sha256 etc) in a variable
2018-09-22 08:11:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:11:50	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 08:12:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 08:13:49	<--	ystreet00 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has quit (Quit: Quit)
2018-09-22 08:14:42	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 08:15:26	<--	BearOfJade (Alex@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:16:55	-->	ystreet00 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has joined #rust-beginners
2018-09-22 08:17:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:18:44	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 08:20:01	-->	dark-knight (dark-knight@moz-2ipqti.highway.telekom.at) has joined #rust-beginners
2018-09-22 08:20:21	<--	ystreet00 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has quit (Quit: Quit)
2018-09-22 08:21:42	-->	castilho (castilho@moz-tpr4o4.s0tm.pvhs.014c.2804.IP) has joined #rust-beginners
2018-09-22 08:23:35	<--	muvlon_ (muvlon@moz-pd0.rrf.132.109.IP) has quit (Quit: Leaving)
2018-09-22 08:23:40	-->	ystreet00 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has joined #rust-beginners
2018-09-22 08:25:47	<--	castilho (castilho@moz-tpr4o4.s0tm.pvhs.014c.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 08:26:28	ibrokemypie	is it not possible?
2018-09-22 08:29:30	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 08:29:54	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 08:30:03	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 08:30:55	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-22 08:31:21	<--	Shankar (Shankar@moz-dsmp3l.fmuq.5sju.4072.2409.IP) has quit (Quit: Leaving)
2018-09-22 08:31:55	-->	liquidnight (marcus@moz-m8b6sm.1i2a.7t11.0c23.2a01.IP) has joined #rust-beginners
2018-09-22 08:32:03	ibrokemypie	alright, just doing if, else if, else if
2018-09-22 08:33:25	<--	nicholas_ (nicholasf@moz-f59.154.121.221.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 08:33:36	<--	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-22 08:34:13	<--	ystreet00 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has quit (Quit: Quit)
2018-09-22 08:35:42	<--	pingwin (brian@moz-r6puto.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-22 08:37:14	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-22 08:37:15	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Quit: )
2018-09-22 08:39:03	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:43:20	<--	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 08:43:37	-->	ystreet00 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has joined #rust-beginners
2018-09-22 08:44:03	-->	DonnazB96 (Mibbit@moz-rf3.v60.252.185.IP) has joined #rust-beginners
2018-09-22 08:44:43	DonnazB96	Hello
2018-09-22 08:47:09	<--	ibrokemypie (conor@moz-rne.pre.136.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 08:47:47	<--	ystreet00 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has quit (Quit: Quit)
2018-09-22 08:51:08	-->	ystreet00 (ystreet00@moz-mkp.lgm.200.185.IP) has joined #rust-beginners
2018-09-22 08:52:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 08:52:25	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 08:52:30	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 08:52:32	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 08:53:47	-->	ccb23 (Mibbit@moz-i10j1b.dsl.tropolys.de) has joined #rust-beginners
2018-09-22 08:54:02	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 08:54:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-22 08:54:24	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 08:54:34	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 08:55:07	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 08:55:57	<--	tumdum_ (tumdum@moz-qsmo8l.dynamic.chello.pl) has quit (Connection closed)
2018-09-22 08:56:02	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 08:56:11	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-22 08:56:18	-->	tumdum_ (tumdum@moz-qsmo8l.dynamic.chello.pl) has joined #rust-beginners
2018-09-22 08:56:34	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:56:34	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:56:35	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:56:42	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 08:57:09	-->	eyans (a@moz-h65qmk.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-22 08:58:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 09:01:52	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 09:03:13	-->	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has joined #rust-beginners
2018-09-22 09:04:37	-->	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-22 09:04:44	<--	ccb23 (Mibbit@moz-i10j1b.dsl.tropolys.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 09:07:14	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 09:08:13	<--	DonnazB96 (Mibbit@moz-rf3.v60.252.185.IP) has quit (G-Lined: no spamming here)
2018-09-22 09:09:00	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 09:09:57	-->	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 09:10:13	-->	holmgr_ (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 09:11:04	<--	recesfulu (recesfulu@moz-m5dmnr.pool6.digikabel.hu) has quit (Ping timeout: 121 seconds)
2018-09-22 09:11:16	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-22 09:13:02	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 09:13:58	<--	liquidnight (marcus@moz-m8b6sm.1i2a.7t11.0c23.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 09:14:15	<--	holmgr_ (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-22 09:14:43	-->	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 09:15:14	-->	martin2 (martin@moz-cus7jo.anteldata.net.uy) has joined #rust-beginners
2018-09-22 09:16:33	<--	martin1 (martin@moz-466pac.anteldata.net.uy) has quit (Connection closed)
2018-09-22 09:18:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 09:23:30	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-22 09:23:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 09:24:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-22 09:24:12	-->	recesfulu (recesfulu@moz-k4acsh.pool6.digikabel.hu) has joined #rust-beginners
2018-09-22 09:26:08	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 09:27:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 09:27:31	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 09:28:58	<--	JAlbers (jalbers@moz-e8t2c8.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 09:29:14	-->	liquidnight (marcus@moz-0qluc7.p0sp.9aop.0c22.2a01.IP) has joined #rust-beginners
2018-09-22 09:30:04	<--	adi (adi@moz-omejp7.vsos.ethz.ch) has quit (Quit: und weg.)
2018-09-22 09:30:05	<--	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Connection closed)
2018-09-22 09:32:02	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-22 09:32:05	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-22 09:35:27	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 09:36:05	-->	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has joined #rust-beginners
2018-09-22 09:39:29	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 09:39:48	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-22 09:41:48	<--	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-22 09:42:09	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 09:48:06	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-22 09:48:32	<--	dark-knight (dark-knight@moz-2ipqti.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-22 09:49:36	-->	mib_fcmbtr (Mibbit@moz-5o2b2i.abo.wanadoo.fr) has joined #rust-beginners
2018-09-22 09:49:37	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 09:50:14	mib_fcmbtr	greetings
2018-09-22 09:50:53	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 09:52:49	<--	siddhart_ (siddharthar@moz-mjr.rrb.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 09:52:49	mib_fcmbtr	is the rustup installer supposed to work on osx high sierra ?
2018-09-22 09:52:58	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 09:53:39	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 09:54:02	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 09:54:13	mib_fcmbtr	ok, got it, it fails it ~/.cargo already exists
2018-09-22 09:55:00	<--	mib_fcmbtr (Mibbit@moz-5o2b2i.abo.wanadoo.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 09:57:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 10:00:13	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 10:00:43	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Ping timeout: 121 seconds)
2018-09-22 10:01:16	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 10:02:23	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-22 10:02:58	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 10:04:15	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-22 10:05:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 10:06:09	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-22 10:07:00	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 10:10:36	<--	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has quit (Quit: Leaving)
2018-09-22 10:10:46	-->	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has joined #rust-beginners
2018-09-22 10:11:22	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 10:17:07	<--	tumdum_ (tumdum@moz-qsmo8l.dynamic.chello.pl) has quit (Quit: Leaving)
2018-09-22 10:19:45	-->	ibrokemypie (conor@moz-rne.pre.136.1.IP) has joined #rust-beginners
2018-09-22 10:20:12	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 10:20:23	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 10:21:28	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (The TLS connection was non-properly terminated.)
2018-09-22 10:22:40	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 10:23:49	<--	ibrokemypie (conor@moz-rne.pre.136.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 10:25:24	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-22 10:25:43	-->	gallatin (gallatin@moz-ko4nr2.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 10:29:29	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 10:31:02	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 10:32:08	<--	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has quit (Client exited)
2018-09-22 10:33:19	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-22 10:33:31	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 10:34:16	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 10:34:33	-->	gunther (Mibbit@moz-2leusb.staticip.rima-tde.net) has joined #rust-beginners
2018-09-22 10:37:48	<--	liquidnight (marcus@moz-0qluc7.p0sp.9aop.0c22.2a01.IP) has quit (Connection closed)
2018-09-22 10:38:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 10:39:09	-->	Frans-Willem (quassel@moz-oa4g6h.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-22 10:40:12	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 10:40:16	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 10:40:18	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 10:41:39	-->	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has joined #rust-beginners
2018-09-22 10:46:38	-->	aaja (Mibbit@moz-fn7.t0q.100.101.IP) has joined #rust-beginners
2018-09-22 10:47:00	aaja	hey all, quick question, can match be used like C switch statement
2018-09-22 10:47:09	aaja	without necessarily evaluating to a return value on any arm?
2018-09-22 10:50:05	Yaniel	aaja: everything evaluates to something in Rust
2018-09-22 10:50:13	Yaniel	but you can make all arms evaluate to ()
2018-09-22 10:50:46	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 10:51:26	Yaniel	so yes, you can use match like a switch statement
2018-09-22 10:51:28	-->	jamadazi (jamadazi@moz-o6391e.ddns.bulsat.com) has joined #rust-beginners
2018-09-22 10:52:15	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-22 10:52:27	jamadazi	what is the easiest way to figure out what type the compiler has inferred for a local variable / let binding?
2018-09-22 10:52:38	jamadazi	how do i figure out the type of something in my code?
2018-09-22 10:54:50	<--	martin2 (martin@moz-cus7jo.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-22 10:56:17	Aankhen``	jamadazi: The hacky way I’ve been using is to declare it as an obviously incorrect type and checking the error message.
2018-09-22 10:56:29	Aankhen``	s/checking/check/
2018-09-22 10:57:11	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 10:57:25	Aankhen``	I believe one of the things RLS does is let you see these types in your IDE, but I can’t get the package to work with Emacs so… *shrugs*
2018-09-22 10:57:42	jamadazi	or what i just did, made it mutable and assigned an obviously incorrect type to it to get a type mismatch error
2018-09-22 10:57:45	jamadazi	but yeah
2018-09-22 10:57:51	jamadazi	there are probably better ways
2018-09-22 10:58:50	-->	der_alex980-M (deralex980@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-22 10:58:51	Moongoodboy{K}	let () = foo;  // the Thing To Do seems to be force a type error, like so
2018-09-22 10:59:18	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 11:00:55	-->	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-09-22 11:00:58	-->	Aqo (Aqo@moz-11t4ij.inter.net.il) has joined #rust-beginners
2018-09-22 11:01:13	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 11:02:21	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 11:02:39	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 11:03:29	<--	gunther (Mibbit@moz-2leusb.staticip.rima-tde.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 11:03:34	justsomequestions	which newtype_derive do I use ona struct Id(u32); to use it as index?
2018-09-22 11:03:43	justsomequestions	the index derive makes an array indexable as I understand it
2018-09-22 11:04:15	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 11:04:56	<--	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 11:06:26	scottmcm	eval: " Moongoodboy{K} " as () // I prefer this, since it puts the type in the first line
2018-09-22 11:06:28	--	Notice(eval): error[E0605]: non-primitive cast: `&'static str` as `()`
2018-09-22 11:06:30	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=62950f76942db98afd91b10deda419d5&version=stable&mode=debug
2018-09-22 11:06:40	scottmcm	eval: let () = " compare this, which doesn't "
2018-09-22 11:06:42	--	Notice(eval): error: expected one of `.`, `;`, `?`, or an operator, found `}`
2018-09-22 11:06:45	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=e7cbdbed3e01d7bfbd0965788d5b3652&version=stable&mode=debug
2018-09-22 11:06:45	scottmcm	eval: let () = " compare this, which doesn't ";
2018-09-22 11:06:47	--	Notice(eval): error[E0308]: mismatched types
2018-09-22 11:06:49	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=e1e9ea4ea9591c0ccc94ef76fe7193a8&version=stable&mode=debug
2018-09-22 11:07:08	-->	Aqo_ (Aqo@moz-11t4ij.inter.net.il) has joined #rust-beginners
2018-09-22 11:07:15	Aankhen``	scottmcm: Nice!
2018-09-22 11:07:18	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Ping timeout: 121 seconds)
2018-09-22 11:07:33	--	Aqo_ is now known as Aqo
2018-09-22 11:07:58	scottmcm	eval: ["or if you want to be a bit cuter"; 2].what_type_is_this()
2018-09-22 11:08:00	--	Notice(eval): error[E0599]: no method named `what_type_is_this` found for type `[&str; 2]` in the current scope
2018-09-22 11:08:02	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=066182533a1e5b5e307f0247340a7768&version=stable&mode=debug
2018-09-22 11:09:11	Moongoodboy{K}	eval: "isn't this just as slightly-cuter?".what_type_is_this()
2018-09-22 11:09:13	--	Notice(eval): error[E0599]: no method named `what_type_is_this` found for type `&'static str` in the current scope
2018-09-22 11:09:15	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=a01abb9975a63aae9539897e22f44598&version=stable&mode=debug
2018-09-22 11:09:41	scottmcm	eval: "actually, what about fields...".typeck
2018-09-22 11:09:44	--	Notice(eval): error[E0609]: no field `typeck` on type `&'static str`
2018-09-22 11:09:46	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=0a9b1f9fbe5078e928d44d669c0f8f06&version=stable&mode=debug
2018-09-22 11:10:20	Moongoodboy{K}	...can we get that two-second delay dropped? It messes with my notifications :<
2018-09-22 11:10:38	Moongoodboy{K}	maybe implement slightly smarter client-side flood control
2018-09-22 11:10:42	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 11:10:48	Moongoodboy{K}	network won't kick you until you've posted /five/ messages!
2018-09-22 11:11:10	scottmcm	I wonder if the 2 seconds is it waiting for the gist, though
2018-09-22 11:11:38	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-22 11:12:42	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
2018-09-22 11:13:17	<--	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 11:15:41	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Connection closed)
2018-09-22 11:15:47	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-22 11:17:36	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-22 11:18:44	-->	hash (hash@moz-0fihli.5l3r.k5h2.0ee2.2a00.IP) has joined #rust-beginners
2018-09-22 11:19:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 11:20:03	-->	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has joined #rust-beginners
2018-09-22 11:20:40	Moongoodboy{K}	scottmcm: you mean, after it already has the first line of output?
2018-09-22 11:21:20	scottmcm	yes.  I assume it doesn't get a gist unless it fails, which it finds out at the same time it has the output
2018-09-22 11:21:36	scottmcm	though yes, 2s does seem too long for those round trips
2018-09-22 11:23:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 11:24:38	justsomequestions	where should my extern crate stuff go?
2018-09-22 11:24:43	justsomequestions	into every file that uses that crate?
2018-09-22 11:24:50	justsomequestions	or just everything to main.rs?
2018-09-22 11:27:30	dpc1	everything in crate root (main.rs)
2018-09-22 11:28:43	-->	leward (leward@moz-s5t.oou.252.103.IP) has joined #rust-beginners
2018-09-22 11:30:09	scottmcm	(and look forward to rust 2018 where they won't be needed any more)
2018-09-22 11:30:32	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 11:30:46	<--	jamadazi (jamadazi@moz-o6391e.ddns.bulsat.com) has quit (Ping timeout: 121 seconds)
2018-09-22 11:31:49	justsomequestions	how won't they be needed anymore? because cargo automatically imports them with the cargo.toml?
2018-09-22 11:31:53	justsomequestions	dpc1: thank you
2018-09-22 11:32:03	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-22 11:32:23	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Ping timeout: 121 seconds)
2018-09-22 11:33:03	-->	jamadazi (jamadazi@moz-o6391e.ddns.bulsat.com) has joined #rust-beginners
2018-09-22 11:33:08	scottmcm	justsomequestions: yes, cargo will pass rustc flags for them from your toml
2018-09-22 11:33:35	Moongoodboy{K}	...oh, huh.
2018-09-22 11:33:42	justsomequestions	ah very intersting
2018-09-22 11:33:51	Moongoodboy{K}	scottmcm: still weird, though, considering that that didn't used to be the case
2018-09-22 11:33:58	justsomequestions	but if I would compile with rustc I would still have to pass the flags or use extern crate?
2018-09-22 11:34:10	scottmcm	yup.
2018-09-22 11:34:17	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 11:34:31	scottmcm	and `extern crate` isn't removed; it'll still be possible to use it if you prefer
2018-09-22 11:34:34	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-22 11:34:41	justsomequestions	how does linking actually work in rust?
2018-09-22 11:34:46	justsomequestions	does cargo do all of it behind the scene?
2018-09-22 11:35:39	 *	scottmcm doesn't actually know that
2018-09-22 11:37:10	justsomequestions	but thanks for the other tips
2018-09-22 11:37:12	justsomequestions	:)
2018-09-22 11:37:53	Moongoodboy{K}	rustc actually invokes ld(1), doesn't it?
2018-09-22 11:38:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 11:41:58	<--	qfire (qfire@moz-vq63an.CC.CMU.EDU) has quit (Ping timeout: 121 seconds)
2018-09-22 11:43:10	<--	starblue (juergen@moz-hqetfg.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-22 11:43:35	-->	qfire (qfire@moz-vq63an.CC.CMU.EDU) has joined #rust-beginners
2018-09-22 11:47:19	<--	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-22 11:50:10	leward	Hello with Cargo how is the version of transitive dependencies resolved? I am using Rust Nightly (1.30), and using `cargo tree` I have `rocket v0.3.16` which brings `pear_codegen v0.0.19`.
2018-09-22 11:51:28	leward	I compared with the hello_world example from rocket.rs here: https://rocket.rs/guide/quickstart/) and it shows that `rocket v0.3.16` brings `pear_codegen v0.0.20`
2018-09-22 11:51:54	leward	I am wondering where the difference comes from (especially that because of that my project does not build anymore) 
2018-09-22 11:52:25	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 11:53:07	leward	Ooooh... That might be beacuse of Cargo.lock
2018-09-22 11:54:07	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 11:54:27	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-22 11:56:32	leward	Yes that was it, running `cargo update` fixed it :) 
2018-09-22 11:56:52	<--	jamadazi (jamadazi@moz-o6391e.ddns.bulsat.com) has quit (Quit: WeeChat 2.2)
2018-09-22 11:57:14	-->	bjorn3_ (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-22 11:58:45	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Connection closed)
2018-09-22 12:00:54	-->	starblue (juergen@moz-hqetfg.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 12:03:43	<--	aaja (Mibbit@moz-fn7.t0q.100.101.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 12:04:46	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 12:07:09	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-22 12:07:30	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 12:07:57	<--	xet7 (xet7@moz-9dktqv.rev.dnainternet.fi) has quit (The TLS connection was non-properly terminated.)
2018-09-22 12:08:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 12:10:09	justsomequestions	does anyone know how I can use custom_derive to make a struct Id(u32); usable as an index?
2018-09-22 12:11:12	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-22 12:11:32	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-22 12:12:58	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 12:15:02	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 12:16:25	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-22 12:17:31	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-22 12:19:58	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 12:20:39	<--	hash (hash@moz-0fihli.5l3r.k5h2.0ee2.2a00.IP) has quit (Quit: IRC for Sailfish 1.0-alpha)
2018-09-22 12:21:39	<--	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has quit (Quit: Leaving)
2018-09-22 12:25:21	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 12:25:55	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 12:27:13	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-22 12:30:11	-->	dark-knight (dark-knight@moz-2ipqti.highway.telekom.at) has joined #rust-beginners
2018-09-22 12:30:11	<--	eyans (a@moz-h65qmk.878i.pbkb.2002.2001.IP) has quit (Connection closed)
2018-09-22 12:30:43	-->	Dariost (Dariost@moz-euo.lj4.20.151.IP) has joined #rust-beginners
2018-09-22 12:31:45	-->	karinqe (karinqe@moz-r4v86o.bb.dnainternet.fi) has joined #rust-beginners
2018-09-22 12:35:55	<--	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 12:40:08	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (The TLS connection was non-properly terminated.)
2018-09-22 12:40:46	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-22 12:41:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 12:42:55	<--	SWW13 (SWW13@moz-4fok16.brn.li) has quit (Quit: You know you're gonna miss me when I'm gone.)
2018-09-22 12:43:48	<--	gallatin (gallatin@moz-ko4nr2.pools.vodafone-ip.de) has quit (Connection closed)
2018-09-22 12:45:36	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 12:46:14	-->	SWW13 (SWW13@moz-4fok16.brn.li) has joined #rust-beginners
2018-09-22 12:48:08	-->	liquidnight (marcus@moz-0qluc7.p0sp.9aop.0c22.2a01.IP) has joined #rust-beginners
2018-09-22 12:48:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 12:49:20	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 12:49:34	<--	oms (oms@moz-1ijooc.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-22 12:49:45	<--	dark-knight (dark-knight@moz-2ipqti.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-22 12:51:11	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 12:52:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 12:53:44	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-22 12:55:40	-->	xet7 (xet7@moz-smnqum.rev.dnainternet.fi) has joined #rust-beginners
2018-09-22 12:57:54	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-22 12:59:31	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-22 13:04:00	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 13:05:26	-->	Raychen (Thunderbird@moz-heu.oqn.181.60.IP) has joined #rust-beginners
2018-09-22 13:05:55	<--	Raychen (Thunderbird@moz-heu.oqn.181.60.IP) has quit (Client exited)
2018-09-22 13:06:03	-->	dthul_ (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-22 13:07:12	<--	dthul_ (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Connection closed)
2018-09-22 13:12:08	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-22 13:12:24	-->	ysz (ysz@moz-q7k.ds2.161.95.IP) has joined #rust-beginners
2018-09-22 13:12:44	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 13:12:48	-->	maierh (maierh@moz-3t35d9.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 13:15:42	-->	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has joined #rust-beginners
2018-09-22 13:16:26	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-22 13:18:34	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 13:21:19	<--	SenasOzys__ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-22 13:22:37	-->	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has joined #rust-beginners
2018-09-22 13:24:45	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-22 13:25:03	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-22 13:25:04	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 13:26:14	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 13:27:01	<--	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has quit (Client exited)
2018-09-22 13:27:45	-->	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has joined #rust-beginners
2018-09-22 13:29:06	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 13:29:26	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-22 13:29:28	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-22 13:29:40	-->	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has joined #rust-beginners
2018-09-22 13:29:41	<--	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has quit (Client exited)
2018-09-22 13:31:22	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-22 13:34:19	<--	luizdepra (luizdepra@moz-o99kto.7lsd.eidl.1284.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 13:34:32	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-22 13:34:36	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 13:35:03	<--	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 13:38:02	-->	SenasOzys__ (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-22 13:39:58	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-22 13:42:32	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-22 13:42:48	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-22 13:44:00	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 13:44:12	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 13:45:07	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 13:46:44	<--	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has quit (Quit: Konversation terminated!)
2018-09-22 13:49:11	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 13:50:09	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 13:50:09	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (Connection closed)
2018-09-22 13:50:11	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 13:50:17	-->	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has joined #rust-beginners
2018-09-22 13:53:16	<--	bjorn3_ (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-22 13:54:10	<--	maierh (maierh@moz-3t35d9.dip0.t-ipconnect.de) has left #rust-beginners ("Leaving")
2018-09-22 13:54:10	<--	liquidnight (marcus@moz-0qluc7.p0sp.9aop.0c22.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 13:54:48	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-22 13:55:23	-->	Raychen (Thunderbird@moz-heu.oqn.181.60.IP) has joined #rust-beginners
2018-09-22 13:55:26	<--	Raychen (Thunderbird@moz-heu.oqn.181.60.IP) has quit (Client exited)
2018-09-22 13:59:21	-->	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-22 13:59:53	<--	ysz (ysz@moz-q7k.ds2.161.95.IP) has quit (Quit: This computer has gone to sleep)
2018-09-22 14:01:05	-->	alatiera (alatiera@moz-6rmkee.access.hol.gr) has joined #rust-beginners
2018-09-22 14:01:51	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 14:02:33	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-22 14:02:42	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 14:03:19	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-22 14:04:25	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-22 14:05:13	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 14:05:26	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 14:05:54	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-22 14:06:14	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 14:08:11	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Connection closed)
2018-09-22 14:08:36	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-22 14:10:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 14:10:24	-->	liquidnight (marcus@moz-rhn3jk.aqj0.c1im.0c23.2a01.IP) has joined #rust-beginners
2018-09-22 14:12:31	-->	Aqo (Aqo@moz-11t4ij.inter.net.il) has joined #rust-beginners
2018-09-22 14:12:39	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 14:13:16	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-22 14:14:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 14:17:08	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 14:18:06	<--	heftig (heftig@soyuz.archlinux.org) has quit (Ping timeout: 121 seconds)
2018-09-22 14:19:23	-->	heftig (heftig@soyuz.archlinux.org) has joined #rust-beginners
2018-09-22 14:21:22	-->	oms (oms@moz-1ijooc.dyn.telefonica.de) has joined #rust-beginners
2018-09-22 14:21:50	-->	AtumT (IRC@moz-soe.d2s.113.187.IP) has joined #rust-beginners
2018-09-22 14:21:52	-->	Discovery (Discovery@moz-os6.vua.72.188.IP) has joined #rust-beginners
2018-09-22 14:22:53	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 14:23:20	sparky8251	if a test uses println!, it should print to the console even when "cargo test" is used, right?
2018-09-22 14:23:22	<--	Aqo (Aqo@moz-11t4ij.inter.net.il) has quit (Ping timeout: 121 seconds)
2018-09-22 14:24:14	GreenJello	sparky8251, maybe eprintln will work
2018-09-22 14:24:56	ced_c	Hey, I'm playing with hyper and follow this exemple https://github.com/hyperium/hyper/blob/master/examples/client.rs#L35 . Just wondering how main() can know if fetch_url encountered an error?
2018-09-22 14:25:08	GreenJello	sparky8251, I found this which recommends `cargo test -- --nocapture`  https://stackoverflow.com/questions/25106554/why-doesnt-println-work-in-rust-unit-tests
2018-09-22 14:27:30	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 14:29:07	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-22 14:30:22	--	phyber_ is now known as phyber
2018-09-22 14:30:30	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 14:30:50	sparky8251	GreenJello: there we go! thanks man. tests claimed to be passing, but it was hard saying it was passing properly given the no output.
2018-09-22 14:37:51	-->	jbl007 (justme@moz-hgk1cl.3a7l.lldm.810a.2a02.IP) has joined #rust-beginners
2018-09-22 14:38:10	<--	karinqe (karinqe@moz-r4v86o.bb.dnainternet.fi) has quit (Quit: WeeChat 0.4.2)
2018-09-22 14:40:11	-->	zippity (Mibbit@moz-9ou.nv7.140.61.IP) has joined #rust-beginners
2018-09-22 14:40:32	<--	zippity (Mibbit@moz-9ou.nv7.140.61.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 14:41:03	-->	eijebong (eijebong@moz-givlne.abo.wanadoo.fr) has joined #rust-beginners
2018-09-22 14:41:58	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 14:42:07	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 14:42:10	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 14:42:12	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-22 14:42:22	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-22 14:42:37	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-22 14:44:55	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-22 14:45:09	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-22 14:45:14	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-22 14:45:18	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-22 14:45:43	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-22 14:45:47	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 14:48:55	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-22 14:49:19	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-22 14:51:33	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 14:52:21	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Connection closed)
2018-09-22 14:53:33	-->	reedlepee (Mibbit@moz-dlb.3pl.149.169.IP) has joined #rust-beginners
2018-09-22 14:54:10	reedlepee	how to create a local funtion inside rust ... I used to make a label in c++ and just call it for use
2018-09-22 14:55:36	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-22 14:55:39	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Connection closed)
2018-09-22 14:55:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 14:55:59	<--	alatiera (alatiera@moz-6rmkee.access.hol.gr) has quit (Quit: Leaving)
2018-09-22 14:56:09	<--	Fr0stBit (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-22 14:56:19	<--	avnsgt (avnsgt@moz-m3v.gb9.35.65.IP) has quit (Connection closed)
2018-09-22 14:59:21	-->	Uther1 (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-22 14:59:47	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 14:59:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:01:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 15:01:49	--	Uther1 is now known as Uther
2018-09-22 15:02:27	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 15:02:47	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 15:02:47	-->	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has joined #rust-beginners
2018-09-22 15:03:19	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-22 15:03:22	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 15:03:23	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (Connection closed)
2018-09-22 15:03:25	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 15:03:32	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 15:05:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:05:27	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:05:27	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:06:49	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:07:09	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 15:07:18	<--	reedlepee (Mibbit@moz-dlb.3pl.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 15:07:29	justsomequestions	what are the usecases where I want to have a mod that contains public functions but not have pub mod xyz;
2018-09-22 15:07:41	justsomequestions	or to phrase it differently: when do I not do pub mod xyz?
2018-09-22 15:08:22	<--	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has quit (Connection closed)
2018-09-22 15:08:45	-->	soren_ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 15:08:45	-->	soren (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 15:08:49	-->	soren__ (soren@moz-ffotmo.as13285.net) has joined #rust-beginners
2018-09-22 15:08:54	dpc1	justsomequestions: not having pub mod means those structs can't be used anywhere even though they are public
2018-09-22 15:09:05	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-22 15:09:29	justsomequestions	so as soon as I would make anything pub in my mod xyz I would also add pub to the mod xyz; statement everywhere?
2018-09-22 15:10:04	dpc1	everywhere?
2018-09-22 15:10:32	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 15:12:52	justsomequestions	ok let it ask me like this: what scenario would lead me to have a mod xyz; (without pub) but with pub members inside?
2018-09-22 15:13:58	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 15:14:08	<--	gregg (greg@moz-00mjdg.gnumpf.tk) has quit (Connection closed)
2018-09-22 15:14:31	justsomequestions	or actually what is the point of a mod xyz; without public anyways if you can't use it?
2018-09-22 15:14:33	dpc1	that will happen if you don't want the pub to "public" i.e. used in other modules or outside the crate
2018-09-22 15:14:34	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:14:53	dpc1	because sometimes you want to have a mod that you don't want to expose (you don't expect the user to use it)
2018-09-22 15:15:00	justsomequestions	ah you can just your parents cannot right
2018-09-22 15:15:07	dpc1	yes
2018-09-22 15:15:12	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 15:15:14	justsomequestions	ahh pub basically means adding the mod also to your own mods interface
2018-09-22 15:15:25	justsomequestions	where without pub it means I just need it but it is not part of my interface to the outside?
2018-09-22 15:15:31	dpc1	yep
2018-09-22 15:15:36	justsomequestions	many thanks! :)
2018-09-22 15:15:42	<--	soren__ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:15:43	<--	soren_ (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:15:45	<--	soren (soren@moz-ffotmo.as13285.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:16:03	dpc1	you also have pub(crate) which makes it "public to the entire crate" but not outside (also pub(super) and pub(in some::path))
2018-09-22 15:17:35	-->	morton (Mibbit@moz-gpq6s9.rev.numericable.fr) has joined #rust-beginners
2018-09-22 15:17:40	morton	Hello
2018-09-22 15:17:49	justsomequestions	ah ok good to know
2018-09-22 15:18:03	-->	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has joined #rust-beginners
2018-09-22 15:18:03	-->	kermie (Mibbit@moz-v7b7ce.direct-adsl.nl) has joined #rust-beginners
2018-09-22 15:18:06	justsomequestions	is there any reason why one would have a public method on a struct but the struct itself not public?
2018-09-22 15:18:08	morton	Is there a rust regex or regex-like library where you can match char by char instead of testing if a complete string or part of it matches? 
2018-09-22 15:18:43	-->	danecando (danecando@moz-60dlku.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-22 15:18:46	morton	as in initialize the regex and feed it chars and see if it can continue, the same way the internal match would do when feeding the state machine for example
2018-09-22 15:19:14	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:20:52	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-22 15:21:10	dpc1	justsomequestions: no reason
2018-09-22 15:21:18	-->	blaztinn (blaztinn@moz-binvad.dynamic.t-2.net) has joined #rust-beginners
2018-09-22 15:22:11	justsomequestions	ok good then I think I understood it right, thank you for your help
2018-09-22 15:22:57	dpc1	no problem :)
2018-09-22 15:23:03	-->	JAlbers (jalbers@moz-gbmisn.il.comcast.net) has joined #rust-beginners
2018-09-22 15:23:06	-->	re-l124c41 (re-l124c41@moz-o2t8qb.4kh6.ni31.0908.2a02.IP) has joined #rust-beginners
2018-09-22 15:24:14	<--	kermie (Mibbit@moz-v7b7ce.direct-adsl.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 15:24:25	blaztinn	Hi guys, noob question here. Why doesn't the `fails` function compile? https://play.rust-lang.org/?gist=f4e3c7828bcb6bc9b2453386228cc66e&version=stable&mode=debug&edition=2015 Aren't blocks expressions?
2018-09-22 15:26:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 15:27:05	<--	JAlbers (jalbers@moz-gbmisn.il.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:30:58	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 15:31:22	-->	tvincent (tvincent@moz-ssa2kb.fbx.proxad.net) has joined #rust-beginners
2018-09-22 15:32:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:32:59	<--	cpl (cpl@moz-vcfefs.dyn.forthnet.gr) has quit (Ping timeout: 121 seconds)
2018-09-22 15:34:35	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 15:35:00	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:36:03	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-22 15:37:16	<--	morton (Mibbit@moz-gpq6s9.rev.numericable.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 15:38:32	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:38:36	-->	mandeep (mandeep@moz-qt0dau.dyn.columbia.edu) has joined #rust-beginners
2018-09-22 15:38:48	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 15:38:54	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 15:39:00	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-22 15:40:26	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-22 15:40:42	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 15:40:43	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 15:40:45	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-22 15:41:05	<--	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:41:14	<--	SenasOzys__ (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:41:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 15:42:50	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:43:21	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 15:44:20	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 15:44:21	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 15:45:06	<--	dmc (dmc@moz-9c65la.fios.verizon.net) has quit (Quit: WeeChat 2.2)
2018-09-22 15:45:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 15:46:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:47:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 15:47:28	-->	dmc (dmc@moz-nkuf2e.east.verizon.net) has joined #rust-beginners
2018-09-22 15:48:52	justsomequestions	would this be effectively a delete method: delete(self){}?
2018-09-22 15:49:22	justsomequestions	or actually just a general delete<T>(to_del: T){}
2018-09-22 15:49:44	justsomequestions	I mean it doesn't delete anything until it goes out of scope but it would prevent me from ever using it again
2018-09-22 15:50:39	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-22 15:50:49	GreenJello	justsomequestions, in the stdlib... pub fn drop<T>(_x: T) { }
2018-09-22 15:50:51	GreenJello	justsomequestions, so, yes
2018-09-22 15:51:11	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-22 15:51:15	GreenJello	https://doc.rust-lang.org/std/mem/fn.drop.html
2018-09-22 15:52:37	justsomequestions	GreenJello: oh how nice, thank you
2018-09-22 15:53:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:54:32	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-22 15:54:46	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 15:54:57	-->	cpl (cpl@moz-vcfefs.dyn.forthnet.gr) has joined #rust-beginners
2018-09-22 15:55:22	-->	castilho (castilho@moz-9ptd0q.juvh.pa8h.0214.2804.IP) has joined #rust-beginners
2018-09-22 15:56:35	Moongoodboy{K}	justsomequestions: as long as the T is not Copy and not a reference :)
2018-09-22 15:57:43	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 15:57:49	justsomequestions	yes right, thanks
2018-09-22 15:58:15	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 15:58:38	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 15:59:45	<--	dmc (dmc@moz-nkuf2e.east.verizon.net) has quit (Quit: WeeChat 2.2)
2018-09-22 15:59:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:01:18	Moongoodboy{K}	Expression : BlockExpression | OperatorExpression | ..
2018-09-22 16:01:28	Moongoodboy{K}	OperatorExpression : ArithmeticOrLogicalExpression | ..
2018-09-22 16:01:57	Moongoodboy{K}	ArithmeticOrLogicalExpression : Expression `+` Expression | ..
2018-09-22 16:02:17	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 16:02:49	Moongoodboy{K}	BlockExpression : `{` InnerAttribute* Statement* Expression? `}`
2018-09-22 16:03:08	-->	dmc (dmc@moz-vii1ts.east.verizon.net) has joined #rust-beginners
2018-09-22 16:03:17	Moongoodboy{K}	yeah, I can't figure out why `{2} + {2}` isn't valid
2018-09-22 16:03:55	-->	ysz (ysz@moz-g0c268.cust.smartspb.net) has joined #rust-beginners
2018-09-22 16:04:42	<--	castilho (castilho@moz-9ptd0q.juvh.pa8h.0214.2804.IP) has quit (Connection closed)
2018-09-22 16:05:04	-->	castilho (castilho@moz-9ptd0q.juvh.pa8h.0214.2804.IP) has joined #rust-beginners
2018-09-22 16:05:23	blaztinn	Moongoodboy{K}: Thx for checking it out! Because it seems to me it should work too. Will file a bug if I don't find out the cause :)
2018-09-22 16:05:48	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Client exited)
2018-09-22 16:06:10	Moongoodboy{K}	cite those definitions, too; they're from the reference
2018-09-22 16:06:10	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 16:06:23	Moongoodboy{K}	and CC me c:
2018-09-22 16:06:43	blaztinn	will do, thx again :)
2018-09-22 16:07:25	Moongoodboy{K}	^.^
2018-09-22 16:08:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:09:07	<--	castilho (castilho@moz-9ptd0q.juvh.pa8h.0214.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 16:09:34	-->	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has joined #rust-beginners
2018-09-22 16:10:12	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 16:11:30	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:12:15	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 16:12:53	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-22 16:14:26	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 16:16:00	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:16:17	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 16:17:28	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-22 16:17:28	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 16:17:37	-->	sam113101 (sam@moz-c4qco5.mc.videotron.ca) has joined #rust-beginners
2018-09-22 16:18:52	-->	sp1ff (sp1ff@moz-aac03k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:20:11	-->	curmet (Mibbit@moz-12ugac.range86-142.btcentralplus.com) has joined #rust-beginners
2018-09-22 16:20:13	<--	curmet (Mibbit@moz-12ugac.range86-142.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 16:21:30	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-22 16:21:50	-->	lilis (jacky@moz-8q0.itm.75.138.IP) has joined #rust-beginners
2018-09-22 16:22:03	<--	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has quit (Quit: Konversation terminated!)
2018-09-22 16:23:36	-->	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has joined #rust-beginners
2018-09-22 16:23:54	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-22 16:25:13	-->	RockyTV (alex@moz-mj4.5tk.249.191.IP) has joined #rust-beginners
2018-09-22 16:26:02	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-22 16:26:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:26:37	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-22 16:26:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 16:28:26	<--	Xinayder (alex@moz-9db894.gvt.net.br) has quit (Ping timeout: 121 seconds)
2018-09-22 16:28:35	<--	ysz (ysz@moz-g0c268.cust.smartspb.net) has quit (Quit: Leaving)
2018-09-22 16:30:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:31:00	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 16:31:09	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 16:31:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:32:27	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 16:32:45	<--	lilis (jacky@moz-8q0.itm.75.138.IP) has quit (Quit: leaving)
2018-09-22 16:33:49	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:34:27	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 16:35:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:35:58	-->	lilis (lilis@moz-8q0.itm.75.138.IP) has joined #rust-beginners
2018-09-22 16:36:39	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:37:10	-->	napoleon (Mibbit@moz-au5.tgo.149.169.IP) has joined #rust-beginners
2018-09-22 16:37:45	Arnavion	eval: ({2}) + {2}
2018-09-22 16:37:48	--	Notice(eval): 4
2018-09-22 16:37:53	Arnavion	eval: ({2}) + {2} + {2}
2018-09-22 16:37:56	--	Notice(eval): 6
2018-09-22 16:38:15	-->	Ekho (Ekho@moz-sheua1.compute.amazonaws.com) has joined #rust-beginners
2018-09-22 16:38:21	Lumpio-	It depends on the order for some reason
2018-09-22 16:38:23	Lumpio-	eval: 2 + {2}
2018-09-22 16:38:27	--	Notice(eval): 4
2018-09-22 16:38:28	Lumpio-	eval: {2} + 2
2018-09-22 16:38:30	--	Notice(eval): error: expected expression, found `+`
2018-09-22 16:38:32	Arnavion	It needs to know the first one is an expr
2018-09-22 16:38:32	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=45f30e1684d8230909a02277d74eaf85&version=stable&mode=debug
2018-09-22 16:38:33	Lumpio-	It works fine if the first part isn't a block
2018-09-22 16:38:37	Lumpio-	🤔
2018-09-22 16:38:38	Arnavion	Once it's in expr mode it stays in expr mode
2018-09-22 16:39:10	Arnavion	eval: let _ = {2} + {2};
2018-09-22 16:39:12	--	Notice(eval): ()
2018-09-22 16:39:13	Arnavion	etc
2018-09-22 16:39:48	Moongoodboy{K}	what /is/ it inferring the curlybraces as? and why doesn't it backtrack and try expr?
2018-09-22 16:39:58	Arnavion	:shrug:
2018-09-22 16:40:40	<--	napoleon (Mibbit@moz-au5.tgo.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 16:40:47	-->	totempaaltj-M (totempaalt@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-22 16:41:28	durka42	Moongoodboy{K}: consider `if x { blah(); } \n\n + 2;`
2018-09-22 16:41:44	lilis	Hi guys, does anyone know how to pass argv to C? I have implemented this but there's problem when I try to duplicate it: https://play.rust-lang.org/?gist=9c30ea734a790670b725a080ab3ac54f&version=stable&mode=debug&edition=2015
2018-09-22 16:41:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:41:57	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-22 16:42:06	-->	Kreest__ (Kreest@moz-o1u352.pool.invitel.hu) has joined #rust-beginners
2018-09-22 16:42:09	Lumpio-	eval: {2} 2
2018-09-22 16:42:12	--	Notice(eval): error[E0308]: mismatched types
2018-09-22 16:42:14	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=d01dddca39c63ac8dd069f129e06140a&version=stable&mode=debug
2018-09-22 16:42:44	Arnavion	Mismatched type because main() returns () wut
2018-09-22 16:43:17	Lumpio-	Oh that would fail anyways because a block with an unused return value can't return anything?
2018-09-22 16:43:31	Arnavion	It's just plain malformed
2018-09-22 16:43:41	Arnavion	main() returning () shouldn't even be relevant
2018-09-22 16:44:14	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:44:54	Lumpio-	Yes it's not an expression
2018-09-22 16:44:59	Lumpio-	But I mean
2018-09-22 16:45:07	Lumpio-	fn foo() -> u32 { {2} 2 } isn't valid either
2018-09-22 16:45:15	Lumpio-	Because the unused return value of 2 from the block
2018-09-22 16:45:22	Arnavion	No I agree with that
2018-09-22 16:45:27	Lumpio-	fn foo() -> u32 { {()} 2 } is ok
2018-09-22 16:45:40	Arnavion	I was just talking about the diagnostic being silly
2018-09-22 16:47:30	Lumpio-	oh, heh
2018-09-22 16:47:37	-->	mib_69q072 (Mibbit@moz-65b.cgb.5.103.IP) has joined #rust-beginners
2018-09-22 16:48:05	<--	mib_69q072 (Mibbit@moz-65b.cgb.5.103.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 16:48:13	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 16:48:41	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:49:17	-->	simonadameit (simonadamei@moz-20mbfc.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 16:49:29	Moongoodboy{K}	eval: let _ = { 42 };  // unused expression in there
2018-09-22 16:49:32	--	Notice(eval): ()
2018-09-22 16:50:05	<--	sp1ff (sp1ff@moz-aac03k.ca.comcast.net) has quit (Quit: WeeChat 2.2)
2018-09-22 16:50:55	justsomequestions	does anyone know how I can use custom_derive to make a struct Id(u32); usable as an index?
2018-09-22 16:51:04	<--	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:51:44	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:54:09	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-22 16:56:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 16:56:43	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 16:56:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 16:57:04	-->	bernte (Bernd@moz-uo0rvi.fams.de) has joined #rust-beginners
2018-09-22 16:59:06	<--	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has quit (Ping timeout: 121 seconds)
2018-09-22 17:01:12	-->	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has joined #rust-beginners
2018-09-22 17:01:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 17:02:03	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-22 17:02:47	<--	simonadameit (simonadamei@moz-20mbfc.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-22 17:06:06	-->	simonadameit (simonadamei@moz-p7q086.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 17:08:08	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Connection closed)
2018-09-22 17:08:26	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-22 17:10:01	-->	mib_1xcs4m (Mibbit@moz-dop.gjc.128.177.IP) has joined #rust-beginners
2018-09-22 17:10:03	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-22 17:10:08	<--	simonadameit (simonadamei@moz-p7q086.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-22 17:11:04	<--	mib_1xcs4m (Mibbit@moz-dop.gjc.128.177.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 17:12:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 17:12:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 17:13:09	blaztinn	Moongoodboy{K}, Arnavion, Lumpio-: reported the issue https://github.com/rust-lang/rust/issues/54482
2018-09-22 17:14:16	<--	liquidnight (marcus@moz-rhn3jk.aqj0.c1im.0c23.2a01.IP) has quit (Connection closed)
2018-09-22 17:14:34	Moongoodboy{K}	^.^
2018-09-22 17:15:00	<--	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-22 17:15:39	-->	stomper (Mibbit@moz-rlq6b2.sd.cox.net) has joined #rust-beginners
2018-09-22 17:16:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 17:17:25	<--	mib_3tf1bj (Mibbit@moz-rlq6b2.sd.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 17:19:45	Lumpio-	cool
2018-09-22 17:21:24	<--	jbl007 (justme@moz-hgk1cl.3a7l.lldm.810a.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 17:22:23	-->	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 17:24:22	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Ping timeout: 121 seconds)
2018-09-22 17:24:44	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-22 17:25:54	-->	dwigton (daniel@moz-k1mj8s.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 17:31:28	<--	zmt00 (zmt@moz-8b1cmm.ca.comcast.net) has quit (Quit: Gone.)
2018-09-22 17:34:04	-->	AppleJack (Mibbit@moz-3edsb3.wp.shawcable.net) has joined #rust-beginners
2018-09-22 17:34:39	AppleJack	I ran the install script, and rustc and cargo work, but not rust up.
2018-09-22 17:34:59	AppleJack	mkdir rust && cd rust && curl -sf -L https://static.rust-lang.org/rustup.sh | sh && cd ..
2018-09-22 17:35:20	AppleJack	I am on a new install of Lubuntu
2018-09-22 17:35:42	AppleJack	And have rebooted. What Am I doing wrong?
2018-09-22 17:36:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 17:37:03	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-22 17:37:25	-->	simonadameit (simonadamei@moz-7c2kcf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 17:40:08	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-22 17:43:27	<--	AppleJack (Mibbit@moz-3edsb3.wp.shawcable.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 17:43:47	-->	pheleas_frog (Mibbit@moz-3edsb3.wp.shawcable.net) has joined #rust-beginners
2018-09-22 17:44:14	<--	pheleas_frog (Mibbit@moz-3edsb3.wp.shawcable.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 17:44:26	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 17:44:35	-->	AppleJack (Mibbit@moz-3edsb3.wp.shawcable.net) has joined #rust-beginners
2018-09-22 17:45:17	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-22 17:45:33	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-22 17:46:53	AppleJack	I am on a fresh install of Lubuntu, and have run the install script for rust. Now, rustc and cargo work, but rustup does not. What do I need to do to get rustup working so I can view the documentation while offline?
2018-09-22 17:47:49	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-22 17:48:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 17:49:38	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-22 17:49:48	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-22 17:50:06	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-22 17:52:57	-->	martin2 (martin@moz-cus7jo.anteldata.net.uy) has joined #rust-beginners
2018-09-22 17:52:59	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Connection closed)
2018-09-22 17:53:05	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-22 17:53:54	<--	zephyrz4 (zephyrz4@moz-48n.fjj.115.146.IP) has quit (Quit: ZNC 1.8.x-nightly-20180809-2f4b158f - https://znc.in)
2018-09-22 17:55:30	-->	zephyrz4 (zephyrz4@moz-48n.fjj.115.146.IP) has joined #rust-beginners
2018-09-22 17:55:39	GreenJello	AppleJack, that's not the command I see here https://rustup.rs/
2018-09-22 17:56:17	GreenJello	AppleJack, I don't know that your command is wrong, just that this one is worth a try
2018-09-22 17:57:11	-->	alx741 (alx741@moz-obd.k67.178.186.IP) has joined #rust-beginners
2018-09-22 17:57:21	-->	pftbest_54 (pftbest_54@moz-542.tab.125.93.IP) has joined #rust-beginners
2018-09-22 17:57:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 17:59:25	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Quit: )
2018-09-22 18:00:13	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 18:01:56	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 18:02:05	AppleJack	When I ran the .rs script I got this:
2018-09-22 18:02:09	AppleJack	info: downloading installer
2018-09-22 18:02:12	-->	ash (Mibbit@moz-5fl.jon.133.145.IP) has joined #rust-beginners
2018-09-22 18:02:17	AppleJack	warning: it looks like you have an existing installation of Rust
2018-09-22 18:02:18	ash	Greetins! :-)
2018-09-22 18:02:28	AppleJack	warning: rustup cannot be installed alongside Rust. Please uninstall first
2018-09-22 18:02:35	AppleJack	warning: run `/usr/local/lib/rustlib/uninstall.sh` as root to uninstall Rust
2018-09-22 18:02:45	AppleJack	error: cannot install while Rust is installed
2018-09-22 18:02:56	AppleJack	And then wen't back to the command prompt
2018-09-22 18:03:03	AppleJack	Hello Ash :)
2018-09-22 18:03:04	ash	is there a way to use sh.rustup.rs with a flag not to install docs?
2018-09-22 18:03:12	pftbest_54	Hello, does anyone know why it's not allowed to have a different version of crate in [dependencies] and [dev-dependencies] ?
2018-09-22 18:03:13	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 18:03:17	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 18:03:19	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 18:03:35	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Connection closed)
2018-09-22 18:04:02	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:04:02	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:04:06	-->	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has joined #rust-beginners
2018-09-22 18:04:46	AppleJack	I don't know about while installing, but you can try removing the docs with "rustup component remove rust-docs"
2018-09-22 18:04:47	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:04:47	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 18:05:04	ash	Hmm, okay!
2018-09-22 18:05:41	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 18:05:50	ash	I am trying to slimline my docker build environment. 
2018-09-22 18:06:30	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-22 18:06:35	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-22 18:08:08	<--	JAlbers (jalbers@moz-e5abv1.18uu.jb9b.0246.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 18:08:42	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-22 18:08:49	ash	so maybe I can install via the scrip with no toolchains, and manually add in the stable.
2018-09-22 18:10:50	AppleJack	Are you sure the docks are installed by default? In November 2016, they at least were not.
2018-09-22 18:10:53	AppleJack	https://users.rust-lang.org/t/psa-rust-documentation-is-now-optional-and-opt-in-when-installing-via-rustup/8072
2018-09-22 18:10:57	Arnavion	ash: rust-docs are required
2018-09-22 18:11:06	Arnavion	AppleJack: That was reverted shortly after
2018-09-22 18:11:32	Arnavion	ash: You can subscribe to   https://github.com/rust-lang-nursery/rustup.rs/issues/998   for progress
2018-09-22 18:11:43	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:12:56	AppleJack	Arnavion, maybe you can help me? I'm on a fesh OS install of lubuntu, and rustc and cargo work, but rustdoc does not.
2018-09-22 18:13:24	AppleJack	I ran the curl -sf -L https://static.rust-lang.org/rustup.sh | sh script
2018-09-22 18:13:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 18:13:57	Arnavion	AppleJack: As you were already told, you used the wrong script
2018-09-22 18:14:13	Arnavion	AppleJack: And as the new script told you, you have to uninstall what you installed with the wrong script first
2018-09-22 18:14:19	<--	simonadameit (simonadamei@moz-7c2kcf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-22 18:14:34	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 18:16:58	-->	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has joined #rust-beginners
2018-09-22 18:17:09	AppleJack	Sorry, I didn't realize I needed to uninstall Rust first before running the other one. I will give that a try.
2018-09-22 18:17:40	<--	arunkumar413 (arunkumar41@moz-jtb.f3j.48.157.IP) has quit (Quit: Leaving)
2018-09-22 18:17:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:18:14	<--	bodie (bodie@moz-0d7.259.197.138.IP) has quit (Quit: ZNC 1.6.6+deb1ubuntu0.1 - http://znc.in)
2018-09-22 18:18:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 18:18:41	-->	bodie (bodie@moz-0d7.259.197.138.IP) has joined #rust-beginners
2018-09-22 18:22:58	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:23:39	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 18:23:55	AppleJack	I uninstalled using sudo /usr/local/lib/rustlib/uninstall.sh
2018-09-22 18:24:08	-->	jaykay (Thunderbird@moz-7q6u78.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 18:24:10	AppleJack	then ran curl https://sh.rustup.rs -sSf | sh
2018-09-22 18:24:18	-->	asyncsec (asyncsec@moz-clmsgb.dyn6.twc.com) has joined #rust-beginners
2018-09-22 18:24:43	AppleJack	Now when I try to get the rustc version, I get bash: /usr/local/bin/rustc: No such file or directory
2018-09-22 18:25:54	Moongoodboy{K}	did you relaunch your shell?
2018-09-22 18:26:20	AppleJack	What does that mean?
2018-09-22 18:26:27	Moongoodboy{K}	sounds like it may be trying to invoke a rustc that it thinks exists in that directory, but has since been uninstalled
2018-09-22 18:26:30	Moongoodboy{K}	uhhhh…
2018-09-22 18:26:41	Arnavion	bash caches the paths of executables
2018-09-22 18:26:44	Moongoodboy{K}	depends on how you started your shell
2018-09-22 18:26:53	AppleJack	Do you mean the terminal?
2018-09-22 18:26:55	Arnavion	AppleJack:   exec bash
2018-09-22 18:27:14	Moongoodboy{K}	close the terminal window and open a new one; or log out and log back in; or possibly `exec $SHELL` or similar if you have some idea what you're doing
2018-09-22 18:28:04	AppleJack	Closing the terminal and reopening it gave "Command 'rustc' not found, but can be installed with:  sudo apt install rustc"
2018-09-22 18:28:07	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:28:33	Arnavion	What's the output of   ls ~/.cargo/bin/rustc   and   echo $PATH
2018-09-22 18:28:43	jaykay	hi! cargo build cannot find link.exe, and when running rustup-init again, itthinks that the c++ build tools are not installed, but they are. i tried repairing the build tools installation, didn't help. any suggestions?
2018-09-22 18:29:07	Arnavion	jaykay: Which version of build tools? 2015 or 2017?
2018-09-22 18:29:23	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-22 18:29:44	jaykay	Arnavion: 2017 is installed. 
2018-09-22 18:30:14	Arnavion	Does it work if you run it in the Developer Command Prompt?
2018-09-22 18:30:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 18:30:25	AppleJack	home/stewart/.cargo/bin/rustc
2018-09-22 18:30:42	AppleJack	usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
2018-09-22 18:30:58	Arnavion	AppleJack: Add ~/.cargo/bin to your PATH in your bash profile
2018-09-22 18:31:18	Arnavion	PATH="$PATH:$(realpath ~/.cargo/bin)"
2018-09-22 18:31:29	Arnavion	in your ~/.profile or ~/.bashrc
2018-09-22 18:31:35	-->	enterprisey (enterprisey@moz-fjjhvf.cit.cornell.edu) has joined #rust-beginners
2018-09-22 18:32:16	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-22 18:32:20	AppleJack	running PATH="$PATH:$(realpath ~/.cargo/bin)" worked!
2018-09-22 18:32:34	AppleJack	Thanks so much for all the help! :)
2018-09-22 18:32:36	Moongoodboy{K}	for the current session.
2018-09-22 18:32:44	Moongoodboy{K}	gotta make that permanent
2018-09-22 18:33:00	AppleJack	It's not permanent?
2018-09-22 18:33:08	Arnavion	<Arnavion> in your ~/.profile or ~/.bashrc
2018-09-22 18:33:34	-->	jbl007 (justme@moz-hgk1cl.3a7l.lldm.810a.2a02.IP) has joined #rust-beginners
2018-09-22 18:34:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:35:05	jaykay	Arnavion: i ran vcvarsall.bat, if it's that what you meant. cargo build now says "LINK : fatal error LNK1181: cannot open input file 'advapi32.lib'", which indeed does not exist anywhere on my system
2018-09-22 18:35:36	Arnavion	I forget if build tools uses the same component system as the VS installer
2018-09-22 18:35:43	Arnavion	If it does, make sure you have some version of the Windows SDK installed
2018-09-22 18:35:54	Arnavion	Otherwise figure out how to install it
2018-09-22 18:36:21	Arnavion	C:\Program Files (x86)\Windows Kits\10   etc
2018-09-22 18:37:05	-->	AtumT_ (IRC@moz-gq6.441.159.177.IP) has joined #rust-beginners
2018-09-22 18:37:19	<--	billiob (billiob@moz-0ilt8a.fau.re) has quit (Quit: Lost terminal)
2018-09-22 18:37:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 18:37:47	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 18:38:15	<--	AppleJack (Mibbit@moz-3edsb3.wp.shawcable.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 18:38:21	-->	simonadameit (simonadamei@moz-gi30mq.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 18:39:07	-->	leotaku (leotaku@moz-lnm2k9.highway.a1.net) has joined #rust-beginners
2018-09-22 18:39:50	<--	AtumT (IRC@moz-soe.d2s.113.187.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 18:42:24	-->	AppleJack (Mibbit@moz-3edsb3.wp.shawcable.net) has joined #rust-beginners
2018-09-22 18:43:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:43:20	-->	billiob (billiob@moz-0ilt8a.fau.re) has joined #rust-beginners
2018-09-22 18:43:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 18:43:43	AppleJack	Thanks for all the help moongoodboy{k}, I rebooted my computer and it looks like it stuck! :)
2018-09-22 18:44:06	<--	pftbest_54 (pftbest_54@moz-542.tab.125.93.IP) has quit (Connection closed)
2018-09-22 18:44:14	<--	AppleJack (Mibbit@moz-3edsb3.wp.shawcable.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 18:44:29	-->	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-22 18:45:07	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-22 18:45:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 18:47:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 18:48:38	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 18:48:54	<--	starblue (juergen@moz-hqetfg.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-22 18:49:36	jaykay	Arnavion: the installer has both "Windows 10 SDK" and "Windows 10 SDK for Desktop C++", which one should i take?
2018-09-22 18:50:55	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:50:59	-->	AtumT (IRC@moz-niuqp7.gvt.net.br) has joined #rust-beginners
2018-09-22 18:51:07	<--	AtumT_ (IRC@moz-gq6.441.159.177.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 18:51:37	Arnavion	jaykay: For the latest 17134 SDK you should only have the "Windows 10 SDK" option. They stopped naming it "for Desktop C++" from that version
2018-09-22 18:52:26	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:52:43	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-09-22 18:52:48	dpc1	is there a way to deref a trait implementation?
2018-09-22 18:54:40	jaykay	Arnavion: yes, it seems so. i'm installing the latest version now. do you know why the documentation/rustup does not say to install the windows sdk? is it perhaps installed by default with the build tools? in that case i must have manually uninstalled it at some point...
2018-09-22 18:55:07	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-22 18:55:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 18:55:41	Arnavion	jaykay: The VS installer asks you if you want to set it up for Desktop C++ dev which enables the SDK by default. If the build tools installer does that too, maybe you didn't pick that option.
2018-09-22 18:56:29	stephaneyfx	dpc1: Can you give an example of what you mean on the playground?
2018-09-22 18:56:34	dpc1	sure
2018-09-22 18:57:03	jaykay	Arnavion: might be, i don't remember anymore... one more thing, any idea why cargo didn't find link.exe? should it be in the path by default and i broke that as well?
2018-09-22 18:57:05	dpc1	well i have a wrapper struct over Pathbuf, so wondering if I can get all the traits implemented over PathBuf, implemented over the struct in any way
2018-09-22 18:57:14	-->	liquidnight (marcus@moz-rhn3jk.aqj0.c1im.0c23.2a01.IP) has joined #rust-beginners
2018-09-22 18:57:34	Arnavion	jaykay: Does it still not find it after you installed the SDK?
2018-09-22 18:57:45	dpc1	uhmm stephaneyfx nevamind just found out that the trait isn't implemented over PathBuf in the first place so ignore my question xD
2018-09-22 18:58:00	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Connection closed)
2018-09-22 18:58:03	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-22 18:59:26	stephaneyfx	dpc1: Ok, but assuming it was, I think implementing the traits to delegate to a field cannot be done automatically/magically in general. I think there are some crate that do that for some common traits though.
2018-09-22 18:59:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 18:59:46	stephaneyfx	some *crates
2018-09-22 18:59:57	dpc1	ah okay thx
2018-09-22 19:02:10	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-22 19:04:21	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-22 19:06:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 19:08:11	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-22 19:08:30	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 19:08:54	-->	Guest4 (textual@moz-kdd.8mq.108.42.IP) has joined #rust-beginners
2018-09-22 19:10:29	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 19:11:05	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 19:11:25	-->	pingwin (brian@moz-r6puto.res.rr.com) has joined #rust-beginners
2018-09-22 19:11:27	<--	pingwin (brian@moz-r6puto.res.rr.com) has quit (Quit: Konversation terminated!)
2018-09-22 19:11:29	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-22 19:11:52	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-22 19:12:21	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 19:12:37	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 19:14:23	ash	@ApplyJack @Arnavion - yeah I think this has been bouncing back and forth b/w making it optional, default on or default off :-)
2018-09-22 19:14:49	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-22 19:16:20	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-22 19:17:01	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 19:18:50	jaykay	Arnavion: it does! thank you for your help!
2018-09-22 19:19:46	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 19:19:50	<--	simonadameit (simonadamei@moz-gi30mq.dip0.t-ipconnect.de) has quit (Quit: )
2018-09-22 19:19:58	-->	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-22 19:21:38	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-22 19:21:43	-->	pftbest_54 (pftbest_54@moz-542.tab.125.93.IP) has joined #rust-beginners
2018-09-22 19:21:46	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Connection closed)
2018-09-22 19:22:29	-->	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has joined #rust-beginners
2018-09-22 19:23:10	-->	reedlepee (Mibbit@moz-klv.tin.177.143.IP) has joined #rust-beginners
2018-09-22 19:23:36	<--	reedlepee (Mibbit@moz-klv.tin.177.143.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 19:23:54	<--	ufobat___ (Martin@moz-0injkc.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-22 19:24:04	<--	BearOfJade (Alex@moz-ua1m7r.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-22 19:24:37	ash	Is there a way to see what all compiler flags cargo knows?
2018-09-22 19:25:25	ash	I just tried passing `-Zstrip-debuginfo-if-disabled` but was warned that `-Z` is only a nightly feature.
2018-09-22 19:26:14	Arnavion	ash: Read   cargo --help
2018-09-22 19:26:25	ash	ofc :-)
2018-09-22 19:27:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 19:27:51	ash	more questions - is there way to list all my dependencies to try and ensure that I am using the same versions to reduce compilation time?
2018-09-22 19:28:03	Arnavion	Look in Cargo.lock
2018-09-22 19:28:24	Arnavion	Search for   "crate name"   in quotes and you'll see entries for each package for that crate
2018-09-22 19:28:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 19:29:06	ash	Thanks!
2018-09-22 19:29:09	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 19:29:32	-->	BearOfJade (Thunderbird@moz-ua1m7r.wireless.uvic.ca) has joined #rust-beginners
2018-09-22 19:29:55	<--	BearOfJade (Thunderbird@moz-ua1m7r.wireless.uvic.ca) has quit (Client exited)
2018-09-22 19:29:56	ash	but then how do I see which crate is using it?
2018-09-22 19:30:03	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-22 19:30:52	ash	for example, I have to `base64` packages
2018-09-22 19:31:06	ash	ah  cargo-tree :-)
2018-09-22 19:31:44	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 19:32:52	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-22 19:32:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 19:33:16	<--	Guest4 (textual@moz-kdd.8mq.108.42.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 19:33:25	-->	jihi (jih@moz-b0q2gd.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 19:33:44	-->	eyans (a@moz-fdq4d5.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-22 19:34:12	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 19:34:58	-->	sampersand (Mibbit@moz-11alpv.nts.wustl.edu) has joined #rust-beginners
2018-09-22 19:34:59	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-22 19:35:02	sampersand	if i have `trait Foo { type Output; fn do_stuff(&self) -> Self::Output }` how could i implement this trait for something whose Output has a lifetime that depends on &self?
2018-09-22 19:35:04	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-22 19:36:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 19:36:45	-->	Aaronepowerr (Aaronepower@moz-a3b.s7h.181.195.IP) has joined #rust-beginners
2018-09-22 19:36:49	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 19:38:29	-->	tedro (Mibbit@moz-c1f6gk.res.rr.com) has joined #rust-beginners
2018-09-22 19:38:55	<--	ash (Mibbit@moz-5fl.jon.133.145.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 19:39:26	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 19:41:18	-->	fiedel (Mibbit@moz-6on93g.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 19:41:56	<--	sampersand (Mibbit@moz-11alpv.nts.wustl.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 19:42:02	@mbrubeck	sampersand: You don't.  (This is why an Iterator can't return references to data it owns.)
2018-09-22 19:42:08	<--	fiedel (Mibbit@moz-6on93g.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 19:43:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 19:44:26	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 19:44:59	<--	tedro (Mibbit@moz-c1f6gk.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 19:45:00	<--	alx741 (alx741@moz-obd.k67.178.186.IP) has quit (Client exited)
2018-09-22 19:45:39	-->	tedro (Mibbit@moz-c1f6gk.res.rr.com) has joined #rust-beginners
2018-09-22 19:46:13	Arnavion	without changing the trait, that is
2018-09-22 19:47:44	<--	tedro (Mibbit@moz-c1f6gk.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 19:48:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 19:50:58	-->	wolf2k_huh (wolfman2000@moz-rltqss.ga.comcast.net) has joined #rust-beginners
2018-09-22 19:51:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 19:51:39	-->	yeet (Mibbit@moz-5jo.hme.149.169.IP) has joined #rust-beginners
2018-09-22 19:52:16	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-22 19:52:42	blaztinn	Hi, I came across an unexpected panic while using RefCell: https://play.rust-lang.org/?gist=fe84b7b400b1f8d9d7ed6cd8638fff4e&version=nightly&mode=debug&edition=2018 . I think it happens because the returned Ref from the RefCell::borrow() is not dropped before the next function argument is evaluated. Is this a bug (because the static borrow rules allow this) or is this just the way that rust prepares the arguments for the function call
2018-09-22 19:52:44	blaztinn	s?
2018-09-22 19:53:32	-->	underplank (Mibbit@moz-h7rvni.dynamic.sonic.net) has joined #rust-beginners
2018-09-22 19:53:45	<--	wolfman2000 (wolfman2000@moz-rltqss.ga.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 19:54:34	stephaneyfx	blaztinn: That's just how long temporaries live for, i.e. as long as the expression they are part of, up to the innermost block.
2018-09-22 19:55:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 19:55:51	underplank	Hi, im having a bit of trouble getting `cargo test` to actually run my tests. I was able to get the example here working -> https://doc.rust-lang.org/book/second-edition/ch11-01-writing-tests.html but when I have a main.rs in my project it doesnt seem to pick up the test file.
2018-09-22 19:56:03	<--	cpl (cpl@moz-vcfefs.dyn.forthnet.gr) has quit (Ping timeout: 121 seconds)
2018-09-22 19:56:14	underplank	Is there someway I can debug why my test isnt getting detected and run?
2018-09-22 19:56:21	-->	xionbox (chris@moz-8sf7em.106f.npme.0281.2601.IP) has joined #rust-beginners
2018-09-22 19:56:23	stephaneyfx	underplank: AFAIK tests are only for libraries
2018-09-22 19:56:28	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 19:56:40	blaztinn	stephaneyfx: But the temporary is only needed for computing the argument, not for passing it.
2018-09-22 19:57:39	stephaneyfx	blaztinn: Yes, but since the temporary is created as part of this expression, it lives as long as the expression
2018-09-22 19:58:00	stephaneyfx	blaztinn: Up to the innermost block, as your example shows
2018-09-22 19:58:16	underplank	stephaneyfx: oh? hmmm... maybe im missing how I should structure my code then. is there some documentation around for the differences between libaries and "main" projects?
2018-09-22 19:59:04	stephaneyfx	blaztinn: More precisely because there's an assignment in your block, and the borrow does not last longer that it.
2018-09-22 19:59:09	<--	pftbest_54 (pftbest_54@moz-542.tab.125.93.IP) has left #rust-beginners
2018-09-22 19:59:12	stephaneyfx	*than it
2018-09-22 20:00:12	stephaneyfx	underplank: You can write a library that provides the functionality you need with tests and a smaller main.rs using this library
2018-09-22 20:01:48	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 20:01:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 20:02:04	underplank	hmm and is the main.rs in a different "project" ?
2018-09-22 20:02:14	underplank	or can it be in the same one as the library?
2018-09-22 20:02:33	stephaneyfx	underplank: I think it can be in the same project, i.e. you have both lib.rs and main.rs
2018-09-22 20:02:53	-->	vin (Mibbit@moz-v56bir.adsl.xs4all.nl) has joined #rust-beginners
2018-09-22 20:02:55	Arnavion	Yes
2018-09-22 20:03:55	blaztinn	sephaneyfx: Oh I understand now, thx for the clarification. It is still strange to see that runtime borrow-checking fails where the static borrow-checker allowed the same expression to compile. I always thought that a set of valid runtime borrow-checked programs is a superset of static borrow-checked programs :)
2018-09-22 20:03:56	stephaneyfx	blaztinn: By the way, what I wrote about blocks is confusing and actually incorrect. It's really about the borrow lasting no longer than the `let` statement that makes it work. Enclosing a single expression in a block (like {*r.borrow()} in your example) does not help.
2018-09-22 20:04:21	blaztinn	stephaneyfx: I noticed that yes :)
2018-09-22 20:04:33	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-22 20:04:52	underplank	stephaneyfx: thanks!
2018-09-22 20:04:59	-->	cpl (cpl@moz-vcfefs.dyn.forthnet.gr) has joined #rust-beginners
2018-09-22 20:05:03	<--	yeet (Mibbit@moz-5jo.hme.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 20:05:29	vin	When I try to build my (still empty) package, I get an error on httparse: error: failed to run custom build command for `httparse v1.3.2` could not execute process `/mnt/freenas/projects/embyscrobble/target/debug/build/httparse-36bee7a7bc1a6a40/build-script-build` (never executed)
2018-09-22 20:05:38	vin	rustc 1.29.0 (aa3ca1994 2018-09-11)
2018-09-22 20:05:49	vin	How to solve
2018-09-22 20:06:44	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 20:06:48	stephaneyfx	blaztinn: I'm not sure I understand the part about runtime vs compile-time borrow checking. When using RefCell, you do trade compile-time borrow checking for runtime checking. Does that make sense?
2018-09-22 20:06:50	Arnavion	Is build-script-build +x ?
2018-09-22 20:07:14	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 20:07:24	vin	avidal: yes
2018-09-22 20:07:38	-->	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has joined #rust-beginners
2018-09-22 20:07:40	dpc1	wrong mention :P
2018-09-22 20:07:41	vin	hmm, but is indeed the problem
2018-09-22 20:07:45	vin	Haha, indeed
2018-09-22 20:07:50	vin	Arnavion: that is indeed the issue
2018-09-22 20:07:54	vin	bash: ./target/debug/build/httparse-36bee7a7bc1a6a40/build-script-build: Permission denied
2018-09-22 20:08:05	vin	thanks!
2018-09-22 20:08:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 20:08:39	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-22 20:08:57	blaztinn	stephaneyfx: I meant that this `let v = 0; call(*&v, *&mut v)` compiles fine while this `let r = RefCell::new(0); call(*r.borrow(), *r.borrow_mut())` fails at runtime.
2018-09-22 20:09:08	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-22 20:09:31	Arnavion	The former copies
2018-09-22 20:09:32	blaztinn	so static checking allows it and runtime does not
2018-09-22 20:09:56	-->	andrehjr (andrehjr@moz-13u.3fa.250.167.IP) has joined #rust-beginners
2018-09-22 20:10:00	blaztinn	but the later should copy it too? because it is dereferenced
2018-09-22 20:11:00	<--	Aaronepowerr (Aaronepower@moz-a3b.s7h.181.195.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 20:11:13	<--	vin (Mibbit@moz-v56bir.adsl.xs4all.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 20:11:17	Arnavion	Yes, after the borrows succeed
2018-09-22 20:11:31	Arnavion	ie the borrows have to succeed first
2018-09-22 20:12:02	Arnavion	The guard from r.borrow() will last for the whole expr, so the borrow_mut() will fail
2018-09-22 20:12:03	-->	backnforth (backnforth@moz-06p.dbe.143.72.IP) has joined #rust-beginners
2018-09-22 20:12:10	Arnavion	(NLL might fix it)
2018-09-22 20:13:04	stephaneyfx	Though I think NLL does not change when objects are destroyed, so I would expect the dynamic borrow error to still happen
2018-09-22 20:13:24	Arnavion	Yeah, NLL doesn't change anything
2018-09-22 20:14:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 20:15:34	blaztinn	so you are saying that all the temporaries used in evaluating the function call arguments are dropped after the call (or maybe before the call but after evaluating all the arguments)?
2018-09-22 20:16:01	Arnavion	eval: use std::cell::RefCell; fn call(_: i32, _: i32) { } let r = RefCell::new(0); call((|| { *r.borrow() })(), *r.borrow_mut());
2018-09-22 20:16:03	--	Notice(eval): ()
2018-09-22 20:18:28	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 20:18:29	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-22 20:19:40	stephaneyfx	blaztinn: After the call (they still need to be around while the function executes and accesses data that may be part of these temporaries)
2018-09-22 20:21:51	-->	mib_z8o3v0 (Mibbit@moz-5jo.hme.149.169.IP) has joined #rust-beginners
2018-09-22 20:21:51	-->	castilho (castilho@moz-479fs1.hk16.rntc.0214.2804.IP) has joined #rust-beginners
2018-09-22 20:22:00	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-22 20:22:40	UndeadLeech	Is there a better way to write N elements in a vec to the same value than using `vec!`? Here's the code for context: https://play.rust-lang.org/?gist=7f1fd54e7a8d191a8893c17b245297a9
2018-09-22 20:23:08	UndeadLeech	Thought about using something like write_bytes, but that only allows writing a single byte.
2018-09-22 20:23:55	mib_z8o3v0	I am trying to make conways game of life in rust ... What are the libraries I should know about ??? (I am new to rust)
2018-09-22 20:24:32	<--	enterprisey (enterprisey@moz-fjjhvf.cit.cornell.edu) has quit (Connection closed)
2018-09-22 20:24:33	dpc1	mib_z8o3v0: this will help you: http://arewegameyet.com/
2018-09-22 20:25:05	blaztinn	stephaneyfx, Arnavion: thank you for the explanation, I think it's all clear now :)
2018-09-22 20:26:40	Lumpio-	For a basic game of life automaton you don't really need any libraries at all, mib_z8o3v0
2018-09-22 20:26:46	Lumpio-	If you're fine with text based output for instance.
2018-09-22 20:26:53	Lumpio-	If you want neat graphics, check out dpc1's link.
2018-09-22 20:27:51	-->	mib_zc5cv4 (Mibbit@moz-voi.vfm.102.82.IP) has joined #rust-beginners
2018-09-22 20:29:26	mib_zc5cv4	Hi guys! Anyone here knows what is the best way to convert between *mut ::std::os::raw::c_char and str?
2018-09-22 20:29:40	<--	castilho (castilho@moz-479fs1.hk16.rntc.0214.2804.IP) has quit (Connection closed)
2018-09-22 20:30:05	Lumpio-	mib_zc5cv4: You could go through CString
2018-09-22 20:30:09	Lumpio-	https://doc.rust-lang.org/std/ffi/struct.CString.html#method.from_raw
2018-09-22 20:30:26	<--	nicholasf (nicholasf@moz-je8c43.iinet.net.au) has quit (Quit: Leaving...)
2018-09-22 20:31:42	mib_zc5cv4	Yep, but what is the reverse?
2018-09-22 20:31:46	Lumpio-	UndeadLeech: I guess iter_mut and a loop (or for_each) would work
2018-09-22 20:31:53	-->	starblue (juergen@moz-hq2qj9.versanet.de) has joined #rust-beginners
2018-09-22 20:32:15	UndeadLeech	Lumpio-: I can't imagine that would be faster, right?
2018-09-22 20:32:34	mib_z8o3v0	Lumpio-: then what should I do ?
2018-09-22 20:32:43	Lumpio-	UndeadLeech: Hard to say
2018-09-22 20:32:52	Lumpio-	mib_z8o3v0: Oh, the other way round?
2018-09-22 20:33:10	UndeadLeech	I'll test it. But using pointers not iter mut, that's probably more likely to have less overhead.
2018-09-22 20:33:18	mib_zc5cv4	I need to pass input parameter that is str on Rust side, but expected as *mut ::std::os::raw::c_char in c
2018-09-22 20:33:33	Lumpio-	Oops, from_raw isn't the method to use for the other way round anyway
2018-09-22 20:33:42	<--	mib_z8o3v0 (Mibbit@moz-5jo.hme.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 20:33:43	Lumpio-	from_raw/into_raw should only be used as a pair
2018-09-22 20:34:12	Lumpio-	Forget what I said heh
2018-09-22 20:34:35	UndeadLeech	Lumpio-: Looks like iterating is actually faster than using a vec and copying the whole thing.
2018-09-22 20:34:55	Lumpio-	UndeadLeech: Why all the unsafe code? An iterator should be pretty much as fast
2018-09-22 20:35:14	Lumpio-	The long unsafe block looks spooky. Did you benchmark and see that this part was the bottleneck in your code?
2018-09-22 20:35:18	UndeadLeech	I have unsafe code there anyways. And I need every ounce I can get. Testing with iterator right now though.
2018-09-22 20:35:29	-->	Arcaelyx_ (Arcaelyx@moz-f0guau.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-09-22 20:35:30	Lumpio-	mib_zc5cv4: Why is it * mut if it's an input parameter
2018-09-22 20:35:34	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-22 20:35:57	UndeadLeech	Lumpio-: And yeah, this is very performance sensitive.
2018-09-22 20:36:08	<--	Arcaelyx (Arcaelyx@moz-rhacue.77ht.vv5c.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 20:36:28	Lumpio-	I find it odd that the only way to more a range in a vec (or a slice) seems to be unsafe code, hmm
2018-09-22 20:36:41	Lumpio-	I wonder if there's a safe way
2018-09-22 20:37:02	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-22 20:37:16	UndeadLeech	And btw iterating is ***significantly*** slower than both using pointers to iterate and using a vec!
2018-09-22 20:37:20	justsomequestions	why does the add trait need to own both arguments?
2018-09-22 20:37:33	justsomequestions	doesn't that mean I effectively loose them as the only return value is the sum?
2018-09-22 20:37:37	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 20:37:40	UndeadLeech	Actually wait a second. I did a dumbo.
2018-09-22 20:37:51	UndeadLeech	Yeah it's slower, but not significantly.
2018-09-22 20:37:56	Lumpio-	There might be a bounds check but it shouldn't be three asterisk significant
2018-09-22 20:38:57	Lumpio-	justsomequestions: Nothing's stopping you from implementing them for references I suppose
2018-09-22 20:39:03	Lumpio-	Implementing Add, that is
2018-09-22 20:39:16	-->	wswartz (wswartzendr@moz-l7p4eb.ih3f.sf7d.00ae.2602.IP) has joined #rust-beginners
2018-09-22 20:39:26	mib_zc5cv4	I did it with simple "my awesome param".as_ptr() as *mut i8
2018-09-22 20:39:27	wswartz	Hello.
2018-09-22 20:39:44	UndeadLeech	The safe code is ~1.882ns/iter, the unsafe iterator is ~1.245ns/iter and the unsafe vec! copy is ~1.354ns/iter. So the unsafe pointer iterator seems to be the best choice.
2018-09-22 20:39:57	UndeadLeech	Also Lumpio- there is a safe altertative, it's just slower.
2018-09-22 20:40:14	Lumpio-	What's the safe alternative for moving a part of a slice elsewhere
2018-09-22 20:40:23	Lumpio-	I mean, besides just doing it by hand heh
2018-09-22 20:40:33	justsomequestions	Lumpio-: the compiler is :D wait a sec
2018-09-22 20:40:35	UndeadLeech	Lumpio-: https://play.rust-lang.org/?gist=102c3cb180fa9e98120ce812aa9be7db
2018-09-22 20:40:40	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-22 20:40:45	wswartz	I am attempting to read from a std::fs::File using trait std::io::Read.read(), but I am having it suddenly return Err(UnexpectedEof).  I would have thought that it would simply return Ok(usize) where usize is less than the buffer length...  It does this the very first time it cannot fill the whole buffer.
2018-09-22 20:40:53	UndeadLeech	The first one always works. The second one changes vector, but the order stays correct.
2018-09-22 20:40:56	justsomequestions	https://pastebin.com/hKAwK3SK Lumpio-
2018-09-22 20:41:09	Lumpio-	UndeadLeech: Yeah but that allocates and all
2018-09-22 20:41:16	Lumpio-	I was thinking of just fiddling with the slice that's already in memory
2018-09-22 20:41:17	UndeadLeech	Yeah, which is why it's so slow.
2018-09-22 20:41:30	emerentius	Lumpio-: where do you want to move the slice to?
2018-09-22 20:41:38	Lumpio-	You can more non-overlapping ranges with split_at_mut and copy_from_slice but it's not very nice to use
2018-09-22 20:41:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 20:42:25	UndeadLeech	This is what I got now: https://play.rust-lang.org/?gist=460a618da00c81ea698c150d09fd81a4. If anyone has ideas how to make this even faster, please let me know.
2018-09-22 20:42:34	Lumpio-	emerentius: Well, more like copy I guess, but I was talking about copying within the same slice
2018-09-22 20:42:39	Lumpio-	I guess that's a pretty rare operation to do.
2018-09-22 20:43:03	Lumpio-	justsomequestions: Is your trait "for &Inventory"?
2018-09-22 20:44:17	-->	orph (orph@moz-7a1s21.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-22 20:47:00	-->	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-22 20:47:24	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-22 20:48:06	-->	shainer (shainer@moz-hci71v.4hlf.udpv.8084.2a02.IP) has joined #rust-beginners
2018-09-22 20:48:20	<--	orph (orph@moz-7a1s21.na4a.hbff.5500.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 20:48:25	<--	shainer (shainer@moz-hci71v.4hlf.udpv.8084.2a02.IP) has quit (Quit: Konversation terminated!)
2018-09-22 20:48:32	<--	martin2 (martin@moz-cus7jo.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-22 20:49:27	emerentius	UndeadLeech: don't know a faster way, but that can result in unsafety in a variety of ways
2018-09-22 20:50:20	emerentius	out of bounds, overflows and if `T: Drop`, drop of invalid memory
2018-09-22 20:50:46	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 20:50:49	UndeadLeech	Yeah I'd probably have to add a few checks. Wonder if it would still be faster.
2018-09-22 20:50:53	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-22 20:51:13	UndeadLeech	emerentius: Any better ideas? The safe version is slow.
2018-09-22 20:51:14	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 20:51:59	Lumpio-	But is it too slow
2018-09-22 20:52:12	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-22 20:52:13	UndeadLeech	It is too slow for my liking, yes.
2018-09-22 20:52:14	justsomequestions	Lumpio-: that was a good hint but I think it did not change the message
2018-09-22 20:52:17	<--	mib_zc5cv4 (Mibbit@moz-voi.vfm.102.82.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 20:52:28	emerentius	only if T: Copy
2018-09-22 20:52:30	Lumpio-	justsomequestions: Can you paste your code on the playground then? It's probably missing a & somewhere
2018-09-22 20:52:33	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 20:52:38	justsomequestions	https://pastebin.com/jJzxsmBs
2018-09-22 20:52:44	UndeadLeech	emerentius: Hm?
2018-09-22 20:52:47	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-22 20:52:52	justsomequestions	Lumpio-: I pasted it to pastebin if that is ok
2018-09-22 20:52:55	justsomequestions	^^
2018-09-22 20:53:01	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-22 20:53:03	emerentius	for T: Copy you could do it like repeat, memcpy larger and larger pieces at a time
2018-09-22 20:53:08	Lumpio-	Somebody will surely complain
2018-09-22 20:53:22	UndeadLeech	emerentius: Yeah unfortunately it's not Copy.
2018-09-22 20:53:27	-->	mib_tbs9ql (Mibbit@moz-5jo.hme.149.169.IP) has joined #rust-beginners
2018-09-22 20:53:47	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 20:54:00	<--	mib_tbs9ql (Mibbit@moz-5jo.hme.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 20:54:22	UndeadLeech	Note that you can only control `num_rows` and the `template_row` in my code. So it's a bit better.
2018-09-22 20:54:22	<--	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-22 20:54:36	UndeadLeech	Can's specify a zero outside of the buffer or something like that.
2018-09-22 20:54:38	emerentius	then no idea
2018-09-22 20:54:41	Lumpio-	justsomequestions: I think you need "self" not "&self"
2018-09-22 20:55:08	Lumpio-	Because self is already a reference I believe
2018-09-22 20:55:16	emerentius	but if T can be Drop, you'll need to truncate the length in the mean time, correct it at the end
2018-09-22 20:55:26	emerentius	and write with std::ptr::write
2018-09-22 20:56:16	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-22 20:56:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 20:57:01	justsomequestions	Lumpio-: very well spotted thank you :)
2018-09-22 20:57:16	UndeadLeech	What do you mean by 'truncate the length in the mean time'?
2018-09-22 20:57:18	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 20:58:27	emerentius	UndeadLeech: as long as you have the hole in the vec and trying to fill it, Clone or Drop could panic
2018-09-22 20:58:41	emerentius	it would unwind out of the function and try to drop invalid memory
2018-09-22 20:59:28	emerentius	actually, forget the Drop, there's nothing to be dropped
2018-09-22 20:59:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 20:59:53	emerentius	I mean, Drop can't cause the panic
2018-09-22 21:00:03	emerentius	but it could still try to free invalid memory
2018-09-22 21:00:08	emerentius	*drop
2018-09-22 21:00:11	UndeadLeech	How would Clone cause a panic here?
2018-09-22 21:01:16	emerentius	you're cloning the template
2018-09-22 21:01:21	emerentius	that can execute arbitrary code
2018-09-22 21:01:58	UndeadLeech	Ah, well I'm not super concerned about that.
2018-09-22 21:02:29	emerentius	sure, if it's an internal function
2018-09-22 21:02:34	UndeadLeech	Yeah it is.
2018-09-22 21:02:35	emerentius	at least mark it unsafe then, tho
2018-09-22 21:02:53	justsomequestions	is there any way I can circumvent the match statement after comparing floats?
2018-09-22 21:03:03	justsomequestions	If I am sure that I don't mess up and have NaNs before?
2018-09-22 21:03:10	UndeadLeech	Yeah, sure. And add a comment. But right now after moving it from the testing program to the real thing it segfaults anyways. :)
2018-09-22 21:03:24	UndeadLeech	Which is always a sign for robust code.
2018-09-22 21:03:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 21:04:08	UndeadLeech	Oh, duh.
2018-09-22 21:04:36	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 21:04:47	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-22 21:05:11	<--	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 21:05:20	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-22 21:05:41	emerentius	justsomequestions: what match statement are you talking about?
2018-09-22 21:05:59	-->	Mateon2 (Thunderbird@moz-7dm3pa.supernova.orange.pl) has joined #rust-beginners
2018-09-22 21:07:12	<--	Mateon1 (Thunderbird@moz-6r707s.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-22 21:07:12	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 21:07:12	--	Mateon2 is now known as Mateon1
2018-09-22 21:07:36	<--	jbl007 (justme@moz-hgk1cl.3a7l.lldm.810a.2a02.IP) has quit (Quit: Gone!)
2018-09-22 21:07:41	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 21:08:43	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-09-22 21:09:52	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-22 21:12:22	xnor	what is the feature of std::sync::Mutex that lets me make a vector of Arc<Mutex<dyn Trait>>? I've implemented my own type of mutex that i want to use it is place?
2018-09-22 21:12:52	justsomequestions	can someone help me with this: https://play.rust-lang.org/?gist=c3230ca0d4501620218c4ab197e76446&version=stable&mode=debug&edition=2015
2018-09-22 21:13:05	xnor	i guess it isn't making a vector that is the problem, it is putting items in it that impl the trait
2018-09-22 21:13:07	justsomequestions	somehow I can't clone a Vec<T> allthough I made T: Clone
2018-09-22 21:14:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 21:15:17	-->	hays (quassel@moz-1pchbb.dc.comcast.net) has joined #rust-beginners
2018-09-22 21:15:25	justsomequestions	ah ok somehow removing the * did everything
2018-09-22 21:15:34	justsomequestions	allthough I only put it there since I got another error message earlier
2018-09-22 21:15:39	justsomequestions	I have to have changed something odd
2018-09-22 21:17:58	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 21:18:42	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 21:18:44	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 21:18:47	justsomequestions	do I right the error messages riht that I can't SubAssign a &Inventory from a &mut Inventory since the types have to be the same?
2018-09-22 21:18:58	justsomequestions	emerentius: nothing I remembered something wrong
2018-09-22 21:19:09	justsomequestions	I somehow thought I'd get an option back
2018-09-22 21:19:17	justsomequestions	when comparing f64 to f64
2018-09-22 21:19:19	<--	hays (quassel@moz-1pchbb.dc.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 21:19:41	UndeadLeech	emerentius: Do you happen to know how exactly `Vec::reserve` works? It seem like I need it to reseve memory to write to stuff outside of a vec, however it doesn't seem to always work.
2018-09-22 21:19:56	-->	hays (quassel@moz-ka9.bgc.2.5.IP) has joined #rust-beginners
2018-09-22 21:21:35	emerentius	UndeadLeech: what do you mean, it doesn't always work?
2018-09-22 21:21:37	justsomequestions	UndeadLeech: what do you mean with it doesn't work?
2018-09-22 21:21:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 21:21:56	justsomequestions	reserve only reserves the memory, the vector doesn't automatically grow
2018-09-22 21:22:19	justsomequestions	so you can't just reserve 5 spaces and then write to v[4], as the vector still has the same size as before you reserved
2018-09-22 21:23:13	emerentius	if you mean that it doesn't always grow the capacity
2018-09-22 21:23:22	emerentius	it only does if there isn't enough space already
2018-09-22 21:23:31	UndeadLeech	When I run `vec.append(&mut vec![_; length])` to initialize stuff it works, but if I use `vec.reserve(length); vec.set_len(vec.len() + length);` it does not.
2018-09-22 21:24:19	UndeadLeech	Let me try to initialize it to some random value manually.
2018-09-22 21:24:36	emerentius	I'm still not sure how this failure shows itself
2018-09-22 21:24:48	justsomequestions	reserve(n) does not reserve n spaces more than you have now
2018-09-22 21:24:50	UndeadLeech	It segfaults.
2018-09-22 21:24:53	justsomequestions	but reserves exactly n
2018-09-22 21:24:57	justsomequestions	if that is what you mean?
2018-09-22 21:25:00	UndeadLeech	Wait waht.
2018-09-22 21:25:22	UndeadLeech	Nono, it reserves additional.
2018-09-22 21:25:23	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Quit: )
2018-09-22 21:25:28	justsomequestions	ah really?
2018-09-22 21:25:46	justsomequestions	then it is different from how cpp does it, sorry
2018-09-22 21:25:50	UndeadLeech	reserve_exact(x) reserves exactly x additional elements.
2018-09-22 21:25:54	UndeadLeech	According to the docs.
2018-09-22 21:25:58	emerentius	len: 10, cap: 20;  .reserve_exact(10) => len: 10, cap: 20
2018-09-22 21:26:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 21:26:13	justsomequestions	good to know, thank you
2018-09-22 21:26:13	UndeadLeech	Up to x^
2018-09-22 21:26:46	emerentius	UndeadLeech: what are you storing in the vec?
2018-09-22 21:26:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 21:26:56	emerentius	or better yet, can you give an example where it segfaults
2018-09-22 21:27:22	UndeadLeech	Give me a second, I'm currently trying to simplify it to an issue I can repro in the playground.
2018-09-22 21:27:49	-->	DaQue (Mutter@moz-lje3vf.4ap6.qokt.0001.2600.IP) has joined #rust-beginners
2018-09-22 21:28:53	-->	agurk (agurk@moz-ihru49.dhcp.as2116.net) has joined #rust-beginners
2018-09-22 21:28:53	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 21:29:10	<--	backnforth (backnforth@moz-06p.dbe.143.72.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 21:29:29	agurk	hey! I'm trying out Actix, and I've come across this syntax: let name = &req.match_info()["name"];
2018-09-22 21:30:03	agurk	how does that work? I didn't think you could index an array or a list by a string literal?
2018-09-22 21:30:27	GreenJello	agurk, it implements the Index trait https://doc.rust-lang.org/std/ops/trait.Index.html
2018-09-22 21:30:58	agurk	GreenJello, oh that's really cool, didn't know you could do that!
2018-09-22 21:31:16	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-22 21:31:21	UndeadLeech	emerentius: Oh, I think I know what's up. Let me test it out.
2018-09-22 21:31:36	<--	starblue (juergen@moz-hq2qj9.versanet.de) has quit (Quit: Leaving.)
2018-09-22 21:32:15	UndeadLeech	Yeah this is *exactly* why I shouldn't be writing unsafe code lol.
2018-09-22 21:32:32	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 21:32:34	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-22 21:32:39	DaQue	Is there times when you would want to wrap a primitive type in something the borrow checker would  check? I thinking multithreaded apps might want this at times.  Is the a idiomatic way to wrap one? 
2018-09-22 21:33:01	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 21:33:14	-->	tac-tics (tac-tics@moz-iapcvs.ph.cox.net) has joined #rust-beginners
2018-09-22 21:33:28	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 21:34:02	xnor	rephrased/more direct: how do i implement a container that supports trait objects?
2018-09-22 21:34:19	GreenJello	DaQue, sure, with things like RwLock, Mutex, or more concretely AtomicUsize https://doc.rust-lang.org/std/sync/atomic/struct.AtomicUsize.html
2018-09-22 21:35:26	-->	vindy (Mibbit@moz-suj.knh.206.49.IP) has joined #rust-beginners
2018-09-22 21:36:19	DaQue	GreenJello thanks much.  I only up to  tuple struct in the 2018 book.  My mind rushes ahead sometimes.  
2018-09-22 21:36:19	<--	jaykay (Thunderbird@moz-7q6u78.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-22 21:36:59	GreenJello	:-
2018-09-22 21:37:02	GreenJello	:-)
2018-09-22 21:38:19	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-22 21:38:37	-->	niconii (nicole@moz-h91c0b.midco.net) has joined #rust-beginners
2018-09-22 21:38:38	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-22 21:38:55	<--	vindy (Mibbit@moz-suj.knh.206.49.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 21:39:01	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-22 21:40:43	<--	DaQue (Mutter@moz-lje3vf.4ap6.qokt.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-22 21:41:00	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-22 21:41:20	-->	pftbest_54 (pftbest_54@moz-542.tab.125.93.IP) has joined #rust-beginners
2018-09-22 21:41:27	emerentius	UndeadLeech: lol, what was it?
2018-09-22 21:41:54	UndeadLeech	emerentius: Still trying to find out how to solve it, until then I don't think I'm understanding what the fuck I'm actually doing. :P
2018-09-22 21:42:34	pftbest_54	Hello, can someone explain why is it ok to assign to `a.value` when `a` was moved? https://play.rust-lang.org/?gist=2a5745ba5cc1ba54b34be76ebb87714e&version=stable&mode=debug&edition=2015
2018-09-22 21:44:45	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 21:45:20	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-22 21:46:31	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 21:46:57	-->	david1 (david@moz-jn1.tii.168.72.IP) has joined #rust-beginners
2018-09-22 21:46:59	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 21:47:27	Arnavion	pftbest_54: Probably because it's okay to set fields of partially-moved out values, and it extends to completely moved-out values as well
2018-09-22 21:48:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 21:48:25	pftbest_54	Arnavion: but you can't read it afterwards, what is the point of setting them?
2018-09-22 21:48:27	emerentius	a better question is, why is `a` not considered initialized again
2018-09-22 21:48:40	emerentius	I know I've seen an issue for that long ago
2018-09-22 21:48:43	justsomequestions	does anyone know how I can use custom_derive to make a struct Id(u32); usable as an index?
2018-09-22 21:48:46	Arnavion	I don't think it's smart enough to say "all fields set == value is set"
2018-09-22 21:49:02	Arnavion	pftbest_54: If you'd just moved out a.value, then set it, you would be able to read it again
2018-09-22 21:49:09	-->	Urania (textual@moz-mmj1qv.mi.comcast.net) has joined #rust-beginners
2018-09-22 21:49:10	-->	orium (fulano@moz-cjq57u.cable.virginm.net) has joined #rust-beginners
2018-09-22 21:49:23	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 21:49:36	david1	I really don't understand: https://dpaste.de/6PBP
2018-09-22 21:49:45	david1	I'm trying to use a struct which contains a reference
2018-09-22 21:50:03	david1	and originally, I got an error saying that the reference didn't live long enough
2018-09-22 21:50:10	-->	TOGie (Mibbit@moz-nq7qh9.res.rr.com) has joined #rust-beginners
2018-09-22 21:50:28	david1	so I modified the struct to use a lifetime parameter, to my eye, exactly like in the rust book: https://doc.rust-lang.org/book/second-edition/ch10-03-lifetime-syntax.html#lifetime-annotations-in-struct-definitions
2018-09-22 21:51:05	TOGie	I'm being told I have to annotate the type inside an Ok() but I can't seem to figure out how to do that.
2018-09-22 21:51:18	TOGie	Can anyone point me in the right direction? Rust book doesn't mention it.
2018-09-22 21:51:20	Arnavion	Ok::<Foo, Bar>()
2018-09-22 21:51:21	david1	but now its telling me I need to *add* a life time parameter to my struct when it is defined. I thought I just did that
2018-09-22 21:51:21	emerentius	david1: &str doesn't own the data
2018-09-22 21:51:27	emerentius	so it doesn't decide how long it lives
2018-09-22 21:51:40	emerentius	format! returns a String, which does own the data
2018-09-22 21:51:46	emerentius	you can save that in the struct
2018-09-22 21:52:06	david1	emerentius: OK
2018-09-22 21:52:17	pftbest_54	Arnavion: I've just spent a hour debugging this bug in my code. In my case the `a.value` was an Option, and I couldn't see why it is None, when I explicitly set it to Some()
2018-09-22 21:52:17	david1	so I can only use static &str in a struct?
2018-09-22 21:52:58	Arnavion	pftbest_54: Your description does not make sense. Show your code.
2018-09-22 21:53:00	<--	TOGie (Mibbit@moz-nq7qh9.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 21:53:11	emerentius	only? and you couldn't generate &'static str dynamically anyway
2018-09-22 21:53:18	emerentius	well, not without hacky code
2018-09-22 21:53:26	emerentius	String is an actual type
2018-09-22 21:53:29	emerentius	store that
2018-09-22 21:53:43	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-22 21:53:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 21:53:56	emerentius	s/only?/only? no,/
2018-09-22 21:53:59	david1	yes, so I did that...
2018-09-22 21:54:25	david1	and stil get the error on my struct definition
2018-09-22 21:54:30	<--	underplank (Mibbit@moz-h7rvni.dynamic.sonic.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 21:54:37	david1	https://dpaste.de/6PBP
2018-09-22 21:55:02	david1	so same error, but my struct now has location: String
2018-09-22 21:55:30	dpc1	shouldn't your result be Result<PasteCreatedRedirect<'a>, Error> in the return type?
2018-09-22 21:55:41	emerentius	david1: that's the old link
2018-09-22 21:55:43	dpc1	err.. s/Error/()
2018-09-22 21:56:01	<--	Discovery (Discovery@moz-os6.vua.72.188.IP) has quit (Connection closed)
2018-09-22 21:56:41	david1	emerentius: yes, but the error is the same. it was the error I was referencing, not the struct
2018-09-22 21:56:43	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-22 21:56:48	UndeadLeech	emerentius: https://play.rust-lang.org/?gist=a4ef4bdb92eda44874787ba0c9221eae. I can't reproduce my local sigfault, but this seems to sigfault in the playground.
2018-09-22 21:57:04	david1	anyway, the issue is probably the same. I dropped the 'a specification from the struct, and used String, and now it works
2018-09-22 21:57:15	emerentius	david1: I can't reason about the error without the code
2018-09-22 21:57:19	david1	I had forgotten to remove the lifetime the first time
2018-09-22 21:58:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 21:58:10	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 21:58:37	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 21:58:43	emerentius	UndeadLeech: that's exactly what I meant when I said you need to use std::ptr::write to fill the hole
2018-09-22 21:58:57	emerentius	*ptr = template.clone()
2018-09-22 21:59:03	emerentius	this assignment drops the old (invalid value)
2018-09-22 21:59:04	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-22 21:59:20	UndeadLeech	Also segfaults without that though.
2018-09-22 21:59:34	UndeadLeech	But thanks for the explanation, that makes sense.
2018-09-22 21:59:45	<--	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has quit (Connection closed)
2018-09-22 22:00:06	-->	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has joined #rust-beginners
2018-09-22 22:00:10	UndeadLeech	Oh, that seems to work.
2018-09-22 22:00:13	emerentius	doesn't seem like it does?
2018-09-22 22:00:47	UndeadLeech	Ah perfect. It's probably when `buf` is dropped that it segfaults, right?
2018-09-22 22:00:58	UndeadLeech	Because with write it works now.
2018-09-22 22:01:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 22:01:06	emerentius	oh you meant it segfaults when you omit filling the hole?
2018-09-22 22:01:12	UndeadLeech	Yeah.
2018-09-22 22:01:15	emerentius	yeah, same issue of dropping invalid memory
2018-09-22 22:01:17	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-22 22:01:27	UndeadLeech	Ah gotcha. That makes sense yeah. Didn't think about it that way.
2018-09-22 22:03:00	pftbest_54	Arnavion: Here is a better example. Can you spot an error? https://play.rust-lang.org/?gist=14c230100ab096d9c56a16b2f71285c3&version=stable&mode=debug&edition=2015
2018-09-22 22:03:17	-->	ghallberg (Mibbit@moz-ngh759.tbcn.telia.com) has joined #rust-beginners
2018-09-22 22:03:31	UndeadLeech	Okay, now I can at least test if this unsafe code brings a perf benefit in the real code. Thanks for all the help and explanation emerentius.
2018-09-22 22:03:33	<--	Urania (textual@moz-mmj1qv.mi.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 22:03:53	Arnavion	pftbest_54: Yes, you think you set b.next but you didn't
2018-09-22 22:04:01	david1	anyway, so I still don't understand the error messages: https://dpaste.de/x7Di
2018-09-22 22:04:08	<--	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 22:04:16	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-22 22:04:19	Arnavion	pftbest_54: You can try opening an issue about it, but I don't think it's a problem
2018-09-22 22:05:05	ghallberg	Hello I'm trying to use https://docs.rs/sdl2/0.30.0/sdl2/render/struct.Canvas.html#method.draw_lines but when I pass it a slice like &[(10,10),(20,20),(30,30)] it complains that "the trait `std::convert::From<&[(i32, i32)]>` is not implemented for `&[sdl2::rect::Point]`" how do I fix this?
2018-09-22 22:05:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 22:05:16	emerentius	david1: I don't know what impl_web! does
2018-09-22 22:05:28	david1	why would i get the same error each time? In the first case, if I understand what I was told, a lifetime parameter for &str doesn't make any sense
2018-09-22 22:05:33	emerentius	but it's probably complaining about the missing lifetime specifier in that impl PasteService
2018-09-22 22:05:38	emerentius	impl<'a> PasteService<'a>
2018-09-22 22:05:44	david1	ah
2018-09-22 22:06:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 22:06:20	david1	that's confusing...unless it was trying to show me that I had definted a lifetime specifier in the def, and didn't give one when I used it
2018-09-22 22:06:33	david1	OK, I'm finally catching on, I think
2018-09-22 22:06:57	emerentius	sounds like the message under the struct definition should be different
2018-09-22 22:07:04	emerentius	like "struct defined with lifetime"
2018-09-22 22:07:13	emerentius	you could open an issue on the rust repo
2018-09-22 22:07:27	-->	wippler (Mibbit@moz-pev8el.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 22:07:45	wippler	hi at all
2018-09-22 22:08:03	wippler	i have got a question regarding installing rust
2018-09-22 22:08:05	<--	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2018-09-22 22:08:07	UndeadLeech	emerentius: The main issue would be either Clone panicing, or zero being outside of the buffer, right? Are there any other potential issues with my code?
2018-09-22 22:08:10	-->	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 22:08:22	wippler	can anybody help me
2018-09-22 22:08:32	UndeadLeech	wippler: Sure, just ask. :)
2018-09-22 22:08:58	wippler	ok i downloaded following tools:
2018-09-22 22:09:07	emerentius	UndeadLeech: prev_len + num_rows can overflow
2018-09-22 22:09:31	emerentius	but reserve would probably be panicking then
2018-09-22 22:09:33	wippler	rust-init.exe
2018-09-22 22:09:43	wippler	then visual rust
2018-09-22 22:09:51	wippler	rustup-init.exe
2018-09-22 22:10:03	wippler	but i am new in programming rust
2018-09-22 22:10:15	wippler	so how can i get it startet?
2018-09-22 22:10:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 22:10:39	emerentius	UndeadLeech: you can deal with panicking Clone pretty easily via leaking
2018-09-22 22:10:42	-->	martin2 (martin@moz-om65u1.anteldata.net.uy) has joined #rust-beginners
2018-09-22 22:10:55	wippler	i installed rust again and the last statement was:
2018-09-22 22:11:01	UndeadLeech	emerentius: Please elaborate.
2018-09-22 22:11:28	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-22 22:11:34	wippler	to get started you need cargo´s bin directory (%userprofile%\.cargo.bin)   
2018-09-22 22:11:39	wippler	what does it mean?
2018-09-22 22:11:53	wippler	i am in this explorer folder ....and now?
2018-09-22 22:12:05	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-22 22:12:08	emerentius	after reserving the space, set the len to zero
2018-09-22 22:12:18	emerentius	then fill the hole in
2018-09-22 22:12:26	emerentius	if a panic occurs, only valid memory will be dropped
2018-09-22 22:12:37	emerentius	anything after zero, new and old, will be leaked
2018-09-22 22:12:39	emerentius	which is safe
2018-09-22 22:12:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 22:12:46	emerentius	after you're done, correct the length
2018-09-22 22:12:51	-->	curious (s34n@moz-p45.d19.76.208.IP) has joined #rust-beginners
2018-09-22 22:12:55	UndeadLeech	Ah, just leak the memory and set the length at the end.
2018-09-22 22:13:03	emerentius	you could also increment the length after each correct clone
2018-09-22 22:13:09	UndeadLeech	Wouldn't have to set it to 0, right? Could just not set it?
2018-09-22 22:13:16	emerentius	perf <-> leak tradeoff
2018-09-22 22:13:36	emerentius	no, not literally 0
2018-09-22 22:13:40	emerentius	`zero` like the variable
2018-09-22 22:13:41	wippler	where do i have to set it?
2018-09-22 22:13:52	curious	How much space would an instance of enum {Red:0, Black:1} occupy? 1 byte?
2018-09-22 22:13:56	emerentius	but it has to be set, because after that point there could be invalid memory
2018-09-22 22:14:17	-->	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has joined #rust-beginners
2018-09-22 22:15:04	emerentius	curious: I assume you mean enum { Red = 0, Black = 1 }
2018-09-22 22:15:05	wippler	is it in visual studio to set it?
2018-09-22 22:15:13	<--	ghallberg (Mibbit@moz-ngh759.tbcn.telia.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 22:15:28	emerentius	eval: enum Foo { Red = 0, Black = 1 } std::mem::size_of::<Foo>()
2018-09-22 22:15:31	--	Notice(eval): 1
2018-09-22 22:15:53	<--	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has quit (Connection closed)
2018-09-22 22:16:11	-->	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has joined #rust-beginners
2018-09-22 22:16:15	curious	emerentius: thanks
2018-09-22 22:16:52	-->	LaurazE (Mibbit@moz-mi3.84t.61.179.IP) has joined #rust-beginners
2018-09-22 22:16:53	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 22:17:13	LaurazE	I'm here
2018-09-22 22:17:17	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 22:17:53	-->	starblue (juergen@moz-hq2qj9.versanet.de) has joined #rust-beginners
2018-09-22 22:18:38	<--	wippler (Mibbit@moz-pev8el.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 22:18:49	<--	david1 (david@moz-jn1.tii.168.72.IP) has quit (Connection closed)
2018-09-22 22:18:56	-->	reedlepee (Mibbit@moz-pev8el.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-22 22:19:03	UndeadLeech	emerentius: Probably easier to just go for the split_off + append solution. Chances are that's going to cause less headache.
2018-09-22 22:19:08	UndeadLeech	Thanks for the advice though.
2018-09-22 22:19:46	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-22 22:19:54	reedlepee	can anybody help me with installing rust`?
2018-09-22 22:20:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 22:20:13	UndeadLeech	reedlepee: What's the problem?
2018-09-22 22:20:36	-->	david1 (david@moz-jcf.ci2.168.72.IP) has joined #rust-beginners
2018-09-22 22:21:09	UndeadLeech	Oh whippler is gone?
2018-09-22 22:21:31	reedlepee	i installed rust and the last statement is: "to get started you need cargo´s bin directory (%userprofile%/.cargo/bin)"
2018-09-22 22:21:46	UndeadLeech	Are you wippler?
2018-09-22 22:21:46	reedlepee	whippler is now reedlepee
2018-09-22 22:21:50	reedlepee	yes
2018-09-22 22:21:52	UndeadLeech	Ah, perfect.
2018-09-22 22:22:09	<--	infinity0 (infinity0@moz-8ho.onn.95.81.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 22:22:10	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-22 22:22:12	UndeadLeech	I'm not familiar with windows at all, but it's possible that you need to set the path.
2018-09-22 22:22:28	reedlepee	so i entered it on my explorer
2018-09-22 22:22:32	scottmcm	eval: enum Foo { Red = 0, Black = 1 } std::mem::size_of::<Option<Option<Option<Foo>>>>()
2018-09-22 22:22:35	--	Notice(eval): 1
2018-09-22 22:22:53	reedlepee	WHERE do i have to set the path?
2018-09-22 22:23:35	emerentius	UndeadLeech: or bugger the stdlib guys until they add it
2018-09-22 22:23:43	emerentius	ah no, they'll probably tell you to do it on crates.io
2018-09-22 22:23:55	UndeadLeech	reedlepee: Just search for 'set environment variables windows'.
2018-09-22 22:25:18	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-22 22:25:20	reedlepee	ah this looks familiar ( i did something like that with python )
2018-09-22 22:25:54	UndeadLeech	emerentius: It is ~25 milliseconds slower though. I'll need to sleep on it or something. :D
2018-09-22 22:25:59	UndeadLeech	I do like myself some speed...
2018-09-22 22:29:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 22:29:31	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-22 22:31:35	<--	anthony25 (Anthony@moz-9jgukp.fr) has quit (Ping timeout: 121 seconds)
2018-09-22 22:32:23	<--	pftbest_54 (pftbest_54@moz-542.tab.125.93.IP) has left #rust-beginners
2018-09-22 22:33:45	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 22:33:56	reedlepee	undead leech: now i have set the path
2018-09-22 22:34:08	reedlepee	i started visual studio....
2018-09-22 22:34:08	-->	anthony25 (Anthony@moz-5vq9ri.aruhier.fr) has joined #rust-beginners
2018-09-22 22:35:15	reedlepee	...and click on "file" > "new project..." but rust is still missing for selection
2018-09-22 22:36:41	curious	is https://doc.rust-lang.org/book/2018-edition/appendix-02-operators.html listed in precedence order?
2018-09-22 22:36:57	UndeadLeech	reedlepee: I'm sorry, but I'm not familiar with visual studio.
2018-09-22 22:37:21	reedlepee	ok no prob. which ide should i use?
2018-09-22 22:38:00	UndeadLeech	I don't windows, I use linux + vim, so setup is a bit more straight-forward.
2018-09-22 22:39:19	-->	adi (adi@moz-omejp7.vsos.ethz.ch) has joined #rust-beginners
2018-09-22 22:39:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 22:40:40	<--	adi (adi@moz-omejp7.vsos.ethz.ch) has quit (Quit: und weg.)
2018-09-22 22:41:39	<--	LaurazE (Mibbit@moz-mi3.84t.61.179.IP) has quit (G-Lined: no spamming here)
2018-09-22 22:42:58	-->	re-l (re-l124c41@moz-mrjr87.unity-media.net) has joined #rust-beginners
2018-09-22 22:43:32	<--	re-l124c41 (re-l124c41@moz-o2t8qb.4kh6.ni31.0908.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 22:43:55	<--	Kreest__ (Kreest@moz-o1u352.pool.invitel.hu) has quit (Ping timeout: 121 seconds)
2018-09-22 22:44:19	<--	justsomequestions (gumble@moz-sgsggv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-22 22:44:33	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-22 22:44:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 22:44:40	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 22:45:26	<--	jihi (jih@moz-b0q2gd.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-22 22:46:19	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 22:46:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 22:47:14	<--	re-l (re-l124c41@moz-mrjr87.unity-media.net) has quit (Ping timeout: 121 seconds)
2018-09-22 22:47:49	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 22:48:42	--	burntsushi__ is now known as burntsushi
2018-09-22 22:50:56	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-22 22:51:18	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-22 22:51:57	-->	re-l124c41 (re-l124c41@moz-aa083r.4kh6.ni31.0908.2a02.IP) has joined #rust-beginners
2018-09-22 22:52:30	Orez	is there a way to have a public struct field that can't be modified directly? or do i just have to make an accessor that returns a borrow?
2018-09-22 22:52:57	UndeadLeech	Orez: Like something that would be read-only?
2018-09-22 22:53:01	Orez	right
2018-09-22 22:53:32	GreenJello	Orez, if they have mutable access to the struct, they have the ability of overwrite the public field
2018-09-22 22:53:38	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-22 22:53:39	UndeadLeech	Best choice is to just add an accessor which returns it.
2018-09-22 22:54:55	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 22:54:57	Orez	hm makes sense. thanks
2018-09-22 22:55:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 22:55:24	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 22:55:28	<--	Aankhen`` (notasquid@moz-cqe.k3h.207.49.IP) has quit (Quit: Sorry, was AFK)
2018-09-22 22:59:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 22:59:41	<--	david1 (david@moz-jcf.ci2.168.72.IP) has quit (Connection closed)
2018-09-22 23:00:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 23:02:01	<--	reedlepee (Mibbit@moz-pev8el.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 23:02:11	Orez	hm makes sense. thanks
2018-09-22 23:02:50	Orez	(oops). oh interesting, but i can name the accessor method the same thing as the field?
2018-09-22 23:04:21	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 23:04:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 23:04:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 23:07:32	dpc1	yes you can
2018-09-22 23:07:59	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-22 23:08:44	<--	martin2 (martin@moz-om65u1.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-22 23:08:49	antifuchs	how do you all implement huge traits? I am trying to impl serde's Serializer, and it's a *lot* of methods - is there a way to have them written out so I can just copy&paste the prototypes?
2018-09-22 23:08:51	-->	KimberlyFA1993 (Mibbit@moz-hrh.82l.61.179.IP) has joined #rust-beginners
2018-09-22 23:09:14	antifuchs	(I am spoiled by having `M-x go-impl` for implementing go interfaces, which works... sometimes) (:
2018-09-22 23:09:18	<--	re-l124c41 (re-l124c41@moz-aa083r.4kh6.ni31.0908.2a02.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-22 23:09:18	KimberlyFA1993	Hello
2018-09-22 23:09:42	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Connection closed)
2018-09-22 23:09:54	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-22 23:10:36	Amaranth	antifuchs: That's what derive is for
2018-09-22 23:11:03	Amaranth	Oh wait you're writing a new backend for it to serialize things to?
2018-09-22 23:11:08	antifuchs	Amaranth: yeah, that'd be really convenient for Serializers, no such thing though (since you end up having to provide the methods)
2018-09-22 23:11:09	antifuchs	yup!
2018-09-22 23:11:19	Amaranth	Yeah I think you just have to write those out
2018-09-22 23:11:32	antifuchs	I mean, I can find the source file somewhere and copy&paste... it's just really annoying (:
2018-09-22 23:11:59	Amaranth	But I thought you only had to write a couple methods and the rest were just for optimization or if your target format has something special for the different types
2018-09-22 23:12:01	antifuchs	cargo check provides them *almost* usefully, I guess I can copy&paste the error message & make myself a macro to adjust it
2018-09-22 23:12:20	antifuchs	just, life's too short to get 2 dozen function signatures exactly right (:
2018-09-22 23:12:56	antifuchs	on Serialize, yep (for data structures, a derive exists for that); for Serializer (https://docs.serde.rs/serde/trait.Serializer.html), it's a ton of stuff that's required (:
2018-09-22 23:13:56	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 23:14:19	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 23:14:57	<--	eyans (a@moz-fdq4d5.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-22 23:15:07	<--	emerentius (emerentius@moz-215tg4.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-22 23:15:26	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 23:16:24	-->	emerent (emerentius@moz-0qi8g5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-22 23:18:58	<--	blaztinn (blaztinn@moz-binvad.dynamic.t-2.net) has quit (Client exited)
2018-09-22 23:19:04	antifuchs	anyway, if there was a tool like `cargo impl serde::ser::Serializer --for=MyEncoder` that I could run that'd output --everybody-loops like output, I'd be over the moon ((:
2018-09-22 23:19:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 23:19:55	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-22 23:21:18	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 23:21:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 23:21:55	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-22 23:24:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 23:25:23	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-22 23:27:22	-->	kyren_ (kyren@moz-4v97l3.q5rt.imr4.9001.2603.IP) has joined #rust-beginners
2018-09-22 23:27:43	<--	kyren (kyren@moz-4v97l3.q5rt.imr4.9001.2603.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 23:28:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 23:29:00	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-22 23:30:29	-->	ubuntourist (kjcole@moz-onuir1.pools.spcsdns.net) has joined #rust-beginners
2018-09-22 23:33:08	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-22 23:37:51	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 23:38:00	<--	KimberlyFA1993 (Mibbit@moz-hrh.82l.61.179.IP) has quit (G-Lined: no spamming here)
2018-09-22 23:41:58	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 23:43:08	-->	mib_2qzf6i (Mibbit@moz-2b8.9nm.89.177.IP) has joined #rust-beginners
2018-09-22 23:43:23	<--	mib_2qzf6i (Mibbit@moz-2b8.9nm.89.177.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-22 23:43:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 23:45:47	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-22 23:46:23	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-22 23:47:58	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 23:48:32	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-22 23:48:37	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Connection closed)
2018-09-22 23:49:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 23:49:42	-->	turbobob (turbobob@moz-tuvq7p.ca.comcast.net) has joined #rust-beginners
2018-09-22 23:50:02	turbobob	hi all, I am trying to use the lazy crate from nightly rust, and it complains about no thunk
2018-09-22 23:50:30	turbobob	I assume I have to enable a feature, but which one? Specifically, how can I find out for myself which feature flag gates the Thunk trait?
2018-09-22 23:51:29	<--	starblue (juergen@moz-hq2qj9.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-22 23:54:50	antifuchs	turbobob: I believe crates mostly document what their features do either in their readme, or in their generated docs
2018-09-22 23:54:58	antifuchs	(not sure if there's any structured place for them yet)
2018-09-22 23:55:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-22 23:55:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-22 23:55:38	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 23:55:53	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-22 23:56:09	antifuchs	turbobob: it looks like that crate is from 2015; I notice there's a PR open to update it to more current rust here https://github.com/reem/rust-lazy/pull/9
2018-09-22 23:56:24	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 23:56:35	antifuchs	sooo I'm somewhat unsure if you'll get this working on a rust version from this year unpatched.
2018-09-22 23:56:36	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-22 23:56:48	turbobob	Good call
2018-09-22 23:57:11	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 23:57:22	joris	turbobob: may i ask why you need lazy ? 
2018-09-22 23:57:32	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-22 23:57:42	joris	i've found that rust is not very well fit for lazy semantic anyway due to borrowing
2018-09-22 23:57:58	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 23:58:19	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-22 23:58:22	turbobob	I have a struct representing a database connection. I wanted to add a bunch of prepared statements to the struct, just wanted to put them behind a thunk to make initializing the struct faster (I don't know if all the statements will be used by every instance of the struct)
2018-09-22 23:58:32	turbobob	it can't be lazy_static, because it's per-connection
2018-09-22 23:58:37	<--	xet7 (xet7@moz-smnqum.rev.dnainternet.fi) has quit (The TLS connection was non-properly terminated.)
2018-09-22 23:58:45	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 23:59:03	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-22 23:59:07	turbobob	I think i'll just go ahead and do them eager for now, but it'd be cool to have a lazy crate... (note to self...)
2018-09-22 23:59:09	joris	are those statement always the same ?
2018-09-22 23:59:31	joris	you can always have statements: Option<StatetmentReturnState>
2018-09-22 23:59:32	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-22 23:59:32	turbobob	The prepared statements are the same, and they'll be bound to different values 
2018-09-22 23:59:36	joris	and have "manual" lazy 
2018-09-22 23:59:45	joris	lazy is mostly convenience
2018-09-22 23:59:54	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-23 00:00:09	turbobob	A convenience that would've been convenient right now :)
2018-09-23 00:00:24	joris	sure :)
2018-09-23 00:01:09	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 00:01:47	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 00:03:55	-->	rogerduran (roger@moz-mbf.7lh.121.91.IP) has joined #rust-beginners
2018-09-23 00:04:08	turbobob	oh wait, there's prepare_cached
2018-09-23 00:06:43	<--	agurk (agurk@moz-ihru49.dhcp.as2116.net) has quit (Connection closed)
2018-09-23 00:08:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 00:10:44	<--	stomper (Mibbit@moz-rlq6b2.sd.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 00:10:50	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 00:12:54	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-23 00:13:50	-->	soren (soren@moz-ppgqcs.dab.02.net) has joined #rust-beginners
2018-09-23 00:13:52	-->	underplank (Mibbit@moz-7qnvej.compute-1.amazonaws.com) has joined #rust-beginners
2018-09-23 00:13:52	-->	soren_ (soren@moz-ppgqcs.dab.02.net) has joined #rust-beginners
2018-09-23 00:13:55	-->	soren__ (soren@moz-ppgqcs.dab.02.net) has joined #rust-beginners
2018-09-23 00:14:11	underplank	Hi all I have some code/ test here -> http://dpaste.com/2MHP4TX
2018-09-23 00:14:32	underplank	and Im getting http://mibpaste.com/rymjEk 
2018-09-23 00:15:15	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-23 00:15:17	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 00:16:10	<--	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has quit (Connection closed)
2018-09-23 00:16:40	<--	herder (herder@moz-en65c0.bc.googleusercontent.com) has quit (Quit: WeeChat 1.9.1)
2018-09-23 00:16:47	-->	herder (herder@moz-en65c0.bc.googleusercontent.com) has joined #rust-beginners
2018-09-23 00:20:23	-->	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has joined #rust-beginners
2018-09-23 00:22:31	-->	david1 (david@moz-jcf.ci2.168.72.IP) has joined #rust-beginners
2018-09-23 00:22:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 00:25:36	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 00:25:40	-->	gtrr (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-23 00:26:14	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 00:26:27	gtrr	hi can someone spare a minute to help me understand Arc and Rc
2018-09-23 00:27:57	gtrr	reading through tutorials i aleays think i understand them then i ealk away and ten minutes later im back at only knowing that they can just get past the borrow checker somehow
2018-09-23 00:30:12	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 00:30:43	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 00:32:05	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-23 00:33:28	<--	gtrr (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 00:34:45	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 00:38:31	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-23 00:38:36	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-23 00:38:48	<--	ubuntourist (kjcole@moz-onuir1.pools.spcsdns.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 00:44:59	-->	starblue (juergen@moz-hqetfg.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 00:45:13	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 00:50:02	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-23 00:51:12	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-23 00:52:07	-->	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has joined #rust-beginners
2018-09-23 00:53:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 00:54:53	antifuchs	is there something using the `syn` crate already that parses a whole crate? I know you can have syn parse a file, but then you have to resolve modules and go recursively, in order to find `pub use`d names...
2018-09-23 00:57:57	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-23 00:58:33	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-23 00:58:39	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-23 00:59:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:01:51	<--	oms (oms@moz-1ijooc.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-23 01:01:57	<--	david1 (david@moz-jcf.ci2.168.72.IP) has quit (Connection closed)
2018-09-23 01:02:27	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-23 01:05:08	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 01:06:03	<--	soren_ (soren@moz-ppgqcs.dab.02.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:06:07	<--	soren (soren@moz-ppgqcs.dab.02.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:06:07	<--	soren__ (soren@moz-ppgqcs.dab.02.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:06:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 01:12:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:12:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 01:17:07	-->	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-23 01:17:53	<--	rogerduran (roger@moz-mbf.7lh.121.91.IP) has quit (Quit: WeeChat 2.2)
2018-09-23 01:18:30	-->	lkurusa_ (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-23 01:20:04	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-23 01:21:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:21:45	<--	lilis (lilis@moz-8q0.itm.75.138.IP) has quit (Quit: Leaving)
2018-09-23 01:22:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 01:23:26	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-23 01:28:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:28:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 01:33:11	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-23 01:34:23	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 01:34:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:36:13	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-23 01:37:32	-->	siddhartharao17 (siddharthar@moz-0rtq0v.ca.comcast.net) has joined #rust-beginners
2018-09-23 01:37:52	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 01:40:22	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 01:40:54	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 01:40:55	<--	underplank (Mibbit@moz-7qnvej.compute-1.amazonaws.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 01:41:27	-->	rogerduran (roger@moz-mbf.7lh.121.91.IP) has joined #rust-beginners
2018-09-23 01:42:06	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:42:53	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 01:45:11	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:45:31	Orez	is it possible to create a macro that constructs a string literal? i have a string literal i'd like to interpolate into another literal, and it seems like this ought to be achieveable at compile time
2018-09-23 01:46:06	@mbrubeck	Orez: not with `macro_rules!` macros
2018-09-23 01:46:58	@mbrubeck	Orez: I think it should be possible with procedural macros, though I don't have experience with them myself
2018-09-23 01:46:58	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 01:47:07	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:47:34	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 01:47:44	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 01:48:09	Orez	dang. although i just found https://doc.rust-lang.org/std/macro.concat.html , i wonder if i could leverage that somehow
2018-09-23 01:48:40	@mbrubeck	oh yeah, forgot about that
2018-09-23 01:48:57	<--	siddhartharao17 (siddharthar@moz-0rtq0v.ca.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 01:48:59	@mbrubeck	That should work for simple interpolation of multiple literals
2018-09-23 01:50:03	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-23 01:50:05	Orez	i think i've got it doing what i need. thanks!
2018-09-23 01:50:12	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-23 01:51:24	-->	alx741 (alx741@moz-obd.k67.178.186.IP) has joined #rust-beginners
2018-09-23 01:56:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 01:59:45	<--	AtumT (IRC@moz-niuqp7.gvt.net.br) has quit (Client exited)
2018-09-23 02:00:36	-->	raisin (Mibbit@moz-a6f.9te.17.201.IP) has joined #rust-beginners
2018-09-23 02:01:27	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-23 02:01:27	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-23 02:01:27	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 02:01:28	-->	JAlbers_ (jalbers@moz-c8eupi.pd3l.fnbr.100a.2600.IP) has joined #rust-beginners
2018-09-23 02:01:33	raisin	how can I make conditional compilation for block of code instead of just one line ?
2018-09-23 02:01:48	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 02:02:00	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 02:02:10	raisin	would like to define some extern crate for a specific feature
2018-09-23 02:02:16	<--	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has quit (Connection closed)
2018-09-23 02:02:23	-->	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has joined #rust-beginners
2018-09-23 02:02:56	-->	mandeep_ (mandeep@moz-aqksj4.us.northamericancoax.com) has joined #rust-beginners
2018-09-23 02:03:38	&niconii	raisin: #[cfg(...)] { ... }
2018-09-23 02:04:26	<--	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has quit (Quit: ZNC - http://znc.in)
2018-09-23 02:04:33	&niconii	raisin: `#[cfg(...)] fn foo() { ... }` and `#[cfg(...)] mod bar { ... }` are also possible, btw
2018-09-23 02:05:18	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 02:05:30	<--	JAlbers_ (jalbers@moz-c8eupi.pd3l.fnbr.100a.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 02:06:03	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 02:06:19	&niconii	(also when i say `#[cfg(...)] { ... }` i mean you can do that inside a function, the { ... } is just a normal block with a cfg attribute on it)
2018-09-23 02:06:33	<--	mandeep (mandeep@moz-qt0dau.dyn.columbia.edu) has quit (Ping timeout: 121 seconds)
2018-09-23 02:07:18	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 02:07:43	-->	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has joined #rust-beginners
2018-09-23 02:08:13	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-23 02:12:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 02:15:17	<--	subsonik (subsonik@moz-liqq20.netspectrum.de) has quit (Quit: ZNC - https://znc.in)
2018-09-23 02:15:23	-->	subsonik (subsonik@moz-liqq20.netspectrum.de) has joined #rust-beginners
2018-09-23 02:17:49	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 02:19:02	-->	starblue1 (juergen@moz-dld9uf.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 02:19:26	-->	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-23 02:20:05	<--	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has quit (Quit: ZNC - http://znc.in)
2018-09-23 02:20:16	-->	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has joined #rust-beginners
2018-09-23 02:20:24	<--	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has quit (Quit: ZNC - http://znc.in)
2018-09-23 02:20:31	<--	starblue (juergen@moz-hqetfg.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-23 02:20:33	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 02:22:10	<--	JAlbers (jalbers@moz-45l.8fo.42.70.IP) has quit (Connection closed)
2018-09-23 02:24:58	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 02:27:51	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 02:29:37	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 02:30:30	<--	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has quit (Connection closed)
2018-09-23 02:31:20	curious	I have an enum Color{Red=0, Blue=1, Green=2, Yellow=3}. I have a fn color(i:u8){match i % 4 {0=>Color::Red, 1=>Color::Blue, 2=>Color::Green, 3=>Color::Yellow}} The compiler complains about my match lacking arms.
2018-09-23 02:31:35	-->	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has joined #rust-beginners
2018-09-23 02:31:41	curious	I have an arm for each possibility.
2018-09-23 02:32:30	<--	jazzpi (jazzpi@moz-i6l8pk.space) has quit (Quit: ZNC - http://znc.in)
2018-09-23 02:32:31	-->	osa (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-23 02:33:12	curious	(my fn is fn(u8) -> Color. I left off the -> above)
2018-09-23 02:33:50	osa	okay I have been at this all day and I am at the end of it. I can't detangle this ownership problem but I have reduced the problem down to the simplest possible example https://play.rust-lang.org/?gist=499670bc2a62376e8cabbdcac5436734&version=stable&mode=debug&edition=2015
2018-09-23 02:34:28	<--	qguv (qguv@moz-tbrgui.compute-1.amazonaws.com) has quit (Quit: bye)
2018-09-23 02:34:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 02:34:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 02:35:44	<--	Dariost (Dariost@moz-euo.lj4.20.151.IP) has quit (Client exited)
2018-09-23 02:36:15	<--	subsonik (subsonik@moz-liqq20.netspectrum.de) has quit (Quit: ZNC - https://znc.in)
2018-09-23 02:36:31	-->	jazzpi (jazzpi@moz-i6l8pk.space) has joined #rust-beginners
2018-09-23 02:36:33	-->	subsonik (subsonik@moz-liqq20.netspectrum.de) has joined #rust-beginners
2018-09-23 02:36:50	<--	fireglow (fireglow@moz-c48epn.su) has quit (Quit: Gnothi seauton; Veritas vos liberabit)
2018-09-23 02:37:22	-->	fireglow (fireglow@moz-c48epn.su) has joined #rust-beginners
2018-09-23 02:37:28	-->	qguv (qguv@moz-tbrgui.compute-1.amazonaws.com) has joined #rust-beginners
2018-09-23 02:38:50	&niconii	curious: rust doesn't analyze to the point of figuring out the entire set of possible numbers that i % 4 could resolve to
2018-09-23 02:39:01	&niconii	curious: it just looks at the type
2018-09-23 02:39:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 02:39:44	fwiw	osa: isn't that kind of circular
2018-09-23 02:40:10	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 02:40:11	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 02:40:18	fwiw	osa: did you need a linked list?
2018-09-23 02:40:50	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 02:41:54	-->	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has joined #rust-beginners
2018-09-23 02:42:09	<--	weeji (jihi@moz-bq1n3d.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-23 02:42:10	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-23 02:42:59	osa	fwiw yeah i recognized this as some kind of cyclic ownership problem but i dont need a linked list. i just need to be able set those struct fields and i cant change their signatures or anything
2018-09-23 02:43:29	osa	i was trying to escape hatch my out using refcell and arc and rc but cant figure out how to use them properly in this scenario 
2018-09-23 02:43:59	osa	ownership diamond of death
2018-09-23 02:44:51	osa	correction i can change the fields of Handler but nothing else
2018-09-23 02:45:01	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 02:45:11	osa	either way Handler MUST take a mutable Neovim must
2018-09-23 02:45:42	<--	emerent (emerentius@moz-0qi8g5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-23 02:46:00	-->	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has joined #rust-beginners
2018-09-23 02:47:28	<--	greeenngrass (learning_so@moz-gbu22c.or.comcast.net) has quit (Quit: Leaving)
2018-09-23 02:48:22	<--	fyber (fyber@moz-rj5.06j.77.45.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-23 02:49:27	ZeroWalker	been trying to find a way to parse some data into json without knowing the structure at compile time. It's a fairly simple structure in itself, it basically strings there is in an array, so like column and rows. Doesn't have to be json, but i don't know of any other format that plays well with javascript
2018-09-23 02:49:28	<--	mgxm (mgxm@moz-6nr.2qp.32.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 02:52:26	-->	lilis (Mutter@moz-kq3.24t.90.183.IP) has joined #rust-beginners
2018-09-23 02:52:44	-->	mgxm (mgxm@moz-p7snfm.r2pe.kphg.19f0.2001.IP) has joined #rust-beginners
2018-09-23 02:54:24	lilis	Hi guys, does anyone know of any CLI library for making selection menu?
2018-09-23 02:55:01	-->	weeji (jihi@moz-eqru67.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-23 02:57:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 02:58:14	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 02:59:38	<--	osa (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 02:59:45	<--	lilis (Mutter@moz-kq3.24t.90.183.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-23 03:00:12	-->	martin2 (martin@moz-om65u1.anteldata.net.uy) has joined #rust-beginners
2018-09-23 03:01:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 03:02:16	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 03:03:27	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-23 03:04:45	<--	tac-tics (tac-tics@moz-iapcvs.ph.cox.net) has quit (Quit: Leaving)
2018-09-23 03:04:56	<--	qguv (qguv@moz-tbrgui.compute-1.amazonaws.com) has quit (Quit: bye)
2018-09-23 03:05:02	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 03:05:14	<--	martin2 (martin@moz-om65u1.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-23 03:05:17	-->	kimundi- (kimundi@moz-3q7qer.versanet.de) has joined #rust-beginners
2018-09-23 03:05:59	-->	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has joined #rust-beginners
2018-09-23 03:06:30	-->	mib_gaisi5 (Mibbit@moz-o4hrcg.wa.comcast.net) has joined #rust-beginners
2018-09-23 03:06:49	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 03:07:22	<--	kimundi (kimundi@moz-omv9lc.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-23 03:07:22	--	kimundi- is now known as kimundi
2018-09-23 03:09:28	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 03:09:31	-->	kdan (Mibbit@moz-fs6n7g.res.rr.com) has joined #rust-beginners
2018-09-23 03:09:45	-->	neal_ (neal@moz-5qr9tu.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-23 03:09:46	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-23 03:10:53	<--	mgxm (mgxm@moz-p7snfm.r2pe.kphg.19f0.2001.IP) has quit (Quit: ....)
2018-09-23 03:12:35	<--	neal (neal@moz-fjv4pt.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-23 03:13:52	<--	xionbox (chris@moz-8sf7em.106f.npme.0281.2601.IP) has quit (Quit: Konversation terminated!)
2018-09-23 03:13:55	-->	gregg (greg@moz-00mjdg.gnumpf.tk) has joined #rust-beginners
2018-09-23 03:15:24	-->	martin2 (martin@moz-om65u1.anteldata.net.uy) has joined #rust-beginners
2018-09-23 03:18:14	-->	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 03:20:16	-->	faitswul_ (faitswulff@moz-2jh9mm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 03:20:34	-->	mgxm (mgxm@moz-6nr.2qp.32.45.IP) has joined #rust-beginners
2018-09-23 03:21:46	-->	siddhartharao17 (siddharthar@moz-un23qq.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-23 03:22:10	-->	Susanod1983 (Mibbit@moz-b68.v60.252.185.IP) has joined #rust-beginners
2018-09-23 03:22:16	<--	faitswulff (faitswulff@moz-okf1hr.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 03:22:41	Susanod1983	Hey
2018-09-23 03:23:34	-->	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-23 03:23:55	Schmeckinger	Why cant i "impl !Send for X {}"
2018-09-23 03:28:16	Schmeckinger	And why does [T; n] seem to reuire T: Copy
2018-09-23 03:32:13	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-23 03:33:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 03:38:02	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 03:38:51	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 03:40:26	<--	martin2 (martin@moz-om65u1.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-23 03:41:43	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-23 03:41:49	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-23 03:47:03	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 03:47:30	-->	mib_z6jtcc (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-23 03:47:44	mib_z6jtcc	whats the point of refcell if borrow returns a Ref<T>
2018-09-23 03:48:02	mib_z6jtcc	am i supposed to operate on Ref? but i want ot operate on the thing inside
2018-09-23 03:49:32	Schmeckinger	you call borrow or borrow_mut to get a ref to a mut ref to the thing
2018-09-23 03:50:18	mib_z6jtcc	Ref and RefMut have map functions. i dont get what im supposed to do with those
2018-09-23 03:50:31	mib_z6jtcc	I want to use the T in Ref<T>
2018-09-23 03:51:47	Schmeckinger	here is an example
2018-09-23 03:51:48	Schmeckinger	https://play.rust-lang.org/?gist=7213c9e5deb42027e0d3969e5290c35f&version=stable&mode=debug&edition=2015
2018-09-23 03:52:00	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-23 03:52:17	Schmeckinger	notice x isnt mut
2018-09-23 03:52:35	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 03:53:02	<--	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 03:54:01	mib_z6jtcc	Okay I see.. My IDE kept lint complaining that I was trying to call func() on a Ref<T> and I'm thinking okay well how do I use the T without the Ref https://play.rust-lang.org/?gist=d267075534678dcfdbe70643bfdb3cd6&version=stable&mode=debug&edition=2015
2018-09-23 03:54:09	mib_z6jtcc	^ what i wanted to do
2018-09-23 03:54:25	<--	Susanod1983 (Mibbit@moz-b68.v60.252.185.IP) has quit (G-Lined: no spamming here)
2018-09-23 03:54:30	mib_z6jtcc	looks like I just make calls on Ref<T> as I would T normally and it delegates? 
2018-09-23 03:54:42	Schmeckinger	My example works, bekause Ref implements Deref
2018-09-23 03:55:23	Schmeckinger	because*
2018-09-23 03:55:31	mib_z6jtcc	so not delegating it gets implcitly dereferenced 
2018-09-23 03:55:42	mib_z6jtcc	implements Deref trait
2018-09-23 03:55:45	Schmeckinger	impl<'b, T> Deref for Ref<'b, T> where     T: ?Sized, 
2018-09-23 03:55:49	-->	JAlbers (jalbers@moz-c3oerl.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 03:55:57	Schmeckinger	https://doc.rust-lang.org/std/ops/trait.Deref.html
2018-09-23 03:56:02	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 03:56:46	mib_z6jtcc	okay thanks
2018-09-23 03:57:50	Schmeckinger	oh and Ref::map is an associated function
2018-09-23 03:57:54	<--	JAlbers (jalbers@moz-c3oerl.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-23 03:57:56	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-23 03:58:25	-->	JAlbers (jalbers@moz-c3oerl.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 03:58:48	Schmeckinger	you cant call map on a Ref you have to put the ref inside of Ref::map()
2018-09-23 03:59:07	mib_z6jtcc	oh okay
2018-09-23 03:59:28	mib_z6jtcc	question
2018-09-23 04:00:27	mib_z6jtcc	if i have a struct and I want to give it a RefMut struct A { field: RefMut<T> } wont work? missing lifetime specifier but I've never put a specifier on anything other than &'a T so im not sure where it goes there
2018-09-23 04:00:27	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 04:01:02	Schmeckinger	can you give a code example
2018-09-23 04:01:21	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 04:02:13	mib_z6jtcc	https://play.rust-lang.org/?gist=d267075534678dcfdbe70643bfdb3cd6&version=stable&mode=debug&edition=2015
2018-09-23 04:02:27	<--	JAlbers (jalbers@moz-c3oerl.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 04:02:33	mib_z6jtcc	wrong one
2018-09-23 04:02:33	mib_z6jtcc	https://play.rust-lang.org/?gist=c8a64f92e0ccf6e070a61f9973e110b9&version=stable&mode=debug&edition=2015
2018-09-23 04:03:22	mib_z6jtcc	correction to borrow() to borrow_mut
2018-09-23 04:03:34	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 04:04:00	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-23 04:05:36	<--	faitswul_ (faitswulff@moz-2jh9mm.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 04:05:58	-->	faitswulff (faitswulff@moz-2jh9mm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 04:06:14	Schmeckinger	https://play.rust-lang.org/?gist=64cabf4aa78f1dd603713c55c5f4fc4c&version=stable&mode=debug&edition=2015
2018-09-23 04:06:22	Schmeckinger	references in a struct need a lifetime
2018-09-23 04:07:10	-->	JAlbers (jalbers@moz-ah6510.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 04:07:10	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 04:07:28	mib_z6jtcc	makes sense thank you
2018-09-23 04:07:46	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 04:09:25	-->	halcyon (Mibbit@moz-d35.f1t.75.38.IP) has joined #rust-beginners
2018-09-23 04:10:00	<--	faitswulff (faitswulff@moz-2jh9mm.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 04:10:46	<--	mib_z6jtcc (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 04:11:36	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-23 04:12:10	-->	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has joined #rust-beginners
2018-09-23 04:12:50	halcyon	Hello everyone. Tinkering with rust, and coming from Go, I am interested in using rustfmt. However, after the rustup install I just get a message saying there is no binary for my toolchain. however there is a executable in the .cargo/bin folder... tried installing nightly and received an error saying rustfmt already has an bin. 
2018-09-23 04:12:58	halcyon	can someone point me in the right direction to figure this out :)
2018-09-23 04:13:29	turbobob	halcyon, very recently, fmt became part of cargo, can you try `cargo fmt`
2018-09-23 04:13:48	halcyon	same error
2018-09-23 04:13:54	turbobob	can you post the error
2018-09-23 04:13:55	halcyon	error: toolchain 'stable-x86_64-unknown-linux-gnu' does not have the binary `cargo-fmt`
2018-09-23 04:14:07	turbobob	Oh, you said you were on nightly
2018-09-23 04:14:09	turbobob	and that says you're on stable
2018-09-23 04:14:18	Schmeckinger	you did "rustup component add rustfmt-preview"
2018-09-23 04:14:57	halcyon	error: toolchain 'nightly-x86_64-unknown-linux-gnu' does not have the binary `cargo-fmt` also
2018-09-23 04:15:06	halcyon	i did not do that rustup command.
2018-09-23 04:15:31	Schmeckinger	And I think on nightly it guaranteed that preview components exist for all targets
2018-09-23 04:15:59	halcyon	rustfmt-preview gets me something ;)
2018-09-23 04:16:54	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 04:17:22	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 04:18:08	halcyon	sort of odd that rustup installed an executable for rustfmt in .cagro/bin out of the box.. is there a purpose to that?
2018-09-23 04:18:28	Schmeckinger	I read somewhere it was a placeholder
2018-09-23 04:18:49	Schmeckinger	Not sure if its true or why they would do that
2018-09-23 04:19:02	Schmeckinger	does it work now?
2018-09-23 04:19:10	halcyon	ues
2018-09-23 04:19:11	halcyon	yes
2018-09-23 04:19:15	halcyon	thank you
2018-09-23 04:19:53	halcyon	seems rls is in there also but has the same toolchain error.
2018-09-23 04:20:18	<--	siddhartharao17 (siddharthar@moz-un23qq.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 04:20:44	halcyon	rls-preview i'm guessing 
2018-09-23 04:22:10	Schmeckinger	if you do "rustup default stable"
2018-09-23 04:22:21	Schmeckinger	it will install the stable counterparts
2018-09-23 04:22:31	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-23 04:23:19	halcyon	sounds good.. thanks for the help
2018-09-23 04:23:27	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 04:23:56	-->	underplank (Mibbit@moz-h7rvni.dynamic.sonic.net) has joined #rust-beginners
2018-09-23 04:23:58	<--	halcyon (Mibbit@moz-d35.f1t.75.38.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 04:24:27	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 04:25:02	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 04:26:22	-->	froglegstew (Mibbit@moz-mmt.iea.92.190.IP) has joined #rust-beginners
2018-09-23 04:27:30	-->	insidious (insidious@moz-ubm.pvd.198.134.IP) has joined #rust-beginners
2018-09-23 04:29:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 04:31:02	<--	andrehjr (andrehjr@moz-13u.3fa.250.167.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 04:31:51	froglegstew	Hey! I'm following "What is Ownership?" on chapter 4 of The Book, and I have a question. Right at the end of that section I'm introduced to functions returning tuples. The example from the book obviously works (https://gist.github.com/5e8854c4d7819506f6199f7430b548d6) but why https://gist.github.com/7cab54592067dbe2cb2c42fb823f7036 doesn't?
2018-09-23 04:32:22	-->	bemeurer (bemeurer@moz-4qdknp.i1jn.j4s3.8802.2600.IP) has joined #rust-beginners
2018-09-23 04:32:39	froglegstew	Is a tuple a new scope? I mean... why the compiler tells me that "s" moved?
2018-09-23 04:32:45	<--	liquidnight (marcus@moz-rhn3jk.aqj0.c1im.0c23.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 04:33:21	Schmeckinger	rust isnt smart enough yet
2018-09-23 04:33:21	<--	mib_gaisi5 (Mibbit@moz-o4hrcg.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 04:33:28	Schmeckinger	it needs nll to know that
2018-09-23 04:33:54	Schmeckinger	I head nll will be in rust 1.31, but dont quote me on that
2018-09-23 04:34:00	Schmeckinger	heard*
2018-09-23 04:34:11	Moongoodboy{K}	froglegstew, Schmeckinger: moves and borrows relating to function calls are determined purely with the signature (this is so that changing the body of a function isn't a breaking change)
2018-09-23 04:34:51	<--	underplank (Mibbit@moz-h7rvni.dynamic.sonic.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 04:34:57	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-23 04:35:05	Moongoodboy{K}	froglegstew: calculate_length() consumes its argument. It also returns a String, but that's not really relevant (nor does it have to return the same String it consumed). The fact is, it consumes its argument.
2018-09-23 04:35:24	Schmeckinger	nvm the problem is the tuple is evaluated left to right and when you return the string you move it and can access it anymore
2018-09-23 04:35:24	turbobob	I have been banging my head on this for a while. I want to call this function: https://jgallagher.github.io/rusqlite/rusqlite/struct.Connection.html#method.execute
2018-09-23 04:35:34	turbobob	execute(&self, sql: &str, params: &[&ToSql])
2018-09-23 04:35:37	Schmeckinger	if you turn around the tuple it works
2018-09-23 04:35:44	turbobob	I have a Vec<String>, and String impl ToSql
2018-09-23 04:36:05	Moongoodboy{K}	…oh, I was examining the wrong thing. xD
2018-09-23 04:36:13	turbobob	So it wants a slice of references to ToSql, shouldn't &my_strings[..] be the correct thing to pass?
2018-09-23 04:36:17	Moongoodboy{K}	yeah, NLL and stuff.
2018-09-23 04:37:15	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-23 04:37:35	froglegstew	Moongoodboy: I'm lost, honestly. I'm trying to get the picture scope-wise. Yes, the fn argument is consumed, but it's still the same scope. That's where I'm lost.
2018-09-23 04:37:36	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 04:37:38	Moongoodboy{K}	turbobob: [&String] cannot be converted to [&dyn ToSql] in place. They don't have the same in-memory representation.
2018-09-23 04:39:19	<--	niconii (nicole@moz-h91c0b.midco.net) has quit (Quit: leaving)
2018-09-23 04:41:11	Moongoodboy{K}	froglegstew: I was examining the wrong thing. Schmeckinger's explanation is correct.
2018-09-23 04:41:28	Moongoodboy{K}	(well, mine is correct too, but theirs is actually relevant to your question c: )
2018-09-23 04:42:15	Moongoodboy{K}	kind of annoying that Rust can't just reorder evaluations to make it work.
2018-09-23 04:42:51	Schmeckinger	That an easy thing to fix I think there are many thing that are higher priority
2018-09-23 04:43:23	turbobob	Moongoodboy{K}, so what's a way to convert them? ('&dyn' is new syntax to me)
2018-09-23 04:44:02	<--	Guest4641 (nj0rd@moz-k10ups.dip.versatel-1u1.de) has quit (Ping timeout: 121 seconds)
2018-09-23 04:44:06	Schmeckinger	dyn is just sugar that tell the reader thats a trait object
2018-09-23 04:44:13	<--	JAlbers (jalbers@moz-ah6510.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-23 04:44:20	Moongoodboy{K}	turbobob: `ToSql` in a type context is equivalent to `dyn ToSql`. The former is depreciated and the latter is preferred, for clarity.
2018-09-23 04:44:39	Moongoodboy{K}	deprecated *
2018-09-23 04:44:39	-->	JAlbers (jalbers@moz-ah6510.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 04:45:17	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 04:45:28	<--	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 04:45:36	turbobob	Alright, so the function signature may have been written as: fn execute(&self, sql: &str, params: &[&dyn ToSql]) -> Result<c_int>
2018-09-23 04:46:18	turbobob	But still, I have Vec<String> and I need to pass it as &[&dyn ToSql]: what do I have to do to make that happen? (pretty new here...) 
2018-09-23 04:46:35	Moongoodboy{K}	turbobob: you may have to just create a new `Vec<&dyn ToSql>`. (Or, depending on the rest of your code, you may be able to change the type of the existing Vec rather than having to make a new one)
2018-09-23 04:46:38	-->	U007D (textual@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-23 04:46:42	froglegstew	Schmeckinger, Moongoodboy{K}: Thanks a lot!
2018-09-23 04:47:03	Moongoodboy{K}	mmhmm :3
2018-09-23 04:47:45	turbobob	Something like `let my_vec = strings.map(|v| v as &dyn ToSql).collect()`?
2018-09-23 04:47:50	-->	liquidnight (marcus@moz-jhhdfc.u1it.q0dc.0c23.2a01.IP) has joined #rust-beginners
2018-09-23 04:47:51	<--	insidious (insidious@moz-ubm.pvd.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-23 04:48:41	<--	JAlbers (jalbers@moz-ah6510.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 04:48:43	Moongoodboy{K}	yeah.
2018-09-23 04:48:57	Moongoodboy{K}	you may not even need the cast, actually, because of type inference
2018-09-23 04:49:24	turbobob	Oh...what about if ToSql is a private trait? 
2018-09-23 04:49:27	turbobob	I can't name it in my crate
2018-09-23 04:50:41	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 04:50:56	<--	liquidnight (marcus@moz-jhhdfc.u1it.q0dc.0c23.2a01.IP) has quit (Connection closed)
2018-09-23 04:51:10	Moongoodboy{K}	seems unlikely, given that it's in the signature of a public function
2018-09-23 04:52:43	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-23 04:53:05	Moongoodboy{K}	check the path? Items can exist at multiple paths with differing visibilities
2018-09-23 04:53:21	turbobob	ahh that was it :)
2018-09-23 04:53:53	turbobob	so I do have to have the map(|v| v as &dyn ..) 
2018-09-23 04:54:09	turbobob	when I say 'v as &dyn': what's happening in memory? is it boxing it?
2018-09-23 04:54:31	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 04:54:52	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 04:56:01	Moongoodboy{K}	boxing never happens implicitly
2018-09-23 04:56:10	Moongoodboy{K}	that doesn't move or clone the values into boxes
2018-09-23 04:56:44	-->	Guest4641 (nj0rd@moz-d7reb9.dip.versatel-1u1.de) has joined #rust-beginners
2018-09-23 04:56:51	Moongoodboy{K}	the closure just takes a &String and returns a `&dyn ToSql` (which is a pointer to a value and a pointer to a vtable)
2018-09-23 04:57:52	-->	TOGie (Mibbit@moz-nq7qh9.res.rr.com) has joined #rust-beginners
2018-09-23 04:58:49	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 04:58:54	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 04:59:41	TOGie	I'm having a bit of an issue while attempting to do simple socket stuff. I'd like to read in a line that tell how many bytes the next message is. I can't for the life of me find anything about converting bytes to ints for the life of me though. Am I looking at the problem wrong?
2018-09-23 04:59:58	<--	froglegstew (Mibbit@moz-mmt.iea.92.190.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 05:01:06	turbobob	thanks Moongoodboy{K} 
2018-09-23 05:01:21	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-23 05:01:42	TOGie	I get the byte representation of 50 in an array ([0u8, 2]), but can't really use that in read_exact without it being usize. I think I'm missing something simple. 
2018-09-23 05:02:13	-->	tac-tics (tac-tics@moz-iapcvs.ph.cox.net) has joined #rust-beginners
2018-09-23 05:03:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 05:03:49	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 05:03:56	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-23 05:04:19	<--	danecando (danecando@moz-60dlku.sdba.4jle.1700.2600.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-23 05:04:52	Moongoodboy{K}	mmhmm
2018-09-23 05:06:56	Moongoodboy{K}	TOGie: is the number encoded in binary (e.g. 50 is b"\x00\x32") or decimal (e.g. 50 is b"50")?
2018-09-23 05:07:07	raisin	how can I make conditional compilation for block of code instead of just one line ?
2018-09-23 05:07:27	raisin	would like to define some extern crate for a specific feature
2018-09-23 05:07:56	Moongoodboy{K}	raisin: blocks can have attributes too (`#[cfg(foo)] { /* buncha code goes here */ }`)
2018-09-23 05:08:04	Moongoodboy{K}	oh, for `extern crate`s. hmm.
2018-09-23 05:08:16	TOGie	Moongoodboy{K}: Currently I'm using stream.read() to stuff it in a [0u8; 2], so it's a [u8] of 2 bytes representing 1 number. Or do you mean the sending side?
2018-09-23 05:08:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 05:09:06	Moongoodboy{K}	TOGie: I mean, what do the numbers look like on the wire?
2018-09-23 05:09:34	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-23 05:11:06	TOGie	Moongoodboy{K}: I'm unsure how to tell? I'm sending them from python via encode() So I'm assuming b"50"
2018-09-23 05:12:33	Moongoodboy{K}	TOGie: kind of important. Gotta know what format the stuff's in before you can decode it xD
2018-09-23 05:14:00	TOGie	Like I said, on the sending side it's just b"50". I don't know exactly what rust sees.
2018-09-23 05:15:06	TOGie	So let's assume the latter (decimal) and I'll deal with the fallout. At least I'll learn something regardless :)
2018-09-23 05:16:20	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 05:17:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 05:18:00	-->	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 05:21:32	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 05:21:35	Moongoodboy{K}	TOGie: to parse a decimal integer, you can convert the bytes to a string with ::std::str::from_utf8(), then use str::parse() or u16::from_str_radix()
2018-09-23 05:22:02	<--	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 05:23:00	<--	kdan (Mibbit@moz-fs6n7g.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 05:23:01	TOGie	Oh boy, the web client converted your stuff to smilies. It's fine though, I still got your meaning. I actually just converted it to string just now myself. Thank you for the help :)
2018-09-23 05:28:32	<--	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 05:30:26	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-23 05:31:07	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 05:31:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 05:32:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 05:33:58	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-23 05:35:31	Moongoodboy{K}	no problem c:
2018-09-23 05:36:00	TOGie	Moongoodboy{K}: out of curiosity, what about the other way? Encoded in binary that is.
2018-09-23 05:36:37	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 05:36:39	Moongoodboy{K}	{!crate byteorder} is the recommended way to work with those
2018-09-23 05:36:40	+rustbot	byteorder (1.2.6) - Library for reading/writing numbers in big-endian and little-endian. -> https://crates.io/crates/byteorder <https://docs.rs/byteorder>
2018-09-23 05:36:44	Moongoodboy{K}	…actually…
2018-09-23 05:37:27	Moongoodboy{K}	eval: u16::from_bytes(b"\x00\x32")
2018-09-23 05:37:31	--	Notice(eval): error[E0658]: use of unstable library feature 'int_to_from_bytes' (see issue #49792)
2018-09-23 05:37:34	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=3f892160783c669d18d7c544fb3ef68a&version=stable&mode=debug
2018-09-23 05:38:01	Moongoodboy{K}	bluh, still unstable
2018-09-23 05:38:13	Moongoodboy{K}	so yeah, crate byteorder
2018-09-23 05:39:55	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 05:40:24	<--	bemeurer (bemeurer@moz-4qdknp.i1jn.j4s3.8802.2600.IP) has quit (Quit: WeeChat 2.2)
2018-09-23 05:40:25	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 05:41:04	TOGie	Fair enough lol. Thanks.
2018-09-23 05:41:23	<--	himi (sjjf@moz-r3ta53.internode.on.net) has quit (Connection closed)
2018-09-23 05:42:49	-->	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-23 05:43:27	-->	pudgetta (Mibbit@moz-pjq.vvt.35.177.IP) has joined #rust-beginners
2018-09-23 05:43:40	<--	pudgetta (Mibbit@moz-pjq.vvt.35.177.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 05:44:36	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-23 05:48:03	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 05:48:39	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 05:51:22	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Quit: Leaving)
2018-09-23 05:55:28	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 05:58:38	-->	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has joined #rust-beginners
2018-09-23 06:03:37	-->	ibrokemypie (conor@moz-srf.afs.124.1.IP) has joined #rust-beginners
2018-09-23 06:04:22	ibrokemypie	is there a better way to write error handling that doesnt panic than nesting matches?
2018-09-23 06:04:23	ibrokemypie	eg https://bpaste.net/show/6302942fa84e
2018-09-23 06:06:04	-->	mib_sjtuko (Mibbit@moz-agv.gcb.193.190.IP) has joined #rust-beginners
2018-09-23 06:06:17	<--	mib_sjtuko (Mibbit@moz-agv.gcb.193.190.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 06:06:32	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-23 06:07:51	-->	LogicAside (la@moz-nq7qh9.res.rr.com) has joined #rust-beginners
2018-09-23 06:11:48	<--	TOGie (Mibbit@moz-nq7qh9.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 06:17:19	-->	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has joined #rust-beginners
2018-09-23 06:18:23	-->	siddhartharao17 (siddharthar@moz-0rtq0v.ca.comcast.net) has joined #rust-beginners
2018-09-23 06:20:29	-->	tuxzz (Mibbit@moz-p3s.b0r.106.36.IP) has joined #rust-beginners
2018-09-23 06:20:44	tuxzz	hello
2018-09-23 06:20:47	tuxzz	https://play.rust-lang.org/?gist=324f93588d69f97985f7d301f24858ae&version=nightly&mode=debug&edition=2015
2018-09-23 06:20:54	tuxzz	In this code, why must the lifetime of A be longer than 'a for Box<Fn<A, Output = ()> + 'a>?
2018-09-23 06:21:16	tuxzz	If A isn't specified any lifetime longer than 'a explicitly, the compiler will raise an error ``the parameter type `A` may not live long enough``.
2018-09-23 06:21:23	tuxzz	If I replace Fn<A, Output = ()> + 'a to Fn<A, Output = ()>, the lifetime of A must be specified 'static explicitly or the compiler raise an error.
2018-09-23 06:21:49	tuxzz	I think the lifetime of A shouldn't be affected by the lifetime of Fn<A, Output = ()> but instead the call time of Fn<A, Output = ()>. Why not?
2018-09-23 06:25:41	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-23 06:26:09	-->	kyrylo_ (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-23 06:26:10	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Connection closed)
2018-09-23 06:26:56	<--	kyrylo_ (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 06:34:54	<--	tuxzz (Mibbit@moz-p3s.b0r.106.36.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 06:35:18	<--	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has quit (Ping timeout: 121 seconds)
2018-09-23 06:35:21	-->	BK1603 (uid316735@moz-9r5v6p.o6e9.l9fb.067c.2001.IP) has joined #rust-beginners
2018-09-23 06:36:23	<--	papertigers (papertigers@moz-d4h1q0.fios.verizon.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 06:36:28	-->	castilho (castilho@moz-6c8.vfm.209.179.IP) has joined #rust-beginners
2018-09-23 06:37:53	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 06:39:52	ZeroWalker	did anyone have any ideas about my problem that i mentioned before, might have missed something as i was away
2018-09-23 06:40:31	<--	castilho (castilho@moz-6c8.vfm.209.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 06:42:09	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 06:47:33	-->	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has joined #rust-beginners
2018-09-23 06:48:56	<--	andoriyu (andoriyu@moz-i38dv8.d8te.uek4.e000.2605.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 06:48:59	-->	oms (oms@moz-g4k98l.dyn.telefonica.de) has joined #rust-beginners
2018-09-23 06:49:30	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 06:53:13	-->	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has joined #rust-beginners
2018-09-23 06:53:31	-->	andoriyu (andoriyu@moz-i38dv8.d8te.uek4.e000.2605.IP) has joined #rust-beginners
2018-09-23 06:53:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 06:55:16	-->	siddhart_ (siddharthar@moz-un23qq.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-23 06:57:25	<--	siddhartharao17 (siddharthar@moz-0rtq0v.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 07:01:23	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-23 07:01:57	-->	sprocket (Mibbit@moz-7e8qaj.co.comcast.net) has joined #rust-beginners
2018-09-23 07:03:03	sprocket	test
2018-09-23 07:04:24	-->	mox (jacob@moz-b84iim.18fk.7n1q.0281.2601.IP) has joined #rust-beginners
2018-09-23 07:04:36	<--	mox (jacob@moz-b84iim.18fk.7n1q.0281.2601.IP) has quit (Client exited)
2018-09-23 07:04:51	-->	mox (jacob@moz-b84iim.18fk.7n1q.0281.2601.IP) has joined #rust-beginners
2018-09-23 07:04:59	<--	mox (jacob@moz-b84iim.18fk.7n1q.0281.2601.IP) has quit (Client exited)
2018-09-23 07:05:03	<--	sprocket (Mibbit@moz-7e8qaj.co.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 07:06:54	-->	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has joined #rust-beginners
2018-09-23 07:07:03	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 07:10:29	-->	aajaa (Mibbit@moz-fn7.t0q.100.101.IP) has joined #rust-beginners
2018-09-23 07:10:56	<--	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-23 07:15:44	-->	mdm (mdm@moz-l5beop.ap.nuro.jp) has joined #rust-beginners
2018-09-23 07:16:05	<--	Arcaelyx_ (Arcaelyx@moz-f0guau.77ht.vv5c.2000.2604.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-23 07:16:36	<--	mdm (mdm@moz-l5beop.ap.nuro.jp) has quit (Client exited)
2018-09-23 07:19:27	-->	SenasOzys_ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-23 07:19:53	<--	nimtiazm (nimtiazm@moz-r4m.n5d.204.94.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 07:20:01	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Connection closed)
2018-09-23 07:21:35	<--	ibrokemypie (conor@moz-srf.afs.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 07:21:36	-->	Guest88 (textual@moz-9jq.rrb.116.199.IP) has joined #rust-beginners
2018-09-23 07:22:28	--	Guest88 is now known as abira
2018-09-23 07:22:36	-->	nimtiazm (nimtiazm@moz-rgd.853.204.94.IP) has joined #rust-beginners
2018-09-23 07:27:33	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Quit: Leaving)
2018-09-23 07:29:42	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-23 07:30:39	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 07:30:48	-->	ibrokemypie (conor@moz-srf.afs.124.1.IP) has joined #rust-beginners
2018-09-23 07:34:34	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 07:39:15	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-23 07:39:51	<--	mandeep_ (mandeep@moz-aqksj4.us.northamericancoax.com) has quit (Ping timeout: 121 seconds)
2018-09-23 07:40:13	ibrokemypie	why do both to_owned() and into_owned() exist?
2018-09-23 07:44:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 07:44:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 07:47:07	<--	abira (textual@moz-9jq.rrb.116.199.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 07:47:39	<--	tsal_ (tsal@moz-s8qahs.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-23 07:48:22	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 07:49:02	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 07:49:29	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-23 07:49:37	-->	tsal (tsal@moz-d41k3l.versanet.de) has joined #rust-beginners
2018-09-23 07:50:15	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-23 07:53:02	Havvy	https://rust-lang-nursery.github.io/api-guidelines/naming.html#ad-hoc-conversions-follow-as_-to_-into_-conventions-c-conv
2018-09-23 07:54:50	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Quit: Leaving)
2018-09-23 07:54:50	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 07:54:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 07:55:15	Havvy	The only place that has into_owned seems to be Cow.
2018-09-23 07:55:30	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 07:56:28	ibrokemypie	does a vector need to be mutable if it's items are mutable?
2018-09-23 07:56:59	-->	Aankhen`` (notasquid@moz-cqe.k3h.207.49.IP) has joined #rust-beginners
2018-09-23 07:57:57	Havvy	Mutability is a property of variables, not of values. If you want to mutate an item of a vector, the variable that owns the vector must be `mut`.
2018-09-23 07:59:48	ibrokemypie	so if I have a vector of structs, and loop over them with for mut struct in structs for example, then change a struct value within that loop, would accessing that vector afterwards have the updated data?
2018-09-23 08:01:37	fwiw	ibrokemypie: can you give a code sample?
2018-09-23 08:01:37	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 08:02:06	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 08:03:06	ibrokemypie	https://bpaste.net/show/da068de471fa
2018-09-23 08:05:02	Moongoodboy{K}	see, the thing is, if you have a non-mut binding to a mutable reference, you can still mutate through it (though you can't change the binding to be a different reference)
2018-09-23 08:05:33	Moongoodboy{K}	so you don't need `for mut struct_` (unless you're consuming the Vec and moving each struct out and want to mutate them)
2018-09-23 08:05:51	-->	KiChjang (KiChjang@moz-8113mn.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-23 08:06:14	ibrokemypie	what would you do instead?
2018-09-23 08:06:20	Moongoodboy{K}	just drop that mut
2018-09-23 08:06:26	-->	justsomequestions (gumble@moz-fpalsr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 08:06:58	Moongoodboy{K}	to get mutable references to the structs, though, the Vec needs to be declared mut (so that you can borrow it mutably, so that you can borrow its items mutably).
2018-09-23 08:07:24	ibrokemypie	how do you assign to the field then?
2018-09-23 08:08:12	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 08:09:27	Moongoodboy{K}	Through the immutable binding to a mutable reference.
2018-09-23 08:09:37	Havvy	for &mut patch in patches
2018-09-23 08:10:19	Moongoodboy{K}	for patch in &mut patches  // assuming the type of patches is `Vec<_>` (not `&mut Vec<_>`)
2018-09-23 08:10:39	-->	eyans (a@moz-vivpjs.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-23 08:11:20	Moongoodboy{K}	who did that infographic thing on borrows? can we get them to do one on bindings too?
2018-09-23 08:12:48	ibrokemypie	Havvy's way worked, though yours diddnt Moon
2018-09-23 08:13:22	 *	Moongoodboy{K} may not have been paying enough attention >.>;
2018-09-23 08:13:33	<--	tac-tics (tac-tics@moz-iapcvs.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-23 08:13:38	ibrokemypie	thats alright, thanks both of you!
2018-09-23 08:14:22	Moongoodboy{K}	err, what's `patches`? I've been assuming `Vec<PatchFile>`
2018-09-23 08:15:26	ibrokemypie	patches: Vec<PatchFile>
2018-09-23 08:16:28	Moongoodboy{K}	in that case, `for mut patch in patches` will consume the Vec and give you ownership of (and a mutable binding to) each patch in turn
2018-09-23 08:17:00	Moongoodboy{K}	`for patch in &mut patches` should borrow the Vec and give you a mutable reference to each one
2018-09-23 08:17:49	Moongoodboy{K}	`for &mut patch in patches` should consume the Vec and try to un-reference each item, which should fail because they're `PatchFile`s, not `&mut _`s?
2018-09-23 08:19:03	Moongoodboy{K}	(I need to start maintaining my own FAQs)
2018-09-23 08:19:10	ibrokemypie	so the second option should be what I want
2018-09-23 08:19:49	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Quit: Leaving)
2018-09-23 08:20:05	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-23 08:20:32	ibrokemypie	for patch in &mut patches gives me "cannot borrow immutable argument `patches` as mutable
2018-09-23 08:23:13	<--	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2018-09-23 08:23:15	ibrokemypie	seems to work if I change patches to mutable
2018-09-23 08:26:23	-->	mib_f647mr (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 08:26:37	<--	nimtiazm (nimtiazm@moz-rgd.853.204.94.IP) has quit (Client exited)
2018-09-23 08:27:30	mib_f647mr	hi i have got a question
2018-09-23 08:28:04	mib_f647mr	i created a notepad++ "hello_world.rs" file
2018-09-23 08:28:31	mib_f647mr	how can i start this file?
2018-09-23 08:30:30	-->	Hrodgar (Hrodgar@moz-2j0.cas.160.37.IP) has joined #rust-beginners
2018-09-23 08:31:29	<--	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 08:39:26	<--	siddhart_ (siddharthar@moz-un23qq.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 08:39:52	-->	siddhartharao17 (siddharthar@moz-un23qq.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-23 08:41:11	<--	mib_f647mr (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 08:42:48	<--	siddhartharao17 (siddharthar@moz-un23qq.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 08:42:49	-->	siddhartharao17 (siddharthar@moz-un23qq.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-23 08:43:45	-->	nimtiazm (nimtiazm@moz-rgd.853.204.94.IP) has joined #rust-beginners
2018-09-23 08:48:35	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-23 08:52:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 08:53:13	<--	Hrodgar (Hrodgar@moz-2j0.cas.160.37.IP) has quit (Quit: Leaving)
2018-09-23 08:56:27	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 08:59:12	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-23 09:02:27	-->	mipli (mipli@moz-20q8jc.3.getinternet.no) has joined #rust-beginners
2018-09-23 09:03:38	<--	U007D (textual@moz-jc56tv.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 09:04:05	-->	U007D (textual@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-23 09:04:24	<--	U007D (textual@moz-jc56tv.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 09:04:51	-->	U007D (textual@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-23 09:05:10	<--	U007D (textual@moz-jc56tv.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 09:05:36	-->	U007D (textual@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-23 09:05:57	<--	U007D (textual@moz-jc56tv.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 09:06:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 09:06:30	-->	xet7 (xet7@moz-9snt4f.rev.dnainternet.fi) has joined #rust-beginners
2018-09-23 09:08:27	<--	ibrokemypie (conor@moz-srf.afs.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 09:08:40	<--	siddhartharao17 (siddharthar@moz-un23qq.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 09:09:31	<--	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-23 09:12:42	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-23 09:19:21	-->	mib_wy28xp (Mibbit@moz-akj.2a2.232.14.IP) has joined #rust-beginners
2018-09-23 09:20:03	<--	mib_wy28xp (Mibbit@moz-akj.2a2.232.14.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 09:27:09	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-23 09:31:30	-->	mib_6stu1s (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 09:31:57	mib_6stu1s	hi aajaa
2018-09-23 09:32:11	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-23 09:35:13	<--	mib_6stu1s (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 09:36:58	-->	chernomor (Mibbit@moz-63mc3k.dynvpn.flex.ru) has joined #rust-beginners
2018-09-23 09:40:06	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 09:43:36	-->	emerent (emerentius@moz-0qi8g5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-23 09:44:23	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 09:46:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-23 09:46:41	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-23 09:47:00	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 09:47:27	-->	plusone (custom@moz-41e235.skybroadband.com) has joined #rust-beginners
2018-09-23 09:48:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-23 09:48:16	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 09:50:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-23 09:51:24	<--	nimtiazm (nimtiazm@moz-rgd.853.204.94.IP) has quit (Client exited)
2018-09-23 09:52:44	-->	fatpoint1 (wadadli@moz-mig04k.oik1.u6vv.e000.2605.IP) has joined #rust-beginners
2018-09-23 09:53:18	<--	fatpoint1 (wadadli@moz-mig04k.oik1.u6vv.e000.2605.IP) has quit (Quit: WeeChat 2.2)
2018-09-23 09:55:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 09:56:37	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-23 09:58:43	neal_	I'm using a crate (foo) and one of its methods uses a type from a third crate (time).  Do I have to do "extern crate time" to access that type?  Can I somehow import it via foo?  Or how do I get rid of the error: "Use of undeclared type or module `time`"
2018-09-23 09:58:47	--	neal_ is now known as neal
2018-09-23 09:59:32	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 09:59:40	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 10:00:21	<--	fatpointer (wadadli@moz-bah.b5c.248.104.IP) has quit (Quit: WeeChat 2.2)
2018-09-23 10:00:37	-->	nimtiazm (nimtiazm@moz-rgd.853.204.94.IP) has joined #rust-beginners
2018-09-23 10:01:25	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-23 10:01:28	<--	plusone (custom@moz-41e235.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-23 10:02:22	-->	livingsilver94 (Mibbit@moz-9fvkmv.business.telecomitalia.it) has joined #rust-beginners
2018-09-23 10:03:16	livingsilver94	hello guys, here's a stupid question: i'm iterating over an iterator. How could I make the FIRST iteration different from the others? By cloning the iterator and using twice? By using an IF inside the loop?
2018-09-23 10:04:38	-->	plusone (custom@moz-41e235.skybroadband.com) has joined #rust-beginners
2018-09-23 10:04:49	CognitiveRadiation	livingsilver94: I'm not sure quite what you mean by "different from the others"
2018-09-23 10:04:54	CognitiveRadiation	whats the thing you're trying to accomplish?
2018-09-23 10:05:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 10:06:01	Lumpio-	Do something different with the first item maybe?
2018-09-23 10:06:11	livingsilver94	Lumpio-: exactly
2018-09-23 10:06:50	CognitiveRadiation	there's a couple of things you could do
2018-09-23 10:07:16	Lumpio-	You can always use the iter manually
2018-09-23 10:07:18	CognitiveRadiation	you could call .next() explicitly on your iterator, do something, and then, having mutated the state of the iterator by removing the first item, iterate over it in a for loop like normal
2018-09-23 10:07:19	Lumpio-	https://play.rust-lang.org/?gist=fddc59b7ba9d6618a24ff2d61a595a65&version=stable&mode=debug&edition=2015
2018-09-23 10:07:21	Lumpio-	yep
2018-09-23 10:07:34	Lumpio-	You still need an "if" unless you want to crash on an empty iterator
2018-09-23 10:07:34	CognitiveRadiation	you could also use an enumeration, so that you have an index to go along with your item
2018-09-23 10:07:40	CognitiveRadiation	and check for index 0
2018-09-23 10:07:48	CognitiveRadiation	with an if statement inside your loop
2018-09-23 10:07:50	Lumpio-	That's useful if you also want to do whatever your loop does for the first item
2018-09-23 10:08:02	Lumpio-	Because by using next() outside the loop you'd have to duplicate (or extract) the code that processes each item
2018-09-23 10:09:01	livingsilver94	oh right!! the next() function. anyways, wouldn't checking for index 0 be a waste of resources?
2018-09-23 10:09:06	CognitiveRadiation	https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.enumerate is the method that turns your iterator into an enumerated iterator
2018-09-23 10:09:11	livingsilver94	I think I'd rather extract the code
2018-09-23 10:09:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 10:09:38	CognitiveRadiation	livingsilver94: possibly slightly, but this is in the realm of things where it doesn't make sense to worry about it
2018-09-23 10:09:50	CognitiveRadiation	unless this is a very tight loop and you'r rigorously benchmarking
2018-09-23 10:10:17	-->	fatpointer (wadadli@moz-mig04k.oik1.u6vv.e000.2605.IP) has joined #rust-beginners
2018-09-23 10:10:35	livingsilver94	I see. Given Rust is focused on performance, I think I worry abou super-optimized code too much :P
2018-09-23 10:10:45	<--	asyncsec (asyncsec@moz-clmsgb.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 10:10:55	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 10:10:57	CognitiveRadiation	rustc is very sophisticated, so are modern CPUs and caches and optimizations, and it's hard to know exactly what that extra 0 check will amount to in practice
2018-09-23 10:12:10	CognitiveRadiation	but of course just claling .next() outside the loop works too
2018-09-23 10:12:51	livingsilver94	Got it. Hey, thank you for your help
2018-09-23 10:13:12	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 10:13:12	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-23 10:14:08	<--	curious (s34n@moz-p45.d19.76.208.IP) has quit (Quit: Leaving)
2018-09-23 10:14:29	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 10:16:16	<--	fatpointer (wadadli@moz-mig04k.oik1.u6vv.e000.2605.IP) has quit (Quit: WeeChat 2.2)
2018-09-23 10:16:48	-->	fatpointer1 (fatpointer@moz-e1j0t6.hashbang.sh) has joined #rust-beginners
2018-09-23 10:17:12	fatpointer1	o/
2018-09-23 10:17:17	--	fatpointer1 is now known as fatpointer
2018-09-23 10:17:43	livingsilver94	CognitiveRadiation: what if I wanted to do something different for the first "n" items?
2018-09-23 10:17:55	-->	tuxzz (Mibbit@moz-5s0.sf9.47.106.IP) has joined #rust-beginners
2018-09-23 10:18:13	tuxzz	Please take a look for this question: https://stackoverflow.com/questions/52464694/strange-behavior-of-hrtbs
2018-09-23 10:18:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 10:20:48	<--	tuxzz (Mibbit@moz-5s0.sf9.47.106.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 10:21:36	livingsilver94	well I guess in this case, the "if" solution is the best
2018-09-23 10:21:43	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 10:23:45	CognitiveRadiation	livingsilver94: another thing you could try is using .take()
2018-09-23 10:24:43	livingsilver94	CognitiveRadiation: I see `take` wants `self`, so I guess it consumes the iterator
2018-09-23 10:24:48	CognitiveRadiation	actually, hm, that seems to consume the iterator yeah
2018-09-23 10:26:23	CognitiveRadiation	depending on what you're iterating over you might be able to create two iterators, a .take() and a .skip()
2018-09-23 10:26:24	livingsilver94	I find Rust sometimes excessively hard. I mean, I want to use part of the iterator for an operation, and the remaining part for other stuff. Why would I consume the whole iterator
2018-09-23 10:26:55	livingsilver94	CognitiveRadiation: using cloned()? 
2018-09-23 10:27:08	<--	aajaa (Mibbit@moz-fn7.t0q.100.101.IP) has left #rust-beginners
2018-09-23 10:27:41	<--	chernomor (Mibbit@moz-63mc3k.dynvpn.flex.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 10:27:41	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 10:27:58	CognitiveRadiation	livingsilver94: calling .iter() doesn't consume the thing you're iterating over
2018-09-23 10:28:20	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 10:28:22	CognitiveRadiation	so you could just generate two iterators from the same value
2018-09-23 10:28:29	CognitiveRadiation	that's not true for iter_mut() or into_iter() though
2018-09-23 10:29:12	emerent	livingsilver94: some iterators are also cloneable and there's also .by_ref()
2018-09-23 10:29:19	livingsilver94	CognitiveRadiation: I need to populate an HashMap, so I think I need into_inter... right?
2018-09-23 10:29:37	<--	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has quit (Connection closed)
2018-09-23 10:30:04	livingsilver94	https://github.com/livingsilver94/rusty_markov/blob/master/src/lib.rs#L23 this is the code I'm talking about, even though I've modified it in local
2018-09-23 10:30:15	livingsilver94	it's not updated yet
2018-09-23 10:30:26	-->	elichai2 (uid212594@moz-ip5ov3.0qom.l9fb.067c.2001.IP) has joined #rust-beginners
2018-09-23 10:31:23	CognitiveRadiation	ah, yeah
2018-09-23 10:31:25	CognitiveRadiation	hm
2018-09-23 10:31:29	CognitiveRadiation	yeah it is annoying that there's no easy way to do this
2018-09-23 10:31:39	CognitiveRadiation	or at least not an easy way that I know
2018-09-23 10:31:39	<--	plusone (custom@moz-41e235.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-23 10:31:40	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 10:31:56	livingsilver94	emerent: i could give by_ref a chance, assuming I can use it
2018-09-23 10:32:13	<--	anthony25 (Anthony@moz-5vq9ri.aruhier.fr) has quit (Quit: Quitte)
2018-09-23 10:32:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 10:32:43	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 10:33:04	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 10:33:32	livingsilver94	ok then, let's see if I can use something I learnt from yuo
2018-09-23 10:33:35	livingsilver94	you*
2018-09-23 10:34:32	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 10:34:33	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 10:35:50	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 10:36:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 10:37:56	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-23 10:38:36	-->	anthony25 (Anthony@moz-9jgukp.fr) has joined #rust-beginners
2018-09-23 10:40:45	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 10:41:43	--	kyren_ is now known as kyren
2018-09-23 10:42:50	-->	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 10:45:25	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Connection closed)
2018-09-23 10:45:31	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-23 10:46:36	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 10:46:52	<--	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 10:46:58	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 10:48:29	<--	nimtiazm (nimtiazm@moz-rgd.853.204.94.IP) has quit (Client exited)
2018-09-23 10:50:13	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 10:50:44	CognitiveRadiation	livingsilver94: emerent suggested let mut iter = iter(); iter.by_ref().take(…).for_each(…); iter.for_each(…); in the main #rust channel
2018-09-23 10:51:00	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 10:54:24	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 10:54:51	<--	BK1603 (uid316735@moz-9r5v6p.o6e9.l9fb.067c.2001.IP) has quit (Quit: Connection closed for inactivity)
2018-09-23 10:55:04	-->	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has joined #rust-beginners
2018-09-23 10:56:58	-->	quartz55 (textual@moz-9e01gu.dsl.telepac.pt) has joined #rust-beginners
2018-09-23 10:59:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 11:00:51	<--	quartz55 (textual@moz-9e01gu.dsl.telepac.pt) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 11:01:11	-->	quartz55 (textual@moz-9e01gu.dsl.telepac.pt) has joined #rust-beginners
2018-09-23 11:01:24	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-23 11:02:37	-->	nimtiazm (nimtiazm@moz-rgd.853.204.94.IP) has joined #rust-beginners
2018-09-23 11:02:40	<--	nimtiazm (nimtiazm@moz-rgd.853.204.94.IP) has quit (Client exited)
2018-09-23 11:02:48	justsomequestions	can I somehow make this s.t. the second inventory doesn't need to be mutable? https://pastebin.com/aEtzB2ty
2018-09-23 11:03:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 11:06:55	turbobob	so I have an object that needs a sqlite connection and an ldap connection
2018-09-23 11:07:18	turbobob	I don't know how to test this object without brining up a real ldap server
2018-09-23 11:07:31	turbobob	sqlite has an in-memory db for testing, but ldap has no fake connection afaict
2018-09-23 11:07:57	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 11:08:00	turbobob	most ops don't  need the ldap server, so I'd really like to test at least the ones that don't need ldap
2018-09-23 11:08:04	-->	quartz555 (quartz@moz-1772ut.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-23 11:08:30	<--	quartz55 (textual@moz-9e01gu.dsl.telepac.pt) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-23 11:08:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 11:09:55	livingsilver94	CognitiveRadiation: ok great! Thanks
2018-09-23 11:10:41	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 11:10:44	turbobob	I think I'll just restructure so that the sqlite part is its own struct, test that, and the struct that plexes between ldap and sqlite is a different thing
2018-09-23 11:11:53	-->	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has joined #rust-beginners
2018-09-23 11:12:58	<--	snip (stron@moz-c9pgq3.com) has left #rust-beginners ("Sent from my iPhone.")
2018-09-23 11:13:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 11:13:08	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 11:14:28	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 11:15:04	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 11:15:17	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 11:15:30	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 11:16:28	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 11:16:31	-->	mib_rg02np (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 11:17:00	<--	mib_rg02np (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 11:17:07	-->	mib_xggn78 (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 11:17:36	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Quit: Leaving)
2018-09-23 11:17:43	mib_xggn78	hello i have got a question
2018-09-23 11:18:00	-->	WindowsBunny1 (Bunny@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-09-23 11:18:31	-->	liquidnight (marcus@moz-jhhdfc.u1it.q0dc.0c23.2a01.IP) has joined #rust-beginners
2018-09-23 11:19:18	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 11:19:18	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 11:19:24	justsomequestions	what do I do if I want to derive serialize for a struct which is not in my crate?
2018-09-23 11:20:16	justsomequestions	ah I found something
2018-09-23 11:20:20	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 11:20:32	--	WindowsBunny1 is now known as WindowsBunny
2018-09-23 11:20:46	KiChjang	justsomequestions, kind of tricky -- you need to wrap it with a new type which does implement serialize
2018-09-23 11:21:12	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 11:21:40	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-23 11:21:45	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-23 11:21:47	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-23 11:22:14	KiChjang	justsomequestions, https://github.com/servo/rust-url/blob/master/url_serde/src/lib.rs#L287
2018-09-23 11:22:25	KiChjang	you see that Ser and De?
2018-09-23 11:23:04	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-23 11:25:07	turbobob	mib_xggn78, ask away
2018-09-23 11:26:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 11:27:10	-->	ufobat___ (Martin@moz-6um5m1.dyn.telefonica.de) has joined #rust-beginners
2018-09-23 11:30:14	<--	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-23 11:30:30	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Connection closed)
2018-09-23 11:30:40	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 11:30:46	mib_xggn78	ok i have installed rust successfully and now i have got visual studio code, visual studio community and notepad++
2018-09-23 11:31:11	mib_xggn78	embarrassing question: how can is start my helloworld.rs file?
2018-09-23 11:31:15	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-23 11:32:40	-->	mr_evil (Mibbit@moz-494.hme.149.169.IP) has joined #rust-beginners
2018-09-23 11:33:56	mib_xggn78	(in visual studio i cannot create some rs-file).
2018-09-23 11:34:07	KiChjang	mib_xggn78, i wouldn't use VS to start a rust project
2018-09-23 11:34:17	KiChjang	do you use command prompt or powershell?
2018-09-23 11:34:21	KiChjang	i suggest powershell
2018-09-23 11:34:27	KiChjang	and how did you install rust?
2018-09-23 11:34:29	KiChjang	via rustup?
2018-09-23 11:34:29	mr_evil	I am printing a 3x3 vector that has all values as 0, now I want to use the keyboard(using up, left, down, right) to chance lets say value at 0.0 to 1 ... how do I do it ?
2018-09-23 11:34:30	mib_xggn78	in visual studio community i cannot create rs-file
2018-09-23 11:34:30	eddyb	alercah: where was the thing you asked on discord about? here?
2018-09-23 11:34:52	mib_xggn78	in visual studio i cannot create an rs-file like .... file > new > project > ...
2018-09-23 11:34:54	justsomequestions	mib_xggn78: you can use save and then save it as something.rs or not? but there is also the method of using just the command "cargo new hellworld" to create your rust project
2018-09-23 11:35:01	eddyb	ah, I see, 12:18 <tuxzz> Please take a look for this question: https://stackoverflow.com/questions/52464694/strange-behavior-of-hrtbs
2018-09-23 11:35:04	justsomequestions	that is what the people normally do
2018-09-23 11:35:25	justsomequestions	as it also creates the normal files you'd see in a rust project (cargo.toml where you specify your dependencies)
2018-09-23 11:35:37	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-23 11:36:16	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 11:36:33	-->	ibrokemypie (conor@moz-485.k8e.125.1.IP) has joined #rust-beginners
2018-09-23 11:37:39	mr_evil	I am printing a 3x3 vector that has all values as 0, now I want to use the keyboard(using up, left, down, right) to chance lets say value at 0.0 to 1 ... how do I do it ?
2018-09-23 11:40:18	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 11:41:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 11:42:24	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-23 11:42:33	<--	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 11:47:37	<--	mib_xggn78 (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 11:47:55	<--	mr_evil (Mibbit@moz-494.hme.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 11:52:04	-->	ksqsf_ (ksqsf@moz-kvd.hk7.60.36.IP) has joined #rust-beginners
2018-09-23 11:52:25	<--	livingsilver94 (Mibbit@moz-9fvkmv.business.telecomitalia.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 11:54:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 11:55:20	-->	jaykay (Thunderbird@moz-rkf8p6.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 11:57:22	<--	prospector (prospector@moz-tl2.cn0.76.45.IP) has quit (Quit: Prospecting gems of CS)
2018-09-23 11:58:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 11:59:03	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 11:59:10	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 12:01:02	-->	azumanga (Mibbit@moz-ikvql0.range109-152.btcentralplus.com) has joined #rust-beginners
2018-09-23 12:01:38	-->	prospector (prospector@moz-tl2.cn0.76.45.IP) has joined #rust-beginners
2018-09-23 12:01:48	azumanga	I've got some weird code I don't understand ( https://play.rust-lang.org/?gist=536b7394d0cd1b34b9a8f5834d1dfa9a&version=stable&mode=debug&edition=2015 ). Basically, the vec! macro seems to borrow it's first argument, but none of the others?
2018-09-23 12:02:01	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 12:02:20	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 12:03:42	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 12:03:44	<--	ksqsf_ (ksqsf@moz-kvd.hk7.60.36.IP) has quit (Connection closed)
2018-09-23 12:05:40	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 12:06:10	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-23 12:06:14	-->	abs_beginner (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 12:06:29	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 12:07:45	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 12:08:41	abs_beginner	hi azumanga
2018-09-23 12:10:02	azumanga	Hi abs_beginner 
2018-09-23 12:11:12	-->	ksqsf_ (ksqsf@moz-kvd.hk7.60.36.IP) has joined #rust-beginners
2018-09-23 12:11:33	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 12:11:39	justsomequestions	azumanga: hmm I also don't understand that
2018-09-23 12:12:31	Havvy	It gets expanded into `<[_]>::into_vec(box [i, j, k])` and `box` is unstable, so there could be a weird quirk with that.
2018-09-23 12:12:47	azumanga	I might also be doing something terrible. My original code was more sensible than this :) I have a function which takes two &mut references where I want to do (almost) the same thing to both, so I use the for loop for the things I do the same.
2018-09-23 12:14:43	azumanga	Would it be silly to ask in #rust, or post a github issue? It seems (to me) whatever happens, the first argument of vec! shouldn't be treated differently from the others.
2018-09-23 12:14:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 12:14:59	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 12:15:05	-->	taotetek (taotetek@moz-csj2b5.va.comcast.net) has joined #rust-beginners
2018-09-23 12:15:44	Havvy	I cannot think of any specific rule that would prevent your code from working.
2018-09-23 12:16:02	justsomequestions	azumanga: I would ask in #rust
2018-09-23 12:16:03	-->	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has joined #rust-beginners
2018-09-23 12:16:17	justsomequestions	but you get more answers in the europe evening (us day) time or on weekdays I think
2018-09-23 12:16:20	Havvy	Like, I think this might actually be a compiler bug?
2018-09-23 12:16:57	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-23 12:17:23	azumanga	I'll try. It seems like a bug in 'box', which as you say is unstable and (doesn't seem to be?) documented, so that's where my exploration of the issue stops
2018-09-23 12:19:36	Havvy	eddyb: Sorry to ping you so much tonight, but might you know anything about `box`?
2018-09-23 12:19:48	eddyb	Havvy: what, exactly?
2018-09-23 12:20:01	eddyb	(should I just read backlog?)
2018-09-23 12:20:09	Havvy	<azumanga> I've got some weird code I don't understand ( https://play.rust-lang.org/?gist=536b7394d0cd1b34b9a8f5834d1dfa9a&version=stable&mode=debug&edition=2015 ). Basically, the vec! macro seems to borrow it's first argument, but none of the others?
2018-09-23 12:20:24	eddyb	azumanga: oh god
2018-09-23 12:20:53	eddyb	azumanga, Havvy: it happens with `&mut [i,j,k]` too
2018-09-23 12:21:01	eddyb	it's because of the "LUB coercion"
2018-09-23 12:21:06	eddyb	or "merging" coercion
2018-09-23 12:21:18	eddyb	the first element doesn't get coerced because the type is not known yet
2018-09-23 12:21:23	abs_beginner	has anybody experience with rust here
2018-09-23 12:21:30	eddyb	but further elements get coerced to the type of the first, which means they get *reborrowed*
2018-09-23 12:21:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 12:21:54	eddyb	this is that problem where `id(mut_ref)` doesn't reborrow the reference, but if you call a less generic function, it does
2018-09-23 12:22:12	eddyb	azumanga: &mut *i,j,k works btw
2018-09-23 12:22:34	Havvy	eddyb: So, is this a bug in the language or something that needs to be documented?
2018-09-23 12:22:44	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 12:22:47	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 12:22:58	abs_beginner	i want to have my rs-file started .... does anybody know ho to?
2018-09-23 12:22:59	eddyb	azumanga, Havvy: one of you could open an issue about arrays not coercing a mutable reference in the first position
2018-09-23 12:23:22	eddyb	well, a LUB coercion is supposed to "go back" wherever possible
2018-09-23 12:23:28	eddyb	so I think here it's not whitelisted
2018-09-23 12:23:44	eddyb	Havvy: that is, order shouldn't *really* be observable
2018-09-23 12:23:47	Havvy	(I _really_ need to go to bed soon, so I'll do so if there's no issue tomorrow)
2018-09-23 12:23:59	eddyb	eval: ["foo", &String::from("bar")]
2018-09-23 12:24:02	--	Notice(eval): ["foo", "bar"]
2018-09-23 12:24:06	eddyb	(this is what I mean by LUB coercion)
2018-09-23 12:24:09	azumanga	I'll submit an issue now
2018-09-23 12:24:11	eddyb	eval: [&String::from("bar"), "foo"]
2018-09-23 12:24:13	--	Notice(eval): ["bar", "foo"]
2018-09-23 12:24:25	eddyb	yeah so for deref coercions, it works either way
2018-09-23 12:24:38	eddyb	eval: [&mut 0, &mut &mut 0]
2018-09-23 12:24:41	--	Notice(eval): [0, 0]
2018-09-23 12:24:47	eddyb	eval: [&mut &mut 0, &mut 0]
2018-09-23 12:24:51	--	Notice(eval): [0, 0]
2018-09-23 12:25:11	Havvy	(I'm going to bed. I'll check backlog / the issue tomorrow.)
2018-09-23 12:25:13	eddyb	eval: let r = &mut 0; [r, &mut 0]; *r += 1;
2018-09-23 12:25:16	--	Notice(eval): error[E0382]: use of moved value: `*r`
2018-09-23 12:25:18	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=412d2f2be77712f1e3fd730c0850202b&version=stable&mode=debug
2018-09-23 12:25:22	eddyb	eval: let r = &mut 0; [&mut 0, r]; *r += 1;
2018-09-23 12:25:24	--	Notice(eval): ()
2018-09-23 12:25:40	eddyb	azumanga: ^^ you can use this example - my last two snippets should both compile
2018-09-23 12:25:51	eddyb	just like the &mut &mut 0 example did in both orders
2018-09-23 12:25:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 12:26:13	eddyb	I think I whitelisted deref coercions because I noticed it being a useful thing :P
2018-09-23 12:26:21	eddyb	but didn't think about reborrows
2018-09-23 12:26:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 12:26:42	eddyb	azumanga: write "cc @eddyb @nikomatsakis" on the issue btw
2018-09-23 12:26:52	eddyb	(or if you made it already, I will)
2018-09-23 12:28:32	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-23 12:28:35	azumanga	Done: https://github.com/rust-lang/rust/issues/54501
2018-09-23 12:29:11	azumanga	I'm glad it doesn't turn out I'm fundamentally misunderstanding how borrowing works :D
2018-09-23 12:29:57	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 12:30:39	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 12:32:41	eddyb	thanks!
2018-09-23 12:33:08	eddyb	azumanga: heh. the thing is that `&mut T` moves by default, but coercions hide that aspect *most* of the time.
2018-09-23 12:33:25	eddyb	azumanga: it has to move because it can't be Copy (otherwise you could duplicate it *without* tracking it as a sub-borrow
2018-09-23 12:33:56	eddyb	there have been discussions on how to make this more uniform (e.g. `Option<&mut T>`, which today gets no coercions), but it's tricky
2018-09-23 12:33:59	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 12:34:07	eddyb	for now, coercions serve us pretty well
2018-09-23 12:34:16	azumanga	The whole things happening automatically does annoy me, although I'm sure it would produce lots more code. I wish for example a<b and a+b were at least consistent on auto-borrowing (that also confused me quite a while)
2018-09-23 12:34:31	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 12:34:52	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 12:36:45	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-23 12:37:25	eddyb	azumanga: the problem is we can't make impls *too* flexible in terms of what they accept :(
2018-09-23 12:37:29	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-23 12:37:40	eddyb	I think we want specialization to have a nicer UX here
2018-09-23 12:37:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-23 12:38:06	eddyb	azumanga: the reason they're not consistent is comparisons *never* consume (the methods are defined to always take references), whereas all the other operators do
2018-09-23 12:38:54	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 12:39:07	<--	abs_beginner (Mibbit@moz-id1ctr.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 12:40:43	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 12:40:48	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-23 12:41:49	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-23 12:43:19	-->	wombawomba (andre@moz-5u4vpt.customers.ownit.se) has joined #rust-beginners
2018-09-23 12:45:48	-->	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has joined #rust-beginners
2018-09-23 12:46:34	-->	Dariost_ (Dariost@moz-euo.lj4.20.151.IP) has joined #rust-beginners
2018-09-23 12:47:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 12:48:06	<--	mipli (mipli@moz-20q8jc.3.getinternet.no) has quit (Ping timeout: 121 seconds)
2018-09-23 12:50:35	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-23 12:50:42	<--	ibrokemypie (conor@moz-485.k8e.125.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 12:51:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 12:51:26	-->	jcmorrow (Mibbit@moz-vq0.5cc.128.104.IP) has joined #rust-beginners
2018-09-23 12:51:45	<--	jaykay (Thunderbird@moz-rkf8p6.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-23 12:51:54	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 12:52:50	jcmorrow	hi! I have a problem with immutable references in a loop, I made a gist that feels like a succinct reproduction, https://gist.github.com/jcmorrow/4a383648434fb135ccdb667387fde7b1
2018-09-23 12:53:07	jcmorrow	if anyone has thoughts I would love to hear them!
2018-09-23 12:54:10	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-23 12:55:38	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-23 12:56:39	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 12:57:30	azumanga	(I'm a rust beginner). I think what you are trying to do can never work. Once you have put a reference to person[0] into events, you can't ever move person[0] (as that would break the event). rotate_left moves the elements of persons, so that's forbidden
2018-09-23 12:58:05	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 12:58:22	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-23 12:58:24	-->	tnpxu (Mibbit@moz-cjg.p0c.47.1.IP) has joined #rust-beginners
2018-09-23 12:58:31	azumanga	You either need to copy the person into the event, or not move around members of persons.
2018-09-23 12:59:02	-->	tnpxuu (Mibbit@moz-cjg.p0c.47.1.IP) has joined #rust-beginners
2018-09-23 12:59:22	<--	tnpxuu (Mibbit@moz-cjg.p0c.47.1.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 12:59:25	<--	tnpxu (Mibbit@moz-cjg.p0c.47.1.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 12:59:40	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-23 12:59:50	jcmorrow	ok, that makes sense, thanks @azumanga
2018-09-23 13:00:48	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 13:01:26	<--	azumanga (Mibbit@moz-ikvql0.range109-152.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 13:02:08	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 13:04:37	<--	ksqsf_ (ksqsf@moz-kvd.hk7.60.36.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 13:06:04	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 13:06:16	<--	quartz555 (quartz@moz-1772ut.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 13:06:24	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 13:06:24	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Quit: WeeChat 2.2)
2018-09-23 13:07:03	<--	wombawomba (andre@moz-5u4vpt.customers.ownit.se) has quit (Ping timeout: 121 seconds)
2018-09-23 13:07:29	<--	elichai2 (uid212594@moz-ip5ov3.0qom.l9fb.067c.2001.IP) has quit (Quit: Connection closed for inactivity)
2018-09-23 13:08:30	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-23 13:09:17	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 13:10:43	-->	ksqsf_ (ksqsf@moz-kvd.hk7.60.36.IP) has joined #rust-beginners
2018-09-23 13:12:26	-->	AtumT (IRC@moz-niuqp7.gvt.net.br) has joined #rust-beginners
2018-09-23 13:13:21	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-23 13:17:16	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 13:17:17	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 13:19:08	<--	ksqsf_ (ksqsf@moz-kvd.hk7.60.36.IP) has quit (Connection closed)
2018-09-23 13:22:03	-->	keret (Mibbit@moz-4lo.n55.149.169.IP) has joined #rust-beginners
2018-09-23 13:22:40	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 13:23:55	-->	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has joined #rust-beginners
2018-09-23 13:24:51	<--	keret (Mibbit@moz-4lo.n55.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 13:26:01	-->	Mutter (Mutter@moz-nbt.lpu.224.5.IP) has joined #rust-beginners
2018-09-23 13:26:01	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 13:26:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 13:26:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 13:26:59	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Quit: Leaving)
2018-09-23 13:32:04	rogerduran	hi, how do you add a lifetime to something like this, is it posible? https://play.rust-lang.org/?gist=03a63ff5e28d4eb92a6cec2d9e3d50cf&version=stable&mode=debug&edition=2015
2018-09-23 13:32:42	<--	Mutter (Mutter@moz-nbt.lpu.224.5.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 13:33:36	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 13:34:21	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 13:34:54	<--	liquidnight (marcus@moz-jhhdfc.u1it.q0dc.0c23.2a01.IP) has quit (Connection closed)
2018-09-23 13:35:08	GreenJello	rogerduran, in this specific case... fn test() -> Lines<'static> {
2018-09-23 13:35:27	GreenJello	rogerduran, that only works because it's a string literal, which has the lifetime 'static
2018-09-23 13:38:13	-->	ksqsf_ (ksqsf@moz-kvd.hk7.60.36.IP) has joined #rust-beginners
2018-09-23 13:38:21	GreenJello	rogerduran, this is a more typical use https://play.rust-lang.org/?gist=0f357e5ee0c6c7068cf6c64baaccdb4c&version=stable&mode=debug&edition=2015
2018-09-23 13:38:48	-->	martyeugen (martyeugen@moz-79c.h4a.123.77.IP) has joined #rust-beginners
2018-09-23 13:39:04	-->	dthul_ (dthul@moz-59ucom.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-23 13:39:46	<--	martyeugen (martyeugen@moz-79c.h4a.123.77.IP) has left #rust-beginners
2018-09-23 13:40:37	GreenJello	it says that the input string s/x must live at least as long as the Lines, since the Lines is just pointing to the String; it doesn't copy the string into the struct
2018-09-23 13:40:40	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 13:41:46	rogerduran	GreenJello: oh, thanks! that's exactly what I was looking for(second case) 
2018-09-23 13:44:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 13:51:00	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 13:52:01	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 13:52:07	<--	SenasOzys_ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-23 13:52:22	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 13:55:09	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 13:56:21	<--	jcmorrow (Mibbit@moz-vq0.5cc.128.104.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 13:56:24	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 13:57:13	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 13:58:31	-->	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-23 14:00:47	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 14:01:28	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 14:02:36	-->	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 14:04:30	-->	martyeugen (martyeugen@moz-79c.h4a.123.77.IP) has joined #rust-beginners
2018-09-23 14:04:36	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 14:05:18	martyeugen	Hello! I'm not sure if I can ask it here, but I'll try. Does anyone use Rust at work, and if you do, do you use it in a functional way, or are you just doing go-like OOP with muts everywhere? 
2018-09-23 14:06:42	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 14:06:52	-->	wombawomba (andre@moz-5u4vpt.customers.ownit.se) has joined #rust-beginners
2018-09-23 14:07:00	rogerduran	GreenJello: is it possible to apply same pattern to something like this(intermediate variable that returns a reference in the function)? also, it's something like this idiomatic or I'm trying to push the language to the wrong way? https://play.rust-lang.org/?gist=372c6d712c0c53578ed17ef0959cf1ce&version=stable&mode=debug&edition=2015
2018-09-23 14:07:08	<--	wombawomba (andre@moz-5u4vpt.customers.ownit.se) has quit (Quit: leaving)
2018-09-23 14:08:12	GreenJello	rogerduran, I'm not sure what the first question means
2018-09-23 14:08:21	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-23 14:09:40	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Connection closed)
2018-09-23 14:09:41	<--	ksqsf_ (ksqsf@moz-kvd.hk7.60.36.IP) has quit (Connection closed)
2018-09-23 14:09:45	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 14:09:48	GreenJello	rogerduran, also I'm not sure how to make that function work
2018-09-23 14:10:06	-->	martin2 (martin@moz-5g652s.anteldata.net.uy) has joined #rust-beginners
2018-09-23 14:10:54	GreenJello	martyeugen, I use it for some small programs at work, and most of my code is on the functional part of the spectrum
2018-09-23 14:12:14	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-23 14:13:43	-->	mib_qgrdpi (Mibbit@moz-q5beo4.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-23 14:14:32	<--	mib_qgrdpi (Mibbit@moz-q5beo4.dynamic.ziggo.nl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 14:16:27	rogerduran	GreenJello: I mean if it's possible to apply lifetimes to a reference of something created in the function(Command in this case), don't seems possible/correct I guess, because the actual Command dies at the end of the function
2018-09-23 14:18:25	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-23 14:20:02	GreenJello	rogerduran, https://play.rust-lang.org/?gist=58cc08261704ce50ed925b82903184ad&version=stable&mode=debug&edition=2015
2018-09-23 14:20:15	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-23 14:20:47	GreenJello	rogerduran, this transfers ownership, so the Command isn't dropped when test_cmd returns (also you can remove the lifetime here)
2018-09-23 14:21:44	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-23 14:22:49	rogerduran	GreenJello: oh, so, arg(..) is just applying a transformation to the actual command(self) and returns a reference to self.. that makes sense
2018-09-23 14:22:50	<--	eyans (a@moz-vivpjs.878i.pbkb.2002.2001.IP) has quit (Connection closed)
2018-09-23 14:23:17	-->	eyans (a@moz-vivpjs.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-23 14:23:19	martyeugen	GreenJello, so rust can be regarded as a functional language? I know that you can write functional code even in C++, but sitll.
2018-09-23 14:23:29	GreenJello	rogerduran, .arg() returns &mut Command
2018-09-23 14:24:17	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-23 14:24:30	GreenJello	martyeugen, it's a multi-paradigm language, but the language and stdlib allow writing soft functional code
2018-09-23 14:25:16	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 14:25:35	martyeugen	GreenJello, most languages are multi-paradigm anyway. Thanks.
2018-09-23 14:25:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 14:26:55	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 14:30:02	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 14:30:16	GreenJello	martyeugen, yes, however I recommend writing any single program in a mix of styles, not aiming for any specific style, but rather choosing what expresses the logic cleanly. So... multi-paradigm code, rather than picking a paradigm
2018-09-23 14:30:52	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 14:32:13	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 14:33:14	<--	martin2 (martin@moz-5g652s.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-23 14:34:40	<--	KiChjang (KiChjang@moz-8113mn.urm1.6cdi.0646.2601.IP) has quit (Quit: Leaving)
2018-09-23 14:35:12	-->	martin2 (martin@moz-5g652s.anteldata.net.uy) has joined #rust-beginners
2018-09-23 14:35:14	-->	xialvjun (Mibbit@moz-p5a.hif.117.123.IP) has joined #rust-beginners
2018-09-23 14:35:37	-->	mib_qv0p8s (Mibbit@moz-eqhfep.hstntx.sbcglobal.net) has joined #rust-beginners
2018-09-23 14:36:06	-->	liquidnight (marcus@moz-jhhdfc.u1it.q0dc.0c23.2a01.IP) has joined #rust-beginners
2018-09-23 14:36:27	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 14:37:00	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 14:37:16	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 14:37:30	-->	sainathvd (sainathvd@moz-4bf.abv.87.183.IP) has joined #rust-beginners
2018-09-23 14:37:33	martyeugen	GreenJello, pragmatic way, lol
2018-09-23 14:40:09	xialvjun	I don't know https://tokio.rs/docs/getting-started/futures/ A More Complicated Future ... 
2018-09-23 14:41:07	<--	mib_qv0p8s (Mibbit@moz-eqhfep.hstntx.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 14:41:18	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 14:43:01	-->	danecando (danecando@moz-esjfhm.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-23 14:43:30	<--	scottmcm (scottmcm@moz-7c1586.wa.comcast.net) has quit (NickServ (RECOVER command used by scottmcm_))
2018-09-23 14:43:30	-->	scottmcm (scottmcm@moz-7c1586.wa.comcast.net) has joined #rust-beginners
2018-09-23 14:43:53	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 14:44:34	xialvjun	Why the State is enum with two Future State?   Should not the result Future is just the ConnectFuture ?  And the ConnectFuture depends on the ResolveFuture ?    Should not the State machine be nested, not flat ?
2018-09-23 14:45:20	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 14:46:12	-->	xialvjun_ (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-23 14:46:24	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Connection closed)
2018-09-23 14:46:33	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 14:46:47	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-23 14:46:55	<--	xialvjun_ (xialvjun@moz-gnb.nvv.131.222.IP) has quit (Quit: )
2018-09-23 14:47:02	<--	xialvjun (Mibbit@moz-p5a.hif.117.123.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 14:47:10	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-23 14:47:48	<--	scottmcm (scottmcm@moz-7c1586.wa.comcast.net) has quit (NickServ (RECOVER command used by scottmcm_))
2018-09-23 14:47:48	-->	scottmcm (scottmcm@moz-7c1586.wa.comcast.net) has joined #rust-beginners
2018-09-23 14:48:33	<--	sainathvd (sainathvd@moz-4bf.abv.87.183.IP) has quit (Quit: Leaving)
2018-09-23 14:49:29	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 14:49:37	<--	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 14:50:14	<--	martin2 (martin@moz-5g652s.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-23 14:51:29	-->	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 14:51:30	<--	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 14:51:31	-->	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 14:53:11	<--	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 14:55:17	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-23 14:55:58	-->	mdunn (textual@moz-3m2.897.59.208.IP) has joined #rust-beginners
2018-09-23 14:55:58	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 14:56:01	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-23 14:56:32	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 14:56:52	-->	quartz55 (quartz@moz-56mpj6.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-23 15:00:29	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 15:01:38	-->	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-09-23 15:02:20	<--	RockyTV (alex@moz-mj4.5tk.249.191.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 15:03:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 15:03:27	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 15:03:38	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-23 15:04:07	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 15:04:20	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 15:05:24	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-23 15:05:43	<--	bfritz (brad@moz-6c3034.fewerhassles.com) has quit (Ping timeout: 121 seconds)
2018-09-23 15:08:13	<--	Allegretto_ (allegretto@moz-e1a74f.pool.digikabel.hu) has quit (Connection closed)
2018-09-23 15:10:08	-->	martin2 (martin@moz-5g652s.anteldata.net.uy) has joined #rust-beginners
2018-09-23 15:10:08	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 15:10:43	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 15:11:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 15:13:02	<--	eyans (a@moz-vivpjs.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-23 15:13:27	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Connection closed)
2018-09-23 15:13:59	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 15:14:03	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-23 15:15:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 15:15:38	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-23 15:16:05	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-23 15:16:34	-->	Xinayder (alex@moz-fu0.s3p.249.191.IP) has joined #rust-beginners
2018-09-23 15:17:06	-->	andrehjr (andrehjr@moz-or0.t79.250.167.IP) has joined #rust-beginners
2018-09-23 15:21:21	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 15:23:46	-->	bfritz (brad@moz-6c3034.fewerhassles.com) has joined #rust-beginners
2018-09-23 15:23:48	-->	jihi (jih@moz-lvuc0j.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-23 15:24:29	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-23 15:25:24	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-23 15:25:48	-->	asamolion (Mibbit@moz-jg1.ftb.255.103.IP) has joined #rust-beginners
2018-09-23 15:25:51	<--	asamolion (Mibbit@moz-jg1.ftb.255.103.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 15:27:19	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Connection closed)
2018-09-23 15:28:26	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 15:31:01	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Connection closed)
2018-09-23 15:31:15	<--	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-23 15:32:47	-->	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 15:36:49	<--	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 15:37:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 15:37:29	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-23 15:39:04	<--	taotetek (taotetek@moz-csj2b5.va.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 15:39:41	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 15:40:24	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-23 15:41:27	-->	mib_mvzccc (Mibbit@moz-ps95v3.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 15:41:27	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 15:41:44	<--	mib_mvzccc (Mibbit@moz-ps95v3.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 15:41:52	-->	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has joined #rust-beginners
2018-09-23 15:41:57	<--	zephyrz4 (zephyrz4@moz-48n.fjj.115.146.IP) has quit (Connection closed)
2018-09-23 15:42:22	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 15:42:35	-->	zephyrz4 (zephyrz4@moz-48n.fjj.115.146.IP) has joined #rust-beginners
2018-09-23 15:43:50	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 15:44:21	-->	Guest4 (textual@moz-ctt.sus.111.42.IP) has joined #rust-beginners
2018-09-23 15:47:58	<--	martyeugen (martyeugen@moz-79c.h4a.123.77.IP) has left #rust-beginners
2018-09-23 15:48:09	-->	cjm_ (c@moz-ub2bko.1n99.j5ei.0281.2601.IP) has joined #rust-beginners
2018-09-23 15:49:26	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 15:49:27	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-23 15:49:58	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 15:50:05	-->	Allegretto (allegretto@moz-e1a74f.pool.digikabel.hu) has joined #rust-beginners
2018-09-23 15:51:08	<--	cjm (c@moz-0mn.m4j.8.24.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 15:51:42	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-23 15:55:44	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-23 15:55:49	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-23 15:56:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 15:57:21	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Connection closed)
2018-09-23 15:58:12	-->	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has joined #rust-beginners
2018-09-23 16:00:04	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 16:00:08	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 16:00:10	<--	dthul_ (dthul@moz-59ucom.dscv.g469.067c.2001.IP) has quit (Connection closed)
2018-09-23 16:00:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 16:01:14	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-23 16:01:36	-->	mib_nr3rx4 (Mibbit@moz-1pl.vkv.121.188.IP) has joined #rust-beginners
2018-09-23 16:01:41	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-23 16:01:41	<--	mib_nr3rx4 (Mibbit@moz-1pl.vkv.121.188.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 16:03:27	-->	A422 (Mibbit@moz-08pltu.fbx.proxad.net) has joined #rust-beginners
2018-09-23 16:04:17	<--	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 16:04:30	<--	A422 (Mibbit@moz-08pltu.fbx.proxad.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 16:05:47	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 16:07:49	-->	derf (derf@moz-797sd4.fios.verizon.net) has joined #rust-beginners
2018-09-23 16:08:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 16:08:56	-->	asyncsec (asyncsec@moz-af60v4.dyn6.twc.com) has joined #rust-beginners
2018-09-23 16:09:30	<--	derf (derf@moz-797sd4.fios.verizon.net) has left #rust-beginners
2018-09-23 16:09:35	<--	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 16:09:41	-->	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has joined #rust-beginners
2018-09-23 16:10:13	<--	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 16:10:34	-->	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has joined #rust-beginners
2018-09-23 16:13:01	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 16:13:37	-->	Patricia (Mibbit@moz-6qn.29j.216.91.IP) has joined #rust-beginners
2018-09-23 16:14:06	Patricia	Hi
2018-09-23 16:14:43	<--	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-23 16:15:02	<--	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 16:15:22	-->	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has joined #rust-beginners
2018-09-23 16:16:50	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-23 16:18:49	-->	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-09-23 16:19:56	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-23 16:20:12	<--	lkurusa_ (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (Quit: Lost terminal)
2018-09-23 16:20:56	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-23 16:21:53	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-23 16:22:17	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-23 16:22:36	-->	mib_1kkbye (Mibbit@moz-9tc.nk2.149.169.IP) has joined #rust-beginners
2018-09-23 16:23:28	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 16:27:43	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 16:28:17	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 16:31:16	Guest4	Hi. I am trying out the first example in the rust book, and if I change the main directory of the cargo project, then cargo build fails to run.
2018-09-23 16:31:32	Guest4	Any idea why that is, and how to fix it? Suppose I wanna change a project's name later on?
2018-09-23 16:32:03	martin2	hey all! quick question, what are people using for REST apis development? rocket? actix? standard library?
2018-09-23 16:32:05	--	Guest4 is now known as Nae
2018-09-23 16:32:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 16:32:39	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Connection closed)
2018-09-23 16:32:42	--	Nae is now known as Naeby
2018-09-23 16:32:51	mib_1kkbye	Guest4: you cannot change name of main.rs it's the entry point in the executable 
2018-09-23 16:33:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 16:33:26	Naeby	not the file name, but the directory name inside which src, target and Cargo.lock Cargo.toml reside
2018-09-23 16:34:01	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 16:34:56	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 16:35:00	<--	Patricia (Mibbit@moz-6qn.29j.216.91.IP) has quit (G-Lined: no spamming here)
2018-09-23 16:36:40	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 16:37:11	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-23 16:37:45	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 16:37:48	mib_1kkbye	Naeby:  It does not fail on my system if I change the file name :/
2018-09-23 16:38:10	<--	Orez (Orez@moz-mov3sf.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 16:38:19	mib_1kkbye	Naeby: can you post the exact error message 
2018-09-23 16:38:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 16:39:23	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-23 16:39:40	-->	robertbalicki (Mibbit@moz-dlcoqj.res.rr.com) has joined #rust-beginners
2018-09-23 16:40:28	Naeby	this is what originally happened: https://bpaste.net/show/b01ca0913486
2018-09-23 16:40:31	Naeby	weirdly, can't reproduce it
2018-09-23 16:40:50	Naeby	but I still have the error in my terminal and I don't see doing anything else besides these actions
2018-09-23 16:41:24	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-23 16:41:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 16:43:30	mib_1kkbye	Naeby: are you using mac ?
2018-09-23 16:43:39	Naeby	yes
2018-09-23 16:44:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 16:45:13	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-23 16:45:21	mib_1kkbye	Naeby: if you still get the error try removing the target file and compiling again ... the issue is https://github.com/rust-lang/cargo/issues/4671
2018-09-23 16:45:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 16:46:38	mib_1kkbye	*target folder
2018-09-23 16:48:03	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 16:48:06	GreenJello	martin2, I've used rocket and hyper a bit; rocket is pretty magical, and it uses threads instead of async i/o, but I found it easy to use and I liked the code I wrote. hyper is very minimal, and has async i/o, but you wouldn't want to build anything large with just hyper
2018-09-23 16:48:26	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 16:48:35	-->	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has joined #rust-beginners
2018-09-23 16:48:58	GreenJello	I'm going to try actix on my next http server
2018-09-23 16:51:49	<--	raisin (Mibbit@moz-a6f.9te.17.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 16:52:36	Naeby	Got it, thanks mib_1kkbye!
2018-09-23 16:53:13	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 16:53:15	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 16:53:24	-->	quiggle (Mibbit@moz-gno0jv.ph.cox.net) has joined #rust-beginners
2018-09-23 16:54:10	<--	martin2 (martin@moz-5g652s.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-23 16:57:35	<--	quiggle (Mibbit@moz-gno0jv.ph.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 16:58:08	-->	mib_299r5g (Mibbit@moz-gno0jv.ph.cox.net) has joined #rust-beginners
2018-09-23 16:58:22	<--	mib_299r5g (Mibbit@moz-gno0jv.ph.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 16:59:05	-->	mib_5prkjh (Mibbit@moz-gno0jv.ph.cox.net) has joined #rust-beginners
2018-09-23 16:59:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:00:00	mib_5prkjh	error: could not find `Cargo.toml`
2018-09-23 17:00:32	mib_5prkjh	need help on error: could not find `Cargo.toml` in any parent directory
2018-09-23 17:00:47	mib_1kkbye	mib_5prkjh: does you folder has a Cargo.toml ?
2018-09-23 17:00:50	-->	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has joined #rust-beginners
2018-09-23 17:01:07	-->	shiro (Thunderbird@moz-i132lq.studentenwerk-goettingen.de) has joined #rust-beginners
2018-09-23 17:01:12	mib_5prkjh	no, i use the installer to do all
2018-09-23 17:01:34	mib_5prkjh	how i can fix this
2018-09-23 17:01:56	mib_1kkbye	mib_5prkjh: make a Cargo.toml 
2018-09-23 17:02:03	mib_5prkjh	how
2018-09-23 17:02:11	mib_5prkjh	using linux
2018-09-23 17:02:12	-->	mib_var2ki (Mibbit@moz-mue.nfe.255.158.IP) has joined #rust-beginners
2018-09-23 17:02:48	<--	mib_var2ki (Mibbit@moz-mue.nfe.255.158.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 17:03:38	mib_1kkbye	mib_5prkjh: if you have already installed rust then simply open terminal in the desktop dictionary and type "cargo new folder_name --bin"
2018-09-23 17:03:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:04:27	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-23 17:04:29	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-23 17:04:31	mib_1kkbye	mib_5prkjh: you should have a folder by name "folder_name" it should already have a Cargo.toml
2018-09-23 17:04:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:06:02	mib_5prkjh	thank you will truy
2018-09-23 17:06:55	mib_1kkbye	mib_5prkjh: use https://doc.rust-lang.org/book/2018-edition/index.html
2018-09-23 17:07:43	<--	Naeby (textual@moz-ctt.sus.111.42.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 17:08:25	-->	backnforth (backnforth@moz-sat.bac.254.104.IP) has joined #rust-beginners
2018-09-23 17:08:56	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 17:10:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:12:03	<--	leward (leward@moz-s5t.oou.252.103.IP) has quit (Quit: Leaving)
2018-09-23 17:12:05	<--	mib_5prkjh (Mibbit@moz-gno0jv.ph.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 17:12:24	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 17:12:31	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-23 17:13:32	<--	SenasOzys (SenasOzys@moz-g3f.cl6.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 17:13:43	-->	donflopez (Mibbit@moz-pgq.681.73.94.IP) has joined #rust-beginners
2018-09-23 17:13:58	-->	adi (adi@moz-omejp7.vsos.ethz.ch) has joined #rust-beginners
2018-09-23 17:14:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:14:45	<--	donflopez (Mibbit@moz-pgq.681.73.94.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 17:14:58	-->	Kimberly (Mibbit@moz-2v2.g7f.252.185.IP) has joined #rust-beginners
2018-09-23 17:15:24	Kimberly	Hi
2018-09-23 17:15:32	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 17:16:13	<--	Orez (Orez@moz-mov3sf.res.rr.com) has left #rust-beginners
2018-09-23 17:17:23	<--	mdunn (textual@moz-3m2.897.59.208.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-23 17:17:23	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 17:17:55	-->	quaddle (Mibbit@moz-lcgtcb.az.comcast.net) has joined #rust-beginners
2018-09-23 17:18:06	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 17:18:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:18:28	<--	quaddle (Mibbit@moz-lcgtcb.az.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 17:18:29	-->	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has joined #rust-beginners
2018-09-23 17:18:51	-->	krebbit (Mibbit@moz-lcgtcb.az.comcast.net) has joined #rust-beginners
2018-09-23 17:19:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:19:03	-->	bugweiser (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-23 17:19:19	<--	krebbit (Mibbit@moz-lcgtcb.az.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 17:19:46	bugweiser	I have a really weird possibly concurrency related bug and I dont know how to reduce it down to a simple example but I can post the full can anyone help?
2018-09-23 17:22:00	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-23 17:22:18	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-23 17:22:25	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-23 17:22:37	<--	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 17:23:08	-->	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has joined #rust-beginners
2018-09-23 17:23:43	<--	bugweiser (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 17:24:35	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-23 17:26:44	<--	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 17:26:46	-->	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has joined #rust-beginners
2018-09-23 17:26:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 17:27:09	-->	keret (Mibbit@moz-fo6jpi.stud-bolig.hiMolde.no) has joined #rust-beginners
2018-09-23 17:27:15	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-23 17:27:46	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 17:28:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:30:26	keret	Hi guys! I'm writing FFI to C libruary and need to pass pointer to pointer to C function as an input ( char    ** value ) with following params (from the doc):  Size: 64 bit / 8 byte (reference) . How can I do that from Rust?
2018-09-23 17:31:02	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 17:31:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:31:46	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 17:32:06	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 17:32:27	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-23 17:33:59	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-23 17:34:22	sebk	keret: hm.
2018-09-23 17:34:35	-->	panitaliemom (Mibbit@moz-qm22p4.dynamic.sbb.rs) has joined #rust-beginners
2018-09-23 17:34:38	sebk	thats &[&str]
2018-09-23 17:35:16	sebk	but on 32bit systems it will be 32bit pointers
2018-09-23 17:35:27	keret	its a pointer to array of chars. Basically a string allocated for C function to fill
2018-09-23 17:35:36	keret	64 only here
2018-09-23 17:35:44	sebk	(actually &[*const str]
2018-09-23 17:35:44	sebk	oh. C fills it
2018-09-23 17:35:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:35:58	<--	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 17:36:09	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:36:28	sebk	then you can just use [usize; N]
2018-09-23 17:36:43	sebk	or [*const u8; N]
2018-09-23 17:36:44	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:37:27	<--	Arnavion (Arnavion@moz-qhb.gim.209.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 17:37:29	keret	Yep. It is interface of the libruary that i can not change. You allocate and pass -> they fill. As of now it gives me a constant segfault
2018-09-23 17:38:03	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-23 17:38:06	<--	faitswulff (faitswulff@moz-skidgm.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 17:38:27	-->	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-23 17:38:41	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 17:39:10	keret	The C++ call they provide is like this: GetItem(mod, 1, 0, COO, (char **) &text);
2018-09-23 17:39:36	keret	I'm interested in last param. How to get it right in Rust
2018-09-23 17:39:51	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 17:40:12	panitaliemom	can I print a variable without formatting with string literals
2018-09-23 17:40:13	sebk	that looks like the caller allocates and passes the array
2018-09-23 17:40:15	sebk	not the callee
2018-09-23 17:40:17	<--	Kimberly (Mibbit@moz-2v2.g7f.252.185.IP) has quit (G-Lined: no spamming here)
2018-09-23 17:40:28	-->	Arnavion (Arnavion@moz-qhb.gim.209.104.IP) has joined #rust-beginners
2018-09-23 17:40:28	sebk	!crate dyn-fmt
2018-09-23 17:40:28	+rustbot	Crate 'dyn-fmt' does not exist.
2018-09-23 17:40:36	sebk	panitaliemom: there is a crate for that
2018-09-23 17:40:45	sebk	!crate str-fmt
2018-09-23 17:40:45	+rustbot	Crate 'str-fmt' does not exist.
2018-09-23 17:40:54	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-23 17:40:59	sebk	wait. print.
2018-09-23 17:41:03	 *	sebk too tired
2018-09-23 17:41:21	sebk	panitaliemom: basically no, but you can write a macro that does it
2018-09-23 17:41:30	-->	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:41:45	sebk	(still needs to implement Debug)
2018-09-23 17:41:58	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 17:41:59	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 17:42:03	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:42:28	sebk	keret: to me it looks like you have to create an array of *const str / *const [u8]
2018-09-23 17:42:32	sebk	err
2018-09-23 17:42:33	panitaliemom	is there a reason for that?
2018-09-23 17:42:34	sebk	*const u8
2018-09-23 17:42:48	sebk	panitaliemom: well.. how else do you want to convert something to a string?
2018-09-23 17:42:57	sebk	(and only strings can be printed)
2018-09-23 17:43:26	-->	bluss (bluss@moz-1ikcch.customer.tdc.net) has joined #rust-beginners
2018-09-23 17:43:52	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-23 17:44:47	<--	mib_1kkbye (Mibbit@moz-9tc.nk2.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 17:44:56	-->	jupart_ (coolp_jim@moz-ajj.u2k.169.104.IP) has joined #rust-beginners
2018-09-23 17:46:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:47:08	<--	Herby (Herby@moz-i9floe.co.comcast.net) has quit (Quit: Leaving)
2018-09-23 17:47:28	keret	sebk do you know any example how to create it out there?
2018-09-23 17:47:42	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Connection closed)
2018-09-23 17:48:38	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 17:48:46	sebk	let arr = ["hello\0".as_ptr(), "world\0".as_ptr(), ptr::null()].as_ptr();
2018-09-23 17:48:51	sebk	and then pass arr
2018-09-23 17:48:58	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 17:49:01	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 17:49:05	<--	panitaliemom (Mibbit@moz-qm22p4.dynamic.sbb.rs) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 17:49:22	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 17:50:45	-->	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has joined #rust-beginners
2018-09-23 17:50:48	keret	sebk will try right now, thanks
2018-09-23 17:50:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:51:35	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 17:51:55	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:52:42	<--	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 17:53:24	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:53:25	<--	bluss (bluss@moz-1ikcch.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:56:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 17:57:00	-->	U007D (textual@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-23 17:57:06	<--	U007D (textual@moz-jc56tv.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 17:57:06	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:57:20	-->	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has joined #rust-beginners
2018-09-23 17:57:34	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-23 17:58:00	<--	andrehjr (andrehjr@moz-or0.t79.250.167.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 18:00:17	<--	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-23 18:00:34	-->	bluss (bluss@moz-1ikcch.customer.tdc.net) has joined #rust-beginners
2018-09-23 18:01:02	-->	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has joined #rust-beginners
2018-09-23 18:01:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:01:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:03:09	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-23 18:03:13	-->	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has joined #rust-beginners
2018-09-23 18:04:55	<--	faitswulff (faitswulff@moz-nv1d33.cicril.sbcglobal.net) has quit (Quit: Leaving...)
2018-09-23 18:05:05	<--	stuarth (stuarth@moz-jc29ft.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:06:57	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (The TLS connection was non-properly terminated.)
2018-09-23 18:07:05	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:07:40	<--	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 18:09:05	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-23 18:09:13	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 18:09:58	<--	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2018-09-23 18:10:02	-->	agurk (agurk@moz-ihru49.dhcp.as2116.net) has joined #rust-beginners
2018-09-23 18:10:04	-->	mib_cvt1s4 (Mibbit@moz-o4hrcg.wa.comcast.net) has joined #rust-beginners
2018-09-23 18:10:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:10:10	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 18:11:58	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 18:12:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 18:12:17	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-23 18:13:18	-->	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-23 18:14:12	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:14:35	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:15:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:16:01	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 18:16:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 18:18:50	-->	mib_mjeet1 (Mibbit@moz-s67.6ll.114.189.IP) has joined #rust-beginners
2018-09-23 18:18:57	<--	mib_mjeet1 (Mibbit@moz-s67.6ll.114.189.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 18:19:08	-->	mib_7qkpaf (Mibbit@moz-s67.6ll.114.189.IP) has joined #rust-beginners
2018-09-23 18:19:15	mib_7qkpaf	error: macro attributes must be placed before `#[derive]`   --> /home/cesar/.cargo/registry/src/github.com-1ecc6299db9ec823/dotenv-0.10.1/src/lib.rs:23:40    | 23 | #[cfg_attr(not(feature = "backtrace"), error_chain(backtrace = "false"))]    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  error: `error_chain` is a derive mode   -->
2018-09-23 18:19:37	mib_7qkpaf	i got this error " macro attributes must be placed before `#[derive]`"
2018-09-23 18:19:52	mib_7qkpaf	#[cfg_attr(not(feature = "backtrace"), error_chain(backtrace = "false"))]
2018-09-23 18:20:04	<--	mib_7qkpaf (Mibbit@moz-s67.6ll.114.189.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 18:20:13	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-23 18:20:38	sebk	did you mean #![cfg_attr(…)] ?
2018-09-23 18:21:19	-->	enterprisey (enterprisey@moz-fjjhvf.cit.cornell.edu) has joined #rust-beginners
2018-09-23 18:21:42	<--	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has quit (Quit: Leaving)
2018-09-23 18:23:55	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:24:19	<--	robertbalicki (Mibbit@moz-dlcoqj.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 18:24:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:25:25	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 18:28:45	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:29:23	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:31:03	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 18:32:57	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 18:33:37	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:33:59	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-23 18:34:29	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-23 18:34:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:34:38	-->	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:35:02	-->	tac-tics (tac-tics@moz-iapcvs.ph.cox.net) has joined #rust-beginners
2018-09-23 18:35:05	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:36:59	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 18:38:01	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-23 18:38:55	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:39:03	<--	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 18:39:42	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:41:42	<--	cubetastic (Thunderbird@moz-dvl.epv.223.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 18:42:33	-->	madsalaa (Mibbit@moz-afa.nj8.135.196.IP) has joined #rust-beginners
2018-09-23 18:42:34	-->	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-23 18:42:37	<--	madsalaa (Mibbit@moz-afa.nj8.135.196.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 18:42:52	-->	madsalama (Mibbit@moz-afa.nj8.135.196.IP) has joined #rust-beginners
2018-09-23 18:43:17	<--	keret (Mibbit@moz-fo6jpi.stud-bolig.hiMolde.no) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 18:43:46	madsalama	hello y'all! For someone who got recently interested in systems programming (C) already working on a non-trivial project - what are some cool projects that helps me get up and running in rust?
2018-09-23 18:43:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:44:40	<--	madsalama (Mibbit@moz-afa.nj8.135.196.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 18:44:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:45:18	-->	ca1ek (dawid@moz-9d1mn7.internetia.net.pl) has joined #rust-beginners
2018-09-23 18:46:46	sebk	apart from the book?
2018-09-23 18:46:55	sebk	!learnrust
2018-09-23 18:46:55	+rustbot	An aggregated list of blog posts and other resources for learning Rust is available at https://github.com/ctjhoa/rust-learning
2018-09-23 18:47:23	sebk	(might need more information on what you are interested in)
2018-09-23 18:49:08	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:49:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 18:50:41	-->	Grilinctus (notasquid@moz-n20.nku.227.110.IP) has joined #rust-beginners
2018-09-23 18:50:50	<--	Aankhen`` (notasquid@moz-cqe.k3h.207.49.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 18:50:55	<--	agurk (agurk@moz-ihru49.dhcp.as2116.net) has quit (Quit: Leaving)
2018-09-23 18:50:56	--	Grilinctus is now known as Aankhen``
2018-09-23 18:52:08	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 18:52:35	-->	danysdragons (Mibbit@moz-klbge9.cable.rogers.com) has joined #rust-beginners
2018-09-23 18:56:10	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:57:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 18:57:41	-->	hatman (Mibbit@moz-9tc.nk2.149.169.IP) has joined #rust-beginners
2018-09-23 18:58:48	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 18:59:32	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-23 19:00:00	-->	mandeep_ (mandeep@moz-qt0dau.dyn.columbia.edu) has joined #rust-beginners
2018-09-23 19:01:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 19:01:54	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 19:04:21	-->	huddler (Mibbit@moz-rhbdqg.priv.bahnhof.se) has joined #rust-beginners
2018-09-23 19:05:43	-->	Mateon2 (Thunderbird@moz-9iijia.supernova.orange.pl) has joined #rust-beginners
2018-09-23 19:05:50	<--	Mateon1 (Thunderbird@moz-7dm3pa.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-23 19:05:50	--	Mateon2 is now known as Mateon1
2018-09-23 19:06:11	<--	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has quit (Quit: Sorry, was AFK)
2018-09-23 19:06:34	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-23 19:07:06	<--	mib_cvt1s4 (Mibbit@moz-o4hrcg.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 19:08:01	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 19:08:07	-->	jaykay (Thunderbird@moz-rkf8p6.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 19:09:21	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 19:09:28	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-23 19:09:53	-->	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has joined #rust-beginners
2018-09-23 19:10:36	<--	samrg472 (samrg472@moz-h8tjvk.clients.your-server.de) has quit (The TLS connection was non-properly terminated.)
2018-09-23 19:12:09	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 19:13:06	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 19:13:10	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 19:14:29	<--	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has quit (Quit: I've fallen into /dev/null and can't get out!)
2018-09-23 19:15:52	-->	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has joined #rust-beginners
2018-09-23 19:16:49	-->	samrg472 (samrg472@moz-h8tjvk.clients.your-server.de) has joined #rust-beginners
2018-09-23 19:17:12	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 19:21:00	<--	jaykay (Thunderbird@moz-rkf8p6.pools.vodafone-ip.de) has left #rust-beginners
2018-09-23 19:21:13	<--	hatman (Mibbit@moz-9tc.nk2.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 19:24:16	huddler	So how are procedureal macros implemented? Could they be compared with some design patterns such as a decorator, or how do they work
2018-09-23 19:25:37	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Quit: Leaving)
2018-09-23 19:26:20	<--	backnforth (backnforth@moz-sat.bac.254.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 19:26:22	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-23 19:28:53	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 19:29:59	FreeFull	huddler: Procedural macros are functions that, at compile time, take some Rust code, do whatever is needed and return some Rust code
2018-09-23 19:32:41	FreeFull	huddler: They can be used for things like custom derive, but also for implementing things like println!
2018-09-23 19:33:45	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 19:35:15	huddler	What I try to understand is how they would change how you work with software design. If I understand it correctly, you are able to manipulate the behavior and functionality during compile-time, such as injecting a new function to a struct?
2018-09-23 19:37:14	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-23 19:37:17	-->	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has joined #rust-beginners
2018-09-23 19:37:22	huddler	And the reason we want it is to write less code?
2018-09-23 19:37:29	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-23 19:37:47	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 19:38:11	-->	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-23 19:39:07	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 19:41:03	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-23 19:42:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 19:43:18	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-23 19:43:39	sebk	more effient (and correct) code
2018-09-23 19:44:00	sebk	if you need to maintain basically the same code in 20 places, it is easy to forget one
2018-09-23 19:44:16	sebk	with macros the compiler does that job
2018-09-23 19:44:49	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Connection closed)
2018-09-23 19:44:57	blueberry_cheesecake	Folks, I was wondering why the commented line here doesn't work while the alternative of using the two lines after it (lines 7 and 8) work fine: https://play.rust-lang.org/?gist=6c97a949af19eeedce8d282928f0f058&version=stable&mode=debug&edition=2015
2018-09-23 19:44:59	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-23 19:45:34	blueberry_cheesecake	if I say let (a, b) it works fine but I was wondering why I don't need the 'let' for lines 7, 8
2018-09-23 19:46:20	blueberry_cheesecake	(trying to learn through the official book and what I was originally trying is: (a, b) = (b, a) and then came upon this thing that made me curious)
2018-09-23 19:46:34	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 19:47:00	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 19:47:29	dpc1	it works with let (a,b) = (b,a) (though it is shadowing the mutable variables you declared earlier)
2018-09-23 19:48:24	blueberry_cheesecake	that is indeed what I was thinking - that the 'let' version is shadowing the earlier variables
2018-09-23 19:48:57	blueberry_cheesecake	the only theory I could come up with was that (a, b) (on the left-hand-side) is an anonymous tuple and it could have something to do with that
2018-09-23 19:50:01	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-23 19:50:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 19:50:51	<--	ca1ek (dawid@moz-9d1mn7.internetia.net.pl) has quit (The TLS connection was non-properly terminated.)
2018-09-23 19:51:02	<--	jbalint (jbalint@moz-941und.wi.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-23 19:52:19	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 19:53:41	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 19:54:11	-->	jbalint (jbalint@moz-941und.wi.charter.com) has joined #rust-beginners
2018-09-23 19:54:52	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 19:56:05	Arnavion	let takes a pattern. Assignment takes an lvalue expr. (a, b) is a pattern or an rvalue expr
2018-09-23 19:56:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 20:00:43	<--	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has quit (Quit: )
2018-09-23 20:01:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 20:01:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 20:02:15	-->	kraythen_ (rsimmonsjr@moz-4qc.je2.83.23.IP) has joined #rust-beginners
2018-09-23 20:02:34	<--	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-23 20:04:34	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 20:04:38	-->	nunatak (nunatak@moz-0o9u0v.netcologne.de) has joined #rust-beginners
2018-09-23 20:05:43	-->	Shcmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-23 20:06:23	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 20:10:14	-->	soren (soren@moz-f1nunk.bath.ac.uk) has joined #rust-beginners
2018-09-23 20:10:22	<--	jbalint (jbalint@moz-941und.wi.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-23 20:13:21	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-23 20:13:32	-->	jbalint (jbalint@moz-941und.wi.charter.com) has joined #rust-beginners
2018-09-23 20:14:18	--	cjm_ is now known as cjm
2018-09-23 20:15:02	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-23 20:15:20	<--	nunatak (nunatak@moz-0o9u0v.netcologne.de) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-23 20:15:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 20:16:37	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 20:18:21	blueberry_cheesecake	Arnavion, thanks. Understood.
2018-09-23 20:18:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 20:19:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 20:19:49	-->	charh (charh@moz-7m0.bpc.242.201.IP) has joined #rust-beginners
2018-09-23 20:20:23	<--	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 20:22:53	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 20:23:36	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-23 20:23:57	dpc1	also get a better nickname ;)
2018-09-23 20:24:16	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-23 20:26:41	blueberry_cheesecake	Who, me? Let's just say my creativity in these matters is um... severely limited...
2018-09-23 20:27:14	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 20:27:34	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-23 20:27:53	dpc1	yeh xD
2018-09-23 20:27:57	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 20:28:24	dpc1	i'd change the nick to severelyLimitedCreativity then xD
2018-09-23 20:29:22	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-23 20:29:42	blueberry_cheesecake	haha, good one
2018-09-23 20:29:57	-->	saimen (saimen@moz-f2k.c0t.183.46.IP) has joined #rust-beginners
2018-09-23 20:30:18	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-23 20:30:41	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-23 20:30:52	<--	soren (soren@moz-f1nunk.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-09-23 20:31:36	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-23 20:31:38	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 20:32:03	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 20:32:55	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 20:33:27	-->	plusone (custom@moz-41e235.skybroadband.com) has joined #rust-beginners
2018-09-23 20:34:32	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-23 20:34:39	huddler	Why does rust rely on traits instead of a subclassing system?
2018-09-23 20:35:10	Wolvereness	huddler: what's a class?
2018-09-23 20:35:15	-->	shmoo (Mibbit@moz-puv.vu3.242.90.IP) has joined #rust-beginners
2018-09-23 20:35:32	blueberry_cheesecake	I'm merely a noob but aren't those orthogonal? You could have both, right? (I mean, why do you say "instead of"?)
2018-09-23 20:35:53	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Ping timeout: 121 seconds)
2018-09-23 20:35:55	<--	shmoo (Mibbit@moz-puv.vu3.242.90.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 20:36:03	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 20:36:06	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 20:36:12	-->	chump (Mibbit@moz-puv.vu3.242.90.IP) has joined #rust-beginners
2018-09-23 20:36:13	huddler	What I mean is the normal polymorphism seen in java and c++. Where you are able to extend classes and so fourth
2018-09-23 20:36:43	Wolvereness	huddler: it's not really a thing in c++, and instead of Java's extension, Rust uses encapsulation.
2018-09-23 20:36:55	dpc1	java is a more oop language. that's why you have classes and inheritence as fundamentals
2018-09-23 20:36:57	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 20:37:29	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-23 20:37:41	-->	doomy (doomy@moz-95uqmu.static.chtrptr.net) has joined #rust-beginners
2018-09-23 20:38:04	Wolvereness	huddler: Rust is able to solve more problems with structs/enums + traits, with the only practical downside is that it's different.
2018-09-23 20:38:55	Wolvereness	huddler: The answer to this goes more in-depth on what does it mean to have a "class", and when is that appropriate.
2018-09-23 20:39:07	doomy	Hi all! I'm having a little difficultly coming up with a good model for serde to deserialize JSON.  If anyone can give me a hand, I've create a gist (with a more detailed explanation + a sample of what I'm doing) https://gist.github.com/piedoom/480a404b2e5a9aacfa5a284bbe1bec31
2018-09-23 20:39:35	huddler	what i realise is that with rust lacking the subtyping, design patterns become quite obsolete and unusable, making code more difficult to maintain and not as "obvious" and robust
2018-09-23 20:39:38	<--	jupart_ (coolp_jim@moz-ajj.u2k.169.104.IP) has quit (Quit: WeeChat 2.2)
2018-09-23 20:39:54	dpc1	also a lot of languages prefer compositon over inheritence
2018-09-23 20:39:56	<--	saimen (saimen@moz-f2k.c0t.183.46.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 20:40:38	Wolvereness	huddler: None of that makes any sense though. That's like saying "circles are bad because square pegs don't fit"
2018-09-23 20:41:17	-->	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-23 20:41:21	dpc1	huddler: could you provide us with an example where a design pattern has become "obselete and unusable"?
2018-09-23 20:41:23	dtolnay	doomy: have you seen https://serde.rs/attr-flatten.html ?
2018-09-23 20:41:28	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-23 20:42:01	Wolvereness	dpc1: I mean, object-oriented-programming outright fits that. If that's all you know, of course it makes Rust unusable.
2018-09-23 20:42:12	doomy	I hadn't!  Thank you so much dtolnay.  don't know how i missed that lol
2018-09-23 20:42:27	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 20:43:20	dpc1	Wolvereness: i understand. I come from an OOPS background as well just like so many others here. I've to say I disagree with you :)
2018-09-23 20:43:34	<--	kraythen_ (rsimmonsjr@moz-4qc.je2.83.23.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 20:44:26	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 20:44:28	Wolvereness	dpc1: I come from Java. Almost none of my Java "design patterns" are directly applicable to Rust, only general concepts like separation of concerns.
2018-09-23 20:44:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 20:45:35	dpc1	Wolvereness: fair enough. but those are design patterns which are tailored for Java. so its going to take some trimming to fit in
2018-09-23 20:45:40	dtolnay	doomy: two options:
2018-09-23 20:45:41	dtolnay	doomy: https://play.rust-lang.org/?gist=00a4379095d1bec08842950e6210159d
2018-09-23 20:45:45	dtolnay	doomy: https://play.rust-lang.org/?gist=81a199b75e9f361b8fdd553e1be166a3
2018-09-23 20:46:56	doomy	Oh, that's actually a better idea (the one with Content) since most of the time I'll be operating on that generic data
2018-09-23 20:47:58	<--	jbalint (jbalint@moz-941und.wi.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-23 20:49:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 20:49:58	<--	plusone (custom@moz-41e235.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-23 20:50:45	-->	jbalint (jbalint@moz-941und.wi.charter.com) has joined #rust-beginners
2018-09-23 20:51:04	Shcmeckinger	How do I access my crate root in $PROJECT/bench/bench.rs
2018-09-23 20:52:18	Arnavion	CARGO_MANIFEST_DIR
2018-09-23 20:52:25	<--	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-23 20:52:35	Arnavion	https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-crates
2018-09-23 20:53:12	Shcmeckinger	i mean how do i call function in src from benches
2018-09-23 20:53:39	Arnavion	extern crate whatever;
2018-09-23 20:54:27	-->	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has joined #rust-beginners
2018-09-23 20:54:33	Shcmeckinger	doesnt work
2018-09-23 20:55:49	-->	mipli (mipli@moz-20q8jc.3.getinternet.no) has joined #rust-beginners
2018-09-23 20:55:54	Shcmeckinger	im in the same crate in another directory
2018-09-23 20:56:18	-->	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has joined #rust-beginners
2018-09-23 20:56:37	Shcmeckinger	my src code is in proj/src/xxx.rs and my benchmarks are in proj/benches/bench.rs
2018-09-23 20:56:49	Shcmeckinger	how do i call functions from xxx in bench
2018-09-23 20:57:29	Wolvereness	Shcmeckinger: import the crate?
2018-09-23 20:57:29	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 20:57:57	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-23 20:58:11	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 20:58:19	<--	dalley (dalley@moz-147tel.dyn6.twc.com) has quit (Connection closed)
2018-09-23 20:59:44	tomte	hi there
2018-09-23 21:00:18	dmc	hi
2018-09-23 21:00:23	tomte	is there a rust tutorial somewhere that aims at total programming beginners?
2018-09-23 21:00:40	Shcmeckinger	do i need to import the crate im in when im benching the crate im in from the same fucking crate?
2018-09-23 21:00:45	Shcmeckinger	and how do i do that
2018-09-23 21:01:59	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 21:02:27	dmc	https://github.com/ctjhoa/rust-learning
2018-09-23 21:02:56	Lumpio-	Is there a book for people who are literally new to programming though
2018-09-23 21:03:10	Lumpio-	Like "what's a variable" new - the big books seem to assume you can already code in some language at least
2018-09-23 21:03:53	<--	chump (Mibbit@moz-puv.vu3.242.90.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 21:04:34	<--	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 21:04:41	blueberry_cheesecake	is rust suitable as a first language?
2018-09-23 21:04:50	-->	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-23 21:05:44	doomy	I personally think it is possible, however languages like python and ruby have less intense learning curves.  However, Rust probably has one of (if not THE) best communities, especially for beginners
2018-09-23 21:06:07	Shcmeckinger	Why cant i extern crate my own crate?
2018-09-23 21:06:18	blueberry_cheesecake	I was thinking that it might be better to start with python and then go to rust
2018-09-23 21:06:32	blueberry_cheesecake	also, I agree about the community being very friendly and welcoming
2018-09-23 21:06:35	dpc1	:)
2018-09-23 21:07:07	doomy	They share a lot of similarities, but also have some very different concepts.  If you're completely new, maybe learn some control-flow stuff in python and then take a look at rust; the basics translate to almost any language
2018-09-23 21:07:39	-->	niconii (nicole@moz-sgidge.midco.net) has joined #rust-beginners
2018-09-23 21:07:39	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-23 21:07:54	doomy	when I came over from Ruby, the biggest difficulties I had were how Rust isn't very much object-oriented like Python or Ruby
2018-09-23 21:07:59	Lumpio-	To any procedural language at least, heh
2018-09-23 21:08:20	doomy	Yeah, still trying to wrap my head around haskell lol
2018-09-23 21:09:14	dpc1	lol
2018-09-23 21:09:59	doomy	what's cool is how rust made my exploration into more functional topics so much easier, though.  Also it spoiled me in that I never want to go back to a lang without union types
2018-09-23 21:10:11	doomy	or with null
2018-09-23 21:10:16	Lumpio-	I usually recommend Python as a first language, because it allows you to ignore intricacies like memory management and complex typing and whatever at first, but also isn't crazy lenient like JavaScript or whatever
2018-09-23 21:10:27	dpc1	it depends though
2018-09-23 21:10:48	Lumpio-	I think static typing pays off the most once your programs get bigger.
2018-09-23 21:10:56	doomy	+1 on JS, it's in a whole other world of very language-specific edge cases
2018-09-23 21:11:28	doomy	python has a lot of great resources for learning, and not needing to worry about types right away will probably be a lot less frustrating for a total beginner
2018-09-23 21:11:46	Lumpio-	Anyways hi tomte, welcome to rust, heh
2018-09-23 21:11:59	dpc1	Lumpio-: i've seen that people who start with dynamic languages often have trouble understanding types later
2018-09-23 21:12:02	blueberry_cheesecake	python is very approachable for people who are new to programming and you can quickly get something practical working with it - not just sample programs like 'print prime numbers'.
2018-09-23 21:12:27	-->	siddhartharao17 (siddharthar@moz-a89h0c.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-23 21:12:29	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 21:12:29	blueberry_cheesecake	for me, I (just) came to rust from C++ and I really like it so far
2018-09-23 21:12:38	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-23 21:12:40	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-23 21:12:43	blueberry_cheesecake	it's like, "here's even more that the compiler will check for you"
2018-09-23 21:12:56	Shcmeckinger		Is there a reason, why i get cant find crate when I "extern crate my_crate;" from benches?
2018-09-23 21:13:00	doomy	hmm, I was the opposite.  When my rails projects got huge I was lamenting how many `nil` checks I had to perform... But definitely is a concept that is worth learning no matter if the lang is static or dynamic
2018-09-23 21:13:18	doomy	also sorry for talking over Shcmeckinger, I don't have an answer but perhaps someone else does
2018-09-23 21:13:26	<--	siddhartharao17 (siddharthar@moz-a89h0c.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 21:13:47	-->	siddhartharao17 (siddharthar@moz-28abl8.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-23 21:14:08	tomte	Lumpio-: thanks
2018-09-23 21:14:24	doomy	all I can offer right now is an example of how other projects do benches, perhaps that can help a little - https://github.com/Keats/gutenberg/blob/014ce878f899e1793d95a4c8dba2e517d7cb8e2d/components/site/benches/load.rs
2018-09-23 21:14:39	-->	saimen (saimen@moz-puh.c0t.183.46.IP) has joined #rust-beginners
2018-09-23 21:14:40	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 21:14:51	Lumpio-	Shcmeckinger: Where is your test code in relation to the library code? As in what are your file paths
2018-09-23 21:15:11	tomte	I found that github page before - but none of the tutorials really felt like it is made for people who never coded before
2018-09-23 21:15:44	tomte	It just feels wrong to learn python just to learn rust
2018-09-23 21:15:58	Wolvereness	Shcmeckinger: so, you are `pub XXX;` in lib.rs, and your bench is `extern crate THING_IN_TOML;`, right?
2018-09-23 21:16:04	Lumpio-	Is there something that you want to make in Rust specifically? tomte
2018-09-23 21:16:08	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 21:16:24	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-23 21:16:26	-->	martin2 (martin@moz-o1f82l.anteldata.net.uy) has joined #rust-beginners
2018-09-23 21:16:33	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:16:37	doomy	hmm I'll have to do some more research on rust as an introductory language.  if there isn't a lot of resources on the topic perhaps I'll have to create one :)
2018-09-23 21:16:42	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Ping timeout: 121 seconds)
2018-09-23 21:17:05	tomte	Lumpio-: yes and no. I could use a little program to calculate membership fees (that are quite complicated)
2018-09-23 21:17:11	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 21:17:25	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 21:17:42	Wolvereness	tomte: is it all defined formally?
2018-09-23 21:18:12	tomte	so it can be everything from input the numbers and calculate to having a file (or even database) for the input data up to including a nice gui
2018-09-23 21:18:34	dpc1	doomy: the issue is you will get stuck with people's opinions from different perspectives that disagree with one another 
2018-09-23 21:18:50	Shcmeckinger	@Wolverebess https://gist.github.com/415bd9ca90011caf31f86b4210de3b1a
2018-09-23 21:19:07	doomy	dpc1 do you mean in terms of creating a beginner-friendly rust intro?
2018-09-23 21:19:08	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 21:19:11	Lumpio-	Is there a finished GUI library for Rust yet..?
2018-09-23 21:19:25	doomy	the age old question Lumpio-
2018-09-23 21:19:29	Lumpio-	heh
2018-09-23 21:19:31	Shcmeckinger	rayon_test\src\main.rs rayon_test\benches\my_benchmark.rs
2018-09-23 21:19:42	Lumpio-	dpc1: You can always just ignore everybody else's opinions and use your own
2018-09-23 21:19:51	Lumpio-	Whoever reads your stuff can form their own opinions when they're knowledgeable enough
2018-09-23 21:19:57	dpc1	doomy: no i mean in terms of gathering opinion whether it is a good first language or not
2018-09-23 21:19:58	Wolvereness	Shcmeckinger: so, I'm hoping someone will correct me if I'm wrong, but you don't `extern crate SOME_CRATE_WITH_MAIN_RS;`
2018-09-23 21:20:06	dpc1	Lumpio-: yes you can but not when your goal is to gather opinion xD
2018-09-23 21:20:08	doomy	Oh, that's understandable.
2018-09-23 21:20:16	Lumpio-	I mean at the start it's more important to learn what a variable is not whether camelCase is objectively superior to snake_case
2018-09-23 21:20:16	Wolvereness	Shcmeckinger: you would use a lib.rs if you expect to use `extern crate`
2018-09-23 21:20:30	<--	martin2 (martin@moz-o1f82l.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-23 21:20:37	<--	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has quit (Quit: toodles!)
2018-09-23 21:20:49	Shcmeckinger	Is there a way this works with a main.rs
2018-09-23 21:20:57	doomy	though you could argue that learning control flow is more important that understanding memory management, etc
2018-09-23 21:21:06	Lumpio-	You can have both can't you
2018-09-23 21:21:08	doomy	but I understand the sentiment
2018-09-23 21:21:25	-->	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has joined #rust-beginners
2018-09-23 21:21:28	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 21:21:30	tomte	well, I have to go to sleep - tackle more rust tomorrow...
2018-09-23 21:21:32	Wolvereness	Shcmeckinger: Try `bin/rayon_test.rs` for only your main function
2018-09-23 21:21:46	doomy	hmm, as a beginner I would be totally confused by memory management but if it was explained in a better way maybe it would be fine
2018-09-23 21:21:55	doomy	good luck tomte!  goodnight
2018-09-23 21:21:59	Shcmeckinger	Yeah with lib it works
2018-09-23 21:22:16	Shcmeckinger	but thats pretty dumb
2018-09-23 21:22:19	<--	huddler (Mibbit@moz-rhbdqg.priv.bahnhof.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 21:22:25	Lumpio-	You can skip references almost completely too... but then you lose all the good parts of Rust
2018-09-23 21:22:31	dpc1	learning C doesn't mean you have to jump into memory management directly. 
2018-09-23 21:22:36	<--	shiro (Thunderbird@moz-i132lq.studentenwerk-goettingen.de) has quit (Client exited)
2018-09-23 21:22:40	Wolvereness	Shcmeckinger: it doesn't make sense to `extern crate` an executable though
2018-09-23 21:23:03	Shcmeckinger	Yeah but is there another way?
2018-09-23 21:23:27	<--	siddhartharao17 (siddharthar@moz-28abl8.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-23 21:23:45	doomy	that's very true, but sooner or later memory management will come up.  though instead of seeing it as "unlearnable to new people" maybe it's just never been properly accessible through good explaination
2018-09-23 21:23:51	Lumpio-	The other way is to put your tests in main.rs I suppose
2018-09-23 21:23:55	Lumpio-	You can do that, right?
2018-09-23 21:24:13	Wolvereness	Shcmeckinger: putting the main function in `bin/rayon_test.rs` will behave like your current methodology as far as compilation goes
2018-09-23 21:24:48	Wolvereness	Shcmeckinger: it makes a rayon_test binary just like using `main.rs` does
2018-09-23 21:24:48	-->	JAlbers (jalbers@moz-j5e4oh.pd3l.fnbr.100a.2600.IP) has joined #rust-beginners
2018-09-23 21:26:27	Wolvereness	Shcmeckinger: but, pretty sure that a binary executable isn't an applicable `extern crate` target
2018-09-23 21:26:31	dpc1	doomy: it does. people get confused with pointers a lot. but there is no difference. even if C is their 2nd or 3rd language they'll still be confused by it
2018-09-23 21:26:37	Wolvereness	Shcmeckinger: at all that is
2018-09-23 21:27:24	Wolvereness	Shcmeckinger: https://github.com/rust-lang/cargo/issues/4316 - reading on changing this
2018-09-23 21:27:31	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-23 21:27:39	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 21:28:27	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-23 21:29:19	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:29:21	Shcmeckinger	I found out it works best if I have everything in lib.rs
2018-09-23 21:29:29	Shcmeckinger	and only my main in main.rs
2018-09-23 21:29:36	dpc1	yeah that's one way
2018-09-23 21:29:41	<--	mipli (mipli@moz-20q8jc.3.getinternet.no) has quit (Quit: WeeChat 2.2)
2018-09-23 21:29:42	Shcmeckinger	that I dont have to edit cargo.toml
2018-09-23 21:29:47	Shcmeckinger	then*
2018-09-23 21:30:06	Wolvereness	Shcmeckinger: I highly recommend putting it into `bin/rayon_test.rs` instead of `main.rs`
2018-09-23 21:30:18	<--	JAlbers (jalbers@moz-j5e4oh.pd3l.fnbr.100a.2600.IP) has quit (Connection closed)
2018-09-23 21:30:19	Shcmeckinger	Whats the advantage?
2018-09-23 21:31:09	Wolvereness	Shcmeckinger: tooling is one; it's had headaches for me, especially the doc tool.
2018-09-23 21:31:46	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 21:32:05	Shcmeckinger	Oh and could it be that in my example lto + tur optimizes the coll function away?
2018-09-23 21:32:16	Shcmeckinger	lto = true*
2018-09-23 21:32:29	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-23 21:32:53	Wolvereness	Shcmeckinger: That's a more advanced study than I'm prepared to comment on
2018-09-23 21:33:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 21:33:25	Shcmeckinger	criterion reports that coll takes on average 0ps to execute
2018-09-23 21:33:45	Wolvereness	Shcmeckinger: sounds like it's staticly determined...
2018-09-23 21:34:00	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 21:34:40	Wolvereness	Shcmeckinger: In fairness, if the compiler can optimize your entire problem-space to be O(0), it sounds like a huge win at runtime
2018-09-23 21:37:13	<--	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 21:37:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:38:14	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:38:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 21:41:01	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 21:41:01	<--	masterm (masterm@moz-vdc3fa.pl) has quit (Connection closed)
2018-09-23 21:41:09	dpc1	O(0) :O
2018-09-23 21:41:42	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 21:42:10	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-23 21:43:09	<--	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:43:22	Moongoodboy{K}	Wolvereness :D
2018-09-23 21:43:58	-->	mr_boo (Mibbit@moz-a6f.9te.17.201.IP) has joined #rust-beginners
2018-09-23 21:45:02	Shcmeckinger	I think its nice that the function is O(0)
2018-09-23 21:45:19	Shcmeckinger	But that only works if every parameter is known at compiletime
2018-09-23 21:45:29	dpc1	eval: foo() {}; foo(1)
2018-09-23 21:45:31	--	Notice(eval): error: expected one of `.`, `;`, `?`, `}`, or an operator, found `{`
2018-09-23 21:45:33	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=b6ea8b1984d9bf0dbf993e197fede7d7&version=stable&mode=debug
2018-09-23 21:45:40	dpc1	eval: fn foo() {}; foo(1)
2018-09-23 21:45:42	--	Notice(eval): error[E0061]: this function takes 0 parameters but 1 parameter was supplied
2018-09-23 21:45:44	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=d2c2ebe43237675a3a0595987858b1ae&version=stable&mode=debug
2018-09-23 21:45:46	dpc1	eval: fn foo() {}; foo()
2018-09-23 21:45:49	--	Notice(eval): ()
2018-09-23 21:46:03	<--	jihi (jih@moz-lvuc0j.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-23 21:46:13	Shcmeckinger	eval: fn foo(_: i32) {}; foo(1)
2018-09-23 21:46:16	--	Notice(eval): ()
2018-09-23 21:46:45	 *	dpc1 shrugs
2018-09-23 21:47:03	mr_boo	how easy it could be to program in Rust making it be testing mocking friendly, what patterns do you recommend? Generics all the way ? and it is possible to write some code with #[cfg(not(test))] to not run some code block if testing ?
2018-09-23 21:47:07	-->	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-23 21:47:32	Wolvereness	Shcmeckinger: read the inputs from a file into memory
2018-09-23 21:48:03	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-23 21:48:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:48:54	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 21:49:11	<--	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Connection closed)
2018-09-23 21:49:17	-->	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-23 21:49:50	-->	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has joined #rust-beginners
2018-09-23 21:51:56	<--	xet7 (xet7@moz-9snt4f.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-23 21:53:09	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:53:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 21:54:21	-->	kermit (Mibbit@moz-34q.p5b.243.188.IP) has joined #rust-beginners
2018-09-23 21:54:37	<--	justsomequestions (gumble@moz-fpalsr.pools.vodafone-ip.de) has quit (Connection closed)
2018-09-23 21:54:45	-->	justsomequestions (gumble@moz-fpalsr.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-23 21:54:46	<--	kermit (Mibbit@moz-34q.p5b.243.188.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 21:55:49	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:56:08	pixlark	So I have an array of `Option`s and I want to initialize them all to `Option::None`, but it's telling me that I can't do that, because the type associated with Option doesn't have the copy trait implemented. But I'm not initializing it to that, so it shouldn't matter...? Relevant code: https://pastebin.com/raw/iU48NDqp
2018-09-23 21:56:19	-->	xet7 (xet7@moz-9171c7.rev.dnainternet.fi) has joined #rust-beginners
2018-09-23 21:57:51	Shcmeckinger	Wolvereness I used criterion::black_box
2018-09-23 21:58:24	Shcmeckinger	now the 0 ps function takes 5 ns and the 2.5 ns function still takes 2.5 ns
2018-09-23 21:58:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 21:59:07	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 21:59:16	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 22:00:18	mr_boo	pixlark: I need's to copy the initialized value into all members of Array
2018-09-23 22:00:43	pixlark	But it's just copying the None, right? Which doesn't have anything associated with it
2018-09-23 22:01:21	Shcmeckinger	You could use unsafe and intilaize it with "unsafe { std::mem::zeroed }"
2018-09-23 22:01:27	Shcmeckinger	()
2018-09-23 22:01:36	pixlark	seems like overkill lol
2018-09-23 22:02:03	Shcmeckinger	whats in the option?
2018-09-23 22:02:20	mr_boo	pixlark: syntatically you could initialize with Some(Texture) too
2018-09-23 22:02:21	pixlark	Texture from sdl2. Doesn't have a copy trait implemented
2018-09-23 22:03:14	pixlark	Yeah but each texture has to be created, so why would I create a bunch of empty textures just to initialize it, and then overwrite them one by one as I load in images from disk?
2018-09-23 22:03:14	Shcmeckinger	sdl2::render::Texture?
2018-09-23 22:03:17	pixlark	yeah
2018-09-23 22:03:20	mr_boo	pixlark: try using Vec instead of array ?
2018-09-23 22:03:33	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:03:45	pixlark	I guess, but it never needs to resize or anything
2018-09-23 22:04:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 22:04:17	Wolvereness	pixlark: Option implements default
2018-09-23 22:04:45	<--	oms (oms@moz-g4k98l.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-23 22:05:01	-->	agurk (agurk@moz-ihru49.dhcp.as2116.net) has joined #rust-beginners
2018-09-23 22:05:01	Wolvereness	I guess https://doc.rust-lang.org/std/vec/struct.Vec.html#method.resize_default needs standardization?
2018-09-23 22:05:34	-->	DaQue (Mutter@moz-vjaeld.4ap6.qokt.0001.2600.IP) has joined #rust-beginners
2018-09-23 22:06:35	pixlark	Is there really no way to just initalize a normal array with Nones? If not I guess I'll use Vec or something
2018-09-23 22:06:35	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 22:06:54	Wolvereness	pixlark: There should be
2018-09-23 22:07:12	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 22:07:28	dpc1	eval: let x = [None, 8]; x 
2018-09-23 22:07:30	mr_boo	pixlark: I also got this problem some time ago and changed to Vec despite fixed sized arrays being fine
2018-09-23 22:07:31	--	Notice(eval): error[E0308]: mismatched types
2018-09-23 22:07:34	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=933aa366dbe12f16bb178edd733de77e&version=stable&mode=debug
2018-09-23 22:07:37	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-23 22:07:44	<--	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 22:07:44	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 22:07:48	Wolvereness	pixlark: if it's an array, just use Default::default()
2018-09-23 22:07:58	Shcmeckinger	If you array is 32 elemts or less you can use Default::default();
2018-09-23 22:08:09	Shcmeckinger	elements*
2018-09-23 22:08:09	<--	DaQue (Mutter@moz-vjaeld.4ap6.qokt.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-23 22:08:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:08:26	pixlark	and that would fill it with Nones? strange
2018-09-23 22:08:34	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-23 22:08:44	Shcmeckinger	Yeah the default of option is None
2018-09-23 22:08:57	dpc1	eval: let x = [None; 8]; x 
2018-09-23 22:08:58	Wolvereness	pixlark: it's not really strange when you consider Option<T> implements default for all T, and arrays implement default where T: default
2018-09-23 22:08:59	--	Notice(eval): error[E0282]: type annotations needed
2018-09-23 22:09:01	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=a77e158e4b2a7bb63e502b3d37bd53ed&version=stable&mode=debug
2018-09-23 22:09:06	GreenJello	let xs: [Option<u32>; 10] = Default::default();
2018-09-23 22:09:09	agurk	is there anything like .map_or for Option that doesn't move the value of the option? i'd like to just borrow the value and use that, but .map_or takes ownership of the Option
2018-09-23 22:09:16	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 22:09:17	dpc1	eval: let x: Option<u32> = [None; 8]; x 
2018-09-23 22:09:20	--	Notice(eval): error[E0308]: mismatched types
2018-09-23 22:09:22	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=1eed2e8fbf424a5588ddf37b1792a0ec&version=stable&mode=debug
2018-09-23 22:09:49	dpc1	eval: let x: [Option<u32>; N] = [None; 8]; x 
2018-09-23 22:09:52	--	Notice(eval): error[E0425]: cannot find value `N` in this scope
2018-09-23 22:09:54	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=8a6b744514097d9c2026547cad790924&version=stable&mode=debug
2018-09-23 22:09:59	dpc1	eval: let x: [Option<u32>; 8] = [None; 8]; x 
2018-09-23 22:10:02	--	Notice(eval): [None, None, None, None, None, None, None, None]
2018-09-23 22:10:47	dpc1	agurk: can you paste soe code
2018-09-23 22:10:47	pixlark	Hang on so would I say [[Option::default(); 6]; 2]? That doesn't seem to work either
2018-09-23 22:10:56	Wolvereness	eval: let x: [*mut usize; 32] = Default::default();
2018-09-23 22:10:59	--	Notice(eval): error[E0277]: the trait bound `*mut usize: std::default::Default` is not satisfied
2018-09-23 22:11:01	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=4712c740af257820b0a4526168d2893b&version=stable&mode=debug
2018-09-23 22:11:03	-->	cherukuri (Mibbit@moz-u3o.aa2.118.76.IP) has joined #rust-beginners
2018-09-23 22:11:11	Wolvereness	eval: let x: [Option<*mut usize>; 32] = Default::default();
2018-09-23 22:11:14	--	Notice(eval): ()
2018-09-23 22:11:28	GreenJello	agurk, option.as_ref().map_or(
2018-09-23 22:11:42	agurk	GreenJello, thanks!
2018-09-23 22:11:53	GreenJello	agurk, as_ref converts from Option<T> to Option<&T>
2018-09-23 22:11:59	Wolvereness	pixlark: why doesn't that work?
2018-09-23 22:12:11	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:12:28	pixlark	Same error. Says that Texture doesn't implement Copy
2018-09-23 22:12:29	Wolvereness	eval: let x: [[Option<*mut usize>; 32]; 32] = Default::default();
2018-09-23 22:12:32	--	Notice(eval): ()
2018-09-23 22:12:46	pixlark	The exact error code is E0277
2018-09-23 22:12:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 22:13:08	Wolvereness	pixlark: did you see what I just put?
2018-09-23 22:13:23	pixlark	Let me try that...
2018-09-23 22:13:52	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:14:38	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 22:14:42	pixlark	ok yeah I just put Default::default() by itself in the initializer and that seems to work. Thanks :)
2018-09-23 22:15:31	<--	bluss (bluss@moz-1ikcch.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:16:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 22:17:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:18:15	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 22:19:17	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-23 22:22:27	-->	dabukalam (dabukalam@moz-c6ik87.abukalam.com) has joined #rust-beginners
2018-09-23 22:23:12	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-23 22:23:32	<--	xet7 (xet7@moz-9171c7.rev.dnainternet.fi) has quit (The TLS connection was non-properly terminated.)
2018-09-23 22:23:45	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:23:47	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-23 22:24:08	-->	martin2 (martin@moz-1ha664.anteldata.net.uy) has joined #rust-beginners
2018-09-23 22:25:01	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-23 22:27:02	<--	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 22:27:13	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:27:14	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 22:28:15	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-23 22:29:37	<--	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-23 22:30:01	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-23 22:31:13	-->	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-23 22:31:51	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 22:32:56	<--	Shcmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 22:33:27	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 22:34:35	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-23 22:34:53	<--	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 22:35:14	<--	justsomequestions (gumble@moz-fpalsr.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2018-09-23 22:36:17	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 22:37:41	-->	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has joined #rust-beginners
2018-09-23 22:37:58	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-23 22:42:34	<--	cherukuri (Mibbit@moz-u3o.aa2.118.76.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 22:44:13	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 22:45:22	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-23 22:48:00	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-23 22:48:05	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 22:48:15	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-23 22:52:08	-->	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-23 22:52:15	<--	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 22:52:48	-->	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-23 22:53:03	<--	mlindner (mlindner@moz-k8som4.ca.comcast.net) has quit (Connection closed)
2018-09-23 22:53:07	-->	mlindner (mlindner@moz-k8som4.ca.comcast.net) has joined #rust-beginners
2018-09-23 22:53:14	<--	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 22:55:04	DaQue	Hmmm wouldn’t you have to. Have an array of enums that has a None state?  Newbie here 
2018-09-23 22:55:45	-->	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-23 22:56:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 22:57:25	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-23 22:57:29	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Connection closed)
2018-09-23 23:00:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 23:01:19	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 23:02:12	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (The TLS connection was non-properly terminated.)
2018-09-23 23:03:01	<--	mandeep_ (mandeep@moz-qt0dau.dyn.columbia.edu) has quit (Quit: Leaving)
2018-09-23 23:03:13	-->	Renoug (Mibbit@moz-j75.9do.2.117.IP) has joined #rust-beginners
2018-09-23 23:04:53	mr_boo	guys have created my first #[bench] but after running got no results: test tests::battle_turn_bench ... bench:           0 ns/iter (+/- 0)
2018-09-23 23:04:54	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 23:05:10	mr_boo	how many times does it run ?
2018-09-23 23:05:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 23:05:58	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-23 23:06:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 23:06:57	Orez	if i have a function that can either succeed and return Foo, fail and return None, OR acknowledge that it's the wrong tool for the job and return some third value... is it weird to create a custom enum for the return type { Some(T), WrongTool, None }, or should i just use a Result<Option<T>, ()>?
2018-09-23 23:07:28	Orez	(or Option<Result<T, ()>>)
2018-09-23 23:07:34	@mbrubeck	mr_boo: The number of times it runs is dynamic, depending on how long a single iteration taks
2018-09-23 23:07:52	@mbrubeck	mr_boo: Are you returning a value from your `iter` closure, to help prevent it from getting optimized out?
2018-09-23 23:08:30	<--	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-23 23:08:48	@mbrubeck	Orez: It's not too weird, but `Result` and `Option` have the advantage that callers can use all their built-in methods and `?` syntax to manipulate them.
2018-09-23 23:09:45	LogicAside	What is the accepted way to take a vec![0u8; 4] and turn it into a usize? Assuming it was binary before? eg b'\x00\x01$\xf8'
2018-09-23 23:10:45	LogicAside	Rust stable, btw.
2018-09-23 23:11:01	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 23:11:12	@mbrubeck	LogicAside: You can manually bit-twiddle, or use a crate like https://crates.io/crates/byteorder
2018-09-23 23:11:26	@mbrubeck	until `from_be_bytes` and friends are stabilized https://doc.rust-lang.org/nightly/std/primitive.usize.html#method.from_be_bytes
2018-09-23 23:11:53	Orez	mbrubeck: good point, thanks.
2018-09-23 23:11:56	dpc1	Orez: you can crate an enum that represents those 3 states 
2018-09-23 23:12:06	dpc1	if you don't want to use Result/option or a combination of both
2018-09-23 23:12:35	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-23 23:12:53	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 23:12:54	@mbrubeck	by "manually bit-twiddle" I mean things like `(v[0] as usize << 3) | (v[1] as usize << 2) | (v[2] as usize << 1) | (v[3] as usize)`
2018-09-23 23:13:02	Orez	dpc1: i'm not familiar with crating an enum
2018-09-23 23:13:18	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-23 23:13:19	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-23 23:13:28	@mbrubeck	Orez: I think dpc1 means like the "custom enum" you mentioned in your first message
2018-09-23 23:13:43	Orez	ah ok
2018-09-23 23:14:48	<--	danecando (danecando@moz-esjfhm.sdba.4jle.1700.2600.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-23 23:14:55	dpc1	ah typed crate instead of create xD
2018-09-23 23:15:13	LogicAside	mbrubeck, I actually couldn't get byteorder to do it, but I'm pretty new. Could you point me at the docs related to my use case?
2018-09-23 23:15:59	@mbrubeck	LogicAside: You can use https://docs.rs/byteorder/1.2.6/byteorder/trait.ReadBytesExt.html#method.read_u32
2018-09-23 23:16:30	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 23:16:37	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-23 23:16:45	LogicAside	Thanks, I'll look into it.
2018-09-23 23:17:03	-->	JAlbers (jalbers@moz-7sil1r.mo.charter.com) has joined #rust-beginners
2018-09-23 23:17:58	@mbrubeck	LogicAside: Here's an example https://play.rust-lang.org/?gist=2fc41addbdcaca7653957feb7b6a33a0&version=stable&mode=debug&edition=2015
2018-09-23 23:18:05	 *	mbrubeck (Not sure if you want it bigendian or littleendian
2018-09-23 23:18:06	@mbrubeck	)
2018-09-23 23:18:47	<--	Renoug (Mibbit@moz-j75.9do.2.117.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-23 23:22:11	<--	saimen (saimen@moz-puh.c0t.183.46.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 23:23:10	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-23 23:23:37	Orez	ooh i guess my other option would be to have the custom enum be ThisFnError {Invalid, WrongTool}, and then the fn itself would return Result<T, ThisFnError>. drop the Option entirely, and treat the None case as its own error
2018-09-23 23:24:08	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 23:28:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 23:29:16	<--	quartz55 (quartz@moz-56mpj6.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 23:29:23	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-23 23:29:34	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-23 23:29:51	-->	jon (jon@moz-pt8rd8.customer.cdi.no) has joined #rust-beginners
2018-09-23 23:31:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 23:33:30	<--	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 23:37:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 23:38:20	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 23:38:21	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 23:39:04	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-23 23:39:21	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 23:41:02	<--	DSNTravellerbot-M (dsn-travel@moz-522p1u.matrix.org) has left #rust-beginners ("User left")
2018-09-23 23:41:46	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 23:42:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-23 23:44:27	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 23:45:04	<--	Orez (Orez@moz-mov3sf.res.rr.com) has left #rust-beginners
2018-09-23 23:46:30	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-23 23:48:58	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 23:49:44	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Connection closed)
2018-09-23 23:49:45	-->	insidious (insidious@moz-ed9.9c4.198.134.IP) has joined #rust-beginners
2018-09-23 23:50:05	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-23 23:51:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 23:52:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 23:52:44	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-23 23:54:07	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-23 23:55:00	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Client exited)
2018-09-23 23:56:11	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-23 23:56:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-23 23:56:41	<--	enterprisey (enterprisey@moz-fjjhvf.cit.cornell.edu) has quit (Connection closed)
2018-09-23 23:58:49	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-23 23:58:53	-->	danecando (danecando@moz-8t047t.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-23 23:59:39	-->	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has joined #rust-beginners
2018-09-23 23:59:43	<--	ufobat___ (Martin@moz-6um5m1.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-24 00:00:13	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 00:00:35	<--	ventos (ventos@moz-991isa.coding4coffee.org) has quit (Quit: Servus!)
2018-09-24 00:00:35	<--	PyroLagus (PyroLagus@moz-6a3juu.on.coding4coffee.org) has quit (Quit: ZNC / WeeChat)
2018-09-24 00:01:45	-->	himi (sjjf@moz-psjk59.anu.edu.au) has joined #rust-beginners
2018-09-24 00:02:02	-->	PyroLagus (PyroLagus@moz-6a3juu.on.coding4coffee.org) has joined #rust-beginners
2018-09-24 00:03:29	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 00:04:03	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-24 00:04:36	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 00:04:59	-->	ventos (ventos@moz-hb2ubo.coding4.coffee) has joined #rust-beginners
2018-09-24 00:07:29	-->	vent0s (ventos@moz-21pspc.bplh.9aoh.04f8.2a01.IP) has joined #rust-beginners
2018-09-24 00:08:33	<--	agurk (agurk@moz-ihru49.dhcp.as2116.net) has quit (Connection closed)
2018-09-24 00:08:44	<--	vent0s (ventos@moz-21pspc.bplh.9aoh.04f8.2a01.IP) has quit (Quit: Servus!)
2018-09-24 00:09:02	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 00:09:30	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 00:09:33	<--	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-24 00:10:07	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-24 00:10:43	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-24 00:15:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 00:16:41	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-24 00:16:55	<--	jon (jon@moz-pt8rd8.customer.cdi.no) has quit (Quit: leaving)
2018-09-24 00:18:11	<--	mr_boo (Mibbit@moz-a6f.9te.17.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 00:18:11	-->	Orez (Orez@moz-mov3sf.res.rr.com) has joined #rust-beginners
2018-09-24 00:19:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 00:21:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 00:23:16	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-24 00:23:45	<--	JAlbers (jalbers@moz-7sil1r.mo.charter.com) has quit (Connection closed)
2018-09-24 00:25:26	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 00:26:30	-->	Fr0stBit (theartist@moz-o690ud.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-24 00:27:21	<--	Fr0stBit (theartist@moz-o690ud.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 00:27:31	<--	liquidnight (marcus@moz-jhhdfc.u1it.q0dc.0c23.2a01.IP) has quit (Connection closed)
2018-09-24 00:27:31	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-24 00:27:50	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-24 00:27:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 00:28:32	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-24 00:28:38	-->	Fr0stBit (theartist@moz-o690ud.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-24 00:29:34	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Connection closed)
2018-09-24 00:29:45	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 00:31:46	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-24 00:31:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 00:32:09	<--	danecando (danecando@moz-8t047t.sdba.4jle.1700.2600.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-24 00:32:34	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Connection closed)
2018-09-24 00:32:45	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 00:34:52	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 00:37:11	-->	mib_yhj6jh (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-24 00:38:23	mib_yhj6jh	I need to "move" a mpsc::Sender into a closure so I'm cloning "sender.clone()" and moving it in "move|| {}" problem is I also have a &str in scope and compiler is complaining it doesnt have a static lifetime. anyway to exclude certain bindings from the move?
2018-09-24 00:38:40	<--	AtumT (IRC@moz-niuqp7.gvt.net.br) has quit (Client exited)
2018-09-24 00:39:06	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 00:41:40	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-24 00:43:16	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-24 00:45:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 00:46:10	<--	mib_yhj6jh (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 00:48:46	-->	Lisa1996 (Mibbit@moz-m66.v60.252.185.IP) has joined #rust-beginners
2018-09-24 00:49:05	Lisa1996	Hi
2018-09-24 00:49:19	-->	cdr255 (cdr255@moz-1bermg.5rhd.p3se.0547.2601.IP) has joined #rust-beginners
2018-09-24 00:49:44	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-24 00:49:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 00:50:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 00:50:36	-->	neverfox_ (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-24 00:51:07	<--	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 00:54:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 00:57:23	-->	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-24 01:00:26	<--	udoprog (quassel@moz-rgtfqs.bc.googleusercontent.com) has quit (Connection closed)
2018-09-24 01:00:29	-->	udoprog (quassel@moz-rgtfqs.bc.googleusercontent.com) has joined #rust-beginners
2018-09-24 01:00:44	<--	cdr255 (cdr255@moz-1bermg.5rhd.p3se.0547.2601.IP) has quit (Connection closed)
2018-09-24 01:01:13	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 01:02:34	-->	cdr255 (cdr255@moz-1bermg.5rhd.p3se.0547.2601.IP) has joined #rust-beginners
2018-09-24 01:02:41	<--	Lisa1996 (Mibbit@moz-m66.v60.252.185.IP) has quit (G-Lined: no spamming here)
2018-09-24 01:05:06	<--	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-24 01:05:15	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 01:05:18	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-24 01:05:26	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-24 01:05:29	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 01:06:33	-->	pudgetta (Mibbit@moz-kphh10.res.rr.com) has joined #rust-beginners
2018-09-24 01:09:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:10:31	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 01:11:17	<--	pudgetta (Mibbit@moz-kphh10.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 01:11:25	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-24 01:13:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 01:14:27	<--	Fr0stBit (theartist@moz-o690ud.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 01:14:32	-->	Fr0stBit (theartist@moz-o690ud.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-24 01:14:33	<--	Fr0stBit (theartist@moz-o690ud.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 01:14:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:15:41	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 01:15:53	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 01:16:36	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:17:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 01:18:06	-->	mib_shm7bk (Mibbit@moz-pjj.36v.240.104.IP) has joined #rust-beginners
2018-09-24 01:18:55	<--	mib_shm7bk (Mibbit@moz-pjj.36v.240.104.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 01:19:10	-->	Fr0stBit (theartist@moz-o690ud.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-24 01:19:21	<--	Fr0stBit (theartist@moz-o690ud.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 01:19:31	<--	doomy (doomy@moz-95uqmu.static.chtrptr.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 01:20:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:21:11	-->	Fr0stBit (theartist@moz-2g19h5.okeanos.grnet.gr) has joined #rust-beginners
2018-09-24 01:21:29	Fr0stBit	/j/clo
2018-09-24 01:21:37	Fr0stBit	sorry wrong window
2018-09-24 01:21:42	<--	Fr0stBit (theartist@moz-2g19h5.okeanos.grnet.gr) has left #rust-beginners ("WeeChat 2.2")
2018-09-24 01:21:48	-->	Fr0stBit (theartist@moz-2g19h5.okeanos.grnet.gr) has joined #rust-beginners
2018-09-24 01:24:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 01:28:26	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 01:28:29	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:28:29	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-24 01:28:55	-->	zmt99 (zmt@moz-e7i9vf.g40m.cfl6.1700.2600.IP) has joined #rust-beginners
2018-09-24 01:29:48	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Quit: WeeChat 2.2)
2018-09-24 01:32:34	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-24 01:33:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 01:37:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:38:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 01:41:55	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-24 01:43:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:49:37	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 01:50:25	-->	yjv (yjv@moz-vl6hhm.fios.verizon.net) has joined #rust-beginners
2018-09-24 01:50:25	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 01:55:25	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:55:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Connection closed)
2018-09-24 01:57:47	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 01:58:14	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 01:58:49	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 01:58:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 02:00:35	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 02:00:39	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 02:00:53	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-24 02:02:43	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 02:02:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 02:04:41	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 02:06:22	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-24 02:09:02	-->	pachuco (Mibbit@moz-b9g.3s9.81.73.IP) has joined #rust-beginners
2018-09-24 02:09:03	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-24 02:09:57	<--	pachuco (Mibbit@moz-b9g.3s9.81.73.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 02:09:58	-->	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has joined #rust-beginners
2018-09-24 02:10:40	-->	kuri (Mibbit@moz-2591bj.aapt.com.au) has joined #rust-beginners
2018-09-24 02:11:50	kuri	Hello! What is the correct way to create an instance of a struct and push the struct into two different vectors?
2018-09-24 02:15:09	<--	turbobob (turbobob@moz-tuvq7p.ca.comcast.net) has quit (Quit: Leaving)
2018-09-24 02:15:12	-->	turbobob (turbobob@moz-tuvq7p.ca.comcast.net) has joined #rust-beginners
2018-09-24 02:15:35	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-24 02:16:29	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Connection closed)
2018-09-24 02:17:18	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-24 02:17:37	-->	enterprisey (enterprisey@moz-04c750.cit.cornell.edu) has joined #rust-beginners
2018-09-24 02:18:01	-->	starblue (juergen@moz-3ecfc8.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-24 02:18:34	<--	starblue1 (juergen@moz-dld9uf.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-24 02:19:54	-->	cubetastic (Thunderbird@moz-5vtqq8.8j60.o2m6.0204.2405.IP) has joined #rust-beginners
2018-09-24 02:23:16	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-24 02:23:32	-->	yoshi (Mibbit@moz-ni96pq.epm.net.co) has joined #rust-beginners
2018-09-24 02:23:58	<--	yoshi (Mibbit@moz-ni96pq.epm.net.co) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 02:26:23	-->	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-24 02:30:58	-->	mib_u2n1dv (Mibbit@moz-dlo13f.abhsia.telus.net) has joined #rust-beginners
2018-09-24 02:31:01	-->	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has joined #rust-beginners
2018-09-24 02:31:53	<--	mib_u2n1dv (Mibbit@moz-dlo13f.abhsia.telus.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 02:32:29	<--	jazzpi (jazzpi@moz-i6l8pk.space) has quit (Quit: ZNC - http://znc.in)
2018-09-24 02:32:40	-->	castilho (castilho@moz-8akogl.s0tm.pvhs.014c.2804.IP) has joined #rust-beginners
2018-09-24 02:34:05	-->	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has joined #rust-beginners
2018-09-24 02:34:20	<--	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 02:36:43	<--	castilho (castilho@moz-8akogl.s0tm.pvhs.014c.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 02:37:19	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-24 02:37:46	emerent	kuri: uh, create two structs and push each into a vec?
2018-09-24 02:38:05	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-24 02:38:11	<--	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has quit (Quit: I've fallen into /dev/null and can't get out!)
2018-09-24 02:39:37	-->	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has joined #rust-beginners
2018-09-24 02:40:03	<--	zmt99 (zmt@moz-e7i9vf.g40m.cfl6.1700.2600.IP) has quit (Quit: Leaving)
2018-09-24 02:40:21	<--	weeji (jihi@moz-eqru67.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-24 02:41:21	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 02:41:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 02:42:08	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 02:43:11	<--	Dariost_ (Dariost@moz-euo.lj4.20.151.IP) has quit (Client exited)
2018-09-24 02:44:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 02:44:28	<--	martin2 (martin@moz-1ha664.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-24 02:48:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 02:53:04	-->	weeji (jihi@moz-96eiq0.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-24 02:54:48	julius	So https://doc.rust-lang.org/std/path/struct.Path.html#method.to_str returns an option. I'm using it in a function that returns Result<T, failure::Error>. I'd like to return an Err if to_str was None, but I'm unsure what to put into that Err. Do I have to define a new error type?
2018-09-24 02:54:59	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 02:55:49	kuri	emerent: pushing the struct into a vec will move the object into the vec, the second push will not compile
2018-09-24 02:55:54	<--	ryfbhkuh (hzdeppax@moz-ufpnbh.1uqv.7nqa.0642.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 02:56:44	kuri	emerent: I'm specifically trying to have the same object exist in two vectors
2018-09-24 02:57:08	kuri	or is that not the correct way to do it in rust?
2018-09-24 02:57:28	emerent	shared ownership? You could do that with Rc
2018-09-24 02:57:36	emerent	but I can't tell if that's the right thing for you
2018-09-24 02:57:49	emerent	Rc = reference counted smart pointer
2018-09-24 02:59:09	-->	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has joined #rust-beginners
2018-09-24 02:59:17	kuri	here's a minimum sample of what I'm trying to do: https://play.rust-lang.org/?gist=b85214a3509cd5fd8f96660df04b3ab9&version=stable&mode=debug&edition=2015
2018-09-24 03:00:05	GreenJello	kuri, v1.push(rcobj.clone()); v2.push(rcobj);
2018-09-24 03:01:02	GreenJello	kuri, the Rc is still a struct that can only have one owner, but you can make another Rc that points to the same struct
2018-09-24 03:01:06	kuri	will cloning ensure that the underlying test structs are the same?
2018-09-24 03:01:19	kuri	GreenJello: Ok! that makes sense now
2018-09-24 03:01:22	<--	jeramyRR (jeramyRR@moz-in876q.gtpn.ue3c.0601.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 03:01:30	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-24 03:02:09	GreenJello	kuri, depending on the situation, you can alternatively store references in a Vec, which is much cheaper
2018-09-24 03:05:33	<--	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 03:06:40	<--	neverfox_ (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-24 03:06:48	-->	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-24 03:07:58	-->	ryfbhkuh (hzdeppax@moz-ru72kb.1uqv.7nqa.0642.2601.IP) has joined #rust-beginners
2018-09-24 03:09:50	-->	neal_ (neal@moz-ej61pe.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-24 03:12:45	<--	neal (neal@moz-5qr9tu.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-24 03:14:04	<--	gregg (greg@moz-00mjdg.gnumpf.tk) has quit (Connection closed)
2018-09-24 03:15:46	-->	JAlbers (jalbers@moz-abjt9p.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-24 03:19:19	-->	devurandomish (textual@moz-0lp.efj.147.47.IP) has joined #rust-beginners
2018-09-24 03:19:30	-->	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has joined #rust-beginners
2018-09-24 03:20:12	devurandomish	What's the idiomatic way to write test code in rust? I've looked at the std library and ripgrep. Putting the test code in the same file as the implementation feels awkward. 
2018-09-24 03:20:28	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-24 03:21:08	-->	jeramyRR (jeramyRR@moz-ma7vko.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-24 03:21:28	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 03:22:10	Yaniel	you can put it in a separate test.rs too
2018-09-24 03:23:11	-->	castilho (castilho@moz-0ha1lo.qts8.rntc.0214.2804.IP) has joined #rust-beginners
2018-09-24 03:24:25	<--	cubetastic (Thunderbird@moz-5vtqq8.8j60.o2m6.0204.2405.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 03:27:16	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-24 03:28:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 03:29:45	-->	arctodus (uid322408@moz-skj3ml.highgate.irccloud.com) has joined #rust-beginners
2018-09-24 03:29:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 03:29:58	arctodus	Hello
2018-09-24 03:31:32	Yaniel	hi there
2018-09-24 03:32:06	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 03:33:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 03:34:47	<--	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 03:35:23	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-24 03:39:04	arctodus	So, I'm a High Schooler and I've gotten interested in programming, and it seems that Rust was voted the most loved Language by a Stack Exchange survey 
2018-09-24 03:43:02	-->	indigo747 (indigo747@moz-bgsfrb.dhcp.cruzio.com) has joined #rust-beginners
2018-09-24 03:45:25	indigo747	Hello, I think I found a very minor bug in rust nightly, and I was wondering if someone could look over my issue before I post it?
2018-09-24 03:46:05	-->	castilho_ (castilho@moz-6of.4g7.225.186.IP) has joined #rust-beginners
2018-09-24 03:48:16	<--	castilho (castilho@moz-0ha1lo.qts8.rntc.0214.2804.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 03:48:53	<--	jeramyRR (jeramyRR@moz-ma7vko.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 03:48:58	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 03:49:02	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 03:49:15	-->	subhojit777 (subhojit777@moz-rnm.g1n.225.110.IP) has joined #rust-beginners
2018-09-24 03:50:52	<--	wswartz (wswartzendr@moz-l7p4eb.ih3f.sf7d.00ae.2602.IP) has quit (Quit: Leaving)
2018-09-24 03:52:20	-->	Aaronepowerr (Aaronepower@moz-a3b.s7h.181.195.IP) has joined #rust-beginners
2018-09-24 03:52:59	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 03:53:00	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 03:54:01	-->	re-l124c41 (re-l124c41@moz-lglmk2.4kh6.ni31.0908.2a02.IP) has joined #rust-beginners
2018-09-24 03:59:49	-->	siddhartharao17 (siddharthar@moz-04rki7.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-24 04:02:13	<--	asyncsec (asyncsec@moz-af60v4.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 04:02:40	-->	martin2 (martin@moz-1ha664.anteldata.net.uy) has joined #rust-beginners
2018-09-24 04:03:27	<--	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-24 04:05:08	<--	re-l124c41 (re-l124c41@moz-lglmk2.4kh6.ni31.0908.2a02.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 04:07:50	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 04:09:45	<--	martin2 (martin@moz-1ha664.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-24 04:13:17	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-24 04:13:34	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-24 04:14:50	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 04:14:50	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 04:14:54	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Quit: WeeChat 2.2)
2018-09-24 04:14:57	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-24 04:15:06	-->	mib_h381zk (Mibbit@moz-43a.193.254.219.IP) has joined #rust-beginners
2018-09-24 04:15:14	<--	mib_h381zk (Mibbit@moz-43a.193.254.219.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 04:15:19	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 04:15:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 04:15:30	-->	Karenmi87 (Mibbit@moz-9lk.tfi.101.191.IP) has joined #rust-beginners
2018-09-24 04:15:46	Karenmi87	Hello
2018-09-24 04:15:55	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 04:16:35	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Quit: WeeChat 2.2)
2018-09-24 04:17:56	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-24 04:18:01	<--	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 04:18:08	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 04:18:19	-->	martin2 (martin@moz-1ha664.anteldata.net.uy) has joined #rust-beginners
2018-09-24 04:18:44	-->	jeramyRR (jeramyRR@moz-ma7vko.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-24 04:18:53	<--	JAlbers (jalbers@moz-abjt9p.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-24 04:19:27	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 04:21:17	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Quit: WeeChat 2.2)
2018-09-24 04:21:58	<--	siddhartharao17 (siddharthar@moz-04rki7.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 04:22:44	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 04:23:13	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 04:23:17	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Quit: WeeChat 2.2)
2018-09-24 04:24:09	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 04:24:34	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-24 04:24:57	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-24 04:24:58	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 04:26:09	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-24 04:27:00	<--	devurandomish (textual@moz-0lp.efj.147.47.IP) has quit (Client exited)
2018-09-24 04:28:12	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 04:28:19	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Quit: WeeChat 2.2)
2018-09-24 04:28:29	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 04:28:34	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Quit: WeeChat 2.2)
2018-09-24 04:28:37	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 04:28:42	<--	Karenmi87 (Mibbit@moz-9lk.tfi.101.191.IP) has quit (G-Lined: no spamming here)
2018-09-24 04:28:50	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 04:32:01	-->	siddhartharao17 (siddharthar@moz-04rki7.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-24 04:32:34	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 04:33:06	-->	ibrokemypie (conor@moz-1ud.c73.124.1.IP) has joined #rust-beginners
2018-09-24 04:33:13	<--	niconii (nicole@moz-sgidge.midco.net) has quit (Quit: leaving)
2018-09-24 04:34:01	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-24 04:34:06	<--	siddhartharao17 (siddharthar@moz-04rki7.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 04:35:06	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-24 04:38:55	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 04:41:33	<--	jeramyRR (jeramyRR@moz-ma7vko.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 04:43:04	<--	Guest4641 (nj0rd@moz-d7reb9.dip.versatel-1u1.de) has quit (Ping timeout: 121 seconds)
2018-09-24 04:43:25	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-24 04:44:52	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-24 04:45:03	-->	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has joined #rust-beginners
2018-09-24 04:46:06	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 04:49:37	<--	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 04:49:48	<--	alx741 (alx741@moz-obd.k67.178.186.IP) has quit (Client exited)
2018-09-24 04:50:55	-->	space-wizard (space-wizar@moz-en26sh.customer.broadstripe.net) has joined #rust-beginners
2018-09-24 04:53:05	-->	siddhartharao17 (siddharthar@moz-04rki7.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-24 04:54:42	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-24 04:55:50	-->	Guest4641 (nj0rd@moz-9eonkh.dip.versatel-1u1.de) has joined #rust-beginners
2018-09-24 04:57:45	<--	danysdragons (Mibbit@moz-klbge9.cable.rogers.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 04:58:28	<--	kuri (Mibbit@moz-2591bj.aapt.com.au) has quit (Ping timeout: 121 seconds)
2018-09-24 05:00:10	<--	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 05:00:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 05:03:21	<--	subhojit777 (subhojit777@moz-rnm.g1n.225.110.IP) has quit (Quit: Leaving)
2018-09-24 05:04:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 05:05:32	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-24 05:06:54	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-24 05:09:34	-->	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-24 05:15:07	ibrokemypie	what would be the best way to parse a bash script?
2018-09-24 05:15:29	ibrokemypie	specifically to read variables, modify them and then write them back
2018-09-24 05:15:44	ibrokemypie	variables and functions
2018-09-24 05:17:40	Wolvereness	!xy ibrokemypie
2018-09-24 05:17:45	Wolvereness	!xy @ibrokemypie
2018-09-24 05:17:45	+rustbot	ibrokemypie: The XY problem is asking about the solution you've attempted, when there may be a better approach to your problem if you explain it in full. More at https://meta.stackexchange.com/a/66378
2018-09-24 05:18:23	<--	siddhartharao17 (siddharthar@moz-04rki7.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 05:18:55	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-24 05:19:37	Wolvereness	ibrokemypie: Your question seems profoundly strange. Are you writing a new implementation of sh? Maybe we're talking about environment variables? Or I suspect there's a different problem at hand that we may be able to help more directly.
2018-09-24 05:20:16	ibrokemypie	I want to read an arch PKGBUILD, append to the sources array and prepend to the package function, making it if it doesnt exist
2018-09-24 05:21:26	Wolvereness	Okay, that's much more interesting, but still seems a bit obtuse. What's the fundamental problem being solved by doing this?
2018-09-24 05:21:29	ibrokemypie	PKGBUILDs being just bash scripts, I thought it would be best to find some bash parser library
2018-09-24 05:22:43	ibrokemypie	uh, I am making a wrapper for makepkg that automatically patches pkgbuilds before building. the patching of the pkgbuilds themselves is done but I want to also allow patching of other files, using makepkg to do the patching itself during the build so that the checksums are still accurate and used
2018-09-24 05:22:46	<--	tactics (tactics@moz-iapcvs.ph.cox.net) has quit (Connection closed)
2018-09-24 05:23:11	ibrokemypie	basically all I am missing is what I said, a way to programmatically edit the PKGBUILD script
2018-09-24 05:23:40	Wolvereness	Is this for an internal-type system (like for deployment), or for a specific project?
2018-09-24 05:24:03	ibrokemypie	specific project
2018-09-24 05:24:13	ibrokemypie	that being the makepkg wrapper
2018-09-24 05:24:16	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Quit: Leaving)
2018-09-24 05:24:27	ibrokemypie	https://github.com/ibrokemypie/makeppkg
2018-09-24 05:24:31	ibrokemypie	source so far
2018-09-24 05:24:38	-->	siddhartharao17 (siddharthar@moz-04rki7.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-24 05:25:10	Wolvereness	ibrokemypie: So, when I hear "applying patches", I immediately jump to git tooling
2018-09-24 05:26:04	ibrokemypie	so far I just patch the PKGBUILD with the patch command if a PKGBUILD patch is found
2018-09-24 05:26:21	ibrokemypie	rather than trying to implement the patching itself in rust
2018-09-24 05:26:55	ibrokemypie	however rather than applying any patches I want to simply add the patches to the pkgbuild for makepkg to apply itself
2018-09-24 05:27:49	ibrokemypie	(also my rust code is pretty terrible, first thing I have written in rust)
2018-09-24 05:28:44	Wolvereness	ibrokemypie: Path of least resistance for me would be adding a callout to another script that just applies all patches from a directory - a git patch already specifies what files it touches
2018-09-24 05:29:22	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Quit: WeeChat 2.2)
2018-09-24 05:29:52	ibrokemypie	the issue with patching the files myself is that means the checksums are no longer accurate, so they would need to be ignored which is obviously sub-optimal
2018-09-24 05:30:18	-->	krebbit (Mibbit@moz-dlo13f.abhsia.telus.net) has joined #rust-beginners
2018-09-24 05:30:19	Wolvereness	ibrokemypie: I thought git patches could specify exact checksums?
2018-09-24 05:30:21	ibrokemypie	the only interaction with the pkgbuild so far is here and is fully based on assumptions rather than parsing
2018-09-24 05:30:24	ibrokemypie	https://github.com/ibrokemypie/makeppkg/blob/master/src/package_name.rs
2018-09-24 05:30:25	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 05:31:51	<--	tac-tics (tac-tics@moz-iapcvs.ph.cox.net) has quit (Quit: Leaving)
2018-09-24 05:31:54	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 05:31:58	-->	re-l124c41 (re-l124c41@moz-lglmk2.4kh6.ni31.0908.2a02.IP) has joined #rust-beginners
2018-09-24 05:32:14	-->	eyans (a@moz-2sf5pu.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-24 05:32:40	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-24 05:33:13	<--	re-l124c41 (re-l124c41@moz-lglmk2.4kh6.ni31.0908.2a02.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 05:33:13	ibrokemypie	optimally I would just parse the pkgbuild, taking pkgname as a variable for example
2018-09-24 05:33:45	ibrokemypie	sources as  another array
2018-09-24 05:34:13	Moongoodboy{K}	indigo747: squawk ident, say nature of problem?
2018-09-24 05:34:47	Moongoodboy{K}	and when you can, souls on board and remaining fuel in minutes, please
2018-09-24 05:35:14	ibrokemypie	if you look at https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=emercoin as an example
2018-09-24 05:35:18	Moongoodboy{K}	arctodus: indeed! It's a very good language. Welcome! :3
2018-09-24 05:35:38	<--	krebbit (Mibbit@moz-dlo13f.abhsia.telus.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 05:35:56	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-24 05:36:39	<--	castilho_ (castilho@moz-6of.4g7.225.186.IP) has quit (Quit: )
2018-09-24 05:37:11	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 05:37:46	<--	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 05:39:38	-->	mib_g9r75p (Mibbit@moz-dlo13f.abhsia.telus.net) has joined #rust-beginners
2018-09-24 05:39:39	-->	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has joined #rust-beginners
2018-09-24 05:40:28	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 05:40:38	mib_g9r75p	Is it expected that `cargo +nightly rustc -- -Z unstable-options --pretty=expanded` only outputs expansions the first time if the crate type is `staticlib`?
2018-09-24 05:41:13	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 05:42:46	<--	siddhartharao17 (siddharthar@moz-04rki7.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 05:43:02	mib_g9r75p	Never mind, there is something else happening
2018-09-24 05:46:20	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 05:47:26	<--	enterprisey (enterprisey@moz-04c750.cit.cornell.edu) has quit (Quit: Leaving)
2018-09-24 05:47:52	ibrokemypie	okay, a narrower issue, how could I parse variables from text?
2018-09-24 05:48:06	joris	mib_g9r75p: caching maybe ? eg if source does not change it does not output again ?
2018-09-24 05:48:19	joris	cargo expand works like this at least
2018-09-24 05:48:27	ibrokemypie	eg text containing foo=bar will be tthe same as let foo: string = "bar"
2018-09-24 05:48:32	scottmcm	eval: "123".parse::<i32>() // ibrokemypie 
2018-09-24 05:48:34	--	Notice(eval): Ok(123)
2018-09-24 05:48:40	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-24 05:49:19	<--	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has quit (Quit: WeeChat 2.2)
2018-09-24 05:49:28	ibrokemypie	text containing foo=("bar", "baz") being let foo: Vec<String> = ["bar", "baz"]
2018-09-24 05:50:08	<--	mib_g9r75p (Mibbit@moz-dlo13f.abhsia.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-24 05:50:24	joris	maybe you want to write a serde deserializer for your format 
2018-09-24 05:50:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 05:50:43	ibrokemypie	me?
2018-09-24 05:50:53	scottmcm	Moongoodboy{K}: I'm squawking 7500
2018-09-24 05:51:13	joris	yes. i need to refresh my memory about pkgbuild but iirc it's mostly key/values + some inner scripts
2018-09-24 05:51:38	ibrokemypie	yes, its essentially a shell script
2018-09-24 05:51:38	joris	you probably can write a serde deserializer to read it into a struct 
2018-09-24 05:51:38	 *	Moongoodboy{K} immediately vectors everyone else well clear of scottmcm and alerts law enforcement at the nearest airports
2018-09-24 05:52:31	ibrokemypie	serde does look promising
2018-09-24 05:52:48	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-24 05:52:51	joris	ibrokemypie: writing serde deserializer is not easy, there is a high coginitive overead so maybe it's easier to write a handrolled parser with nom 
2018-09-24 05:53:24	joris	and it depends what you want to do with the data to know if it's worth it or not
2018-09-24 05:53:31	scottmcm	ibrokemypie: note that you can get it into `("foo",vec!["bar", "baz"])`, but not into `let foo = `, because rust is not dynamically named
2018-09-24 05:53:40	-->	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has joined #rust-beginners
2018-09-24 05:53:47	ibrokemypie	scottmcm: that'd work
2018-09-24 05:54:51	ibrokemypie	joris: yeah, this is the first thing I have ever written in rust, or any language lower than go so you are probably right
2018-09-24 05:55:51	ibrokemypie	nom would be better than looping throighlines, splitting at = and addigning the second part to the first part
2018-09-24 05:55:56	joris	popular parsing libraries are imo nom,combine and peg 
2018-09-24 05:55:57	ibrokemypie	i assume
2018-09-24 05:56:26	Moongoodboy{K}	yeah, nom would be, like, the proper way to implement it
2018-09-24 05:57:24	joris	there is also lalrpop which is a more traditional parser generator like yacc/bison
2018-09-24 05:57:53	ibrokemypie	idk if you saw it but this is how ive done my "
2018-09-24 05:58:00	ibrokemypie	idk if you saw it but this is how ive done my "parsing" so far
2018-09-24 05:58:02	ibrokemypie	https://bpaste.net/show/78a386118604
2018-09-24 05:58:13	joris	personal opinion, i would not recommand peg but some people know it 
2018-09-24 05:58:19	joris	s/know/like/
2018-09-24 05:58:32	-->	siddhartharao17 (siddharthar@moz-0rtq0v.ca.comcast.net) has joined #rust-beginners
2018-09-24 05:59:21	joris	ibrokemypie: well it gets the job done i assume but then it depends if PKGBUILD allow newlines in values etc 
2018-09-24 05:59:26	joris	this kind of nasty things
2018-09-24 05:59:39	ibrokemypie	yeah exactly, it works until it doesnt
2018-09-24 06:00:02	ibrokemypie	pkgbuilds can get very ugly and poorly written providing plenty of edge cases
2018-09-24 06:00:46	-->	mib_zwbjas (Mibbit@moz-o6e.c3n.175.95.IP) has joined #rust-beginners
2018-09-24 06:01:33	joris	i remember years ago trying to write some patches for makepkg and it was around 3000 loc of bash script interpreting it :> that's when i decided to help with the dev of a pkgbuild linter but never got to it
2018-09-24 06:01:46	joris	it was in python iirc. But pkgbuild were super messy 
2018-09-24 06:02:34	ibrokemypie	I did find an 8 year old c library that parses pkgbuilds, but it has 0 documentation and doest build 
2018-09-24 06:02:54	ibrokemypie	theres also a go library that looks very nice
2018-09-24 06:03:01	ibrokemypie	is it possible to convert go to rust?
2018-09-24 06:03:11	joris	manually, probably yes
2018-09-24 06:03:44	ibrokemypie	manually does nto sound fun
2018-09-24 06:03:58	ibrokemypie	is it possible to include go code in rust?
2018-09-24 06:04:09	ibrokemypie	heres the c library https://github.com/sebnow/pkgparse
2018-09-24 06:05:31	joris	it's probably easier to use the C lib than the go lib
2018-09-24 06:05:40	-->	ufobat___ (Martin@moz-ajprc8.dyn.telefonica.de) has joined #rust-beginners
2018-09-24 06:05:43	joris	but you probably can translate the parsing code + the lexer only to rust
2018-09-24 06:05:50	joris	https://github.com/mikkeloscar/gopkgbuild/blob/2bb4f1f1db67f81fe50f9c1c4ad9db4f20fd6b22/pkgbuild.go#L310
2018-09-24 06:05:56	joris	parser is not too huge
2018-09-24 06:06:37	ibrokemypie	https://github.com/sebnow/pkgparse/blob/master/pkgparse.h
2018-09-24 06:06:43	joris	it's just a go style handwritten parser like Rob Pike likes :/ 
2018-09-24 06:06:58	ibrokemypie	heres some source with example, looks pretty good
2018-09-24 06:06:59	emerent	pest is the popular one for pegs
2018-09-24 06:08:04	<--	mib_zwbjas (Mibbit@moz-o6e.c3n.175.95.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 06:09:08	joris	thanks. don't like the concept of pegs so i'm not super up to date on which crate is the current popular one
2018-09-24 06:10:43	ibrokemypie	anyone handy with C?
2018-09-24 06:10:53	ibrokemypie	theres only one error preventing it from building
2018-09-24 06:11:06	ibrokemypie	https://bpaste.net/show/d42eb900560c
2018-09-24 06:12:33	joris	probably if you change extern int yyleng to extern size_t yyleng it will work. This is flex global variable probably
2018-09-24 06:12:38	<--	dwigton (daniel@moz-k1mj8s.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-24 06:13:53	<--	martin2 (martin@moz-1ha664.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-24 06:14:08	<--	cdr255 (cdr255@moz-1bermg.5rhd.p3se.0547.2601.IP) has quit (Connection closed)
2018-09-24 06:14:29	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-24 06:14:34	-->	oms (oms@moz-3aqfpv.dyn.telefonica.de) has joined #rust-beginners
2018-09-24 06:14:49	ibrokemypie	oh wow that worked, thanks!
2018-09-24 06:14:56	-->	adinsx (adinsx@moz-f3hrd0.qlka.gj6q.01c2.2601.IP) has joined #rust-beginners
2018-09-24 06:15:12	-->	bemeurer (bemeurer@moz-d2t35d.0k3b.1aau.0978.2001.IP) has joined #rust-beginners
2018-09-24 06:16:34	<--	adinsx (adinsx@moz-f3hrd0.qlka.gj6q.01c2.2601.IP) has quit (Quit: Leaving)
2018-09-24 06:16:53	-->	adinsx (adinsx@moz-f3hrd0.qlka.gj6q.01c2.2601.IP) has joined #rust-beginners
2018-09-24 06:18:09	ibrokemypie	i have absolutely no idea how to use this 
2018-09-24 06:19:32	<--	bemeurer (bemeurer@moz-d2t35d.0k3b.1aau.0978.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 06:20:45	-->	jaruga (user@moz-m30.f3d.245.185.IP) has joined #rust-beginners
2018-09-24 06:22:48	<--	benspaulding (benspauldin@moz-1n8.64p.203.159.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 06:24:07	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-24 06:24:56	-->	benspaulding (benspauldin@moz-1n8.64p.203.159.IP) has joined #rust-beginners
2018-09-24 06:26:05	indigo747	Moongoodboy{K}, see issue #54521
2018-09-24 06:26:15	Moongoodboy{K}	!gh 54521
2018-09-24 06:26:15	+rustbot	[Issue 54521] <open> Misleading error message with malformed turbofishes <https://github.com/rust-lang/rust/issues/54521>
2018-09-24 06:26:24	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 06:26:44	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-24 06:26:47	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 06:27:23	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-24 06:27:35	ibrokemypie	so uh
2018-09-24 06:27:42	Moongoodboy{K}	indigo747: ah, yeah. Sounds like a good diagnostics issue. Thanks :)
2018-09-24 06:27:44	ibrokemypie	i have libpkgbuild.a
2018-09-24 06:28:00	indigo747	Moongoodboy{K}, glad I could help
2018-09-24 06:28:01	ibrokemypie	and an example
2018-09-24 06:28:03	ibrokemypie	https://github.com/sebnow/pkgparse/blob/master/pkgparse.h#L31
2018-09-24 06:28:08	ibrokemypie	how do I use this in rust?
2018-09-24 06:28:56	<--	insidious (insidious@moz-ed9.9c4.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 06:29:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 06:30:41	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 06:31:41	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-24 06:32:02	-->	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has joined #rust-beginners
2018-09-24 06:32:10	-->	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has joined #rust-beginners
2018-09-24 06:33:31	<--	mlindner (mlindner@moz-k8som4.ca.comcast.net) has quit (Quit: Leaving)
2018-09-24 06:33:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 06:35:00	<--	jaruga (user@moz-m30.f3d.245.185.IP) has quit (Client exited)
2018-09-24 06:38:50	-->	Maria (Mibbit@moz-9c0.g7f.252.185.IP) has joined #rust-beginners
2018-09-24 06:38:56	ibrokemypie	is a rust File the same as a C fp?
2018-09-24 06:39:09	Maria	Hey
2018-09-24 06:39:56	ibrokemypie	oh, *fp actually
2018-09-24 06:39:56	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 06:40:18	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 06:40:24	Moongoodboy{K}	Definitely not.
2018-09-24 06:40:36	joris	it's the same abstraction
2018-09-24 06:40:39	joris	but it's not the same
2018-09-24 06:40:40	Moongoodboy{K}	…well, except that they're both representations of—yeah
2018-09-24 06:41:01	Moongoodboy{K}	they have neither the same representation nor similar APIs
2018-09-24 06:41:13	ibrokemypie	well, using the C library in my rust code, how can I pass the function an *fp?
2018-09-24 06:41:14	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-24 06:41:25	Moongoodboy{K}	…wait, `fp`?
2018-09-24 06:41:31	joris	https://doc.rust-lang.org/std/os/windows/io/trait.FromRawHandle.html you can convert
2018-09-24 06:41:42	Moongoodboy{K}	files in C are normally just C `int` file descriptors AIUI
2018-09-24 06:41:42	joris	https://doc.rust-lang.org/std/os/unix/io/trait.FromRawFd.html
2018-09-24 06:41:56	joris	Moongoodboy{K}: no, there is also file pointers. Which is standard C api
2018-09-24 06:42:01	Moongoodboy{K}	unless you're using the other thing, in which case, `FILE *`
2018-09-24 06:42:06	joris	yeah
2018-09-24 06:42:21	ibrokemypie	in the example it has fp = fopen("PKGBUILD", "r");
2018-09-24 06:42:29	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 06:42:29	ibrokemypie	pkgbuild = pkgbuild_parse(fp);
2018-09-24 06:42:32	joris	fp stands for "file pointer" in standard idioms
2018-09-24 06:42:51	Moongoodboy{K}	ahhh.
2018-09-24 06:44:20	joris	iirc you can convert fp to fd then fd to rust File. On windows probably too
2018-09-24 06:44:34	ibrokemypie	what would be the other way around?
2018-09-24 06:44:41	ibrokemypie	from rust file to fp
2018-09-24 06:44:57	Moongoodboy{K}	So, what, you need Rust code to produce a `FILE *` so that you can call that C `pkgbuild_parse()`?
2018-09-24 06:45:01	joris	the opposite, File to fd (via AsRawFd trait), then fd to fp via fdopen on unix
2018-09-24 06:45:18	joris	on windows there is likely something like fdopen too
2018-09-24 06:46:16	joris	but i guess since you are trying to parse PKGBUILD you don't care that much about windows support :)
2018-09-24 06:46:16	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 06:46:24	ibrokemypie	yeah exactly lmao
2018-09-24 06:46:50	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 06:47:25	ibrokemypie	so i write c that takes the RawFd and runs fdopen?
2018-09-24 06:47:36	joris	fdopen you call it in C yes, it's probably easier
2018-09-24 06:47:38	ibrokemypie	then runs the pkgbuild_parse with that?
2018-09-24 06:47:55	joris	else maybe you can try libc crate but probably easier to write some C code
2018-09-24 06:47:58	joris	yes
2018-09-24 06:48:37	ibrokemypie	libc has fdopen()
2018-09-24 06:48:45	joris	https://docs.rs/libc/0.2.43/libc/fn.fdopen.html hm yes indeed
2018-09-24 06:48:50	joris	ok then you don't need c code
2018-09-24 06:49:25	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-24 06:51:18	<--	Maria (Mibbit@moz-9c0.g7f.252.185.IP) has quit (G-Lined: no spamming here)
2018-09-24 06:51:54	<--	eyans (a@moz-2sf5pu.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-24 06:52:33	Moongoodboy{K}	oh cool, and then you can just pass that `*mut ::libc::FILE` via FFI ^.^
2018-09-24 06:52:50	<--	Guest4641 (nj0rd@moz-9eonkh.dip.versatel-1u1.de) has quit (Ping timeout: 121 seconds)
2018-09-24 06:53:01	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 06:53:57	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 06:54:30	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 06:55:48	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-24 06:56:17	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-24 06:57:05	<--	himi (sjjf@moz-psjk59.anu.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-24 06:57:29	-->	xet7 (xet7@moz-k1d136.rev.dnainternet.fi) has joined #rust-beginners
2018-09-24 06:59:35	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-24 07:01:11	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-24 07:04:24	ibrokemypie	what should I give as "mode" for fdopen?
2018-09-24 07:05:13	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 07:05:51	-->	mib_uqguui (Mibbit@moz-5nl.hh3.79.202.IP) has joined #rust-beginners
2018-09-24 07:06:01	<--	mib_uqguui (Mibbit@moz-5nl.hh3.79.202.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 07:08:36	joris	since you want to read, probably CString::new("r").as_ptr()
2018-09-24 07:08:37	Moongoodboy{K}	ibrokemypie: see the fdopen() usage in the example you linked and|or the fdopen(3) manual page?
2018-09-24 07:08:57	<--	GrayShade (quassel@moz-p4ara4.leje.sn81.2f05.2a02.IP) has quit (Client exited)
2018-09-24 07:09:16	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-24 07:09:32	-->	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has joined #rust-beginners
2018-09-24 07:09:55	joris	to be exact, let mode = Cstring::new("r").unwrap(); let fp = unsafe { libc::fdopen(fd, mode.as_ptr()) }
2018-09-24 07:10:29	joris	to prevent dropping before the call and access to unitizialied memory. CString::new() creates a C NUL terminated string, see doc in stdlib
2018-09-24 07:10:47	-->	GrayShade (quassel@moz-6h1m4k.leje.sn81.2f05.2a02.IP) has joined #rust-beginners
2018-09-24 07:11:41	ibrokemypie	what does the unsafe mean?
2018-09-24 07:12:22	<--	benspaulding (benspauldin@moz-1n8.64p.203.159.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 07:13:12	joris	https://doc.rust-lang.org/book/second-edition/ch19-01-unsafe-rust.html
2018-09-24 07:13:44	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-24 07:14:06	<--	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 07:14:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 07:15:35	-->	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has joined #rust-beginners
2018-09-24 07:16:04	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 07:16:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 07:16:10	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-24 07:16:32	-->	benspaulding (benspauldin@moz-1n8.64p.203.159.IP) has joined #rust-beginners
2018-09-24 07:16:42	ibrokemypie	`alright, almost there
2018-09-24 07:20:07	<--	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 07:21:46	ibrokemypie	uh
2018-09-24 07:21:59	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-24 07:22:47	ibrokemypie	how do i tell cargo where my library is?
2018-09-24 07:23:02	ibrokemypie	it doesnt build with it just in the same directory
2018-09-24 07:24:40	-->	j0nthn (jonathan@moz-6br3pp.rev.sfr.net) has joined #rust-beginners
2018-09-24 07:25:21	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 07:26:03	joris	https://doc.rust-lang.org/cargo/reference/build-scripts.html#case-study-building-some-native-code
2018-09-24 07:27:13	joris	https://docs.rs/gcc/0.3.54/gcc/
2018-09-24 07:27:40	-->	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has joined #rust-beginners
2018-09-24 07:28:32	joris	err sorry the new crate is cc https://docs.rs/cc/1.0.25/cc/
2018-09-24 07:29:23	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 07:30:02	ibrokemypie	so i would need cc and https://github.com/alexcrichton/cmake-rs?
2018-09-24 07:31:45	-->	makos (makos@moz-643qpg.adsl.tpnet.pl) has joined #rust-beginners
2018-09-24 07:32:42	<--	kraythen__ (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Quit: Leaving)
2018-09-24 07:33:02	joris	cmake-rs only if your lib is cmake i think
2018-09-24 07:33:32	Moongoodboy{K}	ibrokemypie: are you pulling in this C project as a dependency?
2018-09-24 07:33:37	joris	https://docs.rs/cmake/0.1.34/cmake/#examples probably the example is what you need
2018-09-24 07:33:38	ibrokemypie	i guess so
2018-09-24 07:34:35	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-24 07:34:49	-->	Gertm (gert@moz-ga73mo.isp.belgacom.be) has joined #rust-beginners
2018-09-24 07:41:19	-->	dwigton (daniel@moz-k1mj8s.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-24 07:41:50	<--	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has quit (Quit: Leaving)
2018-09-24 07:45:35	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (The TLS connection was non-properly terminated.)
2018-09-24 07:46:34	ibrokemypie	why doesnt cmake find pkgparse.h?
2018-09-24 07:46:50	ibrokemypie	use cmake::Config;
2018-09-24 07:46:54	ibrokemypie	pkgbuild_parse.y:26:11: fatal error: 'pkgparse.h' file not found
2018-09-24 07:47:32	<--	tsal (tsal@moz-d41k3l.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-24 07:48:21	-->	tsal (tsal@moz-c8ehtn.versanet.de) has joined #rust-beginners
2018-09-24 07:50:29	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 07:51:47	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-24 07:54:31	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-24 07:57:38	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-24 07:59:16	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (Quit: bye)
2018-09-24 07:59:16	<--	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 07:59:57	ibrokemypie	i know its there
2018-09-24 08:00:05	ibrokemypie	and the lib builds fine manually
2018-09-24 08:00:06	<--	LeshaInc (LeshaInc@moz-kl5p31.me) has quit (Quit: ZNC - https://znc.in)
2018-09-24 08:04:31	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 08:05:45	ibrokemypie	ah, needed to add pkgparse to the include_directories in the cmakelist
2018-09-24 08:05:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 08:05:57	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 08:06:32	<--	siddhartharao17 (siddharthar@moz-0rtq0v.ca.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 08:11:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 08:11:53	Hs	How come you can pass a function into a `for_each` but you can not pass a function that takes self from a struct? you can pass Struct::some_function, but not my_struct.other_function  (playground that demonstrates this: https://play.rust-lang.org/?gist=dcc1d565b455a99af63806cc0d1c89c4&version=stable&mode=debug&edition=2015)
2018-09-24 08:13:03	Hs	I should say "pass a function into a vec.for_each" perhaps
2018-09-24 08:13:44	-->	LeshaInc (LeshaInc@moz-kl5p31.me) has joined #rust-beginners
2018-09-24 08:13:55	-->	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has joined #rust-beginners
2018-09-24 08:15:20	<--	indigo747 (indigo747@moz-bgsfrb.dhcp.cruzio.com) has quit (Ping timeout: 121 seconds)
2018-09-24 08:15:53	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2018-09-24 08:16:07	<--	ct16k (ryan@moz-5f0.el6.96.78.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:16:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 08:16:16	-->	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-24 08:16:21	ibrokemypie	what does this mean?
2018-09-24 08:16:23	ibrokemypie	https://bpaste.net/show/fdf0ebf08097
2018-09-24 08:17:15	<--	melfy (melfy@moz-u8ssll.melfy.me) has quit (Ping timeout: 121 seconds)
2018-09-24 08:17:23	Hs	Right it might perhaps simply be because of the function signature. I think I get it
2018-09-24 08:17:55	<--	Manishearth (Manishearth@moz-n4s.338.156.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:18:24	-->	melfy (melfy@moz-u8ssll.melfy.me) has joined #rust-beginners
2018-09-24 08:18:27	-->	indigo747 (indigo747@moz-bgsfrb.dhcp.cruzio.com) has joined #rust-beginners
2018-09-24 08:18:27	-->	Manishearth (Manishearth@moz-n4s.338.156.104.IP) has joined #rust-beginners
2018-09-24 08:18:27	--	Mode #rust-beginners [+o Manishearth] by ChanServ
2018-09-24 08:19:14	laalaa	55
2018-09-24 08:19:33	-->	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has joined #rust-beginners
2018-09-24 08:20:25	Moongoodboy{K}	Hs: did you mean `ThingDoer::do_thing_with_self` instead of `t.do_thing_with_self`?
2018-09-24 08:20:25	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 08:20:42	emerent	Hs: you can't pass a method as a function like this
2018-09-24 08:20:46	emerent	with an implicit self capture
2018-09-24 08:21:12	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 08:21:12	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 08:21:28	Moongoodboy{K}	yeah, I don't think Rust is set up to support capturing a method receiver (i.e. a `self`) that way
2018-09-24 08:21:40	Hs	Yes I see that the function signature only allows one argument and anything that takes `self` would have at least two arguments in that case
2018-09-24 08:22:05	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-24 08:22:13	Moongoodboy{K}	you can pass `|a| t.do_thing_with_self(a)` though
2018-09-24 08:22:53	Hs	aye that's what I did at first and thought I could just simplify it and that's what lead me down the rabbit hole
2018-09-24 08:22:55	Moongoodboy{K}	…that seems like a working drop-in replacement for what you tried
2018-09-24 08:23:12	Moongoodboy{K}	ah, yeah.
2018-09-24 08:23:13	ibrokemypie	anyone know what my error means?
2018-09-24 08:23:28	-->	mzeric (Mibbit@moz-dq3tm0.members.linode.com) has joined #rust-beginners
2018-09-24 08:23:29	-->	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has joined #rust-beginners
2018-09-24 08:23:31	-->	GreenJello (GreenJello@moz-qttqo3.7di5.9nhv.8800.2600.IP) has joined #rust-beginners
2018-09-24 08:24:47	Moongoodboy{K}	It may be theoretically possible for an expression like `(t.do_thing_with_self)` to evaluate to a value with a specific unnameable zero-sized type that implements `FnMut(T) -> ()`
2018-09-24 08:24:50	<--	indigo747 (indigo747@moz-bgsfrb.dhcp.cruzio.com) has quit (Ping timeout: 121 seconds)
2018-09-24 08:24:58	<--	mzeric (Mibbit@moz-dq3tm0.members.linode.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 08:25:10	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 08:25:23	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:25:25	Moongoodboy{K}	and, when called, forwards to the do_thing_with_self() method on the specific ThingDoer
2018-09-24 08:26:26	Moongoodboy{K}	but no such feature exists in Rust today
2018-09-24 08:26:55	Moongoodboy{K}	or, as I originally worded it: Rust isn't set up to support capturing a method receiver that way :)
2018-09-24 08:26:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 08:27:09	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 08:27:33	<--	GreenJello (GreenJello@moz-qttqo3.7di5.9nhv.8800.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:27:35	<--	ay (ay@moz-dijbet.357i.tl8k.19f0.2001.IP) has quit (Connection closed)
2018-09-24 08:27:54	<--	jonalmeida (jonalmeida@moz-afsk3d.20db.tl8k.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:27:54	<--	qwandor (quassel@moz-3ec462.logu.bbq3.19f0.2001.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-24 08:27:58	-->	ay (ay@moz-dijbet.357i.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-24 08:28:03	<--	prg (prg@moz-ahctar.gm69.tl8k.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:28:13	Hs	It makes sense logically once I looked at the signature of `for_each` so accepting `instance.func` sounds like it might actually be missleading
2018-09-24 08:29:06	-->	jonalmeida (jonalmeida@moz-afsk3d.20db.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-24 08:29:06	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 08:29:12	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 08:29:40	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 08:30:36	<--	Manishearth (Manishearth@moz-n4s.338.156.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:30:42	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 08:30:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 08:30:56	-->	qwandor (quassel@moz-3ec462.logu.bbq3.19f0.2001.IP) has joined #rust-beginners
2018-09-24 08:31:03	-->	Manishearth (Manishearth@moz-n4s.338.156.104.IP) has joined #rust-beginners
2018-09-24 08:31:03	--	Mode #rust-beginners [+o Manishearth] by ChanServ
2018-09-24 08:31:14	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 08:33:38	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-24 08:34:44	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 08:35:05	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:38:28	<--	yjv (yjv@moz-vl6hhm.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-24 08:38:42	-->	yjv (yjv@moz-u3cm8h.fios.verizon.net) has joined #rust-beginners
2018-09-24 08:39:30	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-24 08:40:05	-->	mib_a74r3p (Mibbit@moz-fl3.qfn.166.122.IP) has joined #rust-beginners
2018-09-24 08:40:48	mib_a74r3p	I can't install or even find the rls component on the latest nightly
2018-09-24 08:41:21	-->	paulvt (paul.van.ti@moz-j2b6ja.fb56.nn7d.a446.2a02.IP) has joined #rust-beginners
2018-09-24 08:42:52	drager	mib_a74r3p: rustup component add rls-preview maybe
2018-09-24 08:43:56	mib_a74r3p	There is no rls component when I do component list
2018-09-24 08:46:41	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Quit: Leaving)
2018-09-24 08:47:33	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-24 08:48:30	drager	mib_a74r3p: Did you try: rustup component add --toolchain nightly rls-preview ?
2018-09-24 08:48:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 08:50:43	Arnavion	(If it really isn't there, try an older nightly till you find one that does have it)
2018-09-24 08:51:17	drager	Yeah, I'm not sure every nightly release will have an rls component
2018-09-24 08:53:16	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 08:53:19	-->	prg (prg@moz-ahctar.gm69.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-24 08:58:39	-->	zelda (Mibbit@moz-gkv.qpa.72.36.IP) has joined #rust-beginners
2018-09-24 08:58:55	<--	zelda (Mibbit@moz-gkv.qpa.72.36.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 08:59:40	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 09:02:57	-->	liquidnight (marcus@moz-quib5d.r5ho.qn0t.0c23.2a01.IP) has joined #rust-beginners
2018-09-24 09:03:55	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-24 09:03:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 09:05:26	<--	mib_a74r3p (Mibbit@moz-fl3.qfn.166.122.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 09:05:55	joris	iirc rls was blocking nightlies too often so now if it does not build it's skipped
2018-09-24 09:07:13	<--	makos (makos@moz-643qpg.adsl.tpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-24 09:07:39	-->	makos (makos@moz-643qpg.adsl.tpnet.pl) has joined #rust-beginners
2018-09-24 09:09:59	<--	ibrokemypie (conor@moz-1ud.c73.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:17:19	-->	yangkeao (yangkeao@moz-it7.kmi.32.210.IP) has joined #rust-beginners
2018-09-24 09:18:50	-->	mib_zyrr2g (Mibbit@moz-uh4.22s.70.118.IP) has joined #rust-beginners
2018-09-24 09:19:20	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-24 09:20:33	<--	mib_zyrr2g (Mibbit@moz-uh4.22s.70.118.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 09:21:25	<--	yangkeao (yangkeao@moz-it7.kmi.32.210.IP) has quit (Quit: WeeChat 2.0.1)
2018-09-24 09:21:28	-->	yangkeao (yangkeao@moz-it7.kmi.32.210.IP) has joined #rust-beginners
2018-09-24 09:21:35	-->	ibrokemypie (conor@moz-1ud.c73.124.1.IP) has joined #rust-beginners
2018-09-24 09:23:22	-->	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has joined #rust-beginners
2018-09-24 09:26:40	<--	ibrokemypie (conor@moz-1ud.c73.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:30:50	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-24 09:34:45	-->	patrl (patrl@moz-12k8cp.f0l7.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-24 09:34:52	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:35:17	<--	ay (ay@moz-dijbet.357i.tl8k.19f0.2001.IP) has quit (Connection closed)
2018-09-24 09:35:31	-->	plusone (custom@moz-41e235.skybroadband.com) has joined #rust-beginners
2018-09-24 09:35:57	<--	melfy (melfy@moz-u8ssll.melfy.me) has quit (Ping timeout: 121 seconds)
2018-09-24 09:36:02	<--	jonalmeida (jonalmeida@moz-afsk3d.20db.tl8k.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:36:12	<--	prg (prg@moz-ahctar.gm69.tl8k.19f0.2001.IP) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-24 09:37:38	<--	orium (fulano@moz-cjq57u.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-24 09:37:38	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 09:37:40	<--	qwandor (quassel@moz-3ec462.logu.bbq3.19f0.2001.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-24 09:37:58	-->	ay (ay@moz-dijbet.357i.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-24 09:38:05	-->	prg (prg@moz-ntdfvd.com) has joined #rust-beginners
2018-09-24 09:38:10	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 09:38:13	-->	jonalmeida (jonalmeida@moz-afsk3d.20db.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-24 09:38:31	-->	melfy (melfy@moz-u8ssll.melfy.me) has joined #rust-beginners
2018-09-24 09:39:41	-->	qwandor (quassel@moz-3ec462.logu.bbq3.19f0.2001.IP) has joined #rust-beginners
2018-09-24 09:40:04	<--	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has quit (Connection closed)
2018-09-24 09:40:32	<--	bemeurer (bemeurer@moz-68b.do0.236.185.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 09:40:43	-->	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has joined #rust-beginners
2018-09-24 09:42:14	<--	prg (prg@moz-ntdfvd.com) has quit (Ping timeout: 121 seconds)
2018-09-24 09:42:25	<--	jonalmeida (jonalmeida@moz-afsk3d.20db.tl8k.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:43:17	<--	Manishearth (Manishearth@moz-n4s.338.156.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:44:50	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:46:10	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-24 09:46:10	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 09:46:38	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 09:46:58	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 09:47:46	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 09:48:37	<--	melfy (melfy@moz-u8ssll.melfy.me) has quit (Ping timeout: 121 seconds)
2018-09-24 09:49:24	-->	melfy (melfy@moz-u8ssll.melfy.me) has joined #rust-beginners
2018-09-24 09:49:25	-->	jonalmeida (jonalmeida@moz-kml.1j0.77.45.IP) has joined #rust-beginners
2018-09-24 09:50:04	<--	vissl (vissl@moz-j3cina.brq0.flml.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:50:07	-->	ibrokemypie (conor@moz-1ud.c73.124.1.IP) has joined #rust-beginners
2018-09-24 09:50:38	-->	vissl (vissl@moz-j3cina.brq0.flml.19f0.2001.IP) has joined #rust-beginners
2018-09-24 09:51:02	-->	prg (prg@moz-ntdfvd.com) has joined #rust-beginners
2018-09-24 09:51:08	-->	Manishearth (Manishearth@moz-n4s.338.156.104.IP) has joined #rust-beginners
2018-09-24 09:51:08	--	Mode #rust-beginners [+o Manishearth] by ChanServ
2018-09-24 09:51:50	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 09:53:00	<--	KB5 (kb5@moz-e9262u.elisa-laajakaista.fi) has quit (Quit: Konversation terminated!)
2018-09-24 09:54:12	<--	ibrokemypie (conor@moz-1ud.c73.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:55:42	-->	U007D (U007D@moz-m0o.9b9.245.162.IP) has joined #rust-beginners
2018-09-24 09:56:20	-->	KB5 (KB5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-24 09:58:56	<--	charh (charh@moz-7m0.bpc.242.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 09:59:15	-->	Betty1981 (Mibbit@moz-tll.1p0.185.146.IP) has joined #rust-beginners
2018-09-24 09:59:38	Betty1981	hello
2018-09-24 10:00:16	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-24 10:00:59	-->	charh (charh@moz-7m0.bpc.242.201.IP) has joined #rust-beginners
2018-09-24 10:01:09	-->	alkott (Mibbit@moz-fh0686.clients.your-server.de) has joined #rust-beginners
2018-09-24 10:01:25	<--	alkott (Mibbit@moz-fh0686.clients.your-server.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 10:12:10	-->	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has joined #rust-beginners
2018-09-24 10:12:30	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-24 10:16:16	<--	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 10:16:27	<--	Betty1981 (Mibbit@moz-tll.1p0.185.146.IP) has quit (G-Lined: no spamming here)
2018-09-24 10:20:55	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-24 10:26:32	<--	plusone (custom@moz-41e235.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-24 10:27:22	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 10:28:02	-->	Fr0stBit_ (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has joined #rust-beginners
2018-09-24 10:28:23	<--	Fr0stBit_ (theartist@moz-4jof6b.11lj.ur99.2149.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 10:29:00	-->	plusone (custom@moz-lr82ih.skybroadband.com) has joined #rust-beginners
2018-09-24 10:29:05	-->	orium (fulano@moz-9mu.6i1.35.193.IP) has joined #rust-beginners
2018-09-24 10:30:53	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 10:31:34	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 10:33:10	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Ping timeout: 121 seconds)
2018-09-24 10:34:55	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 10:36:31	<--	Hs (jones@moz-jqo904.customer.lyse.net) has quit (Quit: reinstall)
2018-09-24 10:37:40	-->	fsasm (fsasm@moz-5fd.qra.178.62.IP) has joined #rust-beginners
2018-09-24 10:38:06	-->	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has joined #rust-beginners
2018-09-24 10:41:57	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 10:45:54	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-24 10:46:00	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 10:48:10	<--	KB5 (KB5@moz-e9262u.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2018-09-24 10:50:22	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-24 10:51:53	<--	Aaronepowerr (Aaronepower@moz-a3b.s7h.181.195.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 10:52:06	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-24 10:52:34	-->	masterm (masterm@moz-vdc3fa.pl) has joined #rust-beginners
2018-09-24 10:54:02	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-24 10:56:44	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-24 10:59:57	<--	adinsx (adinsx@moz-f3hrd0.qlka.gj6q.01c2.2601.IP) has quit (Connection closed)
2018-09-24 11:01:42	-->	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has joined #rust-beginners
2018-09-24 11:05:45	-->	imtiaz (Mibbit@moz-6h3.cun.50.120.IP) has joined #rust-beginners
2018-09-24 11:06:12	<--	imtiaz (Mibbit@moz-6h3.cun.50.120.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 11:06:35	<--	yangkeao (yangkeao@moz-it7.kmi.32.210.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 11:09:44	-->	mmacherey (Thunderbird@moz-qlu9sk.bibliothek-gruenwald.de) has joined #rust-beginners
2018-09-24 11:10:30	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-24 11:11:40	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-24 11:11:50	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Quit: Time for bed/work.)
2018-09-24 11:14:32	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-24 11:16:21	-->	nunatak (nunatak@moz-0o9u0v.netcologne.de) has joined #rust-beginners
2018-09-24 11:16:57	-->	Eragon (Eragon@moz-snlf86.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 11:20:14	<--	mmacherey (Thunderbird@moz-qlu9sk.bibliothek-gruenwald.de) has quit (Client exited)
2018-09-24 11:21:18	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 11:23:35	-->	mmacherey (Thunderbird@moz-qlu9sk.bibliothek-gruenwald.de) has joined #rust-beginners
2018-09-24 11:24:23	--	U007D is now known as U007D_afk
2018-09-24 11:24:26	-->	frogaincia (Mibbit@moz-iag.8so.116.92.IP) has joined #rust-beginners
2018-09-24 11:24:44	<--	frogaincia (Mibbit@moz-iag.8so.116.92.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 11:25:58	-->	nj0rd (nj0rd@moz-i06t8p.versanet.de) has joined #rust-beginners
2018-09-24 11:26:48	<--	mmacherey (Thunderbird@moz-qlu9sk.bibliothek-gruenwald.de) has quit (Client exited)
2018-09-24 11:27:13	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-24 11:27:56	-->	yangkeao (yangkeao@moz-it7.kmi.32.210.IP) has joined #rust-beginners
2018-09-24 11:29:13	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-24 11:29:19	<--	yangkeao (yangkeao@moz-it7.kmi.32.210.IP) has quit (Quit: WeeChat 2.0.1)
2018-09-24 11:31:21	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 11:33:33	-->	DeltaManiac (DeltaManiac@moz-vue.5q9.13.203.IP) has joined #rust-beginners
2018-09-24 11:36:12	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 11:36:38	<--	rotty (rotty@moz-07gt5n.chaostreff.at) has quit (Ping timeout: 121 seconds)
2018-09-24 11:36:55	-->	rotty (rotty@moz-07gt5n.chaostreff.at) has joined #rust-beginners
2018-09-24 11:37:21	-->	Eragon55 (Eragon@moz-snlf86.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 11:37:47	<--	DeltaManiac (DeltaManiac@moz-vue.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 11:39:23	<--	Eragon55 (Eragon@moz-snlf86.abo.wanadoo.fr) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 11:39:46	<--	Relaed (Relaed@moz-jan398.bbtec.net) has quit (Quit: Lost terminal)
2018-09-24 11:40:15	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 11:40:34	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-24 11:41:33	-->	Eragon55 (Eragon@moz-snlf86.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 11:43:00	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-24 11:45:17	-->	ksqsf_ (ksqsf@moz-ogr.47f.60.36.IP) has joined #rust-beginners
2018-09-24 11:47:39	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-24 11:49:08	<--	Eragon (Eragon@moz-snlf86.abo.wanadoo.fr) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 11:51:47	-->	Dariost (Dariost@moz-euo.lj4.20.151.IP) has joined #rust-beginners
2018-09-24 11:53:04	-->	Eragon (Eragon@moz-snlf86.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 11:53:23	<--	Eragon (Eragon@moz-snlf86.abo.wanadoo.fr) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 11:57:02	-->	jec_ (jec@moz-pboa8b.ks.cox.net) has joined #rust-beginners
2018-09-24 11:57:06	-->	Eragon (Eragon@moz-snlf86.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 11:57:09	<--	jec_ (jec@moz-pboa8b.ks.cox.net) has left #rust-beginners
2018-09-24 11:57:30	-->	martin2 (martin@moz-h6uu0j.anteldata.net.uy) has joined #rust-beginners
2018-09-24 12:00:29	-->	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has joined #rust-beginners
2018-09-24 12:02:00	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 12:03:11	<--	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has quit (Connection closed)
2018-09-24 12:04:24	<--	Eragon55 (Eragon@moz-snlf86.abo.wanadoo.fr) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 12:04:41	<--	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 12:04:41	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 12:06:02	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 12:06:54	<--	dowwie (dowwie@moz-rgl.tas.72.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 12:08:14	-->	dowwie (dowwie@moz-5bmnqg.fios.verizon.net) has joined #rust-beginners
2018-09-24 12:12:24	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-24 12:12:32	<--	martin2 (martin@moz-h6uu0j.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-24 12:12:57	-->	Slonopotamus (Mibbit@moz-ks5.ar4.6.185.IP) has joined #rust-beginners
2018-09-24 12:14:30	-->	holmgr (holmgr@moz-ld71b6.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-24 12:15:47	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 12:15:53	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-24 12:16:56	Slonopotamus	Morning! I'm trying to write a function that accepts a trait with associated type but cannot figure out what my function signature is supposed to be =/ https://play.rust-lang.org/?gist=bb6758bfb499715e0c02ab531ae972a9&version=stable&mode=debug&edition=2015 I want my function to accept any associated type.
2018-09-24 12:18:51	<--	patrl (patrl@moz-12k8cp.f0l7.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 12:19:51	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 12:20:58	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-24 12:24:59	-->	aajaa (Mibbit@moz-fn7.t0q.100.101.IP) has joined #rust-beginners
2018-09-24 12:25:01	<--	plusone (custom@moz-lr82ih.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-24 12:26:11	aajaa	hey guys, I'm using the serial crate (http://dcuddeback.github.io/serial-rs/serial_windows/struct.COMPort.html) and I'd like to inject my own implementation of read
2018-09-24 12:26:19	aajaa	is there a way to extend a libraries implementations?
2018-09-24 12:26:26	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-24 12:26:29	aajaa	I'd like to do inline parsing of the bytes coming in
2018-09-24 12:26:57	drager	Slonopotamus: https://play.rust-lang.org/?gist=742de8a79400c2e692104e74d442b011&version=stable&mode=debug&edition=2015
2018-09-24 12:27:47	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-24 12:28:49	drager	aajaa: If I understand you correctly, then you can wrap their struct in your own struct, e.g; struct Wrapper(TheirStruckt);
2018-09-24 12:29:12	Slonopotamus	drager: whoah, thank you. could you please point me to some docs that would explain why that works?
2018-09-24 12:29:37	drager	aajaa: Then do your own impl for Wrapper that extends the `TheirStruct` behavior.
2018-09-24 12:30:16	drager	Slonopotamus: You can read about traits here: https://doc.rust-lang.org/book/second-edition/ch10-02-traits.html
2018-09-24 12:30:23	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 12:30:53	dpc1	aajaa: you can do `pub struct Foo (pub struct LibraryThing);` and then implement Deref (+ DerefMut) if you want
2018-09-24 12:30:53	-->	makos_ (makos@moz-hsa0rm.adsl.tpnet.pl) has joined #rust-beginners
2018-09-24 12:31:21	drager	Slonopotamus: You can also do where T: Terminal instead of in <> if you want
2018-09-24 12:31:54	Slonopotamus	drager: okay, I'll play around with it. thank you again.
2018-09-24 12:32:11	-->	mr_boo (Mibbit@moz-or2.qti.25.197.IP) has joined #rust-beginners
2018-09-24 12:32:12	<--	mr_boo (Mibbit@moz-or2.qti.25.197.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 12:32:18	drager	Slonopotamus: Do that, no worries!
2018-09-24 12:33:02	aajaa	drager so something like https://play.rust-lang.org/?gist=dd9287d8433cb0c82013c0277e4654bb&version=stable&mode=debug&edition=2015
2018-09-24 12:33:07	aajaa	very crudely mocked up
2018-09-24 12:33:27	aajaa	is that the typical way to extend functionality?
2018-09-24 12:33:48	<--	makos (makos@moz-643qpg.adsl.tpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-24 12:34:26	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 12:34:49	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 12:35:30	drager	Yeah, something like that would probably work and as dpc1 wrote, implement Deref would be a good idea.
2018-09-24 12:35:32	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-24 12:36:29	drager	And more like this as well; `struct Wrapper(COMPort)`
2018-09-24 12:37:01	dpc1	don't forget to make it public ;)
2018-09-24 12:45:33	aajaa	is there a reason you guys are using normal brackets instead of curly bracers?
2018-09-24 12:48:27	-->	mib_51rmyc (Mibbit@moz-cpi.8qr.246.113.IP) has joined #rust-beginners
2018-09-24 12:49:16	dpc1	yeh because these are called "struct tuples"
2018-09-24 12:51:01	aajaa	the only distinction I can see is that the fields of the struct are accessed by .0, .1
2018-09-24 12:51:07	aajaa	as opposed to by name
2018-09-24 12:51:13	aajaa	am I missing something?
2018-09-24 12:52:25	dpc1	yeh that
2018-09-24 12:52:37	dpc1	also the () works as a constructor for the struct
2018-09-24 12:52:50	<--	holmgr (holmgr@moz-ld71b6.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-24 12:53:21	-->	holmgr (holmgr@moz-ld71b6.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-24 12:53:28	mib_51rmyc	hello everyone
2018-09-24 12:53:31	-->	SenasOzys (SenasOzys@moz-rat.ke9.47.194.IP) has joined #rust-beginners
2018-09-24 12:53:36	<--	holmgr (holmgr@moz-ld71b6.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-24 12:53:37	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-24 12:53:48	dpc1	hi mib_51rmyc 
2018-09-24 12:53:50	aajaa	ok, ty
2018-09-24 12:54:22	aajaa	when one calls impl Read for SomeStruct, and you don't specify any functions
2018-09-24 12:54:23	-->	mib_2tlpvt (Mibbit@moz-2bjjmp.hsi10.unitymediagroup.de) has joined #rust-beginners
2018-09-24 12:54:27	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-24 12:54:34	aajaa	do you get the basic implementations for free?
2018-09-24 12:55:32	<--	nunatak (nunatak@moz-0o9u0v.netcologne.de) has quit (Quit: Leaving)
2018-09-24 12:55:45	dpc1	yes if the trait defines the default impls
2018-09-24 12:55:47	dpc1	of hte fns
2018-09-24 12:56:23	mib_51rmyc	I have never used this chat program, is IRC?
2018-09-24 12:56:36	-->	AtumT (IRC@moz-niuqp7.gvt.net.br) has joined #rust-beginners
2018-09-24 12:56:45	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 12:56:56	dpc1	?
2018-09-24 12:57:07	mib_51rmyc	hi! DPC1
2018-09-24 12:57:32	dpc1	hi
2018-09-24 12:59:06	<--	mib_2tlpvt (Mibbit@moz-2bjjmp.hsi10.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 12:59:09	mib_51rmyc	Can I ask a question?
2018-09-24 12:59:25	dpc1	sure
2018-09-24 12:59:33	dpc1	this place is meant for that xD
2018-09-24 13:00:46	mib_51rmyc	Have you used vagrant as a development environment?
2018-09-24 13:02:28	<--	dowwie (dowwie@moz-5bmnqg.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-24 13:03:08	-->	dowwie (dowwie@moz-kia.3q0.129.104.IP) has joined #rust-beginners
2018-09-24 13:03:17	<--	dowwie (dowwie@moz-kia.3q0.129.104.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 13:03:21	-->	dowwie (dowwie@moz-kia.3q0.129.104.IP) has joined #rust-beginners
2018-09-24 13:04:46	dpc1	i did long back in a non-rust world for a brief time but don't remember or know much
2018-09-24 13:05:43	-->	cubetastic (Thunderbird@moz-lfuobo.vson.h9gn.4072.2409.IP) has joined #rust-beginners
2018-09-24 13:07:29	mib_51rmyc	Oh, okay~ probably you haven’t encountered this situation.
2018-09-24 13:08:16	johto	we can't know unless you ask your actual question
2018-09-24 13:09:18	dpc1	xD
2018-09-24 13:10:12	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 13:10:47	mib_51rmyc	ok
2018-09-24 13:10:55	mib_51rmyc	When the program is in the vagrant synchronization directory, the rust compiler will prompt "hard link creation failed to copy"
2018-09-24 13:11:46	mib_51rmyc	I don't know if you can understand it. It is the machine that translates for me. My native language is not English.
2018-09-24 13:12:38	mib_51rmyc	Of course this problem is not serious, just a warning
2018-09-24 13:13:34	mib_51rmyc	I just want to ask if anyone knows how to solve this problem.
2018-09-24 13:14:42	-->	schnozzle (schnozzle@moz-2ce.g2b.153.159.IP) has joined #rust-beginners
2018-09-24 13:18:11	-->	qwertyuiop (Mibbit@moz-sot.hqu.149.169.IP) has joined #rust-beginners
2018-09-24 13:18:15	-->	luizdepra (luizdepra@moz-l3dn2s.pflq.ojo3.1284.2001.IP) has joined #rust-beginners
2018-09-24 13:18:39	qwertyuiop	What are some interesting projects that I can make in rust for learning purposes ?
2018-09-24 13:19:00	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-24 13:19:57	<--	Slonopotamus (Mibbit@moz-ks5.ar4.6.185.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 13:20:01	<--	orium (fulano@moz-9mu.6i1.35.193.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 13:20:09	mib_51rmyc	It seems that this question is out of scope.
2018-09-24 13:20:25	dpc1	mib_51rmyc: well we need more details than that. 
2018-09-24 13:20:33	<--	makos_ (makos@moz-hsa0rm.adsl.tpnet.pl) has quit (Connection closed)
2018-09-24 13:20:49	dpc1	qwertyuiop: depends on what interests you. I'd recommend join some working group and help them improve the ecosystem
2018-09-24 13:21:22	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-24 13:22:17	qwertyuiop	dcp1: I really don't know what should I make ... Anything with intermediate level with be enough
2018-09-24 13:22:22	<--	schnozzle (schnozzle@moz-2ce.g2b.153.159.IP) has quit (Quit: Leaving)
2018-09-24 13:22:37	<--	ksqsf_ (ksqsf@moz-ogr.47f.60.36.IP) has quit (Client exited)
2018-09-24 13:23:32	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 13:23:46	dpc1	pick something that will help you irl
2018-09-24 13:24:06	<--	qwertyuiop (Mibbit@moz-sot.hqu.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 13:24:38	-->	makos (makos@moz-hsa0rm.adsl.tpnet.pl) has joined #rust-beginners
2018-09-24 13:25:40	mib_51rmyc	Really bad! Safari can't connect in
2018-09-24 13:25:49	<--	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has quit (Quit: Konversation terminated!)
2018-09-24 13:27:11	mib_51rmyc	compile display
2018-09-24 13:27:36	mib_51rmyc	Hard linking files in the incremental compilation cache failed
2018-09-24 13:27:40	-->	orium (fulano@moz-9mu.6i1.35.193.IP) has joined #rust-beginners
2018-09-24 13:28:09	mib_51rmyc	copying files instead
2018-09-24 13:28:37	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 13:29:01	mib_51rmyc	I think it is caused by the vagrant synchronization directory.
2018-09-24 13:31:18	mib_51rmyc	I don't know if other people are the same
2018-09-24 13:31:49	mib_51rmyc	Anyway, thank you dpc1
2018-09-24 13:33:17	<--	makos (makos@moz-hsa0rm.adsl.tpnet.pl) has quit (Connection closed)
2018-09-24 13:33:47	-->	makos (makos@moz-hsa0rm.adsl.tpnet.pl) has joined #rust-beginners
2018-09-24 13:34:09	<--	mib_51rmyc (Mibbit@moz-cpi.8qr.246.113.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 13:35:37	dpc1	:)
2018-09-24 13:35:41	-->	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has joined #rust-beginners
2018-09-24 13:36:46	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-24 13:37:14	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-24 13:38:06	-->	ElectricCoffee (Mibbit@moz-433mb5.cust.fsknet.dk) has joined #rust-beginners
2018-09-24 13:39:15	ElectricCoffee	I'm experiencing some issues with rustup 1.13.0 on Windows. It refuses to update nightly. If I try to uninstall nightly it refuses to do that too
2018-09-24 13:39:44	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-24 13:39:48	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 13:42:01	<--	cubetastic (Thunderbird@moz-lfuobo.vson.h9gn.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 13:43:56	-->	cubetastic (Thunderbird@moz-lfuobo.vson.h9gn.4072.2409.IP) has joined #rust-beginners
2018-09-24 13:44:42	-->	emerentius (emerentius@moz-215tg4.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-24 13:44:45	<--	emerent (emerentius@moz-0qi8g5.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-24 13:46:52	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-24 13:49:30	-->	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has joined #rust-beginners
2018-09-24 13:49:39	<--	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has quit (Quit: Leaving)
2018-09-24 13:49:49	<--	cubetastic (Thunderbird@moz-lfuobo.vson.h9gn.4072.2409.IP) has quit (Client exited)
2018-09-24 13:51:21	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-24 13:53:10	dpc1	ElectricCoffee: any errors?
2018-09-24 13:53:15	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 13:53:27	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 13:53:33	<--	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 13:54:06	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-24 13:56:07	<--	SenasOzys (SenasOzys@moz-rat.ke9.47.194.IP) has quit (Connection closed)
2018-09-24 13:56:21	-->	SenasOzys (SenasOzys@moz-rat.ke9.47.194.IP) has joined #rust-beginners
2018-09-24 14:00:17	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 14:01:11	-->	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-24 14:02:35	-->	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has joined #rust-beginners
2018-09-24 14:03:15	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-24 14:05:16	-->	DeltaManiac (DeltaManiac@moz-klt.uc7.172.122.IP) has joined #rust-beginners
2018-09-24 14:05:50	<--	Xion (xion@moz-dc662c.nrni.kv86.79e0.2a00.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 14:07:07	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-24 14:07:46	ElectricCoffee	@dpc1 yeah I get error: component 'rls-preview' for 'x86_64-pc-windows-msvc' is unavailable for download when trying to update
2018-09-24 14:07:47	<--	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has quit (Quit: Leaving)
2018-09-24 14:07:51	-->	dalley (dalley@moz-147tel.dyn6.twc.com) has joined #rust-beginners
2018-09-24 14:07:57	-->	Xion (xion@moz-dc662c.nrni.kv86.79e0.2a00.IP) has joined #rust-beginners
2018-09-24 14:09:29	<--	DeltaManiac (DeltaManiac@moz-klt.uc7.172.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 14:12:17	-->	ct16k (ryan@moz-5f0.el6.96.78.IP) has joined #rust-beginners
2018-09-24 14:12:29	-->	guacamole (Mibbit@moz-ugotdd.range86-191.btcentralplus.com) has joined #rust-beginners
2018-09-24 14:13:25	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 14:17:29	<--	guacamole (Mibbit@moz-ugotdd.range86-191.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 14:21:46	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 14:23:10	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-24 14:23:29	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-24 14:25:29	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-09-24 14:25:48	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 14:26:46	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-24 14:27:52	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-24 14:29:59	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-24 14:32:06	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 14:36:51	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-24 14:36:52	<--	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has quit (Connection closed)
2018-09-24 14:39:20	<--	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 14:39:24	-->	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has joined #rust-beginners
2018-09-24 14:39:25	<--	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 14:39:31	-->	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has joined #rust-beginners
2018-09-24 14:39:34	<--	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 14:39:46	<--	Eragon (Eragon@moz-snlf86.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-24 14:40:04	-->	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has joined #rust-beginners
2018-09-24 14:42:09	-->	qazwsxedc (Mibbit@moz-sot.hqu.149.169.IP) has joined #rust-beginners
2018-09-24 14:42:35	qazwsxedc	Can someone give me an idea about what to write as a project in rust ?
2018-09-24 14:42:59	-->	asyncsec (asyncsec@moz-hfabhf.dyn6.twc.com) has joined #rust-beginners
2018-09-24 14:43:26	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 14:47:24	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 14:50:02	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 14:51:22	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 14:54:01	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-24 14:54:11	<--	ElectricCoffee (Mibbit@moz-433mb5.cust.fsknet.dk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 14:54:23	<--	makos (makos@moz-hsa0rm.adsl.tpnet.pl) has quit (Quit: Leaving)
2018-09-24 14:54:24	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-24 14:54:52	-->	holmgr (holmgr@moz-ld71b6.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-24 14:58:04	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-24 14:58:08	<--	qazwsxedc (Mibbit@moz-sot.hqu.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 14:58:54	<--	holmgr (holmgr@moz-ld71b6.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 15:01:05	<--	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has quit (Quit: WeeChat 2.2)
2018-09-24 15:02:22	-->	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has joined #rust-beginners
2018-09-24 15:02:34	<--	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has quit (Quit: WeeChat 2.2)
2018-09-24 15:03:14	-->	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has joined #rust-beginners
2018-09-24 15:04:17	-->	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has joined #rust-beginners
2018-09-24 15:04:22	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 15:05:30	<--	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has quit (Ping timeout: 121 seconds)
2018-09-24 15:06:49	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-24 15:10:37	<--	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has quit (Quit: WeeChat 2.2)
2018-09-24 15:11:54	-->	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has joined #rust-beginners
2018-09-24 15:12:36	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-24 15:12:39	<--	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has quit (Quit: Leaving)
2018-09-24 15:13:01	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-24 15:13:52	-->	gregg (greg@moz-00mjdg.gnumpf.tk) has joined #rust-beginners
2018-09-24 15:14:49	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 15:15:35	-->	agmcleod (textual@moz-fa2ceh.twg.ca) has joined #rust-beginners
2018-09-24 15:17:21	-->	mib_cm85h6 (Mibbit@moz-1gq.s27.204.142.IP) has joined #rust-beginners
2018-09-24 15:18:15	<--	mib_cm85h6 (Mibbit@moz-1gq.s27.204.142.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 15:22:08	-->	mr_wibble (Mibbit@moz-6ep5do.dip.tu-dresden.de) has joined #rust-beginners
2018-09-24 15:22:15	<--	mr_wibble (Mibbit@moz-6ep5do.dip.tu-dresden.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 15:26:00	-->	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-24 15:26:04	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 15:28:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 15:29:01	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-24 15:29:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 15:29:45	-->	hrld (hrld@moz-4f847a.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 15:29:54	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-24 15:30:12	<--	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-24 15:31:05	-->	mib_qenq40 (Mibbit@moz-1e8.un9.152.90.IP) has joined #rust-beginners
2018-09-24 15:32:35	-->	dark-knight (dark-knight@moz-btav50.dynamic.surfer.at) has joined #rust-beginners
2018-09-24 15:33:10	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 15:33:35	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-24 15:43:47	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-24 15:44:01	<--	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has quit (Connection closed)
2018-09-24 15:44:21	-->	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-24 15:48:19	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-24 15:48:38	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Quit: WeeChat 2.2)
2018-09-24 15:48:43	-->	npmccallum (npmccallum@moz-d8863v.redhat.com) has joined #rust-beginners
2018-09-24 15:49:14	<--	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-24 15:51:09	-->	refold (refold@moz-0ig.vcg.98.88.IP) has joined #rust-beginners
2018-09-24 15:51:46	<--	dark-knight (dark-knight@moz-btav50.dynamic.surfer.at) has quit (The TLS connection was non-properly terminated.)
2018-09-24 15:52:21	<--	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-24 15:52:23	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 15:53:06	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 15:53:12	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Connection closed)
2018-09-24 15:53:24	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-24 15:54:19	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-24 15:55:35	<--	prg (prg@moz-ntdfvd.com) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-24 15:57:07	-->	prg (prg@moz-ahctar.gm69.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-24 15:57:34	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-24 15:59:26	-->	siddhartharao17 (siddharthar@moz-pim553.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-24 16:00:31	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-24 16:00:39	--	U007D_afk is now known as U007D
2018-09-24 16:01:41	<--	siddhartharao17 (siddharthar@moz-pim553.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 16:02:04	<--	SenasOzys (SenasOzys@moz-rat.ke9.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 16:02:13	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-24 16:02:57	-->	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has joined #rust-beginners
2018-09-24 16:04:30	-->	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has joined #rust-beginners
2018-09-24 16:05:53	-->	siddhartharao17 (siddharthar@moz-pim553.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-24 16:06:12	-->	SenasOzys (SenasOzys@moz-rat.ke9.47.194.IP) has joined #rust-beginners
2018-09-24 16:07:40	-->	siddhart_ (siddharthar@moz-s3qru6.epoi.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-24 16:08:04	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 16:10:13	<--	siddhartharao17 (siddharthar@moz-pim553.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 16:10:27	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 16:10:33	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-24 16:12:54	-->	clpo13 (Mutter@moz-hhotdl.jva9.l4ju.0380.2600.IP) has joined #rust-beginners
2018-09-24 16:13:15	-->	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has joined #rust-beginners
2018-09-24 16:13:26	<--	clpo13 (Mutter@moz-hhotdl.jva9.l4ju.0380.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-24 16:14:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 16:14:29	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 16:17:29	<--	paulvt (paul.van.ti@moz-j2b6ja.fb56.nn7d.a446.2a02.IP) has quit (Client exited)
2018-09-24 16:18:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 16:19:34	<--	SenasOzys (SenasOzys@moz-rat.ke9.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 16:20:55	<--	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has quit (Quit: )
2018-09-24 16:21:21	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-24 16:21:42	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-24 16:21:59	-->	DeltaManiac (DeltaManiac@moz-klt.uc7.172.122.IP) has joined #rust-beginners
2018-09-24 16:23:12	-->	lkurusa_ (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-24 16:23:22	<--	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-24 16:23:29	-->	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has joined #rust-beginners
2018-09-24 16:24:31	-->	SenasOzys (SenasOzys@moz-rat.ke9.47.194.IP) has joined #rust-beginners
2018-09-24 16:25:44	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 16:26:03	<--	DeltaManiac (DeltaManiac@moz-klt.uc7.172.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 16:32:05	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-24 16:34:21	s34n	Is it correct that Vec indexes are usize and usize on x86_64 is 8 bytes?
2018-09-24 16:35:53	Arnavion	Yes
2018-09-24 16:35:59	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 16:38:47	Moongoodboy{K}	indices, lengths, and the like should generally be usize
2018-09-24 16:39:22	Moongoodboy{K}	(notable exception: file lengths and such should be u64, so as not to limit files to 4 GiB)
2018-09-24 16:40:33	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-24 16:43:43	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-24 16:44:03	-->	mib_SergT (Mibbit@moz-eth.paa.183.194.IP) has joined #rust-beginners
2018-09-24 16:45:21	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 16:47:13	-->	awg (Mibbit@moz-pe2goj.caci.com) has joined #rust-beginners
2018-09-24 16:47:17	<--	awg (Mibbit@moz-pe2goj.caci.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 16:48:45	-->	Eragon (Eragon@moz-bjkid0.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 16:50:45	<--	helix (abacaxi@moz-q96skh.torproject.org) has quit (Ping timeout: 121 seconds)
2018-09-24 16:50:49	<--	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has quit (Ping timeout: 121 seconds)
2018-09-24 16:51:56	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 16:51:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 16:51:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 16:53:56	-->	KB5 (KB5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-24 16:56:59	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-09-24 16:57:29	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-24 17:00:50	-->	mib_icp4h4 (Mibbit@moz-pa0r4h.static.korbank.pl) has joined #rust-beginners
2018-09-24 17:01:12	<--	mib_icp4h4 (Mibbit@moz-pa0r4h.static.korbank.pl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 17:01:36	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 17:02:14	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-24 17:02:54	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-24 17:03:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 17:03:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 17:04:07	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-24 17:05:48	<--	Mateon1 (Thunderbird@moz-9iijia.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-24 17:06:06	-->	Mateon1 (Thunderbird@moz-o30td9.supernova.orange.pl) has joined #rust-beginners
2018-09-24 17:07:12	-->	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has joined #rust-beginners
2018-09-24 17:07:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 17:08:04	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-24 17:08:15	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-24 17:08:34	<--	SenasOzys (SenasOzys@moz-rat.ke9.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 17:09:14	-->	OtterCoder (emmett@moz-jli0t7.245.sfcn.org) has joined #rust-beginners
2018-09-24 17:14:41	--	U007D is now known as U007D_afk
2018-09-24 17:15:43	OtterCoder	Ok, so I think I see what's going on here, but why in odin's name does this compile instead of throwing the mother of all errors?
2018-09-24 17:15:45	OtterCoder	https://play.rust-lang.org/?gist=52c2a02a323d716c33f2389da72b8500&version=stable&mode=debug&edition=2015
2018-09-24 17:17:07	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-24 17:18:12	Arnavion	Unreachable code is not an error by default. Probably because it happens often during development
2018-09-24 17:18:28	Arnavion	If you want you can #![deny(warnings)] to convert it to an error
2018-09-24 17:18:53	OtterCoder	But the match statements are referencing nothing. There's no pattern Stone to match?
2018-09-24 17:18:55	Arnavion	Because it happens during development, and possible for back-compat reasons at this point
2018-09-24 17:19:09	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 17:19:10	OtterCoder	That should be an error. Not the unreachable code part.
2018-09-24 17:19:26	Arnavion	You should read the warnings carefully. The patterns don't do what you think they do
2018-09-24 17:20:06	Arnavion	Particularly notice how the first arm is marked as "matches any value"
2018-09-24 17:20:45	<--	mib_SergT (Mibbit@moz-eth.paa.183.194.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 17:20:56	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-24 17:21:03	OtterCoder	I guess I thought that using '_ ' to match anything was a language level feature...
2018-09-24 17:21:08	@mbrubeck	eval: match 1 { 0 => 5, Stone => Stone + 1 }
2018-09-24 17:21:10	--	Notice(eval): 2
2018-09-24 17:21:23	Moongoodboy{K}	It is.
2018-09-24 17:21:31	Lumpio-	_ matches anything and ignores it
2018-09-24 17:21:40	Lumpio-	A random identifier (such as x or Stone) matches anything and binds it to a variable, right?
2018-09-24 17:21:50	OtterCoder	Ok, I get it.
2018-09-24 17:21:51	Moongoodboy{K}	correct
2018-09-24 17:21:54	Arnavion	Correct. That's what the warning is saying
2018-09-24 17:21:58	-->	snowe (snowe@moz-ri3.15m.177.128.IP) has joined #rust-beginners
2018-09-24 17:22:07	Lumpio-	It would've been easier to just say that heh
2018-09-24 17:22:12	OtterCoder	I ain't happy about it, but I get it. 
2018-09-24 17:22:17	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-24 17:22:35	Moongoodboy{K}	I mean, it kinda has to be that way, or we wouldn't be able to declare and assign things :)
2018-09-24 17:23:07	Moongoodboy{K}	let foo = bar();  // random identifier, used as an irrefutable pattern
2018-09-24 17:23:09	Lumpio-	OtterCoder: At least the warning is very helpful and guesses that you probably meant
2018-09-24 17:23:12	adoa	OtterCoder, you appear to think that you had some kind of `use LandStyle::Dirt` etc. somewhere in your code. But you don't have that.
2018-09-24 17:23:16	Lumpio-	the enum variant
2018-09-24 17:23:27	OtterCoder	It's not helpful, because there's a two page line of warning spam.
2018-09-24 17:23:55	Moongoodboy{K}	that's because your code has two pages' output worth of warnings. :)
2018-09-24 17:23:58	Lumpio-	There's two pages of errors because you have about as many errors
2018-09-24 17:24:12	Moongoodboy{K}	if your code didn't have so many warnings in it, you wouldn't get warning spam from rustc!
2018-09-24 17:24:12	Lumpio-	More like 10 pages on my window size heh
2018-09-24 17:24:38	OtterCoder	For the same general issue. It's giving the useful warning, then burying it under snake case complaints about the same line.
2018-09-24 17:24:38	Moongoodboy{K}	unreachable_patterns is a warning by default. All that kinda stuff warns instead of erroring.
2018-09-24 17:24:49	@mbrubeck	The playground doesn't color some of the warning output appropriately.  :/
2018-09-24 17:24:49	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-24 17:25:02	Moongoodboy{K}	Feel free to use #![deny] or even #![forbid] in your projects; that's what they're there for. :)
2018-09-24 17:25:04	Lumpio-	The very first warning mentions the enum variant thin though
2018-09-24 17:25:05	OtterCoder	How do I deny just unreachable code?
2018-09-24 17:25:07	@mbrubeck	I guess "warning[E0170]:" doesn't match its regex
2018-09-24 17:25:14	Lumpio-	Does rustc put lints like (bad variable name) last?
2018-09-24 17:25:35	Moongoodboy{K}	there's a lint actually called unreachable_code, right?
2018-09-24 17:25:52	Moongoodboy{K}	does it cover this apparently existing lint called unreachable_patterns?
2018-09-24 17:25:56	@mbrubeck	`#![deny(unreachable_patterns)]` will work for this case
2018-09-24 17:26:09	@mbrubeck	I'm not sure whether `unreachable_code` includes this case or not
2018-09-24 17:26:16	@mbrubeck	`unused` covers both of those
2018-09-24 17:26:21	@mbrubeck	(plus a bunch of other stuff)
2018-09-24 17:26:30	OtterCoder	Alright, thanks all.
2018-09-24 17:27:39	@mbrubeck	looks like `unreachable_code` does not work here, so you need to use `unreachable_patterns` or the whole `unused` lint group
2018-09-24 17:28:04	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 17:29:05	<--	refold (refold@moz-0ig.vcg.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 17:30:45	Moongoodboy{K}	odd. it /is/, after all, unreachable code
2018-09-24 17:31:24	<--	dwigton (daniel@moz-k1mj8s.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-24 17:32:33	-->	bluss (bluss@moz-jambc6.cust.tele2.se) has joined #rust-beginners
2018-09-24 17:33:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 17:33:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 17:33:50	<--	aajaa (Mibbit@moz-fn7.t0q.100.101.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 17:34:16	--	U007D_afk is now known as U007D
2018-09-24 17:34:21	<--	mib_qenq40 (Mibbit@moz-1e8.un9.152.90.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 17:34:50	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 17:35:11	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 17:36:04	<--	Dariost (Dariost@moz-euo.lj4.20.151.IP) has quit (Client exited)
2018-09-24 17:36:43	-->	oats (oats@moz-ebn.8go.99.167.IP) has joined #rust-beginners
2018-09-24 17:37:20	oats	could someone help me understand what all this async/await stuff is? I think it has something to do with concurrency, but I don't understand what those terms mean well enough to be sure...
2018-09-24 17:37:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 17:37:45	-->	Dariost (Dariost@moz-euo.lj4.20.151.IP) has joined #rust-beginners
2018-09-24 17:38:32	<--	teej (uid154177@moz-graat1.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-24 17:38:37	GreenJello	oats, it's a different way to write async code, but based on tools that work in stable rust today, which are futures and tokio
2018-09-24 17:39:00	-->	insidious (insidious@moz-4g30lp.resnet.uofs.edu) has joined #rust-beginners
2018-09-24 17:39:00	Arnavion	async-await is not in stable Rust
2018-09-24 17:39:22	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-24 17:39:23	carllerche	oats: this is using async / await: https://github.com/tokio-rs/tokio/blob/master/tokio-async-await/examples/src/hyper.rs#L14-L32
2018-09-24 17:39:29	oats	does async mean concurrent?
2018-09-24 17:39:46	GreenJello	oats, async io is a different way of performing io operations, where you can ask the OS to "let me know when there's data on any of these sockets", and similar things
2018-09-24 17:39:49	carllerche	oats: it is non-blocking, but instead of having to define closures or write the state machine by hand, the compiler does it for you
2018-09-24 17:40:24	GreenJello	futures make it usable, async/await can make it nicer to work with
2018-09-24 17:42:39	-->	user404d (quincycondu@moz-niui7i.carfax.com) has joined #rust-beginners
2018-09-24 17:42:45	-->	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has joined #rust-beginners
2018-09-24 17:42:49	GreenJello	oats, you can do things like make 100 concurrent http requests on one thread
2018-09-24 17:43:16	Arnavion	oats: If you're new to the idea of futures in general, I suggest following some tutorial for "rust futures tutorial" instead of specifically for async-await. Async-await is not going to come to stable Rust any time soon so you're unlikely to find any tutorials for it
2018-09-24 17:43:42	oats	Arnavion: cool, thanks :)
2018-09-24 17:44:17	--	U007D is now known as U007D_afk
2018-09-24 17:45:10	-->	dwigton (daniel@moz-k1mj8s.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-24 17:45:59	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 17:46:03	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-24 17:46:34	<--	siddhart_ (siddharthar@moz-s3qru6.epoi.oelm.0420.2001.IP) has quit (Quit: Leaving...)
2018-09-24 17:46:47	<--	Guest88 (textual@moz-ttvn2r.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 17:46:47	Arnavion	oats:   https://tokio.rs/docs/getting-started/runtime-model/   and the pages after it explain how it works
2018-09-24 17:48:21	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 17:49:44	-->	siddhartharao17 (siddharthar@moz-tuhjue.fmhv.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-24 17:50:01	<--	orium (fulano@moz-9mu.6i1.35.193.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 17:50:32	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 17:50:46	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-24 17:51:08	OtterCoder	Aw jeeze, I'm never compiling without deny(unreachable_patterns) again. I'd been assuming way, way too much about `match` behavior...
2018-09-24 17:51:47	Arnavion	or just deny(warnings), as I said before
2018-09-24 17:53:35	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Quit: Windmills do not work that way! Good night!)
2018-09-24 17:53:53	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-24 17:53:56	@mbrubeck	Note, if you use `deny(warnings)` then your code that builds fine in one version of Rust might break in a future version when new warnings are added.
2018-09-24 17:54:09	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-24 17:54:18	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Connection closed)
2018-09-24 17:54:29	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 17:54:33	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-24 17:54:47	@mbrubeck	It might be a good idea to build with RUSTFLAGS="--deny warnings" in development or CI but not include it in your production build, or whatnot
2018-09-24 17:55:16	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-24 17:55:27	@mbrubeck	(especially if you are publishing a library that gets built by other people)
2018-09-24 17:55:40	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-24 17:56:01	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 17:57:44	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-24 17:57:46	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-24 18:00:05	<--	dinfuehr (dinfuehr@moz-pi69pd.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-24 18:00:58	-->	livingsilver94 (Mibbit@moz-9fvkmv.business.telecomitalia.it) has joined #rust-beginners
2018-09-24 18:01:58	-->	dinfuehr (dinfuehr@moz-2h5lmk.highway.telekom.at) has joined #rust-beginners
2018-09-24 18:02:47	livingsilver94	hello! I'm iterating using a for loop. How can I save into a variable the last element of the loop, in order to used it again? last() on the re-created iterator works by iterating over it so... I'm again looping just to get the last element
2018-09-24 18:03:35	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-24 18:03:40	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-24 18:03:57	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 18:04:15	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-09-24 18:04:45	livingsilver94	https://hastebin.com/cariwonoki.bash this is what I want to do
2018-09-24 18:04:54	<--	bluss (bluss@moz-jambc6.cust.tele2.se) has quit (Ping timeout: 121 seconds)
2018-09-24 18:05:16	@mbrubeck	livingsilver94: https://play.rust-lang.org/?gist=38bb87c8e066cb0e68003819194d161b&version=stable&mode=debug&edition=2015
2018-09-24 18:06:14	<--	fsasm (fsasm@moz-5fd.qra.178.62.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 18:06:15	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 18:06:33	livingsilver94	ok so you're re-assigning last at every iteration
2018-09-24 18:06:50	livingsilver94	could do :)
2018-09-24 18:07:58	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-24 18:07:59	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 18:09:48	<--	Eragon (Eragon@moz-bjkid0.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-24 18:10:24	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-24 18:10:43	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-24 18:11:53	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-24 18:12:04	-->	Eragon (Eragon@moz-bjkid0.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 18:13:34	-->	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-24 18:14:41	<--	charh (charh@moz-7m0.bpc.242.201.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 18:14:57	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-24 18:15:25	-->	gunther (Mibbit@moz-jnb.4e8.116.140.IP) has joined #rust-beginners
2018-09-24 18:15:36	<--	liquidnight (marcus@moz-quib5d.r5ho.qn0t.0c23.2a01.IP) has quit (Connection closed)
2018-09-24 18:16:45	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-24 18:17:47	GreenJello	just a fun alternative to the above https://play.rust-lang.org/?gist=2ab6b8f406debb6b81842c4059b15c3f&version=stable&mode=debug&edition=2015
2018-09-24 18:18:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 18:19:00	 *	livingsilver94 checks fold()
2018-09-24 18:19:48	livingsilver94	HELL i like it
2018-09-24 18:20:11	livingsilver94	The bad part about Rust is that std library is pretty big :P
2018-09-24 18:21:15	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 18:21:33	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-24 18:21:42	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-24 18:22:23	GreenJello	livingsilver94, fold is interesting because you can implement most other operations on iterators with it
2018-09-24 18:22:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 18:22:58	-->	chrisdotcode (quassel@moz-2sk6sd.jv55.dlrr.fcc8.2607.IP) has joined #rust-beginners
2018-09-24 18:24:14	GreenJello	well, rather most operations on collections like Vec, I don't know if you could implement iterator.map, for example
2018-09-24 18:24:45	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-24 18:26:03	livingsilver94	GreenJello: it depends on the types you're iterating over, I guess
2018-09-24 18:26:08	livingsilver94	type*
2018-09-24 18:27:02	@mbrubeck	`try_fold` is the real superstar
2018-09-24 18:27:31	@mbrubeck	since it lets you implement fold *and* also lets you implement short-circuiting operations like `find` and `all`
2018-09-24 18:28:40	cjd	Does anyone know if there's a playground implementation which allows all crates to be used ?
2018-09-24 18:29:02	cjd	It would be really nice for writing API documentation
2018-09-24 18:29:13	@mbrubeck	I haven't seen one.  You could run an instance locally with a custom Cargo.toml
2018-09-24 18:29:26	-->	eyans (a@moz-2g324r.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-24 18:29:32	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (Connection closed)
2018-09-24 18:29:44	@mbrubeck	https://crates.io/crates/cargo-script might serve a similar purpose
2018-09-24 18:30:19	<--	dinfuehr (dinfuehr@moz-2h5lmk.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-24 18:30:23	cjd	thanks
2018-09-24 18:31:17	-->	alatiera (alatiera@moz-6rmkee.access.hol.gr) has joined #rust-beginners
2018-09-24 18:31:40	FreeFull	Rust is an imperative programming language
2018-09-24 18:31:47	FreeFull	Often, a for loop is the clearest way to express somethng
2018-09-24 18:31:50	FreeFull	something*
2018-09-24 18:32:33	<--	alatiera (alatiera@moz-6rmkee.access.hol.gr) has quit (Connection closed)
2018-09-24 18:32:53	-->	alatiera (alatiera@moz-6rmkee.access.hol.gr) has joined #rust-beginners
2018-09-24 18:33:42	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-24 18:33:46	<--	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 18:34:14	-->	Rainer (Mibbit@moz-cf0hnp.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-24 18:34:22	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-24 18:34:33	<--	alatiera (alatiera@moz-6rmkee.access.hol.gr) has quit (Connection closed)
2018-09-24 18:34:52	-->	alatiera (alatiera@moz-6rmkee.access.hol.gr) has joined #rust-beginners
2018-09-24 18:35:31	-->	dinfuehr (dinfuehr@moz-ro1vnk.highway.telekom.at) has joined #rust-beginners
2018-09-24 18:35:48	-->	sub (sub@moz-n1ciqv.ptpg.oregonstate.edu) has joined #rust-beginners
2018-09-24 18:36:04	<--	Rainer (Mibbit@moz-cf0hnp.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 18:36:08	-->	donryudragoni (ryu@moz-a2o.34q.3.187.IP) has joined #rust-beginners
2018-09-24 18:36:19	-->	Rainer (Mibbit@moz-cf0hnp.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-24 18:36:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 18:37:45	-->	soren (soren@moz-tt4qrg.bath.ac.uk) has joined #rust-beginners
2018-09-24 18:38:35	<--	sub (sub@moz-n1ciqv.ptpg.oregonstate.edu) has quit (Quit: WeeChat 2.2)
2018-09-24 18:39:02	-->	sub (sub@moz-n1ciqv.ptpg.oregonstate.edu) has joined #rust-beginners
2018-09-24 18:39:57	tac-tics	Does Rust support tail calls in any way?
2018-09-24 18:40:00	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-24 18:40:43	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 18:43:51	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 18:44:02	<--	Rainer (Mibbit@moz-cf0hnp.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 18:44:12	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 18:44:12	-->	Rainer (Mibbit@moz-cf0hnp.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-24 18:48:25	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-24 18:48:59	@mbrubeck	tac-tics: Not at a language level.  LLVM has optimization passes that *can* eliminate tail calls, but it's not guaranteed.
2018-09-24 18:49:12	@mbrubeck	tac-tics: And since Rust has destructors, things that look like tail calls often aren't.
2018-09-24 18:49:22	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Ping timeout: 121 seconds)
2018-09-24 18:50:23	-->	AtumT_ (IRC@moz-1ii.ed1.95.179.IP) has joined #rust-beginners
2018-09-24 18:52:01	cjd	https://play.rust-lang.org/?gist=68bcdbe07772a6c81a74effed0946931&version=stable&mode=release&edition=2015
2018-09-24 18:52:11	cjd	apparently yes, but only in Release mode, not Debug mode
2018-09-24 18:53:05	<--	AtumT (IRC@moz-niuqp7.gvt.net.br) has quit (Ping timeout: 121 seconds)
2018-09-24 18:53:24	-->	yk (yk@moz-7ug.tfg.25.94.IP) has joined #rust-beginners
2018-09-24 18:53:33	tac-tics	it seems like it would be nice to have an explicit tail call syntax
2018-09-24 18:53:44	tac-tics	that would do checks for when it doesn't interfere with destructors
2018-09-24 18:53:54	<--	sub (sub@moz-n1ciqv.ptpg.oregonstate.edu) has quit (Ping timeout: 121 seconds)
2018-09-24 18:54:09	@mbrubeck	tac-tics: `become` is a reserved keyword for this purpose https://doc.rust-lang.org/reference/keywords.html#reserved-keywords
2018-09-24 18:54:09	cjd	return (arguments, next_function);
2018-09-24 18:54:11	cjd	:D
2018-09-24 18:54:18	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 18:54:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 18:54:45	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-24 18:54:54	tac-tics	oh nice
2018-09-24 18:55:02	 *	tac-tics happys functionally
2018-09-24 18:56:22	@mbrubeck	looks like the most recent discussion is https://github.com/rust-lang/rfcs/pull/1888
2018-09-24 18:56:54	cjd	I did the `return call_next()` pattern in cjdns, but I never activated it because it trashes the stack so debugging is useless, and if you flip on -O3, there was no measurable difference
2018-09-24 18:57:08	<--	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has quit (Quit: Sorry, was AFK)
2018-09-24 18:57:18	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-09-24 18:58:21	cjd	basically you return the function pointer and the arguments and at the root, you have a loop calling everything it sees until it gets a NULL
2018-09-24 18:58:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 18:58:48	-->	fenster (Mibbit@moz-5f9tkm.ip-addr.inexio.net) has joined #rust-beginners
2018-09-24 18:59:10	<--	fenster (Mibbit@moz-5f9tkm.ip-addr.inexio.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 19:00:06	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:02:10	-->	Xanorax (Xanorax@moz-qemh21.cust.swisscom.ch) has joined #rust-beginners
2018-09-24 19:02:22	Xanorax	hey guys
2018-09-24 19:02:27	Xanorax	sebk, hello, are you there? =)
2018-09-24 19:03:00	dpc1	hey Xanorax
2018-09-24 19:03:20	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 19:03:20	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-24 19:03:40	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-24 19:03:42	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-24 19:03:42	Xanorax	are the rust books from packt any good?
2018-09-24 19:03:46	-->	marmotini_ (marmotini@moz-1gplvu.fios.verizon.net) has joined #rust-beginners
2018-09-24 19:03:57	<--	agmcleod (textual@moz-fa2ceh.twg.ca) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 19:04:00	<--	livingsilver94 (Mibbit@moz-9fvkmv.business.telecomitalia.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 19:04:48	-->	AtumT (IRC@moz-7f8cuc.gvt.net.br) has joined #rust-beginners
2018-09-24 19:04:52	<--	AtumT_ (IRC@moz-1ii.ed1.95.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:05:38	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 19:05:45	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 19:06:17	dpc1	which one?
2018-09-24 19:06:32	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-24 19:07:11	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-24 19:07:13	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-24 19:07:22	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 19:08:13	-->	mib_fw0bfn (Mibbit@moz-nrl.eve.33.201.IP) has joined #rust-beginners
2018-09-24 19:08:19	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-24 19:08:37	<--	mib_fw0bfn (Mibbit@moz-nrl.eve.33.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 19:08:59	<--	jbalint (jbalint@moz-941und.wi.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-24 19:09:16	Xanorax	all
2018-09-24 19:09:22	Xanorax	generally
2018-09-24 19:09:34	Xanorax	ok I kind of understand to the point of lifetimes annotations
2018-09-24 19:09:42	Xanorax	and I am looking for good resources to understand that
2018-09-24 19:09:48	dpc1	no clue
2018-09-24 19:10:10	-->	blackgoat (blackgoat@moz-59h.458.150.121.IP) has joined #rust-beginners
2018-09-24 19:10:38	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 19:11:49	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:12:59	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-24 19:13:24	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-24 19:13:25	-->	jbalint (jbalint@moz-941und.wi.charter.com) has joined #rust-beginners
2018-09-24 19:14:08	-->	opn (opn@moz-kpi26j.us.northamericancoax.com) has joined #rust-beginners
2018-09-24 19:15:08	<--	user404d (quincycondu@moz-niui7i.carfax.com) has quit (Quit: leaving)
2018-09-24 19:17:36	<--	Rainer (Mibbit@moz-cf0hnp.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 19:20:05	<--	Dariost (Dariost@moz-euo.lj4.20.151.IP) has quit (Client exited)
2018-09-24 19:20:52	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 19:22:07	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Quit: Windmills do not work that way! Good night!)
2018-09-24 19:23:01	--	U007D_afk is now known as U007D
2018-09-24 19:24:09	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 19:24:30	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 19:25:18	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 19:28:40	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-24 19:29:04	-->	bluss (bluss@moz-jambc6.cust.tele2.se) has joined #rust-beginners
2018-09-24 19:29:11	-->	niconii (nicole@moz-tbcij4.midco.net) has joined #rust-beginners
2018-09-24 19:29:11	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-24 19:29:27	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:29:46	-->	quartz55 (quartz@moz-j9irg4.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-24 19:30:03	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 19:31:34	<--	donryudragoni (ryu@moz-a2o.34q.3.187.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 19:31:37	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:33:07	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-24 19:33:17	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-24 19:33:28	-->	user404d (quincycondu@moz-niui7i.carfax.com) has joined #rust-beginners
2018-09-24 19:33:46	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-24 19:35:34	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-24 19:35:45	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 19:35:54	-->	donryudragoni (ryu@moz-a2o.34q.3.187.IP) has joined #rust-beginners
2018-09-24 19:36:34	-->	yktor (yk@moz-qrg.nem.57.178.IP) has joined #rust-beginners
2018-09-24 19:37:42	-->	Loonette (weechat@moz-uf2hrc.ipv6.telus.net) has joined #rust-beginners
2018-09-24 19:38:47	<--	yk (yk@moz-7ug.tfg.25.94.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:38:57	-->	DaQue (Mutter@moz-qidpmh.0fk4.vsb4.0001.2600.IP) has joined #rust-beginners
2018-09-24 19:39:50	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 19:39:59	drager	I'm having some trouble with slog. Error and relevant code; https://gist.github.com/drager/9f1ff1bf9f06c43ec797babdb1adf9ca Any ideas?
2018-09-24 19:43:02	-->	kristianpaul (kristianpau@moz-ui7t2v.compute-1.amazonaws.com) has joined #rust-beginners
2018-09-24 19:43:04	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-24 19:43:09	@mbrubeck	drager: `root` requires a `SendSyncRefUnwindSafeDrain<Err = Never, Ok = ()>`
2018-09-24 19:43:18	kristianpaul	hi o/
2018-09-24 19:43:24	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 19:43:25	@mbrubeck	but your drain has a different `Err` type
2018-09-24 19:43:33	-->	yk__ (yk@moz-7ug.tfg.25.94.IP) has joined #rust-beginners
2018-09-24 19:44:00	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:45:50	<--	yktor (yk@moz-qrg.nem.57.178.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:47:31	drager	mbrubeck: So, I need to make my Drain have SendSyncRefUnwindSafeDrain as it's Err type?
2018-09-24 19:47:32	@mbrubeck	drager: Basically, root drains can't return errors, but Mutex<Drain> can return errors.  So it can't be used as the root drain, as far as I can see.
2018-09-24 19:47:44	@mbrubeck	drager: No, it needs to have `Never` as its Err type
2018-09-24 19:48:18	@mbrubeck	Maybe you could use https://docs.rs/slog/2.3.3/slog/trait.Drain.html#method.map_err
2018-09-24 19:48:44	@mbrubeck	to change it to panic return Never on error
2018-09-24 19:48:45	<--	xialvjun (xialvjun@moz-gnb.nvv.131.222.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 19:48:55	@mbrubeck	*panic and return Never
2018-09-24 19:50:25	drager	mbrubeck: On my folded? If I do that I get the same error
2018-09-24 19:50:31	<--	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has quit (Connection closed)
2018-09-24 19:50:52	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 19:53:13	-->	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has joined #rust-beginners
2018-09-24 19:53:26	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-24 19:54:00	-->	yktor (yk@moz-k6c.bki.25.94.IP) has joined #rust-beginners
2018-09-24 19:54:37	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-24 19:55:19	@mbrubeck	I think it has to be on this mutex: `Mutex::new(folded)`
2018-09-24 19:55:40	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-24 19:55:42	@mbrubeck	but I'm not sure if the result would be SendSyncEtc.
2018-09-24 19:56:06	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-24 19:56:07	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Quit: Konversation terminated!)
2018-09-24 19:56:17	<--	yk__ (yk@moz-7ug.tfg.25.94.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 19:56:27	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-24 19:57:10	<--	idb (ian@moz-qmjbc0.bygrave.me.uk) has quit (Ping timeout: 121 seconds)
2018-09-24 19:57:18	drager	woops, slog::Never; can't use a type alias as a constructor
2018-09-24 19:59:32	@mbrubeck	drager: You want the return type to be Never, but you can't actually return a `Never` value (it's an uninhabited type)
2018-09-24 19:59:38	@mbrubeck	instead your error handler should panic
2018-09-24 20:00:03	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:00:36	@mbrubeck	.map_err::<_, Never>(|_| panic!("a logging error occurred"))
2018-09-24 20:00:58	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 20:01:40	-->	Dariost (Dariost@moz-qdr.511.48.151.IP) has joined #rust-beginners
2018-09-24 20:01:46	dpc1	hi kristianpaul 
2018-09-24 20:02:02	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 20:02:44	drager	mbrubeck: Ah! Thank you
2018-09-24 20:03:08	drager	mbrubeck: And it compiles! Thanks a lot!
2018-09-24 20:03:12	@mbrubeck	yay!
2018-09-24 20:03:33	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-24 20:05:20	-->	quartz555 (quartz@moz-9e01gu.dsl.telepac.pt) has joined #rust-beginners
2018-09-24 20:06:19	<--	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has quit (Ping timeout: 121 seconds)
2018-09-24 20:06:23	<--	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 20:07:31	<--	soren (soren@moz-tt4qrg.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-09-24 20:08:11	<--	quartz55 (quartz@moz-j9irg4.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:08:40	-->	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has joined #rust-beginners
2018-09-24 20:10:26	<--	eyans (a@moz-2g324r.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-24 20:11:00	-->	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-24 20:11:49	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 20:13:05	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-24 20:14:57	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 20:15:27	<--	DaQue (Mutter@moz-qidpmh.0fk4.vsb4.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-24 20:15:43	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 20:16:15	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-24 20:16:24	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-24 20:17:19	Jezza	Ok, I don't understand that...
2018-09-24 20:17:20	Jezza	https://i.imgur.com/FAfz0I8.png
2018-09-24 20:17:30	<--	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 20:17:48	Jezza	'a doesn't last long enough, so Rust complains
2018-09-24 20:17:51	Jezza	Ok, makes sense
2018-09-24 20:17:57	Jezza	content goes out of scope, and all is well
2018-09-24 20:17:58	Jezza	BUT
2018-09-24 20:18:10	Jezza	If I inline the method, it has no issue with it.
2018-09-24 20:18:24	<--	sparky8251 (quassel@moz-dqudgl.1jj3.dq59.00c6.2601.IP) has quit (Connection closed)
2018-09-24 20:19:00	Jezza	Is it because add_content takes ownership of the returned struct, so the string would also go out of scope at the same time as the page
2018-09-24 20:19:00	Jezza	Ah
2018-09-24 20:19:05	Jezza	Nevermind, figured it out.
2018-09-24 20:19:06	Jezza	\o/
2018-09-24 20:19:22	s34n	Why would you .iter().clone()?
2018-09-24 20:19:33	Jezza	I guess I just need to add it inside the method.
2018-09-24 20:19:43	-->	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has joined #rust-beginners
2018-09-24 20:19:59	Jezza	Me?
2018-09-24 20:21:24	s34n	as in: for x in [a,b,c].iter().clone() { ... }
2018-09-24 20:21:43	s34n	why would you need to clone()?
2018-09-24 20:22:03	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 20:22:15	@mbrubeck	s34n: That shouldn't be needed.  But there's also `.iter().cloned()` which is different...
2018-09-24 20:22:26	@mbrubeck	https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned
2018-09-24 20:22:52	-->	DeltaManiac (DeltaManiac@moz-klt.uc7.172.122.IP) has joined #rust-beginners
2018-09-24 20:23:44	s34n	mbrubeck: ah. thank you. yes, my eyes missed that last little 'd'
2018-09-24 20:25:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 20:25:50	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 20:25:52	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 20:26:14	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 20:26:21	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 20:27:10	<--	DeltaManiac (DeltaManiac@moz-klt.uc7.172.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:27:43	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 20:27:45	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 20:28:33	<--	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 20:28:51	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:29:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:30:10	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-24 20:30:24	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-24 20:30:56	-->	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has joined #rust-beginners
2018-09-24 20:31:14	-->	idb (ian@moz-qmjbc0.bygrave.me.uk) has joined #rust-beginners
2018-09-24 20:31:41	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 20:31:52	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:33:48	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 20:36:25	<--	theobromine (theobromine@moz-eviega.sntcca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-24 20:36:34	-->	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has joined #rust-beginners
2018-09-24 20:38:10	<--	insidious (insidious@moz-4g30lp.resnet.uofs.edu) has quit (Quit: WeeChat 2.2)
2018-09-24 20:38:51	<--	dalley (dalley@moz-147tel.dyn6.twc.com) has quit (Ping timeout: 121 seconds)
2018-09-24 20:39:28	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 20:39:40	<--	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 20:41:37	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-24 20:42:03	-->	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has joined #rust-beginners
2018-09-24 20:42:06	<--	def (def@moz-8mkbv1.info) has quit (Quit: T Ö I H I N)
2018-09-24 20:43:18	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 20:43:35	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-09-24 20:44:42	<--	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has quit (Ping timeout: 121 seconds)
2018-09-24 20:44:54	<--	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has quit (Quit: Leaving)
2018-09-24 20:44:58	-->	dalley (dalley@moz-5ib9oe.res.spectrum.com) has joined #rust-beginners
2018-09-24 20:46:28	-->	JAlbers (jalbers@moz-u4u.63t.188.68.IP) has joined #rust-beginners
2018-09-24 20:47:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:47:29	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 20:47:34	-->	badmann (badmann@moz-r1ktcp.dpec.6een.ab88.2a02.IP) has joined #rust-beginners
2018-09-24 20:47:59	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 20:48:22	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 20:48:35	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 20:48:43	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 20:50:56	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 20:51:35	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 20:52:31	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Quit: Leaving)
2018-09-24 20:52:38	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-24 20:52:45	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-24 20:53:01	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-24 20:53:14	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-24 20:53:45	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 20:54:02	-->	yk__ (yk@moz-qrg.nem.57.178.IP) has joined #rust-beginners
2018-09-24 20:54:46	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Connection closed)
2018-09-24 20:54:52	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-24 20:55:04	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-24 20:55:15	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-24 20:55:39	<--	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 20:56:17	<--	yktor (yk@moz-k6c.bki.25.94.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:56:27	-->	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has joined #rust-beginners
2018-09-24 20:57:30	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:57:40	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 20:57:47	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 20:58:09	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 20:59:11	-->	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has joined #rust-beginners
2018-09-24 20:59:35	-->	dthul_ (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-24 21:00:12	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-24 21:01:34	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 21:01:35	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 21:03:12	<--	sfix (gtierney@moz-arpe20.codingmates.com) has quit (Quit: ZNC 1.6.2 - http://znc.in)
2018-09-24 21:04:18	<--	yk__ (yk@moz-qrg.nem.57.178.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:04:20	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 21:04:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 21:04:47	<--	JAlbers (jalbers@moz-u4u.63t.188.68.IP) has quit (Connection closed)
2018-09-24 21:07:47	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-24 21:07:52	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Client exited)
2018-09-24 21:08:02	-->	yk__ (yk@moz-qrg.nem.57.178.IP) has joined #rust-beginners
2018-09-24 21:10:27	-->	BearOfJade (Thunderbird@moz-t7lrd6.wireless.uvic.ca) has joined #rust-beginners
2018-09-24 21:11:15	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:12:55	<--	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-24 21:13:01	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-24 21:15:08	<--	ryotsu (ryotsu@moz-s4a.m2q.76.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:15:11	-->	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has joined #rust-beginners
2018-09-24 21:15:15	<--	Loonette (weechat@moz-uf2hrc.ipv6.telus.net) has quit (Client exited)
2018-09-24 21:15:30	-->	ystreet01 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has joined #rust-beginners
2018-09-24 21:15:53	<--	ystreet00 (ystreet00@moz-mkp.lgm.200.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:17:39	-->	ryotsu (ryotsu@moz-s4a.m2q.76.45.IP) has joined #rust-beginners
2018-09-24 21:18:28	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-24 21:20:05	<--	Allegretto (allegretto@moz-e1a74f.pool.digikabel.hu) has quit (Ping timeout: 121 seconds)
2018-09-24 21:20:28	-->	clarkenciel (danielclark@moz-d75.1gc.154.47.IP) has joined #rust-beginners
2018-09-24 21:21:47	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-24 21:24:33	--	U007D is now known as U007D_afk
2018-09-24 21:25:10	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-24 21:25:46	--	U007D_afk is now known as U007D
2018-09-24 21:26:50	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 21:27:14	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-24 21:29:23	-->	liquidnight (marcus@moz-quib5d.r5ho.qn0t.0c23.2a01.IP) has joined #rust-beginners
2018-09-24 21:29:46	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-24 21:30:05	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-24 21:30:37	<--	gunther (Mibbit@moz-jnb.4e8.116.140.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 21:31:05	<--	dinfuehr (dinfuehr@moz-ro1vnk.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-24 21:32:14	-->	dinfuehr (dinfuehr@moz-2pqeq8.highway.telekom.at) has joined #rust-beginners
2018-09-24 21:32:29	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-24 21:34:37	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:34:37	-->	mib_ujnn4u (Mibbit@moz-sot.hqu.149.169.IP) has joined #rust-beginners
2018-09-24 21:34:42	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 21:35:52	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:35:53	<--	donryudragoni (ryu@moz-a2o.34q.3.187.IP) has quit (Quit: WeeChat 2.2)
2018-09-24 21:36:14	-->	Allegretto (allegretto@moz-vrrl1j.pool.digikabel.hu) has joined #rust-beginners
2018-09-24 21:36:17	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:37:05	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-24 21:37:24	<--	mib_ujnn4u (Mibbit@moz-sot.hqu.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 21:38:03	-->	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has joined #rust-beginners
2018-09-24 21:38:51	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-24 21:39:05	-->	sluggo (Mibbit@moz-sot.hqu.149.169.IP) has joined #rust-beginners
2018-09-24 21:39:23	sluggo	What would be some interesting projects to write in rust ?
2018-09-24 21:39:35	--	U007D is now known as U007D_afk
2018-09-24 21:40:37	GreenJello	sluggo, whatever interests you; rust is used for everything from http servers, to games, to client side web apps
2018-09-24 21:41:52	-->	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has joined #rust-beginners
2018-09-24 21:41:53	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-24 21:44:00	sluggo	GreenJello: what exactly should I know about to make a http server ?
2018-09-24 21:44:54	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-24 21:45:06	dpc1	sluggo: http://arewewebyet.org
2018-09-24 21:46:26	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-24 21:47:43	<--	siddhartharao17 (siddharthar@moz-tuhjue.fmhv.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 21:47:56	-->	siddhartharao17 (siddharthar@moz-tuhjue.fmhv.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-24 21:48:46	<--	BearOfJade (Thunderbird@moz-t7lrd6.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-24 21:49:44	--	U007D_afk is now known as U007D
2018-09-24 21:50:51	-->	wilg (Mibbit@moz-9mdu3s.ca.comcast.net) has joined #rust-beginners
2018-09-24 21:51:38	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-24 21:52:10	<--	sluggo (Mibbit@moz-sot.hqu.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 21:52:56	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:55:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-24 21:55:27	wilg	Not sure how to use IRC super well but I'm new to Rust and am running into a situation I don't know how to handle. I'm using the ws-rs library and am having trouble figuring out how to keep references to the "Handler" around. Here's a snippet of code: https://gist.github.com/wilg/b072427f3efd5c71a2d34e5dd95d98dd
2018-09-24 21:55:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 21:55:50	wilg	Been struggling with it for the better part of a day so I would appreciate any help!
2018-09-24 21:56:18	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 21:57:07	-->	bozo (Mibbit@moz-jt1hib.fbx.proxad.net) has joined #rust-beginners
2018-09-24 21:57:19	<--	bluss (bluss@moz-jambc6.cust.tele2.se) has quit (Ping timeout: 121 seconds)
2018-09-24 21:57:43	-->	mib_q8evnc (Mibbit@moz-qb4.kg2.40.192.IP) has joined #rust-beginners
2018-09-24 21:58:08	<--	Eragon (Eragon@moz-bjkid0.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-24 21:58:10	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-24 21:58:36	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-24 21:59:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 21:59:41	<--	bozo (Mibbit@moz-jt1hib.fbx.proxad.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 21:59:45	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2018-09-24 21:59:45	--	U007D is now known as U007D_afk
2018-09-24 22:00:03	<--	mib_q8evnc (Mibbit@moz-qb4.kg2.40.192.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 22:00:22	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:00:28	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-24 22:00:42	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-24 22:00:54	<--	Xanorax (Xanorax@moz-qemh21.cust.swisscom.ch) has quit (Quit: Leaving)
2018-09-24 22:01:31	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-24 22:03:56	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 22:04:17	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 22:05:51	Aceeri_	wilg: I think it wants you to return another closure inside the closure
2018-09-24 22:06:25	Aceeri_	I'll try to find some examples of ws-rs (I'm completely unfamiliar with it so I have no idea what/how it manages and does)
2018-09-24 22:06:39	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:07:14	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-24 22:07:40	Aceeri_	wilg: you might need something like `ws::listen(format!("127.0.0.1:{}", self.port), |out| { move |msg| { Connection::new(out, self) }}).unwrap();`
2018-09-24 22:07:46	Aceeri_	will look into it a bit more though
2018-09-24 22:07:50	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 22:07:51	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 22:08:06	dgriffen	Looks like it expects anything that implements the trait `Handler`
2018-09-24 22:08:10	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 22:08:20	wilg	`Connection` in my case is a Handler
2018-09-24 22:08:22	wilg	and it works
2018-09-24 22:08:29	wilg	when i return it directly
2018-09-24 22:08:41	Aceeri_	ah alright
2018-09-24 22:08:42	wilg	but i can't figure out how to maintain a list of all the handlers
2018-09-24 22:08:52	-->	slmjkdbtl (t@moz-l9nsnm.fios.verizon.net) has joined #rust-beginners
2018-09-24 22:08:54	<--	slmjkdbtl (t@moz-l9nsnm.fios.verizon.net) has quit (Quit: Leaving.)
2018-09-24 22:09:07	Aceeri_	what do you need the list for?
2018-09-24 22:09:09	<--	siddhartharao17 (siddharthar@moz-tuhjue.fmhv.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:09:18	<--	dthul_ (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-24 22:09:52	dgriffen	wilg: is `Connection` a type you control?
2018-09-24 22:10:19	wilg	i have an external service that is listening for events, so i want to send events to particular active "Connections"/Handlers
2018-09-24 22:10:23	wilg	yes I control Conection
2018-09-24 22:10:29	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-24 22:10:42	dgriffen	You might be able to implement clone for Connection directly
2018-09-24 22:11:39	wilg	im not sure exactly how clone works but it seems like I would need a reference not a clone of it
2018-09-24 22:12:04	-->	helix (abacaxi@moz-q96skh.torproject.org) has joined #rust-beginners
2018-09-24 22:12:07	wilg	but maybe not?
2018-09-24 22:12:31	Aceeri_	wilg: are the innards of the Connection being modified and do those modifications need to be known by other threads/events/services?
2018-09-24 22:12:54	Aceeri_	if the other don't really need to know those modifications then a clone is probably fine
2018-09-24 22:13:24	wilg	yea i need to mutate it i think
2018-09-24 22:13:32	Aceeri_	the issue is that you can't implement Handler for Rc<T> T: Handler yourself I don't think
2018-09-24 22:14:01	wilg	well i am open to whatever the right architecture is, but I want to have each connection "subscribe" and "unsubscribe" from particular events
2018-09-24 22:14:03	-->	num8er (num8er@moz-6hjo0k.pppoe.byfly.by) has joined #rust-beginners
2018-09-24 22:14:24	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 22:14:59	wilg	so i need to store the subscription info somewhere, and have my external service notify all the active connections of an event if that connection is subscribed to it
2018-09-24 22:15:19	num8er	Hello guys I've such code: https://pastebin.com/rW6s3tWM
2018-09-24 22:15:30	num8er	When I run it I always get 
2018-09-24 22:16:00	num8er	http://joxi.ru/bmoBBLSxVD8Ory   Your gender is: unknown
2018-09-24 22:16:31	num8er	I'm new to Rust, but want to understand why it always matches last one?
2018-09-24 22:16:45	num8er	I'm new to Rust, I want to understand why it always matches last one?
2018-09-24 22:16:48	-->	BearOfJade (Thunderbird@moz-t7lrd6.wireless.uvic.ca) has joined #rust-beginners
2018-09-24 22:16:51	@mbrubeck	num8er: Try `string_to_gender(gender.trim())`
2018-09-24 22:16:52	<--	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has quit (Ping timeout: 121 seconds)
2018-09-24 22:17:00	Aceeri_	it probably has newlines or spaces
2018-09-24 22:17:07	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-24 22:17:11	Aceeri_	which would match to "male\n" or "male\r\n" or something
2018-09-24 22:17:12	@mbrubeck	num8er: This will trim off the newline character (and any other whitespace) from the end of the string
2018-09-24 22:17:31	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-24 22:17:38	num8er	Thank You very much :)
2018-09-24 22:17:48	num8er	forgot about it :)
2018-09-24 22:17:58	Aceeri_	wilg: are you able to show any more code or no? going to take a look at ws-rs a bit more
2018-09-24 22:19:21	-->	xurtis (curtis@moz-56vpf6.unsw.edu.au) has joined #rust-beginners
2018-09-24 22:19:21	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 22:20:04	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 22:20:13	-->	siddhartharao17 (siddharthar@moz-tuhjue.fmhv.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-24 22:20:44	wilg	i can try to make a clearer test case for you one second
2018-09-24 22:21:09	-->	BearOfJade1 (Thunderbird@moz-t7lrd6.wireless.uvic.ca) has joined #rust-beginners
2018-09-24 22:21:10	<--	BearOfJade (Thunderbird@moz-t7lrd6.wireless.uvic.ca) has quit (Client exited)
2018-09-24 22:21:10	--	BearOfJade1 is now known as BearOfJade
2018-09-24 22:22:23	<--	yk__ (yk@moz-qrg.nem.57.178.IP) has quit (Connection closed)
2018-09-24 22:22:32	-->	yk__ (yk@moz-qrg.nem.57.178.IP) has joined #rust-beginners
2018-09-24 22:22:36	-->	curtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-24 22:23:33	<--	xurtis (curtis@moz-56vpf6.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-24 22:25:22	wilg	OK, here's a working main.rs with a TODO where I can't figure out how to make the change: https://gist.github.com/wilg/b072427f3efd5c71a2d34e5dd95d98dd#file-main-rs
2018-09-24 22:25:28	<--	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:25:30	wilg	thank you very much by the way!
2018-09-24 22:25:41	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-24 22:26:38	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-24 22:27:01	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 22:27:17	-->	alx741 (alx741@moz-9ki.0fs.196.181.IP) has joined #rust-beginners
2018-09-24 22:28:14	-->	reedhhw (reedhhw@moz-g253lb.743g.lmnd.1702.2600.IP) has joined #rust-beginners
2018-09-24 22:28:39	dgriffen	wilg: why does your connection need a reference to the server?
2018-09-24 22:29:11	<--	reedhhw (reedhhw@moz-g253lb.743g.lmnd.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 22:31:29	-->	reedhhw (reedhhw@moz-g253lb.743g.lmnd.1702.2600.IP) has joined #rust-beginners
2018-09-24 22:31:46	wilg	there might be a way to rework it, but Server contains some information about the game state
2018-09-24 22:32:06	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:32:37	wilg	do you think it is causing an issue keeping a reference to the server?
2018-09-24 22:33:17	@mbrubeck	wilg: If Server has a list of Connections, and each Connection has a reference to the Server, you have cyclic references, which get tricky in Rust
2018-09-24 22:33:56	wilg	i could maybe rework that so that the connection gets a reference to the resources it cares about directly
2018-09-24 22:35:09	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-09-24 22:35:49	<--	badmann (badmann@moz-r1ktcp.dpec.6een.ab88.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:36:22	<--	yk__ (yk@moz-qrg.nem.57.178.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:36:26	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-24 22:37:58	<--	amcorvi (AMC@moz-d2lqr1.dyn.optonline.net) has quit (Quit: WeeChat 1.9)
2018-09-24 22:38:05	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:38:26	<--	reedhhw (reedhhw@moz-g253lb.743g.lmnd.1702.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-24 22:38:28	-->	reedhhw (reedhhw@moz-g253lb.743g.lmnd.1702.2600.IP) has joined #rust-beginners
2018-09-24 22:38:40	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-24 22:39:42	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-24 22:40:00	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-24 22:40:14	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 22:41:57	<--	user404d (quincycondu@moz-niui7i.carfax.com) has quit (Ping timeout: 121 seconds)
2018-09-24 22:42:00	<--	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has quit (Quit: Leaving)
2018-09-24 22:42:23	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-24 22:42:32	<--	reedhhw (reedhhw@moz-g253lb.743g.lmnd.1702.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-24 22:42:58	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 22:43:19	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 22:43:40	<--	BearOfJade (Thunderbird@moz-t7lrd6.wireless.uvic.ca) has quit (Client exited)
2018-09-24 22:44:17	-->	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has joined #rust-beginners
2018-09-24 22:44:24	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:45:13	-->	mib_pg4546 (Mibbit@moz-l3u.m8d.219.66.IP) has joined #rust-beginners
2018-09-24 22:45:14	-->	quibbit (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-24 22:46:14	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-24 22:47:06	<--	mib_pg4546 (Mibbit@moz-l3u.m8d.219.66.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 22:47:29	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-24 22:49:32	<--	quibbit (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 22:53:38	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 22:54:52	-->	badmann (badmann@moz-buakie.dpec.6een.ab88.2a02.IP) has joined #rust-beginners
2018-09-24 22:55:08	-->	jamadazi (jamadazi@moz-o6391e.ddns.bulsat.com) has joined #rust-beginners
2018-09-24 22:55:15	-->	autoferrit (uid142250@moz-88e5vo.brockwell.irccloud.com) has joined #rust-beginners
2018-09-24 22:55:21	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 22:55:27	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:55:42	-->	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has joined #rust-beginners
2018-09-24 22:55:49	jamadazi	what is the idiomatic way to format a byte slice (&[u8]) as a hexadecimal string?
2018-09-24 22:56:58	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 22:57:40	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-24 23:00:00	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-24 23:00:15	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 23:00:17	-->	martin2 (martin@moz-sbrci1.anteldata.net.uy) has joined #rust-beginners
2018-09-24 23:01:06	-->	orph (orph@moz-3fp8td.sub-174-207-14.myvzw.com) has joined #rust-beginners
2018-09-24 23:01:18	<--	jamadazi (jamadazi@moz-o6391e.ddns.bulsat.com) has quit (Quit: WeeChat 2.2)
2018-09-24 23:02:24	<--	npmccallum (npmccallum@moz-d8863v.redhat.com) has quit (Client exited)
2018-09-24 23:02:32	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 23:03:04	<--	curtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-24 23:03:17	stephaneyfx	jamadazi: There's {:x?} but it doesn't show it as a string with quotes: https://play.rust-lang.org/?gist=b9de483379dc3f44bfe19130ce1a366c&version=stable&mode=debug&edition=2015
2018-09-24 23:03:22	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-24 23:03:44	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 23:05:12	<--	orph (orph@moz-3fp8td.sub-174-207-14.myvzw.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 23:06:30	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-24 23:06:37	-->	Fishrock123 (Fishrock123@moz-to8hlh.dsl.bell.ca) has joined #rust-beginners
2018-09-24 23:06:40	<--	Fishrock123 (Fishrock123@moz-to8hlh.dsl.bell.ca) has quit (Connection closed)
2018-09-24 23:07:40	-->	plusone (custom@moz-j7u.pcq.142.94.IP) has joined #rust-beginners
2018-09-24 23:07:54	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-24 23:11:29	GreenJello	the formatting stuff is pretty cool, but wasted some time because I only had one of the Write traits imported haha https://play.rust-lang.org/?gist=3934505b4b0ccf5909c64179ed071fb1&version=stable&mode=debug&edition=2015
2018-09-24 23:11:56	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-24 23:12:04	-->	orph (orph@moz-9fs189.aj9h.k8ir.100c.2600.IP) has joined #rust-beginners
2018-09-24 23:12:49	<--	siddhartharao17 (siddharthar@moz-tuhjue.fmhv.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 23:13:06	-->	siddhartharao17 (siddharthar@moz-tuhjue.fmhv.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-24 23:13:10	<--	plusone (custom@moz-j7u.pcq.142.94.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 23:13:34	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-24 23:13:36	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-24 23:13:36	emerentius	extern crate hex; hex::encode(&[u8])
2018-09-24 23:14:17	emerentius	but jamadazi is gone anyway
2018-09-24 23:15:47	GreenJello	hmm, I wonder if my print_hex would be much slower than a building a string and doing one write operation to stdout
2018-09-24 23:15:50	wilg	it seems like maybe my problem from earlier can be solved by implementing the trait on a Box or Rc of my Handler (based on this: https://users.rust-lang.org/t/why-does-mytrait-not-implement-mytrait/5285)
2018-09-24 23:16:32	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-24 23:20:34	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-24 23:21:15	wilg	well maybe not, it doesn't work with Rc
2018-09-24 23:24:00	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 23:24:48	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-24 23:25:29	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-24 23:25:48	wilg	"only traits defined in the current crate can be implemented for arbitrary types"
2018-09-24 23:27:44	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-24 23:28:03	stephaneyfx	wilg: May you share your code on the playground?
2018-09-24 23:28:05	<--	Dariost (Dariost@moz-qdr.511.48.151.IP) has quit (Client exited)
2018-09-24 23:29:35	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 23:29:40	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-24 23:29:49	wilg	the playground doesn't have the right library, but the code is at https://gist.github.com/wilg/b072427f3efd5c71a2d34e5dd95d98dd
2018-09-24 23:31:28	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (The TLS connection was non-properly terminated.)
2018-09-24 23:31:40	-->	jperras (jperras@moz-lfg.mjm.190.192.IP) has joined #rust-beginners
2018-09-24 23:31:49	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-24 23:32:22	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-24 23:33:10	stephaneyfx	wilg: You could define `struct ConnectionRc<'a>(Rc<Connection<'a>>);` and impl Handler for it
2018-09-24 23:33:30	stephaneyfx	wilg: That should get you past this error you quoted
2018-09-24 23:34:36	wilg	oh interesting
2018-09-24 23:35:48	-->	mib_48yj87 (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-24 23:35:53	<--	orph (orph@moz-9fs189.aj9h.k8ir.100c.2600.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-24 23:35:55	<--	oats (oats@moz-ebn.8go.99.167.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-24 23:36:05	mib_48yj87	Can someone help me figure out the right Type Parameter to use for this function https://play.rust-lang.org/?gist=57888cb4b9dc5faa3aec29d8cc77c592&version=nightly&mode=debug&edition=2015
2018-09-24 23:36:21	mib_48yj87	generics()
2018-09-24 23:36:49	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-24 23:37:01	wilg	stephaneyfx: how do I create a ConnectionRc in that case? And what that struct syntax?
2018-09-24 23:37:30	stephaneyfx	wilg: That's a tuple struct, but you could just use a regular struct with a named field.
2018-09-24 23:37:53	durka42	mib_48yj87: why do you want to use a generic? syn::Item isn't a trait
2018-09-24 23:38:17	stephaneyfx	wilg: If using a tuple struct, you create the Rc (let's bind it to r) and do `let c = ConnectionRc(r);`
2018-09-24 23:38:17	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-24 23:38:20	wilg	ah i see
2018-09-24 23:38:50	mib_48yj87	Okay so I actually want to work on Item Variants but when I do this as well it does not work generics(item: syn::Item)
2018-09-24 23:39:14	durka42	yeah, it's an enum
2018-09-24 23:39:23	mib_48yj87	I think its because Item::Fn and Item::Impl are behind macros
2018-09-24 23:39:33	durka42	that's not why
2018-09-24 23:39:43	durka42	on line 35 you are passing an ItemFn
2018-09-24 23:39:52	durka42	and on line 38 you are passing an ItemImpl
2018-09-24 23:39:55	mib_48yj87	ItemFn is an Item
2018-09-24 23:39:56	durka42	those are not the same type
2018-09-24 23:40:01	mib_48yj87	I cant constrain on an enum?
2018-09-24 23:40:13	durka42	no, ItemFn is its own struct https://docs.rs/syn/0.15.6/syn/struct.ItemFn.html
2018-09-24 23:40:19	durka42	no, you can only constrain on traits
2018-09-24 23:40:35	mib_48yj87	foo(e: EnumType) can I then pass any variant of EnumType to foo?
2018-09-24 23:40:39	durka42	correct
2018-09-24 23:40:57	durka42	I think you probably want to reorganize the code by moving the `match` into the function
2018-09-24 23:41:07	durka42	then you can get at the fields of the ItemFn or the ItemImpl more easily
2018-09-24 23:41:14	-->	cutai (Mibbit@moz-v40n9t.dsl.tropolys.de) has joined #rust-beginners
2018-09-24 23:41:17	mib_48yj87	so can I do this generics(i: Item) and then match item { Item::Fn(_) => generics(item)
2018-09-24 23:41:36	mib_48yj87	item is Item
2018-09-24 23:41:42	mib_48yj87	generics(i: Item) seems to check out
2018-09-24 23:41:54	durka42	right
2018-09-24 23:42:01	mib_48yj87	okay I think Im putting it together
2018-09-24 23:42:23	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Connection closed)
2018-09-24 23:42:27	-->	plusone (custom@moz-j7u.pcq.142.94.IP) has joined #rust-beginners
2018-09-24 23:42:51	-->	enterprisey (enterprisey@moz-gcd1tm.cit.cornell.edu) has joined #rust-beginners
2018-09-24 23:42:52	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Connection closed)
2018-09-24 23:43:13	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-24 23:43:31	mib_48yj87	anyway I would have been able to pass a enum's variant "inner type"? like if I define enum Enum { Variant(InnerType), Variant2(InnerType2) } into a function? Something like an associated type for enums
2018-09-24 23:43:37	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-24 23:44:20	<--	oms (oms@moz-3aqfpv.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-24 23:44:42	mib_48yj87	let me put it this way
2018-09-24 23:45:20	--	U007D_afk is now known as U007D
2018-09-24 23:45:22	mib_48yj87	that code inside generics() is going to get repeated over and over again for several variants of Item, not just Item::Fn and Item::Impl
2018-09-24 23:45:40	mib_48yj87	anyway to reuse that somehow?
2018-09-24 23:46:04	durka42	yeah, you can pull out things you need from the Item like this, before the common code https://play.rust-lang.org/?gist=58d89f096fb844630c4448777d78b55b&version=nightly&mode=debug&edition=2015
2018-09-24 23:46:37	-->	Kisoku (Kisoku@moz-fkq2oi.dhcp.inet.fi) has joined #rust-beginners
2018-09-24 23:47:01	durka42	(not sure why that code doesn't compile yet)
2018-09-24 23:47:18	<--	cutai (Mibbit@moz-v40n9t.dsl.tropolys.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-24 23:47:27	mib_48yj87	it needs  RUSTFLAGS='--cfg procmacro2_semver_exempt'
2018-09-24 23:47:32	mib_48yj87	thats fine
2018-09-24 23:47:35	durka42	oh
2018-09-24 23:47:50	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-24 23:47:51	mib_48yj87	the way you did is pretty good tho
2018-09-24 23:48:10	mib_48yj87	early return
2018-09-24 23:48:14	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 23:49:09	mib_48yj87	though I wish there was a way to take everything from line 13 on in that function and generalize it somehow for types Item::Fn and Item::Impl and Item::Trait and so on..
2018-09-24 23:49:26	mib_48yj87	generics(T: Item::Fn | Item::impl | ....
2018-09-24 23:49:56	mib_48yj87	They all contain the same fields
2018-09-24 23:50:28	durka42	but the variants contain different types though
2018-09-24 23:50:39	durka42	a macro could do the source-level repetition
2018-09-24 23:52:34	mib_48yj87	Different only by name really, the fields are the same. fields of same name and same types.
2018-09-24 23:52:47	mib_48yj87	vairants are diff by name fields are not i mean
2018-09-24 23:53:03	mib_48yj87	with some variation 
2018-09-24 23:53:26	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-24 23:53:40	mib_48yj87	I guess I could also encapsulate those enum variants in a struct and operate on those fields through methods 
2018-09-24 23:54:14	<--	xet7 (xet7@moz-k1d136.rev.dnainternet.fi) has quit (Quit: Leaving)
2018-09-24 23:54:14	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-24 23:54:24	mib_48yj87	would still need to do a pattern match in each of the methods though. yeah i guess a macro is the way to go
2018-09-24 23:54:42	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-24 23:54:47	<--	Albori_Sninvel (Albori@moz-81c7rh.fidnet.com) has quit (Client exited)
2018-09-24 23:55:22	--	U007D is now known as U007D_afk
2018-09-24 23:56:28	<--	chrisdotcode (quassel@moz-2sk6sd.jv55.dlrr.fcc8.2607.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-24 23:57:14	<--	ncv (ncv@moz-g0a17o.party) has quit (The TLS connection was non-properly terminated.)
2018-09-24 23:57:44	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-24 23:57:51	<--	dowwie (dowwie@moz-kia.3q0.129.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:00:26	-->	himi (sjjf@moz-psjk59.anu.edu.au) has joined #rust-beginners
2018-09-25 00:00:34	<--	mib_48yj87 (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 00:01:38	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 00:01:45	-->	siddhart_ (siddharthar@moz-9f5gve.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-25 00:02:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 00:02:19	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 00:03:14	blackbeard420	Im having an issue compiling rustc from a clean git clone, failing when building llvm cmake says host compiler needs to support std::atomic. my host compiler gcc/g++ 8.2.0 does have std::atomic yet cmake is not finding it
2018-09-25 00:03:17	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:04:16	<--	AtumT (IRC@moz-7f8cuc.gvt.net.br) has quit (Client exited)
2018-09-25 00:04:42	<--	siddhartharao17 (siddharthar@moz-tuhjue.fmhv.oelm.0420.2001.IP) has quit (Connection closed)
2018-09-25 00:05:28	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:06:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:07:22	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 00:08:47	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-25 00:10:12	<--	marmotini_ (marmotini@moz-1gplvu.fios.verizon.net) has quit (Connection closed)
2018-09-25 00:12:27	-->	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 00:21:00	<--	snowe (snowe@moz-ri3.15m.177.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:21:33	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-25 00:25:04	-->	kurikaesu (arenvillanu@moz-2591bj.aapt.com.au) has joined #rust-beginners
2018-09-25 00:28:20	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:29:47	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-25 00:32:42	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-09-25 00:33:00	<--	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has quit (Ping timeout: 121 seconds)
2018-09-25 00:33:10	-->	pixlark (pixlark@moz-q8fqjn.us.northamericancoax.com) has joined #rust-beginners
2018-09-25 00:36:40	-->	siddhartharao17 (siddharthar@moz-sh38sm.36nh.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-25 00:38:47	<--	siddhart_ (siddharthar@moz-9f5gve.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:39:11	kurikaesu	Hi everyone, still trying to get my head around immutability in rust. I have this example: https://play.rust-lang.org/?gist=b5be6f8f22a121ecdab4f57bbe5f1675&version=stable&mode=debug&edition=2015
2018-09-25 00:39:16	-->	JAlbers (jalbers@moz-8u1sgb.dhcp.chtrptr.net) has joined #rust-beginners
2018-09-25 00:39:23	kurikaesu	What is the correct way to mutate n.data?
2018-09-25 00:40:49	stephaneyfx	kurikaesu: You can't mutate through Rc unless you use interior mutability through a *Cell type
2018-09-25 00:41:20	kurikaesu	that requires the struct’s data property to be defined as RefCel<i32> for example?
2018-09-25 00:41:30	stephaneyfx	Yes
2018-09-25 00:42:33	stephaneyfx	Rc works the way it does because it allows you to share data
2018-09-25 00:43:34	stephaneyfx	If it allowed you to mutate this data, it means you'd be able to mutably alias it which is not allowed in Rust
2018-09-25 00:44:28	stephaneyfx	If you know this is the only Rc to the data, you can call try_unwrap to get the T value back and modify it
2018-09-25 00:44:58	stephaneyfx	There's also Rc::get_mut
2018-09-25 00:45:01	<--	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:47:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 00:47:57	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-25 00:48:00	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-25 00:48:15	-->	AtumT (IRC@moz-7f8cuc.gvt.net.br) has joined #rust-beginners
2018-09-25 00:49:29	seijikun	While already on that topic: Is there a way to tell the rust compiler that having multiple mutable references to the same struct is no problem?
2018-09-25 00:49:41	<--	quartz555 (quartz@moz-9e01gu.dsl.telepac.pt) has quit (Ping timeout: 121 seconds)
2018-09-25 00:49:48	seijikun	I thought that's what        unsafe impl Sync for TranscodeJobManager {}      was for.
2018-09-25 00:50:06	durka42	no, because it's always a problem ):
2018-09-25 00:50:54	seijikun	So one will always have to use an   atomically reference counted mutex around the type in question?
2018-09-25 00:51:41	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:51:56	kurikaesu	Thanks! that makes a lot of sense now
2018-09-25 00:52:14	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 00:52:15	stephaneyfx	You're welcome
2018-09-25 00:52:32	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 00:52:52	-->	insidious (insidious@moz-ur8el8.resnet.scranton.edu) has joined #rust-beginners
2018-09-25 00:53:06	durka42	seijikun: that's the easiest way to synchronize mutable access, but there are other ways
2018-09-25 00:53:18	durka42	and you can use UnsafeCell
2018-09-25 00:53:25	durka42	but... it's unsafe :)
2018-09-25 00:53:44	-->	chrisdotcode (quassel@moz-2sk6sd.jv55.dlrr.fcc8.2607.IP) has joined #rust-beginners
2018-09-25 00:53:56	@mbrubeck	seijikun: If you use `UnsafeCell<T>` then it's allowed as long as you have some way to prevent data races
2018-09-25 00:54:19	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 00:54:21	seijikun	Ah, perfect. I like to live dangerously. Thanks! :)
2018-09-25 00:54:27	-->	converge (converge@moz-671.21j.161.131.IP) has joined #rust-beginners
2018-09-25 00:55:17	@mbrubeck	seijikun: All of the standard shared-mutable types (Cell, RefCell, Mutex, RwLock, AtomicUsize, etc.) use UnsafeCell internally and then use various techniques to prevent data races
2018-09-25 00:55:44	durka42	out of curiosity, what's so special about this type that makes you feel confident living dangerously?
2018-09-25 00:56:44	seijikun	mbrubeck: That's interesting. Is UnsafeCell an actual object or a compiler feature, then?
2018-09-25 00:58:09	durka42	both
2018-09-25 00:58:17	durka42	it's a struct with special status in the compiler's eyes
2018-09-25 00:58:31	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-25 00:59:51	-->	rodorgas (rodrigoorem@moz-0ee.ubg.95.177.IP) has joined #rust-beginners
2018-09-25 01:00:16	seijikun	durka42: It's probably because I'm as bullheaded as the borrow checker. I try to slowly adapt to rust's principles without losing too much productivity.
2018-09-25 01:00:52	seijikun	durka42: It's not working though. I'm terribly unproductive. :)
2018-09-25 01:00:53	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-25 01:01:00	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-25 01:02:08	durka42	yeah, end-running the borrow checker usually isn't a good idea
2018-09-25 01:05:27	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-25 01:05:28	converge	You guys just like rust because the code doesn't look so obvious like python
2018-09-25 01:06:05	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-25 01:06:47	@mbrubeck	no trolling please
2018-09-25 01:08:18	converge	Just kidding
2018-09-25 01:08:39	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-25 01:09:02	-->	cp (cp@moz-4f5h05.asahi-net.or.jp) has joined #rust-beginners
2018-09-25 01:11:14	-->	zmt99 (zmt@moz-4hm9il.g40m.cfl6.1700.2600.IP) has joined #rust-beginners
2018-09-25 01:21:18	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-25 01:24:31	<--	autoferrit (uid142250@moz-88e5vo.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 01:24:47	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 01:24:52	<--	badmann (badmann@moz-buakie.dpec.6een.ab88.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 01:24:55	<--	wilg (Mibbit@moz-9mdu3s.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 01:25:02	<--	clarkenciel (danielclark@moz-d75.1gc.154.47.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 01:25:13	-->	siddhart_ (siddharthar@moz-9f5gve.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-25 01:25:15	kurikaesu	If I was trying to implement a binary tree in Rust where my struct would need to self itself like: left: RefCell<Option<Rc<Node>>>
2018-09-25 01:25:18	<--	siddhart_ (siddharthar@moz-9f5gve.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 01:25:27	kurikaesu	first, is that the optimal way to represent the left and right pointers?
2018-09-25 01:26:27	<--	opn (opn@moz-kpi26j.us.northamericancoax.com) has quit (Client exited)
2018-09-25 01:27:35	<--	dorfsmay (dorfsmay@moz-84c6hk.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-25 01:28:42	<--	siddhartharao17 (siddharthar@moz-sh38sm.36nh.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 01:29:52	@mbrubeck	kurikaesu: I'd consider Option<Rc<RefCell<Node>>>
2018-09-25 01:30:53	<--	AtumT (IRC@moz-7f8cuc.gvt.net.br) has quit (Client exited)
2018-09-25 01:32:22	@mbrubeck	It's more idiomatic, though I'm not certain whether there's a good rationale, or if it's just by convention...
2018-09-25 01:32:37	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-25 01:33:02	@mbrubeck	It makes it a bit easier to call `&mut` methods on the Node
2018-09-25 01:33:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 01:33:16	@mbrubeck	since you don't need to use Rc::get_mut
2018-09-25 01:33:50	-->	sam404 (Mibbit@moz-4epf7p.dsl.as9105.com) has joined #rust-beginners
2018-09-25 01:34:27	<--	zmt99 (zmt@moz-4hm9il.g40m.cfl6.1700.2600.IP) has quit (Connection closed)
2018-09-25 01:34:36	<--	CensoredUsername (TheNSA@moz-gd0gah.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-25 01:34:47	<--	lnoid (lnoid@moz-n5n5kv.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-25 01:34:53	<--	Frans-Willem (quassel@moz-oa4g6h.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-25 01:35:15	<--	enterprisey (enterprisey@moz-gcd1tm.cit.cornell.edu) has quit (Ping timeout: 121 seconds)
2018-09-25 01:36:00	<--	pixlark (pixlark@moz-q8fqjn.us.northamericancoax.com) has quit (Ping timeout: 121 seconds)
2018-09-25 01:36:04	-->	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has joined #rust-beginners
2018-09-25 01:36:09	-->	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-25 01:36:16	-->	zmt99 (zmt@moz-4hm9il.g40m.cfl6.1700.2600.IP) has joined #rust-beginners
2018-09-25 01:37:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 01:37:35	<--	Sgeo (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-25 01:37:37	@mbrubeck	example: https://play.rust-lang.org/?gist=16a2d51b2840715ead35ee4d0f71dc21&version=stable&mode=debug&edition=2015
2018-09-25 01:37:38	@mbrubeck	versus https://play.rust-lang.org/?gist=f7dd680f076ef6a53df89b9378d5c483&version=stable&mode=debug&edition=2015
2018-09-25 01:37:42	<--	jperras (jperras@moz-lfg.mjm.190.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 01:39:32	kurikaesu	Ok I see, second is far more cleaner
2018-09-25 01:39:41	-->	Sgeo__ (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-25 01:39:45	<--	sam404 (Mibbit@moz-4epf7p.dsl.as9105.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 01:39:53	<--	converge (converge@moz-671.21j.161.131.IP) has quit (Quit: Leaving)
2018-09-25 01:40:00	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 01:41:35	<--	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-25 01:42:14	-->	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has joined #rust-beginners
2018-09-25 01:43:26	<--	JAlbers (jalbers@moz-8u1sgb.dhcp.chtrptr.net) has quit (Connection closed)
2018-09-25 01:43:44	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-25 01:45:13	-->	Raychen (Thunderbird@moz-14l.9q5.175.61.IP) has joined #rust-beginners
2018-09-25 01:45:40	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 01:46:18	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 01:52:37	<--	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has quit (Ping timeout: 121 seconds)
2018-09-25 01:55:41	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-25 01:56:20	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-25 01:56:29	-->	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 01:57:37	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-25 01:57:55	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-25 01:59:09	<--	liquidnight (marcus@moz-quib5d.r5ho.qn0t.0c23.2a01.IP) has quit (Connection closed)
2018-09-25 01:59:22	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-25 01:59:53	<--	plusone (custom@moz-j7u.pcq.142.94.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 02:00:13	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 02:00:27	-->	ksqsf_ (ksqsf@moz-dv99lg.h0dd.vs72.0da8.2001.IP) has joined #rust-beginners
2018-09-25 02:01:12	-->	CensoredUsername (TheNSA@moz-gd0gah.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-25 02:01:42	-->	Frans-Willem (quassel@moz-oa4g6h.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-25 02:01:54	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 02:01:57	<--	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 02:02:18	-->	lnoid (lnoid@moz-n5n5kv.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-25 02:02:34	<--	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-25 02:03:22	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 02:03:53	<--	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-25 02:04:00	<--	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-25 02:09:07	-->	sp1ff (sp1ff@moz-argrt0.3i8v.at4v.0119.2620.IP) has joined #rust-beginners
2018-09-25 02:09:18	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 02:09:31	<--	asyncsec (asyncsec@moz-hfabhf.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 02:09:41	<--	OtterCoder (emmett@moz-jli0t7.245.sfcn.org) has quit (Quit: Konversation terminated!)
2018-09-25 02:10:26	<--	ksqsf_ (ksqsf@moz-dv99lg.h0dd.vs72.0da8.2001.IP) has quit (Client exited)
2018-09-25 02:10:30	-->	bemeurer (bemeurer@moz-4i7ghr.i1jn.j4s3.8802.2600.IP) has joined #rust-beginners
2018-09-25 02:11:39	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 02:12:19	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 02:13:20	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-25 02:14:36	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-25 02:16:44	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 02:17:17	-->	starblue1 (juergen@moz-l3ilvb.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-25 02:17:59	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 02:18:06	<--	num8er (num8er@moz-6hjo0k.pppoe.byfly.by) has quit (Connection closed)
2018-09-25 02:18:28	-->	num8er (num8er@moz-6hjo0k.pppoe.byfly.by) has joined #rust-beginners
2018-09-25 02:18:33	<--	starblue (juergen@moz-3ecfc8.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-25 02:18:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 02:19:07	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 02:20:07	-->	zmt98 (zmt@moz-8tf6vi.g40m.cfl6.1700.2600.IP) has joined #rust-beginners
2018-09-25 02:21:17	<--	bemeurer (bemeurer@moz-4i7ghr.i1jn.j4s3.8802.2600.IP) has quit (Quit: WeeChat 2.2)
2018-09-25 02:22:09	-->	enterprisey (enterprisey@moz-gcd1tm.cit.cornell.edu) has joined #rust-beginners
2018-09-25 02:22:30	<--	num8er (num8er@moz-6hjo0k.pppoe.byfly.by) has quit (Ping timeout: 121 seconds)
2018-09-25 02:22:32	<--	sp1ff (sp1ff@moz-argrt0.3i8v.at4v.0119.2620.IP) has quit (Quit: WeeChat 2.2)
2018-09-25 02:22:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 02:23:35	<--	zmt99 (zmt@moz-4hm9il.g40m.cfl6.1700.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 02:23:47	-->	danecando (danecando@moz-mc6via.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-25 02:32:28	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-25 02:33:09	-->	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 02:33:46	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-25 02:34:03	-->	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has joined #rust-beginners
2018-09-25 02:39:25	<--	weeji (jihi@moz-96eiq0.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-25 02:41:01	<--	rodorgas (rodrigoorem@moz-0ee.ubg.95.177.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 02:41:25	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-25 02:41:46	-->	supermedia_art (supermedia_@moz-pdj73t.ipv4.nycmesh.net) has joined #rust-beginners
2018-09-25 02:42:11	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-25 02:44:30	-->	Herby_ (Herby@moz-i9floe.co.comcast.net) has joined #rust-beginners
2018-09-25 02:44:35	Herby_	 o/
2018-09-25 02:44:56	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-25 02:47:14	<--	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 02:52:18	-->	weeji (jihi@moz-fj5d52.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 02:52:42	orph	is there a general event signaling pattern for rust? just using channels?
2018-09-25 02:53:06	-->	num8er (num8er@moz-6hjo0k.pppoe.byfly.by) has joined #rust-beginners
2018-09-25 02:53:50	orph	events signaling is usually multi consumer so not really a good fit for channels
2018-09-25 02:54:08	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-25 02:55:33	-->	backnforth (backnforth@moz-408.4qb.254.104.IP) has joined #rust-beginners
2018-09-25 02:55:38	<--	martin2 (martin@moz-sbrci1.anteldata.net.uy) has quit (Quit: WeeChat 2.1)
2018-09-25 02:55:46	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-25 02:57:51	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-25 02:58:22	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 02:58:23	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-25 02:59:42	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-25 02:59:54	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 02:59:55	-->	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has joined #rust-beginners
2018-09-25 03:01:02	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 03:01:03	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 03:01:06	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 03:02:19	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-25 03:02:34	<--	backnforth (backnforth@moz-408.4qb.254.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 03:03:12	-->	kimundi- (kimundi@moz-8a3qg0.versanet.de) has joined #rust-beginners
2018-09-25 03:03:28	-->	ufobat_ (Martin@moz-dgj40i.dyn.telefonica.de) has joined #rust-beginners
2018-09-25 03:04:02	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 03:04:20	<--	kimundi (kimundi@moz-3q7qer.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-25 03:04:20	--	kimundi- is now known as kimundi
2018-09-25 03:06:47	<--	ufobat___ (Martin@moz-ajprc8.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-25 03:08:10	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 03:09:34	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 03:09:38	<--	blackgoat (blackgoat@moz-59h.458.150.121.IP) has quit (Quit: WeeChat 2.2)
2018-09-25 03:09:46	-->	neal (neal@moz-fj4r48.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 03:10:18	-->	slmjkdbtl (t@moz-l9nsnm.fios.verizon.net) has joined #rust-beginners
2018-09-25 03:10:22	<--	slmjkdbtl (t@moz-l9nsnm.fios.verizon.net) has quit (Quit: Leaving.)
2018-09-25 03:10:54	<--	supermedia_art (supermedia_@moz-pdj73t.ipv4.nycmesh.net) has quit (Ping timeout: 121 seconds)
2018-09-25 03:12:06	-->	ibrokemypie (conor@moz-3es.ae8.124.1.IP) has joined #rust-beginners
2018-09-25 03:12:08	-->	sp1ff (sp1ff@moz-argrt0.3i8v.at4v.0119.2620.IP) has joined #rust-beginners
2018-09-25 03:12:33	-->	bajr_ (bajr@moz-6aqjmm.cat.pdx.edu) has joined #rust-beginners
2018-09-25 03:12:36	<--	bajr_ (bajr@moz-6aqjmm.cat.pdx.edu) has quit (Quit: leaving)
2018-09-25 03:12:44	<--	neal_ (neal@moz-ej61pe.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-25 03:13:36	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-25 03:14:39	-->	mib_akvn9x (Mibbit@moz-u7htio.rlghnc.sbcglobal.net) has joined #rust-beginners
2018-09-25 03:17:48	<--	sp1ff (sp1ff@moz-argrt0.3i8v.at4v.0119.2620.IP) has quit (Connection closed)
2018-09-25 03:17:50	-->	sp1ff_ (sp1ff@moz-la8hv5.3i8v.at4v.0119.2620.IP) has joined #rust-beginners
2018-09-25 03:18:24	<--	chrisdotcode (quassel@moz-2sk6sd.jv55.dlrr.fcc8.2607.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 03:22:19	<--	mib_akvn9x (Mibbit@moz-u7htio.rlghnc.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 03:23:02	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-25 03:24:31	stephaneyfx	orph: I think there are a bus crate and some mpmc channel crates. You can also use an event loop (e.g. winit uses one).
2018-09-25 03:26:18	<--	kurikaesu (arenvillanu@moz-2591bj.aapt.com.au) has quit (Client exited)
2018-09-25 03:27:13	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-25 03:27:16	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 03:27:45	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 03:28:43	orph	@stephaneyfx: bus looks useful, thanks!
2018-09-25 03:28:58	stephaneyfx	You're welcome :)
2018-09-25 03:29:09	ibrokemypie	any ideas why cargo fails to link a .a library that it builds?
2018-09-25 03:29:34	stephaneyfx	ibrokemypie: What is the error?
2018-09-25 03:29:40	ibrokemypie	heres the build.rs
2018-09-25 03:29:42	ibrokemypie	https://bpaste.net/show/6efe0e67810f
2018-09-25 03:29:56	ibrokemypie	error is error: could not find native static library `/Users/conor/Dropbox/ConorsStuff/makeppkg/target/debug/build/makeppkg-4ac4db3b87469364/out/build/libpkgparse.a`, perhaps an -L flag is missing?
2018-09-25 03:30:21	ibrokemypie	that file is definitely there though
2018-09-25 03:34:50	ibrokemypie	ah, got it I think
2018-09-25 03:35:03	stephaneyfx	What was the issue?
2018-09-25 03:35:44	ibrokemypie	needed println!("cargo:rustc-link-search={}/build", dst.display());
2018-09-25 03:35:48	ibrokemypie	in the build script
2018-09-25 03:42:43	stephaneyfx	Ok, thanks
2018-09-25 03:45:25	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-25 03:45:46	-->	zmt99 (zmt@moz-hlnnv0.g40m.cfl6.1700.2600.IP) has joined #rust-beginners
2018-09-25 03:47:02	<--	alx741 (alx741@moz-9ki.0fs.196.181.IP) has quit (Client exited)
2018-09-25 03:47:35	<--	zmt98 (zmt@moz-8tf6vi.g40m.cfl6.1700.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 03:49:11	<--	ibrokemypie (conor@moz-3es.ae8.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 03:49:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 03:49:33	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 03:51:48	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-25 03:53:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 03:54:15	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-25 03:59:33	-->	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 04:00:57	<--	niconii (nicole@moz-tbcij4.midco.net) has quit (Quit: leaving)
2018-09-25 04:04:16	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 04:04:46	<--	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 04:05:33	<--	maarten (maartenBE@moz-p01hcr.access.telenet.be) has quit (Ping timeout: 121 seconds)
2018-09-25 04:06:17	-->	subhojit777 (subhojit777@moz-bup.m30.225.110.IP) has joined #rust-beginners
2018-09-25 04:06:44	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-25 04:06:47	-->	maarten (maartenBE@moz-61h3to.access.telenet.be) has joined #rust-beginners
2018-09-25 04:07:31	<--	subhojit777 (subhojit777@moz-bup.m30.225.110.IP) has quit (Connection closed)
2018-09-25 04:07:58	-->	subhojit777 (subhojit777@moz-bup.m30.225.110.IP) has joined #rust-beginners
2018-09-25 04:09:09	-->	bemeurer (bemeurer@moz-v8d1q1.i1jn.j4s3.8802.2600.IP) has joined #rust-beginners
2018-09-25 04:10:28	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-25 04:11:08	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 04:11:52	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 04:14:30	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 04:14:40	<--	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-25 04:15:10	-->	ibrokemypie (conor@moz-87v.f4m.124.1.IP) has joined #rust-beginners
2018-09-25 04:15:26	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 04:17:30	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 04:19:21	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-25 04:19:42	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-25 04:23:28	<--	num8er (num8er@moz-6hjo0k.pppoe.byfly.by) has quit (Connection closed)
2018-09-25 04:23:49	-->	num8er (num8er@moz-6hjo0k.pppoe.byfly.by) has joined #rust-beginners
2018-09-25 04:24:29	<--	cgull (cgull@moz-u3u.ol1.15.216.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 04:25:15	<--	ibrokemypie (conor@moz-87v.f4m.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 04:27:51	<--	num8er (num8er@moz-6hjo0k.pppoe.byfly.by) has quit (Ping timeout: 121 seconds)
2018-09-25 04:28:15	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-25 04:28:58	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 04:29:27	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 04:29:28	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 04:29:31	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 04:30:05	-->	ibrokemypie (conor@moz-87v.f4m.124.1.IP) has joined #rust-beginners
2018-09-25 04:31:09	-->	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has joined #rust-beginners
2018-09-25 04:32:18	<--	Herby_ (Herby@moz-i9floe.co.comcast.net) has quit (Quit: Leaving)
2018-09-25 04:32:20	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Ping timeout: 121 seconds)
2018-09-25 04:35:00	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 04:36:12	-->	Guest62 (textual@moz-fbdpc5.ca.comcast.net) has joined #rust-beginners
2018-09-25 04:36:48	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 04:37:10	<--	Guest62 (textual@moz-fbdpc5.ca.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-25 04:37:30	-->	cgull (cgull@moz-u3u.ol1.15.216.IP) has joined #rust-beginners
2018-09-25 04:37:56	<--	hannesenator (Fenith@moz-dg7669.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-25 04:39:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 04:39:50	-->	hannesenator (Fenith@moz-dg7669.tbcn.telia.com) has joined #rust-beginners
2018-09-25 04:42:01	<--	nj0rd (nj0rd@moz-i06t8p.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-25 04:42:10	-->	Laura1995 (Mibbit@moz-nfi.u8t.185.146.IP) has joined #rust-beginners
2018-09-25 04:42:37	Laura1995	Hello
2018-09-25 04:43:09	-->	cyjiao (sid251714@moz-7jt5ac.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-25 04:43:17	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-25 04:44:34	LogicAside	Hi.
2018-09-25 04:45:31	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-25 04:45:44	-->	cyjiao_ (sid251714@moz-7jt5ac.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-25 04:45:50	<--	cyjiao (sid251714@moz-7jt5ac.stonehaven.irccloud.com) has quit (Quit: )
2018-09-25 04:45:50	--	cyjiao_ is now known as cyjiao
2018-09-25 04:46:26	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-25 04:47:19	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 04:51:10	<--	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has quit (Quit: leaving)
2018-09-25 04:51:11	<--	sp1ff_ (sp1ff@moz-la8hv5.3i8v.at4v.0119.2620.IP) has quit (Connection closed)
2018-09-25 04:54:33	-->	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has joined #rust-beginners
2018-09-25 04:54:47	-->	nj0rd (nj0rd@moz-3n0top.dip.versatel-1u1.de) has joined #rust-beginners
2018-09-25 04:54:56	<--	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-25 04:55:07	--	nj0rd is now known as Guest30395
2018-09-25 04:57:08	<--	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has quit (Quit: leaving)
2018-09-25 04:58:16	-->	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has joined #rust-beginners
2018-09-25 04:58:22	<--	Laura1995 (Mibbit@moz-nfi.u8t.185.146.IP) has quit (G-Lined: no spamming here)
2018-09-25 04:59:37	<--	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has quit (Quit: leaving)
2018-09-25 04:59:51	-->	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has joined #rust-beginners
2018-09-25 05:00:41	<--	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has quit (Quit: leaving)
2018-09-25 05:00:51	-->	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has joined #rust-beginners
2018-09-25 05:02:41	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 05:04:38	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-25 05:05:34	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 05:07:20	<--	subhojit777 (subhojit777@moz-bup.m30.225.110.IP) has quit (Quit: Leaving)
2018-09-25 05:09:00	-->	eyans (a@moz-lu8nb1.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-25 05:09:17	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-25 05:09:43	-->	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 05:10:03	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (The TLS connection was non-properly terminated.)
2018-09-25 05:10:25	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-25 05:10:44	<--	alatiera (alatiera@moz-6rmkee.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-25 05:11:08	-->	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has joined #rust-beginners
2018-09-25 05:12:15	<--	ibrokemypie (conor@moz-87v.f4m.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 05:12:24	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-25 05:14:35	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-25 05:19:59	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-25 05:20:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 05:20:52	<--	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-25 05:21:30	-->	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has joined #rust-beginners
2018-09-25 05:21:45	<--	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 05:23:22	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 05:23:28	-->	bemeurer_ (bemeurer@moz-68b.do0.236.185.IP) has joined #rust-beginners
2018-09-25 05:24:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 05:25:11	<--	bemeurer (bemeurer@moz-v8d1q1.i1jn.j4s3.8802.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 05:25:54	-->	muvlon (muvlon@moz-qf70hv.ipv6dyn.netcologne.de) has joined #rust-beginners
2018-09-25 05:26:29	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 05:27:46	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 05:29:19	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Quit: )
2018-09-25 05:30:57	<--	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 05:31:22	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-25 05:32:13	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-25 05:32:17	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 05:39:59	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Ping timeout: 121 seconds)
2018-09-25 05:40:26	<--	enterprisey (enterprisey@moz-gcd1tm.cit.cornell.edu) has quit (Ping timeout: 121 seconds)
2018-09-25 05:40:43	<--	dRk (drk@moz-d658v0.tgcs.h4up.067c.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 05:40:55	-->	dRk (drk@moz-d658v0.tgcs.h4up.067c.2001.IP) has joined #rust-beginners
2018-09-25 05:41:23	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-25 05:42:31	-->	aajaa (Mibbit@moz-fn7.t0q.100.101.IP) has joined #rust-beginners
2018-09-25 05:43:04	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-25 05:43:46	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-25 05:44:07	-->	schulace (Mibbit@moz-8e9.g7b.121.64.IP) has joined #rust-beginners
2018-09-25 05:45:28	schulace	Does anyone have a decent way to move values from one vector to another? I'm trying to go from Vec<T> to Vec<Rc<T>> and the best I can get rn without the compiler yelling at me is to loop through the original array popping from it and pushing that onto the new array wrapped in a RC
2018-09-25 05:46:13	Moongoodboy{K}	yeah, you can't do that kind of transformation in-place, because the representations of T and Rc<T> are different
2018-09-25 05:46:38	Lumpio-	You can easily create a new vec using into_iter().map() though
2018-09-25 05:46:46	Moongoodboy{K}	original_vec.into_iter().map(Rc::new).collect()  // may be more efficient though
2018-09-25 05:46:52	Lumpio-	(The into_ bit is the important bit)
2018-09-25 05:47:03	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 05:47:20	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-25 05:48:52	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-25 05:48:52	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 05:49:26	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 05:50:31	-->	ibrokemypie (conor@moz-87v.f4m.124.1.IP) has joined #rust-beginners
2018-09-25 05:50:42	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-25 05:52:05	ibrokemypie	is there any way to make docs.rs include bison and flex?
2018-09-25 05:52:16	ibrokemypie	my crate wont build docs there because theyre missing
2018-09-25 05:52:17	ibrokemypie	https://docs.rs/crate/pkgparse_rs/0.1.0/builds/118219
2018-09-25 05:52:20	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-25 05:55:29	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 05:55:54	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 05:59:37	ibrokemypie	or is there some way to make it ignore that?
2018-09-25 06:02:00	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-25 06:06:00	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 06:07:39	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 06:08:02	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 06:10:02	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 06:10:04	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 06:10:06	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 06:12:35	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 06:14:50	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-25 06:16:22	-->	mib_x93zg9 (Mibbit@moz-b7fepn.res.rr.com) has joined #rust-beginners
2018-09-25 06:18:43	mib_x93zg9	Does anyone know why converting a Vec<T> to Rc<[T]> copies the Vec? I would think that the operation would only need to allocate a control block.
2018-09-25 06:19:12	mib_x93zg9	I have the same question about Box<T> to Rc<T>
2018-09-25 06:19:51	mib_x93zg9	C++ notably allows for cheap conversion of unique_ptr to shared_ptr.
2018-09-25 06:19:55	mib_x93zg9	https://stackoverflow.com/questions/37884728/does-c11-unique-ptr-and-shared-ptr-able-to-convert-to-each-others-type
2018-09-25 06:21:01	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 06:22:19	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-25 06:22:21	ibrokemypie	what is the difference between FILE from libc and __sFILE?
2018-09-25 06:23:17	Havvy	mib_x93zg9: Probably because of specific safety rules involved with dropping the array created by a vec.
2018-09-25 06:24:28	mib_x93zg9	How would it be unsafe? Are the rules different between &[T] and Vec<T>? 
2018-09-25 06:25:03	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-25 06:25:28	Havvy	Oh wait, I'm remembering the reverse.
2018-09-25 06:26:11	Havvy	It's not safe to put any old `[T]` into a Vec<T>. It has to have been allocated by a different Vec<T> (including String)
2018-09-25 06:26:14	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 06:26:22	Moongoodboy{K}	ibrokemypie: from the name, I'll hazard a guess that __sFILE is a private implementation detail and that you probably shouldn't use it in your code
2018-09-25 06:26:34	Havvy	"If len==capacity, (as is the case for the vec! macro), then a Vec<T> can be converted to and from a Box<[T]> without reallocating or moving the elements."
2018-09-25 06:26:35	<--	ufobat_ (Martin@moz-dgj40i.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-25 06:26:39	<--	cyphase (cyphase@moz-ugsfho.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 06:26:50	Havvy	mib_x93zg9: [meta] /nick your-name
2018-09-25 06:26:57	Moongoodboy{K}	!mib
2018-09-25 06:26:57	+rustbot	Hello, Mibbit user with a “mib_<random>” nickname. Please change your nickname to something less confusing by saying `/nick NEW_NAME_HERE`. Welcome to IRC. :)
2018-09-25 06:27:09	Moongoodboy{K}	is the command you were looking for :)
2018-09-25 06:28:30	ibrokemypie	Moongoodboy{K}: I am tryign to use bindgen to generate the bindings to the pkgparse library for me, however the functions it generates takes __sFILE instead of FILE
2018-09-25 06:28:39	mib_x93zg9	OK, so I guess the only question left is why cant Box<T> be converted to Rc<T> without copying?
2018-09-25 06:29:25	Havvy	eval: std::mem::size_of::<Rc<i32>>()
2018-09-25 06:29:28	--	Notice(eval): error[E0412]: cannot find type `Rc` in this scope
2018-09-25 06:29:28	--	mib_x93zg9 is now known as PJ
2018-09-25 06:29:30	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=1eac9a04d10bee33d70641aa5271acd7&version=stable&mode=debug
2018-09-25 06:29:37	Havvy	eval: std::mem::size_of::<std::rc::Rc<i32>>()
2018-09-25 06:29:40	--	Notice(eval): 8
2018-09-25 06:29:48	Havvy	eval: std::mem::size_of::<Box<i32>>()
2018-09-25 06:29:52	--	Notice(eval): 8
2018-09-25 06:31:18	-->	cxiao (cxiao@moz-sng.ido.103.172.IP) has joined #rust-beginners
2018-09-25 06:31:20	-->	cyphase (cyphase@moz-ugsfho.ca.comcast.net) has joined #rust-beginners
2018-09-25 06:31:31	Moongoodboy{K}	there's a Box<T> -> Rc<T> conversion (which doesn't clone, but does bitcopy)
2018-09-25 06:32:08	PJ	My question is: why is that copy required? 
2018-09-25 06:32:47	emerentius	because the Rc's reference count is inline with the data
2018-09-25 06:32:49	emerentius	in front of it
2018-09-25 06:32:51	-->	Drazde (Mibbit@moz-4crehl.retail.telecomitalia.it) has joined #rust-beginners
2018-09-25 06:33:00	-->	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has joined #rust-beginners
2018-09-25 06:33:01	PJ	thanks
2018-09-25 06:34:24	<--	muvlon (muvlon@moz-qf70hv.ipv6dyn.netcologne.de) has quit (Quit: Leaving)
2018-09-25 06:34:28	-->	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has joined #rust-beginners
2018-09-25 06:34:48	Moongoodboy{K}	ah, so you can't change a Box<T> to an Rc<T> in-place because of the usual differing-representations thing
2018-09-25 06:35:12	<--	ibrokemypie (conor@moz-87v.f4m.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 06:35:23	<--	Sgeo__ (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Quit: Leaving)
2018-09-25 06:35:23	-->	oms (oms@moz-fg8cd5.dyn.telefonica.de) has joined #rust-beginners
2018-09-25 06:35:33	-->	Sgeo (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-25 06:36:24	<--	Drazde (Mibbit@moz-4crehl.retail.telecomitalia.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 06:36:46	-->	ibrokemypie (conor@moz-87v.f4m.124.1.IP) has joined #rust-beginners
2018-09-25 06:38:35	PJ	That seems to be the case
2018-09-25 06:38:37	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 06:38:50	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 06:40:02	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 06:40:02	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 06:40:25	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-25 06:40:47	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 06:41:54	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-25 06:42:25	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-25 06:42:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 06:43:02	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-25 06:44:27	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-25 06:45:00	<--	ibrokemypie (conor@moz-87v.f4m.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 06:46:21	-->	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-25 06:46:57	<--	Sgeo (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-25 06:48:52	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-25 06:48:54	<--	insidious (insidious@moz-ur8el8.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-25 06:50:04	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-25 06:51:17	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-25 06:52:10	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 06:53:12	<--	schulace (Mibbit@moz-8e9.g7b.121.64.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 06:53:55	<--	eyans (a@moz-lu8nb1.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-25 06:55:09	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-25 06:56:47	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 06:58:41	-->	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 06:59:12	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-25 06:59:16	-->	mib_yzg7j9 (Mibbit@moz-3ho.cmg.95.101.IP) has joined #rust-beginners
2018-09-25 06:59:17	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 07:00:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:01:26	<--	himi (sjjf@moz-psjk59.anu.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-25 07:03:08	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:06:42	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-25 07:08:55	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-25 07:09:13	<--	lucasem (lucasem@moz-rhqfsp.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-25 07:09:29	-->	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-25 07:10:27	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-25 07:12:05	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Connection closed)
2018-09-25 07:12:09	-->	KiChjang (keithyeung@moz-dsa4qo.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-25 07:14:24	aajaa	hey guys, can anyone direct me how one might do this more efficiently
2018-09-25 07:14:25	aajaa	https://play.rust-lang.org/?gist=ff1831d816dc2c4ec140f4f42dbe5a00&version=stable&mode=debug&edition=2015
2018-09-25 07:14:32	aajaa	?
2018-09-25 07:16:01	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 07:16:26	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 07:17:34	-->	holmgr (holmgr@moz-1rni8t.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 07:18:03	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 07:18:08	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-25 07:19:04	-->	wikkit (Mibbit@moz-vhqbsi.res.rr.com) has joined #rust-beginners
2018-09-25 07:19:31	<--	Raychen (Thunderbird@moz-14l.9q5.175.61.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:19:33	--	Raychen1 is now known as Raychen
2018-09-25 07:21:31	-->	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has joined #rust-beginners
2018-09-25 07:21:31	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-25 07:21:56	<--	KiChjang (keithyeung@moz-dsa4qo.urm1.6cdi.0646.2601.IP) has quit (Quit: WeeChat 2.0.1)
2018-09-25 07:24:45	<--	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 07:26:08	-->	siddhartharao17 (siddharthar@moz-9f5gve.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-25 07:26:10	<--	siddhartharao17 (siddharthar@moz-9f5gve.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 07:26:11	-->	siddhartharao17 (siddharthar@moz-9f5gve.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-25 07:28:24	-->	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has joined #rust-beginners
2018-09-25 07:28:25	<--	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 07:29:29	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 07:30:15	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 07:30:52	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:31:19	-->	hamsteri_ (hamsteri@moz-hs7.fvt.60.194.IP) has joined #rust-beginners
2018-09-25 07:33:32	<--	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:34:04	<--	wikkit (Mibbit@moz-vhqbsi.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 07:34:41	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-25 07:35:06	<--	holmgr (holmgr@moz-1rni8t.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-25 07:37:57	-->	autoferrit (uid142250@moz-88e5vo.brockwell.irccloud.com) has joined #rust-beginners
2018-09-25 07:38:12	-->	Eragon (Eragon@moz-snlf86.abo.wanadoo.fr) has joined #rust-beginners
2018-09-25 07:38:26	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-25 07:38:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 07:38:50	autoferrit	I wrote my first technical article, and is about Rust. If I wanted feedback, for technical accuracy, would this be an ok place to post a link? or is there a better place?
2018-09-25 07:39:30	-->	makos (makos@moz-hsa0rm.adsl.tpnet.pl) has joined #rust-beginners
2018-09-25 07:39:31	Havvy	autoferrit: #rust would be better
2018-09-25 07:40:01	autoferrit	ok thank you
2018-09-25 07:42:08	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-25 07:42:31	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Ping timeout: 121 seconds)
2018-09-25 07:42:49	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:43:47	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:43:50	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 07:43:54	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-25 07:46:52	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-25 07:48:10	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-25 07:49:31	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:49:50	-->	holmgr (holmgr@moz-ikljrg.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 07:50:54	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:52:29	-->	noah_ (Mibbit@moz-vri.3p6.119.52.IP) has joined #rust-beginners
2018-09-25 07:52:32	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (The TLS connection was non-properly terminated.)
2018-09-25 07:53:54	<--	holmgr (holmgr@moz-ikljrg.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:54:18	noah_	https://doc.rust-lang.org/std/vec/struct.Vec.html#method.as_slice says "Equivalent to &s[..]" ... what does that mean? what is `s` there?
2018-09-25 07:54:38	<--	mib_yzg7j9 (Mibbit@moz-3ho.cmg.95.101.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 07:55:30	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Ping timeout: 121 seconds)
2018-09-25 07:55:42	noah_	oh, i guess `s` is a vec, nm
2018-09-25 07:56:10	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 07:56:14	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 07:56:58	<--	noah_ (Mibbit@moz-vri.3p6.119.52.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 07:58:07	-->	plusone (custom@moz-j7u.pcq.142.94.IP) has joined #rust-beginners
2018-09-25 07:59:13	Havvy	That should definitely be switched to `vec`.
2018-09-25 08:02:33	<--	plusone (custom@moz-j7u.pcq.142.94.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 08:02:37	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-25 08:02:53	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-25 08:04:48	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-25 08:06:58	<--	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has quit (Ping timeout: 121 seconds)
2018-09-25 08:07:07	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-25 08:09:15	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-09-25 08:10:06	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 08:11:24	-->	yulia (sid1079@moz-861qsr.n4vs.eb63.0101.2620.IP) has joined #rust-beginners
2018-09-25 08:11:33	<--	cxiao (cxiao@moz-sng.ido.103.172.IP) has quit (Client exited)
2018-09-25 08:11:41	yulia	Hello! I would like to help with rust dwarf output
2018-09-25 08:12:05	yulia	i am pretty new to the subject, but i found what looks like a simple bug to start with: https://github.com/rust-lang/rust/issues/54408
2018-09-25 08:12:12	yulia	i am just not too sure where to look to start
2018-09-25 08:13:04	<--	vurtz (vurtz@moz-7isnoa.fmtc.3upi.0c7d.2a02.IP) has quit (Quit: Leaving)
2018-09-25 08:13:20	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 08:14:32	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-25 08:14:50	<--	zach (zach@moz-cbdjgs.raasta.org) has quit (Quit: leaving)
2018-09-25 08:15:21	<--	mullein (mullein@moz-2bk.g08.197.138.IP) has quit (Quit: .)
2018-09-25 08:15:30	<--	cgull (cgull@moz-u3u.ol1.15.216.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 08:18:53	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-25 08:18:59	-->	holmgr (holmgr@moz-ikljrg.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 08:19:32	<--	brucem (textual@moz-il3bfq.ivsr.hm43.9800.2405.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-25 08:22:26	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 08:22:28	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 08:22:53	-->	mib_a02q5l (Mibbit@moz-e9h91f.blz.asysbs.services) has joined #rust-beginners
2018-09-25 08:22:56	<--	holmgr (holmgr@moz-ikljrg.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-25 08:25:41	-->	cgull (cgull@moz-u3u.ol1.15.216.IP) has joined #rust-beginners
2018-09-25 08:25:41	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-25 08:27:59	-->	zach (zach@moz-cbdjgs.raasta.org) has joined #rust-beginners
2018-09-25 08:30:49	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-25 08:33:37	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-25 08:34:16	-->	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has joined #rust-beginners
2018-09-25 08:37:57	-->	dr_bibble (Mibbit@moz-dact1k.fios.verizon.net) has joined #rust-beginners
2018-09-25 08:38:45	<--	dr_bibble (Mibbit@moz-dact1k.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 08:41:52	-->	mib_9rfwgt (Mibbit@moz-h6mqui.ip24.fastwebnet.it) has joined #rust-beginners
2018-09-25 08:42:14	<--	mib_9rfwgt (Mibbit@moz-h6mqui.ip24.fastwebnet.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 08:42:46	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-25 08:44:29	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 08:45:05	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 08:45:09	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Client exited)
2018-09-25 08:47:54	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 08:48:26	-->	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 08:53:26	Arnavion	yulia: You should probably ask in #rust-internals
2018-09-25 08:53:31	-->	holmgr (holmgr@moz-0sar51.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 08:53:32	<--	holmgr (holmgr@moz-0sar51.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-25 08:53:34	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-25 08:53:38	yulia	thanks!
2018-09-25 08:55:22	-->	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has joined #rust-beginners
2018-09-25 08:55:58	<--	mib_a02q5l (Mibbit@moz-e9h91f.blz.asysbs.services) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 08:56:18	-->	elichai2 (uid212594@moz-racuhj.highgate.irccloud.com) has joined #rust-beginners
2018-09-25 08:56:28	<--	JAlbers (jalbers@moz-800ccf.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 08:59:49	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 09:00:12	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 09:00:35	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 09:00:37	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 09:00:43	laalaa	static DATABASE_URL: &'static str = env!("DATABASE_URL");
2018-09-25 09:00:52	laalaa	how can I print the string literal?
2018-09-25 09:03:00	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-25 09:03:56	laalaa	oh nevermind the compiler already answered my question
2018-09-25 09:04:37	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 09:05:14	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 09:05:17	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 09:06:14	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 09:06:29	<--	dthul (dthul@moz-ba4daq.ethz.ch) has quit (Connection closed)
2018-09-25 09:09:03	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 09:09:19	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 09:09:34	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 09:11:41	<--	PJ (Mibbit@moz-b7fepn.res.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 09:11:50	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-25 09:12:16	-->	xet7 (xet7@moz-8mtke4.rev.dnainternet.fi) has joined #rust-beginners
2018-09-25 09:12:30	<--	siddhartharao17 (siddharthar@moz-9f5gve.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 09:12:52	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 09:15:46	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 09:16:19	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 09:18:30	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-25 09:20:46	-->	liquidnight (marcus@moz-5r0f68.5c32.mugc.0c23.2a01.IP) has joined #rust-beginners
2018-09-25 09:21:20	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-25 09:25:31	xialvjun	tokio default runtime is a multi-threaded, work-stealing runtime. But what's the `work`? A task or just a future in a Task ? I think if the work is a task, then the context of a task need not to be Send. If it is a future in a task, then the task context must be Send.
2018-09-25 09:26:00	xialvjun	I know a task is just a top future.
2018-09-25 09:27:23	<--	aajaa (Mibbit@moz-fn7.t0q.100.101.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 09:27:47	Arnavion	The task is the unit of scheduling
2018-09-25 09:29:06	Arnavion	The context is essentially a handle to access the task from any arbitrary depth in the tasks's tree of futures. So the Send-ness of the task applies to everything
2018-09-25 09:29:52	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 09:30:34	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-25 09:30:58	Arnavion	Well, I guess it's a waker now, not a context
2018-09-25 09:32:06	xialvjun	But if it is task-stealing, then a task will only be ran by one thread at one time point... If it's future-stealing, then a task may be ran by multi thread at one time point(like Future::select)
2018-09-25 09:32:16	Arnavion	It is the former.
2018-09-25 09:32:33	Arnavion	Future::select also runs on only one thread.
2018-09-25 09:33:33	Arnavion	All futures in a single chain of futures can only run on a single thread. The only way to create a separate chain of futures that can be scheduled independently is via spawn()
2018-09-25 09:34:18	-->	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 09:35:49	<--	emerentius (emerentius@moz-215tg4.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-25 09:35:58	xialvjun	So variables in the async fn needn't to be Send ?  In `async fn abc() { let a = xxxx; await do_something(); println!("{}", a); }`, `a` needn't be Send
2018-09-25 09:36:27	Arnavion	You're confusing the reason futures are Send with parallelism
2018-09-25 09:36:39	Arnavion	Futures are Send because they can run on an arbitrary thread
2018-09-25 09:36:49	Arnavion	Nevertheless they run on a single thread at a time
2018-09-25 09:37:29	xialvjun	But a future has many sub futures
2018-09-25 09:37:29	Arnavion	F::poll() might run on thread 1 now, and run on thread2 later
2018-09-25 09:37:55	Arnavion	and if F::poll() depends on G::poll() and H::poll() they'll also run on thread 1 in the first case and thread2 in the second case.
2018-09-25 09:38:19	Arnavion	Thus F (and G and H) need to be Send. But again, they only run on one thread at a time.
2018-09-25 09:38:20	<--	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 09:38:39	Arnavion	As I said   <Arnavion> All futures in a single chain of futures can only run on a single thread. The only way to create a separate chain of futures that can be scheduled independently is via spawn()
2018-09-25 09:40:17	xialvjun	I just concerned `async fn abc() { let a = xxx; await Future::select(do_xxx().then({let a = a.clone(); || println!("{}", a)}), do_yyy().then({let a = a.clone(); || println!("{}", a)})) }`
2018-09-25 09:40:45	-->	num8er (num8er@moz-jkh.fkr.84.93.IP) has joined #rust-beginners
2018-09-25 09:40:51	Arnavion	Yes, and I've already said how that runs.
2018-09-25 09:41:03	xialvjun	Ok...that's good. thanks
2018-09-25 09:41:06	<--	num8er (num8er@moz-jkh.fkr.84.93.IP) has quit (Connection closed)
2018-09-25 09:41:40	-->	fsasm (fsasm@moz-5fd.qra.178.62.IP) has joined #rust-beginners
2018-09-25 09:44:45	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-25 09:45:38	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 09:48:25	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 09:49:01	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-25 09:49:53	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 09:49:53	--	Raychen1 is now known as Raychen
2018-09-25 09:51:30	-->	refold (refold@moz-0ig.vcg.98.88.IP) has joined #rust-beginners
2018-09-25 09:53:49	-->	ferminter (Mibbit@moz-49s.f5n.187.35.IP) has joined #rust-beginners
2018-09-25 09:53:54	-->	zeenix (zeenix@moz-cnpvm3.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 09:55:54	<--	refold (refold@moz-0ig.vcg.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 09:58:01	-->	refold (refold@moz-rh2.742.0.141.IP) has joined #rust-beginners
2018-09-25 09:58:49	<--	ferminter (Mibbit@moz-49s.f5n.187.35.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 10:08:16	<--	bemeurer_ (bemeurer@moz-68b.do0.236.185.IP) has quit (Quit: WeeChat 2.2)
2018-09-25 10:10:13	-->	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has joined #rust-beginners
2018-09-25 10:13:41	<--	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 10:14:21	-->	Dariost (Dariost@moz-5nr.9t5.48.151.IP) has joined #rust-beginners
2018-09-25 10:21:18	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 10:21:27	-->	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-25 10:22:06	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 10:24:56	-->	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has joined #rust-beginners
2018-09-25 10:25:44	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 10:27:19	laalaa	std::result::Result<postgres::rows::Rows, postgres::Error>
2018-09-25 10:27:21	-->	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has joined #rust-beginners
2018-09-25 10:27:31	laalaa	how can I print the postgres::Error?
2018-09-25 10:28:17	-->	mib_l7fgor (Mibbit@moz-q1c.rs4.77.62.IP) has joined #rust-beginners
2018-09-25 10:29:41	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 10:29:48	-->	aajaa (Mibbit@moz-fn7.t0q.100.101.IP) has joined #rust-beginners
2018-09-25 10:29:54	qyliss^work	if Err(error) = result { eprintln!("{}", error); }
2018-09-25 10:29:56	Moongoodboy{K}	if let Err(error) = that_result { println!("{}", error); }  // laalaa
2018-09-25 10:30:09	aajaa	is there a way to get a slice starting from the last position an iterator left off
2018-09-25 10:30:09	qyliss^work	oh whoops I missed the let
2018-09-25 10:30:20	aajaa	i.e. if I use find to get some element matching a condition
2018-09-25 10:30:36	aajaa	and then I want to slice from the next element to some later point, is there a method for that?
2018-09-25 10:30:36	Moongoodboy{K}	laalaa: there are potentially more idiomatic ways depending on the surrounding code
2018-09-25 10:31:02	mib_l7fgor	Is there a way to create type allias in a struct impl?  The struct  is generic over T and I need to name the "<<T as ComponentDescriptor>::Store as svec::Store>::Item"  type a lot.
2018-09-25 10:32:11	Moongoodboy{K}	aajaa: the slice iterator actually happens to have an as_slice() method
2018-09-25 10:32:18	drager	mib_l7fgor: Try :)
2018-09-25 10:34:06	Moongoodboy{K}	eval: struct Foo<T>(T); impl Foo { type Inner = T; }  // (contrived) test
2018-09-25 10:34:09	--	Notice(eval): error[E0412]: cannot find type `T` in this scope
2018-09-25 10:34:11	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=c20663f90fe1b7143d6033206fcebee2&version=stable&mode=debug
2018-09-25 10:34:28	Moongoodboy{K}	eval: struct Foo<T>(T); impl<T> Foo<T> { type Inner = T; }  // whoops
2018-09-25 10:34:30	--	Notice(eval): error[E0202]: associated types are not allowed in inherent impls
2018-09-25 10:34:32	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=4b94c1a803689e52134d83e292f064a1&version=stable&mode=debug
2018-09-25 10:34:37	Moongoodboy{K}	:c
2018-09-25 10:35:50	mib_l7fgor	Moongoodboy{K}: I've tried that one :)
2018-09-25 10:35:50	aajaa	related question, can anyone help me understand the difference between .iter() and .into_iter()?
2018-09-25 10:36:31	Havvy	.iter() => Iterator<Item=&T>   .into_iter() => Iterator<Item=T>
2018-09-25 10:36:33	mib_l7fgor	aajaa: https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter
2018-09-25 10:37:02	Moongoodboy{K}	Havvy, aajaa: into_iter() doesn't always yield T; it depends on the exact type you call it on.
2018-09-25 10:37:25	Havvy	Well, for Vec anyways.
2018-09-25 10:37:41	Havvy	Main thing is that it consumes `self` while `.iter()` usually doesn't.
2018-09-25 10:37:48	<--	autoferrit (uid142250@moz-88e5vo.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 10:38:05	Moongoodboy{K}	Except that `self` can be &Vec<_>
2018-09-25 10:38:18	Moongoodboy{K}	!into_iter
2018-09-25 10:38:28	Moongoodboy{K}	!learn into_iter = https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter
2018-09-25 10:38:28	+rustbot	Learned factoid 'into_iter'.
2018-09-25 10:38:31	Moongoodboy{K}	thanks, mib_l7fgor
2018-09-25 10:38:42	<--	glguy (glguy@moz-vn2sla.o0eg.mkgl.01c0.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 10:38:57	aajaa	yeah I'm more confused now lol
2018-09-25 10:39:04	aajaa	going to the stackoverflow
2018-09-25 10:39:05	Moongoodboy{K}	can't believe I've never thought of SO for FAQs before
2018-09-25 10:39:46	mib_l7fgor	( I did a search on the exact same topic a few days ago :) )
2018-09-25 10:41:17	mib_l7fgor	Any idea with the type alias in a struct impl ? (Is there a way to create type allias in a struct impl?  The struct  is generic over T and I need to name the "<<T as ComponentDescriptor>::Store as svec::Store>::Item"  type a lot.)
2018-09-25 10:41:18	-->	glguy (glguy@moz-4tck6m.or.comcast.net) has joined #rust-beginners
2018-09-25 10:42:57	Havvy	mib_l7fgor: I wanted to implement inherent type aliases, but I was blocked by some other change that is way over my head in path resolution.
2018-09-25 10:44:44	mib_l7fgor	So it's not possible at the moment ? :(
2018-09-25 10:45:52	<--	Dariost (Dariost@moz-5nr.9t5.48.151.IP) has quit (Client exited)
2018-09-25 10:46:34	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-25 10:47:08	Moongoodboy{K}	workaround: make a private trait with an associated type and implement it for that one struct?
2018-09-25 10:47:24	Moongoodboy{K}	…though…you won't be able to use the type alias in some places
2018-09-25 10:47:29	Moongoodboy{K}	you will in others though!
2018-09-25 10:49:09	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Quit: Leaving)
2018-09-25 10:49:11	<--	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-25 10:50:08	<--	glguy (glguy@moz-4tck6m.or.comcast.net) has quit (Quit: Quit)
2018-09-25 10:50:16	-->	glguy (glguy@moz-7h8mga.o0eg.mkgl.01c0.2601.IP) has joined #rust-beginners
2018-09-25 10:50:52	-->	vmx (vmx@moz-tru45v.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 10:52:02	mib_l7fgor	Thanks I'll give it a try
2018-09-25 10:52:06	-->	monti (monti@moz-2st.6m3.59.176.IP) has joined #rust-beginners
2018-09-25 10:54:41	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-25 10:55:02	-->	holmgr (holmgr@moz-47cjfo.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 10:56:08	<--	monti (monti@moz-2st.6m3.59.176.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 10:59:04	<--	holmgr (holmgr@moz-47cjfo.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 11:01:35	<--	cjm (c@moz-ub2bko.1n99.j5ei.0281.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 11:01:44	-->	danielrivas (danielrivas@moz-67p1rm.skybroadband.com) has joined #rust-beginners
2018-09-25 11:02:13	-->	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-25 11:02:58	<--	makos (makos@moz-hsa0rm.adsl.tpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-25 11:03:01	<--	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has quit (Quit: Leaving)
2018-09-25 11:03:11	-->	Simon (Simon@moz-0eguhk.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-25 11:03:32	-->	cjm (c@moz-0mn.m4j.8.24.IP) has joined #rust-beginners
2018-09-25 11:04:40	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (The TLS connection was non-properly terminated.)
2018-09-25 11:06:47	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-25 11:07:29	aajaa	can someone tell me if what I'm trying to do here is stupid
2018-09-25 11:07:29	aajaa	https://play.rust-lang.org/?gist=f3ed230aec033c807ee7790b519e5081&version=stable&mode=debug&edition=2015
2018-09-25 11:07:47	-->	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-25 11:07:49	aajaa	I'm having problems figuring out the right form of the iterator (if it's possible)
2018-09-25 11:09:39	<--	mib_l7fgor (Mibbit@moz-q1c.rs4.77.62.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 11:10:49	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Connection closed)
2018-09-25 11:10:58	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-25 11:11:24	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-25 11:11:33	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 11:12:54	-->	PeterRabbitIsFluffy (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-09-25 11:14:49	-->	mib_6pnmmp (Mibbit@moz-q0er9a.sparkbb.co.nz) has joined #rust-beginners
2018-09-25 11:15:01	<--	mib_6pnmmp (Mibbit@moz-q0er9a.sparkbb.co.nz) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 11:16:37	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 11:17:36	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 11:18:33	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-25 11:19:55	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-25 11:23:08	-->	JAlbers (jalbers@moz-8u1sgb.dhcp.chtrptr.net) has joined #rust-beginners
2018-09-25 11:24:24	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-25 11:26:19	<--	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has quit (Quit: Konversation terminated!)
2018-09-25 11:28:15	Aankhen``	aajaa: I’m not sure I follow the code, but two things I think could simplify it are using `map` <https://doc.rust-lang.org/std/option/enum.Option.html#method.map> and creating the struct like `DataPacket { raw: rdr.read_u16::<LittleEndian>()::unwrap(), … }` if you can.
2018-09-25 11:28:45	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-25 11:28:48	aajaa	aankhen'' I'll try to put together a minimal example that triggers my error
2018-09-25 11:28:56	Aankhen``	aajaa: Cool.
2018-09-25 11:29:26	-->	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-25 11:29:48	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-25 11:31:30	-->	holmgr (holmgr@moz-u46rii.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 11:31:42	<--	holmgr (holmgr@moz-u46rii.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-25 11:31:44	aajaa	https://play.rust-lang.org/?gist=b4f1b496096de25b8fea0505cf1ace6e&version=stable&mode=debug&edition=2015
2018-09-25 11:31:52	aajaa	I think that should capture it aankhen''
2018-09-25 11:31:52	-->	holmgr (holmgr@moz-u46rii.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 11:32:37	aajaa	the buffer would be filled from a separate read operation
2018-09-25 11:32:41	aajaa	on the COM port
2018-09-25 11:33:06	Aankhen``	https://play.rust-lang.org/?gist=70181cb0d4de4f98606602cab1c2f555&version=stable&mode=debug&edition=2015 # the changes I suggested.
2018-09-25 11:33:09	Aankhen``	Okay, lemme take a look.
2018-09-25 11:34:18	<--	JAlbers (jalbers@moz-8u1sgb.dhcp.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 11:34:45	-->	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 11:35:59	<--	danielrivas (danielrivas@moz-67p1rm.skybroadband.com) has quit (Quit: Lost terminal)
2018-09-25 11:36:13	-->	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has joined #rust-beginners
2018-09-25 11:36:38	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-25 11:36:55	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 11:37:10	aajaa	thank you :)
2018-09-25 11:37:43	Aankhen``	aajaa: https://play.rust-lang.org/?gist=e37a1a02b67065b25b0a3aa4c5046ff5&version=stable&mode=debug&edition=2015 # you can work with references and clone the iterator when you need to collect it.
2018-09-25 11:38:17	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-25 11:38:19	Aankhen``	Actually, you can remove the `&mut` that way—`parse_buffer` can take `&self`.
2018-09-25 11:38:46	<--	erickt (sid152955@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 11:38:50	<--	myk (sid145569@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 11:38:51	-->	AtumT (IRC@moz-7f8cuc.gvt.net.br) has joined #rust-beginners
2018-09-25 11:39:00	<--	inglesp (sid16306@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 11:39:02	<--	mjl (sid16781@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 11:39:14	<--	r3my (sid262473@moz-rp9ic4.irccloud.com) has quit (Connection closed)
2018-09-25 11:39:14	<--	huhlig (sid17687@moz-rp9ic4.irccloud.com) has quit (Connection closed)
2018-09-25 11:39:14	<--	beachjar (sid183232@moz-rp9ic4.irccloud.com) has quit (Error in the push function.)
2018-09-25 11:39:14	<--	physpi (sid161004@moz-rp9ic4.irccloud.com) has quit (Error in the push function.)
2018-09-25 11:39:14	<--	rkruppe (sid288677@moz-rp9ic4.irccloud.com) has quit (Error in the push function.)
2018-09-25 11:39:22	-->	physpi (sid161004@moz-nh6903.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:22	-->	r3my (sid262473@moz-ab7oau.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:22	-->	inglesp (sid16306@moz-b77ftn.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:23	-->	mjl (sid16781@moz-5pec6l.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:24	-->	rkruppe (sid288677@moz-vrtooq.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:25	-->	huhlig (sid17687@moz-vpjj03.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:26	-->	beachjar (sid183232@moz-rg73q1.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:30	-->	erickt (sid152955@moz-t3hc1c.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:33	-->	myk (sid145569@moz-17ek1v.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 11:39:45	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 11:40:17	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-25 11:43:44	<--	holmgr (holmgr@moz-u46rii.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-25 11:44:29	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-25 11:44:42	<--	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has quit (Quit: Konversation terminated!)
2018-09-25 11:44:58	aajaa	aankhen`` you legend
2018-09-25 11:45:03	aajaa	thank you that works great!
2018-09-25 11:45:25	<--	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 11:45:37	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-25 11:48:17	Aankhen``	aajaa: https://play.rust-lang.org/?gist=c3db7d2f02137d528a31b47ef33a3224&version=stable&mode=debug&edition=2015 # this version pulls the initialization of the packet into a separate function so you can ditch the `unwrap` calls in favour of `?`.
2018-09-25 11:48:22	Aankhen``	Glad it worked!
2018-09-25 11:49:54	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-25 11:50:10	-->	nunatak (nunatak@moz-0o9u0v.netcologne.de) has joined #rust-beginners
2018-09-25 11:52:50	-->	brucem (textual@moz-cloti7.ivsr.hm43.9800.2405.IP) has joined #rust-beginners
2018-09-25 11:54:18	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-25 11:54:41	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 11:55:22	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-25 11:55:29	-->	makos (makos@moz-hsa0rm.adsl.tpnet.pl) has joined #rust-beginners
2018-09-25 11:55:36	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 11:56:15	-->	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has joined #rust-beginners
2018-09-25 11:57:24	-->	PsypherPunk (PsypherPunk@moz-0c0a78.dab.02.net) has joined #rust-beginners
2018-09-25 11:58:04	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-25 11:58:18	-->	qazwsx (Mibbit@moz-78v.alo.149.169.IP) has joined #rust-beginners
2018-09-25 11:58:42	-->	drazde (Mibbit@moz-ds369b.mynet.it) has joined #rust-beginners
2018-09-25 11:59:23	qazwsx	what does ((8 as u8)<< 4 | (5 as u8)) mean ? How does it work ?
2018-09-25 11:59:32	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 11:59:37	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-25 11:59:42	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-25 12:00:08	<--	drazde (Mibbit@moz-ds369b.mynet.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 12:00:14	-->	holmgr (holmgr@moz-u46rii.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 12:01:39	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 12:04:25	<--	PsypherPunk (PsypherPunk@moz-0c0a78.dab.02.net) has quit (Quit: leaving)
2018-09-25 12:05:38	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-25 12:06:39	<--	holmgr (holmgr@moz-u46rii.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 12:07:09	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-25 12:07:19	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 12:07:22	Havvy	qazwsx: 8u8 bitshifted left by four and then or-ed with 5u8.
2018-09-25 12:07:56	Havvy	So 0b00001000 << 4 | 0b00000101
2018-09-25 12:08:45	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 12:08:50	Havvy	And the bitshift evaluates to 0b1000_0000 so it's 0b1000_0000 | 0b0000_0101 which is 0b1000_0101
2018-09-25 12:09:04	Havvy	eval: ((8 as u8)<< 4 | (5 as u8))
2018-09-25 12:09:07	--	Notice(eval): 133
2018-09-25 12:10:45	Havvy	The `8 as u8` is (I think) `8u32 as u8` but should really just be written as `8u8`....
2018-09-25 12:12:59	-->	pamaury (pamaury@moz-o5u6du.mpi-sws.org) has joined #rust-beginners
2018-09-25 12:14:20	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-25 12:14:44	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-25 12:15:28	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-25 12:16:55	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 12:18:02	-->	somewone (somewone@moz-6bn.h2s.113.141.IP) has joined #rust-beginners
2018-09-25 12:19:23	joris	is it 8u32 or 8i32 ? 
2018-09-25 12:20:03	joris	eval: let x = 0; x - 1
2018-09-25 12:20:05	--	Notice(eval): -1
2018-09-25 12:20:22	joris	eval: let x = 0u32; x - 1
2018-09-25 12:20:23	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has left #rust-beginners ("Leaving")
2018-09-25 12:20:25	--	Notice(eval): thread 'main' panicked at 'attempt to subtract with overflow', src/main.rs:6:23
2018-09-25 12:20:27	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=6563121be83d19738aa8ca1d14abc2c4&version=stable&mode=debug
2018-09-25 12:20:29	Havvy	Err, i32
2018-09-25 12:21:03	Havvy	Default if it's unknown is i32.
2018-09-25 12:21:17	joris	that doesn't change anything to what you said anyway just bikeshedding sorry 
2018-09-25 12:22:01	Havvy	(It's still important to not mislead people into thinking it's actually unsigned)
2018-09-25 12:24:16	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-25 12:25:39	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (Quit: bye)
2018-09-25 12:25:57	joris	unrelated again, but i'm starting to consider unsigned harmful. 
2018-09-25 12:26:39	joris	i've been mostly writing code in "signed only" languages in my life, then in rust i started using unsigned because it looked like more types = better
2018-09-25 12:26:57	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-25 12:26:59	joris	and recently i enabled overflow checks in release builds to run some fuzzers
2018-09-25 12:27:08	joris	and bugs ! bugs everywhere
2018-09-25 12:27:11	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-25 12:27:14	-->	somewone_ (somewone@moz-ua6.h2s.113.141.IP) has joined #rust-beginners
2018-09-25 12:27:42	<--	qazwsx (Mibbit@moz-78v.alo.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 12:27:56	<--	Simon (Simon@moz-0eguhk.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-25 12:27:56	joris	i understand it gives control for those low level bit shuffling things but for normal arithmetic it's an anti pattern i suspect and it should be more clear in the language 
2018-09-25 12:28:21	joris	eg let x = cmp::max(0, y - 1); will not work with unsigned
2018-09-25 12:28:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 12:29:31	<--	somewone (somewone@moz-6bn.h2s.113.141.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 12:30:48	-->	makos_ (makos@moz-vv0mq6.adsl.tpnet.pl) has joined #rust-beginners
2018-09-25 12:30:49	joris	the most shocking realisation for me is that i replaced all unsigned types by signed except usize without changing code as an experiment, and fuzzed again
2018-09-25 12:31:02	joris	it found 0 bugs. so unsigned is making my code worse
2018-09-25 12:31:27	joris	(0 arithmetic related bugs at least)
2018-09-25 12:32:24	<--	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2018-09-25 12:33:45	<--	makos (makos@moz-hsa0rm.adsl.tpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-25 12:37:52	drager	joris: Doesn't that *depend* on what you're doing in your code? 
2018-09-25 12:38:27	-->	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has joined #rust-beginners
2018-09-25 12:39:35	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (Quit: bye)
2018-09-25 12:40:11	<--	danecando (danecando@moz-mc6via.sdba.4jle.1700.2600.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-25 12:42:03	<--	oms (oms@moz-fg8cd5.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-25 12:43:06	<--	somewone_ (somewone@moz-ua6.h2s.113.141.IP) has quit (Connection closed)
2018-09-25 12:44:23	joris	drager: yes but this is my point. I think if you use bitwise operators it makes sense to have unsigned
2018-09-25 12:45:02	joris	but i thought that also unsigned would make sense for general arithmetic code which is not supposed to be negative. I'm now not convinced
2018-09-25 12:45:35	-->	somewone (somewone@moz-ua6.h2s.113.141.IP) has joined #rust-beginners
2018-09-25 12:48:10	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 12:48:19	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 12:49:03	-->	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 12:49:40	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-25 12:50:10	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-25 12:50:32	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 12:50:37	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-25 12:50:55	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Quit: Leaving)
2018-09-25 12:51:46	-->	somewone_ (somewone@moz-rg0.h2s.113.141.IP) has joined #rust-beginners
2018-09-25 12:52:16	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Connection closed)
2018-09-25 12:52:16	-->	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-25 12:52:23	-->	Simon (Simon@moz-0eguhk.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-25 12:54:03	<--	somewone (somewone@moz-ua6.h2s.113.141.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 12:55:36	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-25 12:56:20	<--	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-25 12:57:06	<--	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 12:57:29	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Quit: Leaving)
2018-09-25 12:57:40	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-25 12:57:46	-->	JAlbers (jalbers@moz-8u1sgb.dhcp.chtrptr.net) has joined #rust-beginners
2018-09-25 12:59:04	<--	petrichor (sid87045@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:20	<--	gregbowyer_ (sid85254@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:21	-->	gregbowyer_ (sid85254@moz-7umckp.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	jmct_ (sid160793@moz-o0p3u0.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	olinkl_ (sid102653@moz-s103bo.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	zgrep_ (sid43445@moz-oao9lb.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	Kamuela_ (sid111576@moz-3giuc5.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	Intrainos__ (sid87698@moz-9caqvk.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	creationix_ (sid228092@moz-m8udh7.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	petrichor (sid87045@moz-h6lmku.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	ploft-shell_ (sid27279@moz-blc7fm.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:22	-->	cukier_ (sid268358@moz-cglp3s.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:23	-->	gluegadget_ (sid22336@moz-2a0ro1.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:24	-->	jml_ (sid162989@moz-r6e2pi.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:24	-->	hlieberman_ (sid17492@moz-ldevbc.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:24	-->	wyvern_ (sid40333@moz-7b9ajc.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:24	-->	manveru_ (sid26204@moz-0g7cme.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:29	<--	ploft-shell (sid27279@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:29	--	ploft-shell_ is now known as ploft-shell
2018-09-25 12:59:30	<--	Intrainos_ (sid87698@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:30	--	Intrainos__ is now known as Intrainos_
2018-09-25 12:59:31	-->	jzelinskie_ (sid17772@moz-8k8jts.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:33	-->	ag_dubs_ (sid27508@moz-g5atek.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:34	<--	zgrep (sid43445@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:34	--	zgrep_ is now known as zgrep
2018-09-25 12:59:36	<--	gluegadget (sid22336@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:36	-->	HeN_ (sid173181@moz-ahb89l.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:36	--	gluegadget_ is now known as gluegadget
2018-09-25 12:59:37	-->	kamalmarhubi_ (sid26581@moz-b77777.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:38	<--	jmct (sid160793@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:38	--	jmct_ is now known as jmct
2018-09-25 12:59:39	<--	creationix (sid228092@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:39	--	creationix_ is now known as creationix
2018-09-25 12:59:40	<--	hlieberman (sid17492@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:40	--	hlieberman_ is now known as hlieberman
2018-09-25 12:59:43	<--	Kamuela (sid111576@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:43	--	Kamuela_ is now known as Kamuela
2018-09-25 12:59:46	<--	manveru (sid26204@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:46	--	manveru_ is now known as manveru
2018-09-25 12:59:53	<--	kamalmarhubi (sid26581@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:53	-->	kit_ (sid17936@moz-6divdb.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 12:59:53	--	kamalmarhubi_ is now known as kamalmarhubi
2018-09-25 12:59:57	<--	jml (sid162989@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:57	--	jml_ is now known as jml
2018-09-25 12:59:58	<--	cukier (sid268358@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 12:59:58	--	cukier_ is now known as cukier
2018-09-25 13:00:06	<--	olinkl (sid102653@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 13:00:06	--	olinkl_ is now known as olinkl
2018-09-25 13:00:12	<--	HeN (sid173181@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 13:00:12	--	HeN_ is now known as HeN
2018-09-25 13:00:18	<--	wyvern (sid40333@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 13:00:18	--	wyvern_ is now known as wyvern
2018-09-25 13:00:25	<--	jzelinskie (sid17772@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 13:00:25	--	jzelinskie_ is now known as jzelinskie
2018-09-25 13:00:27	<--	ag_dubs (sid27508@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 13:00:27	--	ag_dubs_ is now known as ag_dubs
2018-09-25 13:00:28	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-09-25 13:00:47	<--	kit (sid17936@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-25 13:00:47	--	kit_ is now known as kit
2018-09-25 13:01:48	<--	JAlbers (jalbers@moz-8u1sgb.dhcp.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 13:04:12	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-25 13:04:42	<--	nunatak (nunatak@moz-0o9u0v.netcologne.de) has quit (Quit: Leaving)
2018-09-25 13:04:57	<--	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 13:06:47	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-25 13:07:09	-->	SenasOzys (SenasOzys@moz-mv386m.lnu.se) has joined #rust-beginners
2018-09-25 13:07:39	-->	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 13:07:46	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-25 13:10:14	-->	Elizabeth (Mibbit@moz-55b.84t.61.179.IP) has joined #rust-beginners
2018-09-25 13:10:26	<--	Eragon (Eragon@moz-snlf86.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-25 13:10:31	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-09-25 13:10:31	Elizabeth	I'm here
2018-09-25 13:10:41	holmgr	Hello, beginner here so not sure if this is the right place to ask. I have been building the compiler today but ran into an error now when building the rustbook. I get a "Error: Could not find SUMMARY.md", no such file. Have done a bit of googling but not found any answer :( Surely something trivial that I have missed 
2018-09-25 13:14:04	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-25 13:14:22	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-25 13:14:22	Yaniel	you generally don't have to build the book yourself
2018-09-25 13:14:57	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-09-25 13:15:36	<--	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 13:19:26	-->	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has joined #rust-beginners
2018-09-25 13:20:49	holmgr	Ok, I was just running x.py test straight up which tried to build the book. I guess I should just be running the tests with --stage 1 flag, although the contribution document suggests running it without that before submitting a PR 
2018-09-25 13:21:08	<--	nicoulaj (nicoulaj@moz-0b5h75.net) has quit (Ping timeout: 121 seconds)
2018-09-25 13:22:01	<--	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has quit (Connection closed)
2018-09-25 13:23:08	Yaniel	what exactly are you trying to do :D
2018-09-25 13:23:20	Yaniel	"beginners" rarely start out by building their own toolchain
2018-09-25 13:23:36	dpc1	xD
2018-09-25 13:24:28	<--	Elizabeth (Mibbit@moz-55b.84t.61.179.IP) has quit (G-Lined: no spamming here)
2018-09-25 13:26:33	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (Quit: bye)
2018-09-25 13:30:43	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-25 13:31:50	<--	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 13:34:39	holmgr	I was just trying to download and build the compiler since I going to contribute to the project as part of an university course, but maybe rust-beginners are not for beginner contributors, but beginners to the language :P
2018-09-25 13:34:45	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-25 13:35:05	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 13:35:43	-->	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 13:36:11	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-25 13:36:59	Yaniel	#rustc is the compiler channel I think
2018-09-25 13:37:23	-->	justsomequestions (gumble@moz-3q3kac.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-25 13:37:54	Ferdirand	is # a valid token in a macro ?
2018-09-25 13:38:00	blueberry_cheesecake	holmgr, also consider the '#introduction' channel
2018-09-25 13:38:25	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-25 13:38:51	-->	nicoulaj (nicoulaj@moz-0b5h75.net) has joined #rust-beginners
2018-09-25 13:38:52	holmgr	Ah, thanks for the suggestion, will take my question there instead :)
2018-09-25 13:39:45	<--	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 13:40:46	-->	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 13:42:23	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-25 13:43:10	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-25 13:45:04	-->	Aimai (Aimai@moz-d963ei.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 13:46:20	drager	joris: Yeah, why are you not convinced for using unsigned for values that's not supposed to be negative?
2018-09-25 13:46:40	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-09-25 13:46:58	-->	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has joined #rust-beginners
2018-09-25 13:48:08	-->	pingwin (brian@moz-r6puto.res.rr.com) has joined #rust-beginners
2018-09-25 13:48:19	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-25 13:48:35	<--	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 13:52:20	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 13:52:26	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-25 13:53:38	-->	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 13:55:40	-->	mib_9hbziq (Mibbit@moz-g7v.bm5.255.158.IP) has joined #rust-beginners
2018-09-25 13:57:40	<--	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 14:00:00	-->	gunther (Mibbit@moz-rhbdqg.priv.bahnhof.se) has joined #rust-beginners
2018-09-25 14:00:07	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-25 14:03:18	-->	sp1ff_ (sp1ff@moz-ohchlb.fios.verizon.net) has joined #rust-beginners
2018-09-25 14:03:18	gunther	I have a struct "Cinema" and a struct "Camera", i have a cinema with a field "cinema: Option<Camera>". In Cinema, I have a setter called set_camera(&mut self, camera: Box<Camera>){self.camera = *camera}, is this the correct way, or should I store the camera as a reference?
2018-09-25 14:03:44	gunther	the field is of course "camera: Option<Camera>", sorry
2018-09-25 14:04:16	<--	kinetik (kinetik@moz-5v5.8kl.99.121.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 14:04:51	<--	aajaa (Mibbit@moz-fn7.t0q.100.101.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 14:04:53	qyliss^work	That depends if you want your Cinema to own its Camera, or just reference it :P
2018-09-25 14:05:38	gunther	i want it to own the camera, but the cinema should not create the camera
2018-09-25 14:06:15	gunther	I come from a c++ background, and want to pass the camera as a "reference" and not a copy, that is my problem
2018-09-25 14:06:17	Xion	set_camera(&mut self, camera: Camera)
2018-09-25 14:06:49	gunther	Is it not expensive to send a copy of camera, or will the ownership be transfered, so that no copy is made?
2018-09-25 14:06:51	Xion	This is equivalent of forcing std::move on the parameter of set_camera at every callsite
2018-09-25 14:07:03	gunther	How can I be sure that it is moved and not copied?
2018-09-25 14:07:08	Xion	You cannot.
2018-09-25 14:07:12	-->	artfwo (artfwo@moz-ei7.hqq.232.91.IP) has joined #rust-beginners
2018-09-25 14:07:17	Xion	But then again, neither can you in C++
2018-09-25 14:07:34	gunther	Well, if i pass a reference I am sure
2018-09-25 14:07:43	qyliss^work	Just make it not implement Copy?
2018-09-25 14:07:56	Xion	If you pass a Box, you have already allocated heap memory AND had to copy the Camera object there
2018-09-25 14:08:04	Xion	So you have gained nothing and even lost some
2018-09-25 14:08:58	gunther	Thank you, I think you made it clear
2018-09-25 14:09:23	gunther	When would I consider using box? When I cannot decide the size of the object at compile time?
2018-09-25 14:09:55	-->	holmgr (holmgr@moz-jgo007.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-25 14:09:56	-->	bigpet (uid25664@moz-d2pb8r.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 14:10:27	qyliss^work	Usually yeah
2018-09-25 14:10:34	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-25 14:10:39	qyliss^work	If you want to pass iterators around, for example, you often use boxes
2018-09-25 14:11:13	qyliss^work	(where it could potentially be any of lots of different iterators, so of different sizes)
2018-09-25 14:11:23	-->	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-25 14:12:22	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-25 14:12:46	-->	emerentius (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 14:13:44	<--	holmgr (holmgr@moz-jgo007.9n7n.hs5t.06b0.2001.IP) has quit (Quit: )
2018-09-25 14:15:25	<--	JAlbers (jalbers@moz-gj4vla.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-25 14:16:35	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-25 14:18:08	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-25 14:21:05	-->	asyncsec (asyncsec@moz-qd1de8.dyn6.twc.com) has joined #rust-beginners
2018-09-25 14:21:48	-->	Serv (Mibbit@moz-ckc.tc7.127.185.IP) has joined #rust-beginners
2018-09-25 14:22:20	-->	kinetik (kinetik@moz-5v5.8kl.99.121.IP) has joined #rust-beginners
2018-09-25 14:22:27	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-25 14:22:36	<--	Serv (Mibbit@moz-ckc.tc7.127.185.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 14:25:08	-->	snowe (snowe@moz-bu6tfh.co.comcast.net) has joined #rust-beginners
2018-09-25 14:26:29	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-25 14:26:36	-->	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has joined #rust-beginners
2018-09-25 14:28:55	-->	ufobat_ (Martin@moz-398qmu.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 14:29:16	<--	snowe (snowe@moz-bu6tfh.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 14:33:01	<--	kinetik (kinetik@moz-5v5.8kl.99.121.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 14:33:23	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-25 14:35:18	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-25 14:36:45	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-25 14:39:02	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-25 14:39:49	-->	user404d (quincycondu@moz-niui7i.carfax.com) has joined #rust-beginners
2018-09-25 14:42:12	-->	kinetik (kinetik@moz-5v5.8kl.99.121.IP) has joined #rust-beginners
2018-09-25 14:43:44	<--	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2018-09-25 14:44:59	-->	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has joined #rust-beginners
2018-09-25 14:45:08	Moongoodboy{K}	gunther: you can be sure that the Camera is not cloned (you cannot ensure that it is not bitcopied)
2018-09-25 14:45:27	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 14:45:49	Moongoodboy{K}	Rust has move semantics by default. :)
2018-09-25 14:46:11	-->	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has joined #rust-beginners
2018-09-25 14:46:33	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-25 14:46:37	gunther	Thats neat, i have another question
2018-09-25 14:46:47	--	U007D_afk is now known as U007D
2018-09-25 14:46:47	gunther	Can I make a type with a condition? I would like to make a "type percent = i32", but I want the type to only accept values between 0 and 100. Any ideas? One solution would be to make a struct and then encapsulate the setter, but then i need to call Percent.percent() each time
2018-09-25 14:47:28	-->	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has joined #rust-beginners
2018-09-25 14:48:40	Moongoodboy{K}	(that would be u8 with a condition)
2018-09-25 14:49:05	-->	alx741 (alx741@moz-9ki.0fs.196.181.IP) has joined #rust-beginners
2018-09-25 14:50:22	Moongoodboy{K}	that's something that I'd like to see too, but it doesn't exist (at least not yet)
2018-09-25 14:50:54	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 14:51:29	Moongoodboy{K}	I've made newtypes with fallible conversions before (it's a bit nicer if you don't need to mutate)
2018-09-25 14:52:05	Moongoodboy{K}	…wait, you don't need a setter at all if all you need is to change the whole thing; you can just make client code assign the wrapped type
2018-09-25 14:54:11	<--	makos_ (makos@moz-vv0mq6.adsl.tpnet.pl) has quit (Quit: Leaving)
2018-09-25 14:54:25	Ferdirand	then you'd also need to define what happens when you take 51% + 51%
2018-09-25 14:55:23	Ferdirand	and x% * y%, for that matter
2018-09-25 14:55:29	-->	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has joined #rust-beginners
2018-09-25 14:57:25	gunther	Cant you let it fail because it cannot be asserted to be smaller than 100 during compile time? 
2018-09-25 14:57:59	qyliss^work	You may be looking for Idris if you want this complex a type system ;)
2018-09-25 14:58:09	Moongoodboy{K}	Ada? :'3
2018-09-25 14:58:47	<--	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has quit (Quit: Konversation terminated!)
2018-09-25 14:59:10	Moongoodboy{K}	doing this (in a dedicated way) at the type level is probably blocked on half a dozen type-level improvements and also not planned yet
2018-09-25 14:59:12	--	pmoore is now known as pmoore|mtg
2018-09-25 14:59:17	Xion	This isn't really a complex type system feature, and it doesn't require "conditions", just ranges
2018-09-25 14:59:28	Xion	In fact, Pascal had it for decades
2018-09-25 14:59:41	Xion	(and that's hardly a complex type system language)
2018-09-25 14:59:44	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-25 14:59:48	<--	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-25 14:59:50	jossypoo	i hate women
2018-09-25 14:59:52	jossypoo	WRONG CHAT
2018-09-25 15:00:01	 *	Moongoodboy{K} invokes Poe's Law
2018-09-25 15:00:16	<--	pingwin (brian@moz-r6puto.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 15:00:36	Simon	Hi
2018-09-25 15:00:46	Simon	What should be the output directory for generated rust code?
2018-09-25 15:00:56	Simon	To optimally integrate with cargo and the IDEs etc.
2018-09-25 15:01:36	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 15:01:56	-->	mib_rptj36 (Mibbit@moz-c2o.8q2.143.139.IP) has joined #rust-beginners
2018-09-25 15:02:45	mib_rptj36	I am just going through the hello_world tutorial but don't know how to do this: Writing and Running a Rust Program  We need to create a source file for our Rust program. Rust files always end in a .rs extension?
2018-09-25 15:03:47	mib_rptj36	Using Windows
2018-09-25 15:04:00	Yaniel	just create a new file with your favorite text editor
2018-09-25 15:04:11	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 15:04:15	Yaniel	and save the file with a name that ends in .rs instead of .txt
2018-09-25 15:04:50	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-25 15:05:18	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-25 15:05:47	Xion	Simon: In build.rs? You get OUT_DIR as env variable
2018-09-25 15:06:06	Xion	This is typically something like target/debug/yourcrate in the project root
2018-09-25 15:06:11	Simon	Okay
2018-09-25 15:06:24	-->	Mateon2 (Thunderbird@moz-6audnv.supernova.orange.pl) has joined #rust-beginners
2018-09-25 15:06:30	<--	Mateon1 (Thunderbird@moz-o30td9.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-25 15:06:30	--	Mateon2 is now known as Mateon1
2018-09-25 15:07:03	Simon	Xion: Do I have to set the src folder in Cargo.toml them to pick the generated sources up?
2018-09-25 15:07:28	Xion	You typically include!() them in your regular crate code
2018-09-25 15:07:56	Xion	E.g. include!(concat!(env!("OUT_DIR"), "generated", "/", "yourfile.rs")
2018-09-25 15:08:22	<--	SenasOzys (SenasOzys@moz-mv386m.lnu.se) has quit (Connection closed)
2018-09-25 15:08:23	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-25 15:08:28	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Quit: WeeChat 2.2)
2018-09-25 15:09:40	-->	arunkumar314 (arunkumar41@moz-kmc.fjv.48.157.IP) has joined #rust-beginners
2018-09-25 15:10:12	<--	arunkumar413 (arunkumar41@moz-m95.jlb.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 15:11:23	-->	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has joined #rust-beginners
2018-09-25 15:11:30	Xion	https://doc.rust-lang.org/cargo/reference/build-scripts.html#case-study-code-generation this has a simple exmaple
2018-09-25 15:12:04	-->	proc (aron@moz-ifbhd6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 15:12:10	 *	Xion tried to bring up a real-world one from one of his projects but relies the build script has too many layers of abstractions to be understandable easily -_-
2018-09-25 15:12:14	-->	mib_jmvies (Mibbit@moz-alq.m7v.177.195.IP) has joined #rust-beginners
2018-09-25 15:12:25	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-25 15:12:38	<--	mib_jmvies (Mibbit@moz-alq.m7v.177.195.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 15:12:51	-->	SenasOzys (SenasOzys@moz-mv386m.lnu.se) has joined #rust-beginners
2018-09-25 15:13:28	-->	mib_pju4xb (Mibbit@moz-r1f.oo4.191.213.IP) has joined #rust-beginners
2018-09-25 15:14:45	-->	pingwin (brian@moz-r6puto.res.rr.com) has joined #rust-beginners
2018-09-25 15:15:13	<--	j0nthn (jonathan@moz-6br3pp.rev.sfr.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-25 15:15:19	<--	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has quit (Quit: WeeChat 2.2)
2018-09-25 15:15:48	-->	jibby (quassel@moz-j5hri2.vt.comcast.net) has joined #rust-beginners
2018-09-25 15:16:54	-->	RockyTV (alex@moz-7ff.ol2.249.191.IP) has joined #rust-beginners
2018-09-25 15:16:59	-->	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has joined #rust-beginners
2018-09-25 15:17:21	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 15:17:38	-->	dowwie (dowwie@moz-3dr.dpg.227.23.IP) has joined #rust-beginners
2018-09-25 15:17:44	Simon	Xion: Okay, thanks!
2018-09-25 15:18:59	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Quit: Leaving)
2018-09-25 15:20:20	<--	Xinayder (alex@moz-fu0.s3p.249.191.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 15:21:58	Simon	Xion: Which IDE do you use? In CLion I don't get autocompletion for generated sources :(
2018-09-25 15:22:03	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-25 15:23:15	pixlark	quick question: is `if option.is_some() && predicate(option.unwrap())` idiomatic or is there a more common solution to using Options?
2018-09-25 15:23:36	<--	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has quit (Quit: Leaving)
2018-09-25 15:23:50	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 15:23:51	Moongoodboy{K}	if let Some(foo) = maybe_foo
2018-09-25 15:24:56	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-25 15:25:01	<--	mib_pju4xb (Mibbit@moz-r1f.oo4.191.213.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 15:25:07	pixlark	ah interesting, didn't know about that
2018-09-25 15:25:08	pixlark	thanks
2018-09-25 15:27:20	<--	sp1ff_ (sp1ff@moz-ohchlb.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-25 15:28:02	<--	arunkumar314 (arunkumar41@moz-kmc.fjv.48.157.IP) has quit (Quit: Leaving)
2018-09-25 15:28:55	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-25 15:29:04	Moongoodboy{K}	also match
2018-09-25 15:29:30	Moongoodboy{K}	pixlark: also, Option and Result in particular have a /ton/ of helpful combinatory methods that are useful in various situations
2018-09-25 15:29:43	pixlark	yeah I should look through them at some point
2018-09-25 15:29:51	Moongoodboy{K}	see their docs (and we can advise you on idiomatically optimizing specific snippets)
2018-09-25 15:29:58	Moongoodboy{K}	yeah :3
2018-09-25 15:30:53	-->	badmann (badmann@moz-dfq9rb.backbone.elte.hu) has joined #rust-beginners
2018-09-25 15:32:24	Xion	pixlark: It's idiomatic if you don't want the double indent
2018-09-25 15:32:41	Xion	There have been some proposals to enable additional conditions in if-let but none got off the ground AFAIK
2018-09-25 15:32:47	<--	somewone_ (somewone@moz-rg0.h2s.113.141.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 15:32:55	Moongoodboy{K}	oh, I misread
2018-09-25 15:33:03	Xion	But yes, combinators
2018-09-25 15:33:16	Xion	if option.map(predicate).unwrap_or(false) { is a viable option here
2018-09-25 15:33:25	Moongoodboy{K}	pixlark, Xion: for this kinda thing, you want `if maybe_foo.map_or(false, |f| predicate(f)`
2018-09-25 15:33:39	Moongoodboy{K}	with matching parens *
2018-09-25 15:33:53	mib_rptj36	Thanks Yaniel, I have managed to run the hello_world code!
2018-09-25 15:34:01	<--	ufobat_ (Martin@moz-398qmu.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-25 15:34:08	Xion	map_or is so backwards, I don't like it at all
2018-09-25 15:34:26	pixlark	yeah let me try those out
2018-09-25 15:35:29	pixlark	the problem with map is that my predicate is just a primitive greater-than, so I think I have to wrap it in a lambda...
2018-09-25 15:36:34	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-25 15:37:30	Moongoodboy{K}	all you need is a clos—oh, yeah
2018-09-25 15:37:46	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-25 15:37:53	pixlark	yep `if option.map(|x| len > x).unwrap_or(false) {` seems to work, thanks guys!
2018-09-25 15:38:03	<--	mib_rptj36 (Mibbit@moz-c2o.8q2.143.139.IP) has left #rust-beginners
2018-09-25 15:38:44	-->	snowe (snowe@moz-5tk.kp8.58.172.IP) has joined #rust-beginners
2018-09-25 15:38:45	pixlark	it might have more clarity if I just go with the original though... not sure it's worth the slight typing save lol
2018-09-25 15:40:38	Moongoodboy{K}	there's also map_or()
2018-09-25 15:41:00	Moongoodboy{K}	is_some() followed by unwrap() is pretty unidiomatic
2018-09-25 15:41:14	Moongoodboy{K}	and I feel like map_or() is probably fairly common for this kinda thing :P
2018-09-25 15:41:30	Xion	Never seen it.
2018-09-25 15:41:57	pixlark	Probably just seems like it's less clear because I'm new to rust. I'll keep it for now I think
2018-09-25 15:42:02	pixlark	not a big deal in the end anyway
2018-09-25 15:42:10	Moongoodboy{K}	wot. I've seen it quite a few times.
2018-09-25 15:44:45	emerentius	Some(len) > option
2018-09-25 15:44:51	emerentius	works because None is < all Some
2018-09-25 15:45:22	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-25 15:45:26	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 15:45:53	-->	panitaliemom (Mibbit@moz-0dp424.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-25 15:46:00	Moongoodboy{K}	emerentius: /eh./
2018-09-25 15:46:04	Moongoodboy{K}	that's a footgun
2018-09-25 15:46:17	<--	panitaliemom (Mibbit@moz-0dp424.pools.vodafone-ip.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 15:46:21	Moongoodboy{K}	…why does Option impl PartialOrd?? that was a mistake
2018-09-25 15:47:19	<--	gunther (Mibbit@moz-rhbdqg.priv.bahnhof.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 15:47:37	emerentius	in general, things should be orderable unless there's a really good reason not to
2018-09-25 15:47:57	emerentius	it can be useful to sort stuff
2018-09-25 15:48:10	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 15:48:35	Moongoodboy{K}	nah, if you wanna sort, use sort_by() and specify you want None before Some
2018-09-25 15:49:13	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 15:49:41	Xion	emerentius: Genius.
2018-09-25 15:49:45	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-25 15:50:01	Xion	Almost as great as Option implementing Iterator /s
2018-09-25 15:50:11	Moongoodboy{K}	that one seems fine
2018-09-25 15:50:55	emerentius	Moongoodboy{K}: that doesn't scale to complex types
2018-09-25 15:51:52	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 15:51:53	pixlark	hang on you can't use a plus before a literal to denote positives? what's the reason behind that?
2018-09-25 15:52:52	Xion	Every cases of "X implements Y even though it's kinda dubious" seems fine, until you use type inference all over the place and it deduces a completely different type than you intended (usually via some broadly impl'd trait like Deserialize) and voila, you have a runtime bug
2018-09-25 15:54:45	emerentius	broad bounds mostly lead to type inference failures, not unintended specific types
2018-09-25 15:54:51	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-25 15:56:42	Xion	With "mostly" being the keyword :)
2018-09-25 15:59:41	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 16:00:43	-->	Neurone (chatzilla@moz-te0q6u.singnet.com.sg) has joined #rust-beginners
2018-09-25 16:01:04	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-25 16:01:19	Neurone	Hi everyone, have a question about how to define the lifetime of a struct that stores a closure
2018-09-25 16:02:15	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-25 16:02:38	<--	marksieklucki (marksiekluc@moz-lu7ko3.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-25 16:02:46	-->	def (def@moz-8mkbv1.info) has joined #rust-beginners
2018-09-25 16:05:08	-->	alatiera (alatiera@moz-ob4a2f.access.hol.gr) has joined #rust-beginners
2018-09-25 16:07:36	jossypoo	is there a better way to do this:
2018-09-25 16:07:57	jossypoo	https://imgur.com/a/vQW0H91
2018-09-25 16:07:59	jossypoo	bit more concise?
2018-09-25 16:08:06	jossypoo	mod x; pub use x::*;
2018-09-25 16:08:11	jossypoo	i do it like all over the place
2018-09-25 16:09:13	Xion	Yes, group the mod declarations and the use declarations together, you will only one empty line :D
2018-09-25 16:09:18	<--	SenasOzys (SenasOzys@moz-mv386m.lnu.se) has quit (Connection closed)
2018-09-25 16:09:19	Xion	only need *
2018-09-25 16:09:39	-->	SenasOzys (SenasOzys@moz-mv386m.lnu.se) has joined #rust-beginners
2018-09-25 16:13:10	-->	siddhartharao17 (siddharthar@moz-6pgqps.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-25 16:13:59	<--	siddhartharao17 (siddharthar@moz-6pgqps.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 16:14:20	-->	siddhartharao17 (siddharthar@moz-tao08e.2fii.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-25 16:15:56	<--	snowe (snowe@moz-5tk.kp8.58.172.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 16:19:18	<--	m_101 (m_101@moz-3lv891.abo.wanadoo.fr) has quit (Quit: leaving)
2018-09-25 16:19:29	-->	m_101 (m_101@moz-3lv891.abo.wanadoo.fr) has joined #rust-beginners
2018-09-25 16:20:42	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 16:21:17	<--	liquidnight (marcus@moz-5r0f68.5c32.mugc.0c23.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 16:22:43	-->	mib_pkngl3 (Mibbit@moz-opk9ij.ca.comcast.net) has joined #rust-beginners
2018-09-25 16:25:24	-->	snowe (snowe@moz-ri3.15m.177.128.IP) has joined #rust-beginners
2018-09-25 16:28:55	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 16:29:50	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-25 16:30:22	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-25 16:30:53	Moongoodboy{K}	!ask @ Neurone
2018-09-25 16:30:53	+rustbot	Neurone: Got a question about Rust? Go ahead and ask it! If you need to paste code, please use https://play.rust-lang.org/ and click "Share" for a link
2018-09-25 16:31:04	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-25 16:31:15	Neurone	thanks, will try to articulate the problem
2018-09-25 16:31:35	<--	vmx (vmx@moz-tru45v.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-25 16:31:58	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-25 16:32:08	Neurone	I doing an audio synthesis type of thing, so you can create a graph of nodes, each node processes audio, which finally goes to the server to play it
2018-09-25 16:32:26	<--	pamaury (pamaury@moz-o5u6du.mpi-sws.org) has quit (Ping timeout: 121 seconds)
2018-09-25 16:32:37	Neurone	Its a binding to a C library, so the borrow checker isn't complaining about the graph part.
2018-09-25 16:32:42	dpc1	!paste @Neurone
2018-09-25 16:32:42	+rustbot	Neurone: Paste code at https://play.rust-lang.org/ and click "Share" or paste large text at https://paste.rs/
2018-09-25 16:32:55	Neurone	Uh, I'll try to paste. Sec
2018-09-25 16:33:23	dpc1	:)
2018-09-25 16:33:43	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-25 16:34:19	<--	SenasOzys (SenasOzys@moz-mv386m.lnu.se) has quit (Ping timeout: 121 seconds)
2018-09-25 16:34:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 16:35:47	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-25 16:37:25	<--	Simon (Simon@moz-0eguhk.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-25 16:38:13	-->	tSquared (Mibbit@moz-jcdgej.lv.cox.net) has joined #rust-beginners
2018-09-25 16:38:23	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-25 16:38:29	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-25 16:38:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 16:39:54	Neurone	https://play.rust-lang.org/?gist=eb39916e389130015c9d5de7d7310fce&version=stable&mode=debug&edition=2015
2018-09-25 16:40:21	Neurone	Basically, my c library lets me pass a callback
2018-09-25 16:40:32	Neurone	and I need to specify the correct lifetime parameters for it to live long enough
2018-09-25 16:40:56	-->	froglegstew (Mibbit@moz-q3oif2.cpe.cableone.net) has joined #rust-beginners
2018-09-25 16:41:05	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-25 16:41:27	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-25 16:41:42	Neurone	I don't really understand what that incantation in the set_block_callback function does, but I saw it in a few places, and that's apparently how you pass closures to c callbacks as void* userdata
2018-09-25 16:42:37	Neurone	And I'm storing it in the struct itself so that it can get cleaned up
2018-09-25 16:42:47	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-25 16:43:18	-->	Eragon (Eragon@moz-cm5ic2.abo.wanadoo.fr) has joined #rust-beginners
2018-09-25 16:44:03	-->	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has joined #rust-beginners
2018-09-25 16:44:17	<--	froglegstew (Mibbit@moz-q3oif2.cpe.cableone.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 16:44:49	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-25 16:45:58	tSquared	Is there a way to implement multiple traits in the same impl block?
2018-09-25 16:47:38	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-25 16:47:45	<--	mib_pkngl3 (Mibbit@moz-opk9ij.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 16:48:17	tSquared	For example: if I have a vector struct that implements both the Debug and Display traits. Both traits require a single function to be implemented, and the function signature is the same between both traits.
2018-09-25 16:49:04	tSquared	If I want my vector struct to have the same behavior implemented for both traits, is there a way that I could implement both traits with the same impl block, and only define the function once?
2018-09-25 16:49:14	tSquared	Here's my example: https://github.com/travistrue2008/vex/blob/master/src/vec2.rs
2018-09-25 16:49:25	tSquared	The example is at the end of the file.
2018-09-25 16:50:02	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 16:50:12	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 16:51:48	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-25 16:53:32	--	pmoore|mtg is now known as pmoore
2018-09-25 16:54:52	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-25 16:55:55	Neurone	try Display::fn(self)?
2018-09-25 16:55:59	<--	dinfuehr (dinfuehr@moz-2pqeq8.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-25 16:56:01	<--	stuarth (stuarth@moz-3ff4pn.vw.shawcable.net) has quit (Quit: )
2018-09-25 16:56:06	Neurone	in the debug's display implementation?
2018-09-25 16:56:20	-->	mib_wnpuf0 (Mibbit@moz-78v.alo.149.169.IP) has joined #rust-beginners
2018-09-25 16:56:59	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (Quit: Leaving)
2018-09-25 16:56:59	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-25 16:57:39	s34n	how do you update a cargo-installed app?
2018-09-25 16:57:45	-->	dinfuehr (dinfuehr@moz-gms8op.highway.telekom.at) has joined #rust-beginners
2018-09-25 16:57:53	kimundi	s34n: you install it again
2018-09-25 16:58:05	kimundi	maybe with the --forceoption if it complains
2018-09-25 16:58:21	kimundi	but basically you just overwrite the executable with a newer one
2018-09-25 16:58:42	Arnavion	Yes, you'll need --force, or you can manually delete the binary first
2018-09-25 16:59:40	-->	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has joined #rust-beginners
2018-09-25 16:59:55	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 17:01:13	-->	JAlbers (jalbers@moz-u4u.63t.188.68.IP) has joined #rust-beginners
2018-09-25 17:01:25	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-25 17:01:48	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-25 17:01:54	<--	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has quit (Quit: Leaving)
2018-09-25 17:03:34	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-25 17:05:04	<--	justsomequestions (gumble@moz-3q3kac.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2018-09-25 17:05:09	-->	justsomequestions (gumble@moz-3q3kac.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-25 17:05:27	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-25 17:06:25	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-09-25 17:08:09	-->	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has joined #rust-beginners
2018-09-25 17:08:13	-->	JAlbers_ (jalbers@moz-dl681u.od4t.kpie.100a.2600.IP) has joined #rust-beginners
2018-09-25 17:08:26	-->	jihi (jih@moz-78phot.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 17:09:09	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-25 17:10:03	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-25 17:11:15	<--	JAlbers (jalbers@moz-u4u.63t.188.68.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 17:12:11	-->	bluss (bluss@moz-rjksla.customer.tdc.net) has joined #rust-beginners
2018-09-25 17:13:11	--	avadacatavra is now known as avadacatavra|w3c
2018-09-25 17:19:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 17:20:28	<--	artfwo (artfwo@moz-ei7.hqq.232.91.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 17:20:30	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-25 17:20:37	-->	clarkenciel (clarkenciel@moz-d75.1gc.154.47.IP) has joined #rust-beginners
2018-09-25 17:20:40	-->	artfwo (artfwo@moz-fb0.8oo.75.184.IP) has joined #rust-beginners
2018-09-25 17:21:08	<--	tSquared (Mibbit@moz-jcdgej.lv.cox.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 17:23:14	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-25 17:23:19	-->	mredlek (mredlek@moz-8np.03s.132.145.IP) has joined #rust-beginners
2018-09-25 17:23:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 17:30:24	-->	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 17:31:30	-->	Dariost (Dariost@moz-5nr.9t5.48.151.IP) has joined #rust-beginners
2018-09-25 17:32:07	-->	zanadar (zanadar@moz-76b.tt2.236.104.IP) has joined #rust-beginners
2018-09-25 17:32:17	<--	zanadar (zanadar@moz-76b.tt2.236.104.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-25 17:32:33	-->	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has joined #rust-beginners
2018-09-25 17:32:43	-->	mmacherey (Thunderbird@moz-gkgj1q.dyn.telefonica.de) has joined #rust-beginners
2018-09-25 17:33:18	-->	zanadar (zanadar@moz-35gqmg.i2gt.qoll.a880.2604.IP) has joined #rust-beginners
2018-09-25 17:34:04	<--	badmann (badmann@moz-dfq9rb.backbone.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-25 17:34:04	-->	umbridge (Mibbit@moz-ami.8vk.125.86.IP) has joined #rust-beginners
2018-09-25 17:35:48	<--	zanadar (zanadar@moz-35gqmg.i2gt.qoll.a880.2604.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-25 17:36:06	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-25 17:36:10	<--	umbridge (Mibbit@moz-ami.8vk.125.86.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 17:36:53	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-25 17:37:32	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-25 17:38:42	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Quit: Leaving)
2018-09-25 17:38:58	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 17:40:25	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-25 17:40:40	-->	JAlbers (user@moz-ig8b4j.sub-174-234-154.myvzw.com) has joined #rust-beginners
2018-09-25 17:41:31	--	U007D is now known as U007D_afk
2018-09-25 17:41:57	<--	mmacherey (Thunderbird@moz-gkgj1q.dyn.telefonica.de) has quit (Client exited)
2018-09-25 17:43:41	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-25 17:44:02	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 17:44:33	--	U007D_afk is now known as U007D
2018-09-25 17:47:01	-->	badmann (badmann@moz-jk23tv.eduroam.elte.hu) has joined #rust-beginners
2018-09-25 17:48:42	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Quit: Leaving)
2018-09-25 17:48:59	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-25 17:49:36	<--	JAlbers_ (jalbers@moz-dl681u.od4t.kpie.100a.2600.IP) has quit (Connection closed)
2018-09-25 17:51:06	<--	JAlbers (user@moz-ig8b4j.sub-174-234-154.myvzw.com) has quit (Connection closed)
2018-09-25 17:51:08	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-25 17:51:48	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-09-25 17:52:09	-->	pixlark_ (pixlark@moz-5ia.t4e.125.149.IP) has joined #rust-beginners
2018-09-25 17:52:45	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 17:53:16	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-25 17:53:25	<--	Neurone (chatzilla@moz-te0q6u.singnet.com.sg) has quit (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
2018-09-25 17:53:37	pixlark_	Given a vector, I want to get the first element that matches a predicate function. Is there a good way to do this concisely? The only way I can think of from looking at the Vec docs is to use retains(), which is kind of verbose since you have to check it twice.
2018-09-25 17:54:02	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-25 17:54:12	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-25 17:54:14	pixlark_	I was hoping there's something like `vec.find(pred)`
2018-09-25 17:54:18	kimundi	.iter().find(predicate)
2018-09-25 17:54:19	Arnavion	.iter().find(pred)
2018-09-25 17:54:29	pixlark_	ahh you have to make it an iterator first that makes sense
2018-09-25 17:54:30	pixlark_	thanks
2018-09-25 17:54:49	-->	esteth (Mibbit@moz-0qst65.cable.virginm.net) has joined #rust-beginners
2018-09-25 17:55:11	kimundi	pixlark_: whenever you have a operation that can be done while iterating once through the datastructure, look for it in the iterator API :)
2018-09-25 17:56:50	esteth	Hi folks. I'd like to represent the Z80 CPU registers in a rust struct. It has a number of 8-bit registers, but also the ability to access some pairs of consecutive registers as a 16-bit registers. Is there a way to represent that with unions somehow inside a rust struct without unsafe?
2018-09-25 17:56:53	pixlark_	yeah I'll do that, sounds useful
2018-09-25 17:57:51	Arnavion	esteth: Is there any overlap in the underlying 8-bit registers in all the 16-bit combinations?
2018-09-25 17:58:07	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 17:58:07	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-25 17:58:10	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 17:58:13	Arnavion	ie can any 8-bit register be part of more than one 16-bit register?
2018-09-25 17:58:27	esteth	Arnavion: No, there are AB, CD, and EF, for example
2018-09-25 17:58:30	esteth	but no AD
2018-09-25 17:58:36	Arnavion	and no BC?
2018-09-25 17:58:39	esteth	right
2018-09-25 17:58:56	--	U007D is now known as U007D_afk
2018-09-25 17:59:02	Arnavion	You could have just four 16-bit values and provide the 8-bit registers by shifting (with the correct endianness) out of those
2018-09-25 17:59:25	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-09-25 17:59:59	--	U007D_afk is now known as U007D
2018-09-25 18:00:02	esteth	I could, but it would be great to avoid doing work to shift the format
2018-09-25 18:00:07	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-25 18:00:56	-->	SenasOzys (SenasOzys@moz-mv386m.lnu.se) has joined #rust-beginners
2018-09-25 18:00:58	esteth	in C I could do something like this: https://pastebin.com/3SsEgKgS
2018-09-25 18:01:18	esteth	however ugly it is to declare, you can then to container.a, container.f, or container.af
2018-09-25 18:01:48	kimundi	esteth: the only way to avoid shifting is to use unions or pointer casts, and those only work for your usecase if the endianess of the current platform is the same as that of the emulated one
2018-09-25 18:02:09	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-25 18:02:19	kimundi	which seems like a kind of iffy gotcha
2018-09-25 18:02:38	esteth	kimundi: Oh I forgot about endian-ness being a gotcha with unioning them
2018-09-25 18:02:39	esteth	:(
2018-09-25 18:02:52	esteth	Thanks for the advice though!
2018-09-25 18:03:11	-->	danielrivas (danielrivas@moz-67p1rm.skybroadband.com) has joined #rust-beginners
2018-09-25 18:03:18	kimundi	my personal opinion would be to to just use shifting to have the whole thing be well defined in a portable way, and revised it at some later pointer if performance should be an problem - whihc, with an z80, I don't think it will be
2018-09-25 18:03:27	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-25 18:04:32	<--	fsasm (fsasm@moz-5fd.qra.178.62.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 18:04:47	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 18:05:38	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-25 18:08:08	<--	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has quit (Connection closed)
2018-09-25 18:08:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 18:09:17	-->	martin1 (martin@moz-c7v.9s6.64.190.IP) has joined #rust-beginners
2018-09-25 18:10:45	martin1	hey all! can anyone recommend any courses on rust? I've kinda gone through the book but I'm looking to complement it with something else
2018-09-25 18:10:54	martin1	I've searched coursera but couldn't find anything
2018-09-25 18:13:30	-->	SomeDude (pascal@moz-5qkr7k.g5kr.iei5.0908.2a02.IP) has joined #rust-beginners
2018-09-25 18:15:19	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-25 18:16:32	<--	esteth (Mibbit@moz-0qst65.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 18:17:23	<--	pixlark_ (pixlark@moz-5ia.t4e.125.149.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 18:17:47	vegai	what would you need from a course?
2018-09-25 18:17:57	vegai	I'm semi-interested in making something like that
2018-09-25 18:19:28	<--	siddhartharao17 (siddharthar@moz-tao08e.2fii.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 18:19:41	-->	siddhartharao17 (siddharthar@moz-tao08e.2fii.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-25 18:19:42	vegai	the hello rust youtube channel has something you might enjoy, that shows practical coding pretty well
2018-09-25 18:19:47	vegai	https://www.youtube.com/channel/UCZ_EWaQZCZuGGfnuqUoHujw
2018-09-25 18:19:55	GreenJello	martin1, my experience has been that after finishing the book, I started building things, which causes me to look up things in the stdlib docs and explore the ecosystem. It's good to mix learning styles, and I think the next time I do a book/course, it'll be more on systems programming and algorithms in general, not specifically rust
2018-09-25 18:20:42	GreenJello	Oh cool, haven't seen that channel before
2018-09-25 18:23:13	<--	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 18:24:26	Arnavion	esteth: You can use unions by defining two structs depending on cfg target endianness
2018-09-25 18:24:31	Arnavion	Oh they left already
2018-09-25 18:26:40	<--	danielrivas (danielrivas@moz-67p1rm.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-25 18:27:23	-->	mmacherey (Thunderbird@moz-gkgj1q.dyn.telefonica.de) has joined #rust-beginners
2018-09-25 18:28:33	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-25 18:29:21	-->	danielrivas (danielrivas@moz-67p1rm.skybroadband.com) has joined #rust-beginners
2018-09-25 18:30:00	<--	jolan (jolan@moz-70cceu.jolan.org) has quit (Quit: leaving)
2018-09-25 18:30:10	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-25 18:30:20	-->	dylan1 (dylan@moz-r1o.1mk.59.182.IP) has joined #rust-beginners
2018-09-25 18:30:56	<--	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-25 18:31:01	<--	dylan1 (dylan@moz-r1o.1mk.59.182.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-25 18:31:24	-->	num8er (num8er@moz-a2o.dn3.126.109.IP) has joined #rust-beginners
2018-09-25 18:32:21	-->	jolan (jolan@moz-70cceu.jolan.org) has joined #rust-beginners
2018-09-25 18:32:53	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 18:33:01	martin1	vegai: I'm not exactly sure what I would expect, but in general, seeing people use the language helps me a great deal.. specially regarding the idioms, patterns and approaches to common issues people have
2018-09-25 18:34:36	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-25 18:34:52	-->	nullbit (dylan@moz-r1o.1mk.59.182.IP) has joined #rust-beginners
2018-09-25 18:35:11	martin1	the documentation is great though, but again.. I'm not sure if whatever I found in the docs is one of `the` ways to solve whatever I was trying to solve, or I'm just being completely inefficient 
2018-09-25 18:35:44	martin1	I'll be sure to check that channel, seems interesting
2018-09-25 18:36:56	<--	nullbit (dylan@moz-r1o.1mk.59.182.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-25 18:37:36	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 18:37:49	martin1	I recently found this channel https://www.youtube.com/channel/UC_iD0xppBwwsrM9DegC5cQQ and I'm loving the content so far
2018-09-25 18:38:38	<--	Debaran (none@moz-iva6jh.2tf0.65v1.f058.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 18:40:16	martin1	back on the course thing.. having some kind of certificate would also be nice
2018-09-25 18:40:49	dpc1	i dislike certifications tbh
2018-09-25 18:41:19	<--	mmacherey (Thunderbird@moz-gkgj1q.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-25 18:41:59	<--	Orphis (orphis@moz-e3ahku.orphis.net) has quit (Ping timeout: 121 seconds)
2018-09-25 18:42:14	martin1	how come?
2018-09-25 18:43:12	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-25 18:43:26	<--	ken (ken@moz-60fncd.sasknet.sk.ca) has quit (Connection closed)
2018-09-25 18:45:07	-->	Orphis (orphis@moz-e3ahku.orphis.net) has joined #rust-beginners
2018-09-25 18:48:12	vegai	as an employer, I wouldn't care about certifications
2018-09-25 18:48:24	vegai	as an employee, I cannot be bothered to complete them :P
2018-09-25 18:48:45	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-25 18:48:48	vegai	well, at least in the programming world. In other fields they might be fine
2018-09-25 18:48:51	bigpet	Having seen people pass an (admittedly A-Level) programming class for 3 years (and some university level courses for a year) throughout multiple exams without being able to actually come up with something like fizzbuzz on the fly taught me a thing or two about programming exams
2018-09-25 18:49:27	dowwie	so I'm trying to find the terminology to distinguished chained function calls from ... [non-chained] <---- discrete steps?  what would you call them
2018-09-25 18:49:30	bigpet	they sure test something I'm just not sure how correlated it is with programming ability
2018-09-25 18:50:02	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 18:51:07	-->	nullbit (nullbit@moz-r1o.1mk.59.182.IP) has joined #rust-beginners
2018-09-25 18:51:26	-->	Debaran (none@moz-duk0lh.2tf0.65v1.f058.2607.IP) has joined #rust-beginners
2018-09-25 18:51:33	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-25 18:51:44	vegai	would be nice if there were good programmer certifications
2018-09-25 18:51:58	vegai	perhaps we could then call ourselves professionals without being sarcastic :P
2018-09-25 18:52:02	nullbit	i'm working on a toy shell
2018-09-25 18:52:05	dowwie	vegai:   offtopic
2018-09-25 18:52:15	vegai	dowwie: yeah, sorry.
2018-09-25 18:52:24	nullbit	so
2018-09-25 18:52:32	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-25 18:52:34	nullbit	could someone review my code :P
2018-09-25 18:52:36	nullbit	pls
2018-09-25 18:52:55	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 18:52:58	vegai	have you run it through clippy already?
2018-09-25 18:53:09	nullbit	it's on github
2018-09-25 18:53:44	vegai	dowwie: I would call a non-chained function call "a function call"
2018-09-25 18:54:03	GreenJello	dowwie, well, there are chained function calls that consume/return self, which are often 'builders'
2018-09-25 18:54:04	<--	nullbit (nullbit@moz-r1o.1mk.59.182.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-25 18:54:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 18:54:16	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-25 18:54:32	dowwie	I'm giving a talk and just wanted to distinguish one style from another
2018-09-25 18:55:27	dowwie	do_something().and_then(|thing| do_this(thing))   <---- "chained call"  ?    vs     let thing = do_something();  do_this(thing);    <--- "discrete steps" ?
2018-09-25 18:55:53	<--	danielrivas (danielrivas@moz-67p1rm.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-25 18:56:17	dowwie	ugh
2018-09-25 18:56:19	GreenJello	dowwie, the way you phrased it refers to language constructs rather than the semantic pattern. In your most recent message, you might (roughly) refer to that as functional vs procedural
2018-09-25 18:56:48	dowwie	functional vs procedure  sounds better
2018-09-25 18:56:52	dowwie	proecural
2018-09-25 18:57:02	dowwie	procedural
2018-09-25 18:57:08	dowwie	\o/
2018-09-25 18:57:26	<--	mredlek (mredlek@moz-8np.03s.132.145.IP) has quit (Quit: Bye)
2018-09-25 18:58:16	<--	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has quit (Ping timeout: 121 seconds)
2018-09-25 18:58:28	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-25 18:59:31	<--	mib_wnpuf0 (Mibbit@moz-78v.alo.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 19:01:59	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 19:02:04	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 19:03:09	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-25 19:04:41	<--	justsomequestions (gumble@moz-3q3kac.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-25 19:05:42	<--	mib_9hbziq (Mibbit@moz-g7v.bm5.255.158.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 19:06:44	-->	hurricanehrndz (hurricanehr@moz-h44etc.cg.shawcable.net) has joined #rust-beginners
2018-09-25 19:07:28	-->	danielrivas (danielrivas@moz-67p1rm.skybroadband.com) has joined #rust-beginners
2018-09-25 19:08:08	-->	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has joined #rust-beginners
2018-09-25 19:08:31	<--	num8er (num8er@moz-a2o.dn3.126.109.IP) has quit (Connection closed)
2018-09-25 19:09:08	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-25 19:10:39	--	U007D is now known as U007D_afk
2018-09-25 19:12:21	--	U007D_afk is now known as U007D
2018-09-25 19:13:41	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-25 19:15:10	-->	liquidnight (marcus@moz-l8t0ic.hava.ftbi.0c23.2a01.IP) has joined #rust-beginners
2018-09-25 19:15:54	<--	Guest30395 (nj0rd@moz-3n0top.dip.versatel-1u1.de) has quit (Quit: WeeChat 2.2)
2018-09-25 19:16:01	<--	badmann (badmann@moz-jk23tv.eduroam.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-25 19:17:23	-->	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has joined #rust-beginners
2018-09-25 19:17:51	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-25 19:18:29	-->	oms (oms@moz-fg8cd5.dyn.telefonica.de) has joined #rust-beginners
2018-09-25 19:19:32	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-25 19:23:15	<--	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has quit (Quit: Leaving)
2018-09-25 19:24:39	-->	pamaury (pamaury@moz-vk4.qc3.235.46.IP) has joined #rust-beginners
2018-09-25 19:26:15	-->	JAlbers (jalbers@moz-u4u.63t.188.68.IP) has joined #rust-beginners
2018-09-25 19:27:00	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-25 19:29:53	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 19:30:09	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 19:30:11	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 19:30:59	<--	SenasOzys (SenasOzys@moz-mv386m.lnu.se) has quit (Ping timeout: 121 seconds)
2018-09-25 19:32:26	-->	roqvist_ (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 19:32:41	<--	m_101 (m_101@moz-3lv891.abo.wanadoo.fr) has quit (The TLS connection was non-properly terminated.)
2018-09-25 19:32:53	-->	nj0rd (nj0rd@moz-1p463o.dsl.tropolys.de) has joined #rust-beginners
2018-09-25 19:33:16	--	nj0rd is now known as Guest61891
2018-09-25 19:33:43	<--	moriarty (moriarty@moz-se2dgk.net) has quit (Client exited)
2018-09-25 19:34:08	-->	m_101 (m_101@moz-3lv891.abo.wanadoo.fr) has joined #rust-beginners
2018-09-25 19:34:18	<--	roqvist_ (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 19:34:19	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-25 19:34:32	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 19:34:52	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-25 19:35:17	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 19:35:17	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 19:37:55	-->	ufobat_ (Martin@moz-dgj40i.dyn.telefonica.de) has joined #rust-beginners
2018-09-25 19:38:47	-->	drazde (Mibbit@moz-4crehl.retail.telecomitalia.it) has joined #rust-beginners
2018-09-25 19:39:27	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 19:39:30	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-25 19:39:48	-->	jones (jonas@moz-jqo904.customer.lyse.net) has joined #rust-beginners
2018-09-25 19:40:09	drazde	Hi
2018-09-25 19:40:39	<--	zeenix (zeenix@moz-cnpvm3.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-25 19:40:48	<--	JAlbers (jalbers@moz-u4u.63t.188.68.IP) has quit (Quit: )
2018-09-25 19:41:28	dpc1	drazde: hi
2018-09-25 19:41:29	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 19:41:38	drazde	I'm a newbie of rust...
2018-09-25 19:41:51	drazde	I have a simple question
2018-09-25 19:42:02	dpc1	go ahed
2018-09-25 19:42:06	dpc1	*ahead
2018-09-25 19:42:13	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-25 19:44:02	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-25 19:44:28	drazde	If I pass a variable to a function, for example an integer, after call the variable is still exists, but if I pass an String (object) it not?
2018-09-25 19:44:47	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 19:45:15	--	U007D is now known as U007D_afk
2018-09-25 19:45:24	@mbrubeck	drazde: Types that implement the `Copy` trait can still be used after being assigned/passed by value: https://doc.rust-lang.org/std/marker/trait.Copy.html
2018-09-25 19:45:58	@mbrubeck	drazde: Types that don't implement `Copy` have "move" semantics instead.  Moving one of these to a new owner makes the old owner inaccessible.
2018-09-25 19:46:37	--	U007D_afk is now known as U007D
2018-09-25 19:47:00	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-25 19:47:21	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-25 19:47:36	@mbrubeck	drazde: For more details, read https://doc.rust-lang.org/book/second-edition/ch04-01-what-is-ownership.html
2018-09-25 19:48:14	drazde	mh ok, so every simple type, implement Copy trait?
2018-09-25 19:49:07	kimundi	drazde: You can control it for your own type - per default a struct is not Copy, but if it could be, you can implement it for it
2018-09-25 19:49:15	drazde	float integer, boolean, character,...
2018-09-25 19:49:17	<--	danielrivas (danielrivas@moz-67p1rm.skybroadband.com) has quit (Quit: Lost terminal)
2018-09-25 19:49:27	kimundi	Most primitive are Copy, like the integers
2018-09-25 19:49:41	kimundi	But &mut T for example is not
2018-09-25 19:50:00	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-25 19:51:00	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 19:52:24	-->	mib_5nu1u5 (Mibbit@moz-rs2v5a.slkc.qwest.net) has joined #rust-beginners
2018-09-25 19:52:33	<--	mib_5nu1u5 (Mibbit@moz-rs2v5a.slkc.qwest.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 19:52:49	drazde	Ok, in the first example are not so clear for me :(
2018-09-25 19:53:28	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 19:53:50	drazde	Thanks for the answers
2018-09-25 19:53:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 19:54:40	<--	jones (jonas@moz-jqo904.customer.lyse.net) has quit (Quit: WeeChat 2.2)
2018-09-25 19:55:19	drazde	mbrubeck: I read carefully the link you have posted
2018-09-25 19:55:38	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 19:55:49	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 19:56:36	-->	ChaiTRex (ChaiTRex@moz-f2u.fbr.15.4.IP) has joined #rust-beginners
2018-09-25 19:58:15	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-25 19:58:17	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 19:58:43	-->	justsomequestions (gumble@moz-3q3kac.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-25 20:00:07	-->	chenpan (chenpan@moz-qm9.72b.61.171.IP) has joined #rust-beginners
2018-09-25 20:01:28	-->	mib_feg4h1 (Mibbit@moz-idr.tar.53.201.IP) has joined #rust-beginners
2018-09-25 20:01:38	mib_feg4h1	Given the type `enum Nat { Succ(Box<Nat>), Zero }
2018-09-25 20:01:59	mib_feg4h1	Is it possible to implement "pred(nat : &mut Nat)" that mutably removes the first Succ constructor in constant time?
2018-09-25 20:02:52	--	japaric is now known as japaric|away
2018-09-25 20:03:31	kimundi	yes
2018-09-25 20:03:43	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-25 20:04:00	kimundi	mib_feg4h1: look at mem::swap and mem::replace
2018-09-25 20:04:04	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 20:04:06	Moongoodboy{K}	(with that definition, pred(Zero) can't possibly be correct)
2018-09-25 20:05:12	mib_feg4h1	kimundi: ty!
2018-09-25 20:05:15	--	japaric|away is now known as japaric
2018-09-25 20:05:37	mib_feg4h1	Moongoodboy{K}: pred(Zero) just returns Zero (but I'm more of asking if one can replace a structure by a sub-component)
2018-09-25 20:05:45	@mbrubeck	mib_feg4h1: https://play.rust-lang.org/?gist=971d56fda391a4c69758fc65c0f70321&version=stable&mode=debug&edition=2015
2018-09-25 20:06:15	 *	mbrubeck wrote that before seeing the above discussion of pred(Zero)
2018-09-25 20:06:17	Moongoodboy{K}	yeah, just saying
2018-09-25 20:06:39	<--	dalley (dalley@moz-5ib9oe.res.spectrum.com) has quit (Quit: Leaving)
2018-09-25 20:06:40	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 20:06:51	mib_feg4h1	is there any simple cheat-sheet / reference / whatever about what happens with the different ways to pattern match? I.e., match foo { Foo(bar) => ... } vs match foo { &Foo(bar) => ... } vs match foo { Foo(ref bar) => ... } vs match *foo { Foo (ref mut bar) => ... }
2018-09-25 20:07:19	mib_feg4h1	and so on, there are way too many ways to do it and I always forget what each one does. for example, what happens when we match against a reference, or something involving boxes...
2018-09-25 20:07:57	Moongoodboy{K}	the minimal version is that stuff in a pattern “matches and removes” what it would have done in an expression
2018-09-25 20:08:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 20:08:11	kimundi	mib_feg4h1: & removes a layer of reference, ref adds a layer of reference, and in recent rust versions you no longer need to closely manage that stuff manaully
2018-09-25 20:08:18	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-25 20:08:22	-->	moriarty (moriarty@moz-se2dgk.net) has joined #rust-beginners
2018-09-25 20:08:30	Moongoodboy{K}	yeah, that's probably more helpful xD
2018-09-25 20:08:33	--	japaric is now known as japaric|away
2018-09-25 20:08:51	Moongoodboy{K}	box keyword got cancelled though :(
2018-09-25 20:09:31	-->	jones (jonas@moz-jqo904.customer.lyse.net) has joined #rust-beginners
2018-09-25 20:11:30	mib_feg4h1	hmmm
2018-09-25 20:11:49	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 20:11:54	mib_feg4h1	can I ask the type of something in Rust? as in, insert a hole? that way I'd not need to ask questions
2018-09-25 20:12:03	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 20:12:08	kimundi	well you can use _ as a "infer this" type
2018-09-25 20:12:12	kimundi	let x: &_ = ...;
2018-09-25 20:12:23	kimundi	if you want to know the type, write a compile error
2018-09-25 20:12:30	kimundi	eg let () = ...;
2018-09-25 20:13:30	dgriffen	or use the RLS, it will show you the type on hover.
2018-09-25 20:15:05	-->	niconii (nicole@moz-j97s6s.midco.net) has joined #rust-beginners
2018-09-25 20:15:05	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-25 20:16:03	dpc1	if you can't just provide the wrong type and the compiler will correct you xD
2018-09-25 20:16:52	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 20:16:54	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Connection closed)
2018-09-25 20:17:09	Aankhen``	This was a nifty hack for finding out the type: [2018-09-22 15:36:59] <scottmcm> eval: " Moongoodboy{K} " as () // I prefer this, since it puts the type in the first line
2018-09-25 20:17:36	mib_feg4h1	kimundi: thanks!
2018-09-25 20:20:22	<--	jones (jonas@moz-jqo904.customer.lyse.net) has quit (Quit: WeeChat 2.2)
2018-09-25 20:21:40	mib_feg4h1	Sorry I'm not sure how I'm supposed to use std::mem::replace here. Here is one attempt (of many): `fn pred(nat : &mut Nat) { match nat { Zero => {}, Succ(pred) => { std::mem::replace(nat, **pred); } } }`
2018-09-25 20:21:45	--	U007D is now known as U007D_afk
2018-09-25 20:22:04	--	U007D_afk is now known as U007D
2018-09-25 20:22:30	mib_feg4h1	In this case, I get a "cannot move out of borrowed content" error, which makes sense, because pred borrowed, but then, how do I do it?
2018-09-25 20:22:46	kimundi	mib_feg4h1: The idea is to replace your type with Nat::Zero, then pattern match the first element out of the temporary value you get from that, then replace the inner Nat value back with the Nat:Zero
2018-09-25 20:23:45	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-25 20:24:21	@mbrubeck	mib_feg4h1: Here's a short example https://play.rust-lang.org/?gist=e671f29aeda4c5b277dd6effc7871ac1&version=stable&mode=debug&edition=2015
2018-09-25 20:25:10	mib_feg4h1	mbrubeck: it is equivalent to the former, right? Just shorter?
2018-09-25 20:25:30	@mbrubeck	mib_feg4h1: right. (also it no longer panics on Zero)
2018-09-25 20:25:43	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-25 20:27:01	-->	npmccallum (npmccallum@moz-9tof33.wlfrct.sbcglobal.net) has joined #rust-beginners
2018-09-25 20:27:51	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-25 20:28:59	mib_feg4h1	Okay, thanks...
2018-09-25 20:29:34	justsomequestions	can I somehow make this pattern work: if let i = Some(pre) && inv.contains(i)
2018-09-25 20:29:55	Aankhen``	https://play.rust-lang.org/?gist=e085d8bf0eb875057435b113de96af0e&version=stable&mode=debug&edition=2015 # this is for a CLI tool. It supports output to `Stdout` as well as other places by passing an `&mut Write` to the primary function. I want to lock `Stdout` if we’re using that. I’ve got it to work by creating an otherwise useless temporary variable. Is there a better way to express this?
2018-09-25 20:30:21	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 20:31:11	Aankhen``	(That temporary variable is there so that the lock outlives the `&mut`.)
2018-09-25 20:31:50	-->	simonadameit (simonadamei@moz-43lcgp.epd9.tmau.0a61.2001.IP) has joined #rust-beginners
2018-09-25 20:31:53	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-25 20:31:57	simonadameit	Hi
2018-09-25 20:32:17	simonadameit	I've a Bytes or BytesMut in tokio, how can I turn that into a String without copying?
2018-09-25 20:33:03	<--	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-25 20:33:32	-->	fool (Mibbit@moz-h8sdf4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-25 20:33:51	-->	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-25 20:33:52	<--	fool (Mibbit@moz-h8sdf4.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 20:33:55	-->	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has joined #rust-beginners
2018-09-25 20:34:07	-->	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 20:34:42	Aankhen``	simonadameit: From `Read::bytes`?
2018-09-25 20:34:52	<--	chenpan (chenpan@moz-qm9.72b.61.171.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-25 20:35:04	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-25 20:35:12	-->	sub (sub@moz-n1ciqv.ptpg.oregonstate.edu) has joined #rust-beginners
2018-09-25 20:36:49	simonadameit	Aankhen``: I'm trying to implement a framed protocol. There I get a " &mut BytesMut" in the Decoder. Now I can use .split_off(len) to split off an owned BytesMut that I want to turn into a String
2018-09-25 20:37:07	simonadameit	My thought was that since I already own the BytesMut then I don't need to copy to return a String
2018-09-25 20:37:21	simonadameit	However I can't seem to find a way to do that
2018-09-25 20:37:47	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 20:38:27	simonadameit	I think BytesMut uses reference counting internally to keep track of these split_off BytesMuts
2018-09-25 20:39:05	-->	giesch (user@moz-2j9.iv2.140.159.IP) has joined #rust-beginners
2018-09-25 20:39:19	simonadameit	Aankhen``: https://tokio.rs/docs/going-deeper/frames/
2018-09-25 20:39:38	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Ping timeout: 121 seconds)
2018-09-25 20:40:02	@mbrubeck	justsomequestions: Not yet
2018-09-25 20:40:32	@mbrubeck	justsomequestions: For now you can do `match pre { Some(i) if inv.contains(i) => ... }`, or nested `if` expressions
2018-09-25 20:40:32	-->	insidious (insidious@moz-4g30lp.resnet.uofs.edu) has joined #rust-beginners
2018-09-25 20:40:54	-->	kill9zombie (Mibbit@moz-v1uji4.zen.co.uk) has joined #rust-beginners
2018-09-25 20:41:12	Aankhen``	simonadameit: Ye, I’m looking at it… it’s a bit of a pickle indeed. There’s a conversion /from/ `&str`, but not /to/, that I can see…
2018-09-25 20:41:51	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 20:42:02	@mbrubeck	simonadameit: The BytesMut might point at a sub-slice of a larger allocation
2018-09-25 20:42:16	@mbrubeck	so in general you could not turn it into a String, which needs to own its own allocation
2018-09-25 20:42:26	@mbrubeck	(except by copying)
2018-09-25 20:42:38	simonadameit	Hmm
2018-09-25 20:43:07	simonadameit	Okay, maybe I'm going wrong somewhere in my approach
2018-09-25 20:43:42	Aankhen``	mbrubeck: Would it be a bad idea to use `as_ptr`, `slice::from_raw_parts`, and `str::from_utf8`?
2018-09-25 20:44:33	simonadameit	I've a got message. I thought I could keep the underlying byte frame and instead of copying the different parts, point into that underlying byte frame for the message fields/parts.
2018-09-25 20:44:33	Aankhen``	(For an `&str`, I mean, rather than `String`.)
2018-09-25 20:44:35	@mbrubeck	Aankhen``: That would be fine.
2018-09-25 20:44:44	<--	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has quit (Quit: )
2018-09-25 20:44:50	-->	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-25 20:44:54	@mbrubeck	Aankhen``: It implements Deref<[u8]>
2018-09-25 20:45:04	@mbrubeck	so you don't even need the `as_ptr` and `from_raw_parts`
2018-09-25 20:45:12	@mbrubeck	just `str::from_utf8(&bytes)`
2018-09-25 20:45:13	Aankhen``	Oh! Durr.
2018-09-25 20:45:26	Aankhen``	I saw the `Deref` earlier and moved right on, heh.
2018-09-25 20:45:58	-->	Kilobyte (stephan@moz-16b42s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 20:46:22	simonadameit	Ah okay, so I can hand out slices. But then the borrow checker will torture be :D
2018-09-25 20:47:39	<--	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has quit (Quit: )
2018-09-25 20:47:44	-->	Codur (Mibbit@moz-533o4l.catv.broadband.hu) has joined #rust-beginners
2018-09-25 20:48:01	Codur	hi
2018-09-25 20:48:10	<--	snowe (snowe@moz-ri3.15m.177.128.IP) has quit (Quit: WeeChat 2.0.1)
2018-09-25 20:48:27	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-25 20:48:42	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 20:49:14	Moongoodboy{K}	justsomequestions: assuming you meant to swap the sides of that assignment: `if i.map_or(false, |pre| inv.contains(pre))`
2018-09-25 20:50:51	-->	yk (yk@moz-o78.pvu.169.109.IP) has joined #rust-beginners
2018-09-25 20:52:38	-->	donryudragoni (ryu@moz-lpq.stg.222.179.IP) has joined #rust-beginners
2018-09-25 20:52:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 20:54:03	-->	quartz555 (quartz@moz-ni3atf.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-25 20:54:06	<--	sub (sub@moz-n1ciqv.ptpg.oregonstate.edu) has quit (Ping timeout: 121 seconds)
2018-09-25 20:54:19	-->	sub (sub@moz-o5fbno.us.northamericancoax.com) has joined #rust-beginners
2018-09-25 20:59:43	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-25 20:59:44	<--	drazde (Mibbit@moz-4crehl.retail.telecomitalia.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 21:00:00	-->	mib_s998tf (Mibbit@moz-0ngdcf.dynamic.surfer.at) has joined #rust-beginners
2018-09-25 21:00:13	<--	mib_s998tf (Mibbit@moz-0ngdcf.dynamic.surfer.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 21:01:33	simonadameit	mbrubeck: thanks, I got something that looks like it's gonna work now
2018-09-25 21:02:21	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 21:03:53	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 21:04:57	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-25 21:06:11	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-25 21:06:18	Codur	I did this std::iter::repeat(inp).take(8).collect::<Vec<_>>();, but with some hidden magic I somehow ended up with <std::vec::Vec<{integer}>  instead of <std::vec::Vec<i64> how may I fix this?
2018-09-25 21:07:03	kimundi	Codur: Well you can replace the _ with i64 if you want
2018-09-25 21:07:11	Codur	what does {integer} mean? is it boxed?
2018-09-25 21:07:32	kimundi	no, it just means its a generic integer literal - can be any i{8,16,32,64}
2018-09-25 21:10:23	Codur	I see
2018-09-25 21:11:27	-->	cdr255 (cdr255@moz-1bermg.5rhd.p3se.0547.2601.IP) has joined #rust-beginners
2018-09-25 21:11:30	-->	niconii_ (nicole@moz-4pu85a.midco.net) has joined #rust-beginners
2018-09-25 21:11:54	Codur	if I want to do generic integer like {integer} , how do I write it explicitly?
2018-09-25 21:12:18	Codur	like in a type constraint in my where
2018-09-25 21:12:31	kimundi	Thats not possible, actually
2018-09-25 21:12:41	kimundi	seeing {integer} at all is kinda rare
2018-09-25 21:12:53	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-25 21:13:24	Codur	and can I do f64 from my integers in the baove collect somehow?
2018-09-25 21:13:56	kimundi	you need to explicitly cast the integers to f64 for that
2018-09-25 21:14:06	<--	niconii (nicole@moz-j97s6s.midco.net) has quit (Ping timeout: 121 seconds)
2018-09-25 21:14:20	<--	oms (oms@moz-fg8cd5.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-25 21:16:00	--	BDH_ is now known as BDH
2018-09-25 21:16:18	Lumpio-	{integer} isnct generic in the literal sense, it just means "some integer literal" with unspecified length
2018-09-25 21:16:26	BDH	I've spawned a new future in a hyper handler and I want it to be driven to completion, but I don't want the hyper handler to wait on it
2018-09-25 21:16:30	BDH	do I need to set up a channel or something?
2018-09-25 21:16:51	<--	kill9zombie (Mibbit@moz-v1uji4.zen.co.uk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 21:17:43	-->	mstallmo (mstallmo@moz-pp4qto.il.comcast.net) has joined #rust-beginners
2018-09-25 21:18:57	Codur	thanks!
2018-09-25 21:18:57	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-25 21:19:52	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-25 21:20:03	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-25 21:21:08	carllerche	simonadameit: You probably will get faster responses in https://gitter.im/tokio-rs/tokio
2018-09-25 21:21:19	<--	sub (sub@moz-o5fbno.us.northamericancoax.com) has quit (Ping timeout: 121 seconds)
2018-09-25 21:21:28	carllerche	simonadameit: that said, you can't go from Bytes -> String w/o copying... this is why I have http://crates.io/crates/string
2018-09-25 21:21:42	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 21:22:22	simonadameit	@carllerche Thanks for the pointer. Yes, I've noticed that zero-copy doesn't really work out with Bytes and String
2018-09-25 21:23:50	simonadameit	Also returning &str doesn't really work out, as the borrow doesn't work when the split_to Bytes don't live long enough
2018-09-25 21:24:09	-->	enterprisey (enterprisey@moz-95f9bq.cit.cornell.edu) has joined #rust-beginners
2018-09-25 21:24:14	simonadameit	Basically whatever I return should either own the split Bytes or copy them.
2018-09-25 21:25:04	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 21:25:55	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-25 21:26:39	<--	mstallmo (mstallmo@moz-pp4qto.il.comcast.net) has quit (Quit: Leaving)
2018-09-25 21:27:21	--	U007D is now known as U007D_afk
2018-09-25 21:27:32	-->	Rainer (Mibbit@moz-t2nf49.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 21:29:06	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 21:29:42	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 21:29:46	simonadameit	@carllerche I really feel bad using a non-std String type though :D
2018-09-25 21:29:57	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 21:30:01	<--	Rainer (Mibbit@moz-t2nf49.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 21:30:27	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-25 21:30:33	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-25 21:30:38	-->	neverfox (neverfox@moz-adcn3n.sub-174-203-22.myvzw.com) has joined #rust-beginners
2018-09-25 21:30:40	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 21:31:41	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 21:31:53	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 21:32:24	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 21:32:28	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:32:32	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:32:45	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-25 21:32:57	-->	dunkan (Mibbit@moz-puv.vu3.242.90.IP) has joined #rust-beginners
2018-09-25 21:33:14	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:33:19	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:33:57	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 21:34:02	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:34:06	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:34:14	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-25 21:34:20	<--	bluss (bluss@moz-rjksla.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2018-09-25 21:34:49	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:34:52	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:35:35	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:35:39	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:35:58	dunkan	I'm on windows, and I'm trying to link a library which has function definitions in the .lib file and the bodies in a .dll file. I have a build.rs file which links the .lib fine, but when I run the executable, I get "unresolved symbol" errors, which I think is due to the executable not knowing where the .dll is. How would I let the executable use the .dll?
2018-09-25 21:36:22	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:36:25	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:36:25	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 21:37:08	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:37:12	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:37:52	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-25 21:37:55	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:37:59	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:38:42	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:38:44	<--	rodorgas (rodrigoorem@moz-mla.mig.107.143.IP) has quit (Quit: WeeChat 2.2)
2018-09-25 21:38:45	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:39:06	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 21:39:28	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:39:33	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:39:34	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 21:41:55	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-25 21:42:07	<--	mib_feg4h1 (Mibbit@moz-idr.tar.53.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 21:42:54	-->	xilun (Mibbit@moz-u7rp8b.abo.wanadoo.fr) has joined #rust-beginners
2018-09-25 21:43:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 21:43:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-25 21:43:04	xilun	hi!
2018-09-25 21:43:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 21:44:09	-->	gunther (Mibbit@moz-6kp.ci4.210.178.IP) has joined #rust-beginners
2018-09-25 21:44:40	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-25 21:44:51	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-25 21:44:57	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 21:45:13	-->	bluss (bluss@moz-rjksla.customer.tdc.net) has joined #rust-beginners
2018-09-25 21:45:20	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Leaving)
2018-09-25 21:45:34	xilun	I'm trying to recursively concat a Vec<Vec<i32>> for ex with (in an fn subtargets): node.next_case.iter().flat_map(|subid| self.subtargets(&self.states[subid], &xprefix).drain(..)).collect()
2018-09-25 21:45:56	xilun	but the temp returned by the inner subtargets call does not live long enough
2018-09-25 21:46:14	<--	gunther (Mibbit@moz-6kp.ci4.210.178.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 21:46:15	xilun	any other idea how to write it?
2018-09-25 21:46:56	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-25 21:47:06	Minoru	build up an iterator using Iterator::chain(), then collect::Vec<_>()?
2018-09-25 21:47:32	eijebong	"On Windows platform, it is also possible to capture localhost traffic using Wireshark. What you need to do is to install the "Microsoft loopback adapter", and then sniff on it."
2018-09-25 21:47:35	eijebong	Woups
2018-09-25 21:47:37	<--	Eragon (Eragon@moz-cm5ic2.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-25 21:47:37	eijebong	Wrong channel
2018-09-25 21:48:55	<--	jihi (jih@moz-78phot.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-25 21:49:42	<--	simonadameit (simonadamei@moz-43lcgp.epd9.tmau.0a61.2001.IP) has quit (Quit: )
2018-09-25 21:49:51	<--	kyren (kyren@moz-4v97l3.q5rt.imr4.9001.2603.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 21:50:26	-->	kyren (kyren@moz-9vt58p.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-25 21:51:26	-->	badmann (badmann@moz-r1ktcp.dpec.6een.ab88.2a02.IP) has joined #rust-beginners
2018-09-25 21:52:05	xilun	well I need a kind of chain() for a dynamical n number of iterators
2018-09-25 21:53:08	Minoru	sounds like a task for a loop :)
2018-09-25 21:53:19	emerentius	xilun: do you need to preserve the vecs?
2018-09-25 21:53:41	xilun	I guess I'll just write it in a more procedural way, yes
2018-09-25 21:53:58	xilun	emerentius: from the subcalls? no, that's why y tried drain(..)
2018-09-25 21:54:07	emerentius	then omit .drain(…)
2018-09-25 21:54:08	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-25 21:54:38	emerentius	what's the return type type of self.subtargets exactly?
2018-09-25 21:54:59	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 21:55:01	Minoru	xilun: oh, look, 1.29 stabilized https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten
2018-09-25 21:55:14	dowwie	"cargo fmt" uses clippy, right?
2018-09-25 21:55:23	Minoru	so you just call .iter().flatten().collect::<Vec<_>> on your Vec<Vec<i32>>, and you're done
2018-09-25 21:55:25	emerentius	dowwie: it uses rustfmt
2018-09-25 21:55:44	dowwie	hey emerentius - completely different utility?
2018-09-25 21:55:54	emerentius	separate program, yes
2018-09-25 21:56:03	dowwie	thx for confirming !
2018-09-25 21:56:08	emerentius	rustfmt formats, clippy annoys you 
2018-09-25 21:56:18	emerentius	and gives some useful tips
2018-09-25 21:56:21	xilun	oh ok it seems to work without drain
2018-09-25 21:56:51	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-25 21:56:55	xilun	self.subtargets -> Vec<Vec<i32>>
2018-09-25 21:56:58	dowwie	emerentius:  rustfmt just annoyed me too
2018-09-25 21:58:22	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-09-25 21:58:28	-->	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-25 21:59:01	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-25 21:59:08	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-25 22:00:49	--	U007D_afk is now known as U007D
2018-09-25 22:01:29	xilun	ok so IIUC the drain object can not outlive the vec, whereas by value "destructive" iteration takes ownership of the vec data
2018-09-25 22:01:37	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 22:02:08	emerentius	xilun: yes
2018-09-25 22:02:25	xilun	ok thanks!
2018-09-25 22:02:27	emerentius	the drain would be borrowing a temporary that's destroyed before iteration even begins
2018-09-25 22:04:08	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-25 22:05:08	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 22:05:47	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-25 22:06:09	<--	pamaury (pamaury@moz-vk4.qc3.235.46.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:06:44	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 22:07:00	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:10:02	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-25 22:10:16	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:10:26	<--	asyncsec (asyncsec@moz-qd1de8.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 22:12:15	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 22:12:32	Lil_Dropchk	when my macro takes args like this: `$(... $(foo:ident)* ... )*` it only works if ALL outer repetitions use the same number of "foo"s, how can i allow each repetition to use a different number of "foo"s?
2018-09-25 22:13:04	kimundi	uhm, that should allow a different numer of foos per repition
2018-09-25 22:13:07	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-25 22:13:35	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-25 22:15:16	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-25 22:15:44	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-25 22:16:10	-->	quartz55 (quartz@moz-9e01gu.dsl.telepac.pt) has joined #rust-beginners
2018-09-25 22:16:25	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 22:16:27	<--	donryudragoni (ryu@moz-lpq.stg.222.179.IP) has quit (Quit: WeeChat 2.2)
2018-09-25 22:17:34	Lil_Dropchk	kimundi: it doesnt tho
2018-09-25 22:18:21	<--	quartz555 (quartz@moz-ni3atf.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:19:06	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-25 22:19:11	Lil_Dropchk	kimundi: ($model:ident, $table:ident, $table_name:expr, [$($fkm:ident $($fkey:expr)*),*], $($order:ident)*, {$($validate:meta $field:ident: $type:ty,)+}) => (
2018-09-25 22:19:30	Lil_Dropchk	it only works with the same number of `$order`s in every repetition
2018-09-25 22:20:10	justsomequestions	why do I get "cannot move out of indexed content" allthough the type implements Copy here? for cid in self.career_groups[cgid].into_iter()
2018-09-25 22:20:25	justsomequestions	self.career_groups[cgid] is a usize vector
2018-09-25 22:20:46	Lil_Dropchk	kimundi: actually it was `($id:ident, $($model:ident, $table:ident, $table_name:expr, [$($fkm:tt)*], $($order:ident)*, {$($validate:meta $field:ident: $type:ty,)+})+) => (`
2018-09-25 22:20:54	Lil_Dropchk	and this macro calls the above macro
2018-09-25 22:21:20	Lil_Dropchk	justsomequestions: .iter()
2018-09-25 22:21:24	<--	yk (yk@moz-o78.pvu.169.109.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:21:26	Lil_Dropchk	you're trying to move the vec
2018-09-25 22:22:43	justsomequestions	yes and that should copy as usize implements Copy or not?
2018-09-25 22:23:00	justsomequestions	iter() gives me a reference and then I need to dereference all the time which I wanted to avoid
2018-09-25 22:23:02	Lumpio-	The vec doesn't though
2018-09-25 22:23:06	@mbrubeck	justsomequestions: `usize` is Copy but `Vec<usize>` is not
2018-09-25 22:23:12	Lumpio-	into_iter takes ownership
2018-09-25 22:23:20	@mbrubeck	justsomequestions: `Vec` can't be copy because it is the unique owner of a heap allocation
2018-09-25 22:23:23	justsomequestions	of the whole vector?
2018-09-25 22:23:27	Lumpio-	yeo
2018-09-25 22:23:30	Lumpio-	yeo
2018-09-25 22:23:31	justsomequestions	ah ok, thank you
2018-09-25 22:23:36	Lumpio-	Stupid touchscreens
2018-09-25 22:23:41	justsomequestions	:D
2018-09-25 22:23:46	justsomequestions	yeo? what do you mean with that?
2018-09-25 22:23:53	@mbrubeck	justsomequestions: `.iter().cloned()` will copy values out of the Vec instead of references
2018-09-25 22:24:02	<--	CognitiveRadiation (cognitive@moz-7d5mjd.heun.bj6h.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:24:04	@mbrubeck	without moving or cloning the Vec itself
2018-09-25 22:24:46	justsomequestions	so cloned makes references to real values?
2018-09-25 22:25:23	-->	simonadameit (simonadamei@moz-43lcgp.epd9.tmau.0a61.2001.IP) has joined #rust-beginners
2018-09-25 22:25:24	<--	simonadameit (simonadamei@moz-43lcgp.epd9.tmau.0a61.2001.IP) has quit (Quit: )
2018-09-25 22:25:57	<--	dunkan (Mibbit@moz-puv.vu3.242.90.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 22:26:05	justsomequestions	I now changed everything to use just dereference but I don't think I now fully understand how clone works on iterators 
2018-09-25 22:26:09	justsomequestions	but I am pretty tired already
2018-09-25 22:26:20	-->	Norti (Mibbit@moz-uejc8b.highway.telekom.at) has joined #rust-beginners
2018-09-25 22:26:22	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-25 22:27:21	@mbrubeck	justsomequestions: for a Copy type, `iter.cloned()` is the same as `iter.map(|x| *x)`
2018-09-25 22:27:22	@mbrubeck	https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned
2018-09-25 22:27:43	KiChjang	justsomequestions: no, .cloned() makes a copy of all the elements in the iterator
2018-09-25 22:28:02	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 22:28:32	-->	BearOfJade (Thunderbird@moz-g9at8k.wireless.uvic.ca) has joined #rust-beginners
2018-09-25 22:29:07	-->	CognitiveRadiation (cognitive@moz-0scgij.heun.bj6h.0644.2601.IP) has joined #rust-beginners
2018-09-25 22:29:43	<--	elichai2 (uid212594@moz-racuhj.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 22:31:01	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:31:03	Codur	why this is ok match num {     Some(x) if x < 5 ... but this isnt? match num {     if num < 5 ... ?
2018-09-25 22:31:48	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-25 22:32:31	justsomequestions	mbrubeck: KiChjang thank you
2018-09-25 22:32:59	Moongoodboy{K}	Codur: every match arm needs to have a pattern
2018-09-25 22:33:33	Moongoodboy{K}	num if num < 5 =>  // is valid, though depending on what you're doing, you may want if statements or range matches instead
2018-09-25 22:33:39	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-09-25 22:33:48	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-25 22:33:58	<--	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has quit (Quit: Sorry, was AFK)
2018-09-25 22:34:35	<--	BearOfJade (Thunderbird@moz-g9at8k.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-25 22:34:35	--	KiChjang_ is now known as KiChjang
2018-09-25 22:34:49	KiChjang	Codur: because the "if" part is called a match guard, and it's only valid syntax after a pattern
2018-09-25 22:35:02	Moongoodboy{K}	^
2018-09-25 22:35:02	KiChjang	it's not a conditional expression
2018-09-25 22:35:24	KiChjang	besides, num is of type Option<i32>
2018-09-25 22:35:29	KiChjang	so you can't compare it against a u32
2018-09-25 22:35:40	KiChjang	an i32*
2018-09-25 22:36:20	Lil_Dropchk	wasn't there a trick to sort by 2 keys with `sort_by_key()` with tuples?
2018-09-25 22:36:32	Codur	thanks!
2018-09-25 22:36:50	@mbrubeck	Lil_Dropchk: Yeah, if your key is a tuple then it'll be sorted lexicographically (by the first element, then the second)
2018-09-25 22:36:59	<--	xilun (Mibbit@moz-u7rp8b.abo.wanadoo.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 22:37:07	@mbrubeck	for example `users.sort_by_key(|user| (user.last_name, user.first_name));`
2018-09-25 22:37:27	Lil_Dropchk	ok. thx
2018-09-25 22:37:33	-->	mmacherey (Thunderbird@moz-gkgj1q.dyn.telefonica.de) has joined #rust-beginners
2018-09-25 22:37:37	Lil_Dropchk	and what does it mean if an iter is fused?
2018-09-25 22:37:59	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-25 22:38:25	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-25 22:38:28	<--	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:38:34	Moongoodboy{K}	(if at all possible, please do not pigeonhole names like that)
2018-09-25 22:39:07	Moongoodboy{K}	(acceptable cases to do so include when you have to deal with legal names that have fields like “first” and “last” defined by a particular government, or when you /are/ a government)
2018-09-25 22:39:41	Lil_Dropchk	it's about numbers where i have a nested .group_by()
2018-09-25 22:39:55	<--	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has quit (Ping timeout: 121 seconds)
2018-09-25 22:40:05	@mbrubeck	Lil_Dropchk: Fused means that calling `.next()` repeatedly after reaching the end of the iterator will always return None
2018-09-25 22:40:20	Lil_Dropchk	which iters arent fused?
2018-09-25 22:40:21	<--	quartz55 (quartz@moz-9e01gu.dsl.telepac.pt) has quit (Ping timeout: 121 seconds)
2018-09-25 22:40:29	@mbrubeck	It's rare that you need to worry about this.
2018-09-25 22:40:33	Lil_Dropchk	ok
2018-09-25 22:40:42	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-25 22:40:45	Moongoodboy{K}	some iterators invoke unspecified behavior if you call next() after it's returned None once
2018-09-25 22:40:57	@mbrubeck	Any iterator that isn't specifically documented to be fused might not be.
2018-09-25 22:42:03	-->	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has joined #rust-beginners
2018-09-25 22:42:11	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-25 22:43:29	Lil_Dropchk	mbrubeck: so if i do `r.sort_by_key(|x| (x.a, x.b));` i can then do a nested `r.into_iter().group_by(|x| x.a).into_iter().map(|(a, group)| { group.into_iter().group_by(|x| x.b) ..` without having to collect & sort the inner group, right?
2018-09-25 22:43:46	@mbrubeck	Lil_Dropchk: right
2018-09-25 22:43:49	Lil_Dropchk	ok
2018-09-25 22:43:57	<--	refold (refold@moz-rh2.742.0.141.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:44:16	Lil_Dropchk	is there a way to call .sum() on a tuple iterator?
2018-09-25 22:44:22	Lil_Dropchk	to calc multiple sums at once
2018-09-25 22:44:27	Lil_Dropchk	in parallel
2018-09-25 22:44:45	Lil_Dropchk	with 1 iteration. and also get the len/count() of a group
2018-09-25 22:45:07	Moongoodboy{K}	sum() doesn't work for tuples, but you can roll your own pretty easily with fold()
2018-09-25 22:45:20	Lil_Dropchk	yea but :/
2018-09-25 22:45:22	Moongoodboy{K}	and with fold() you can sum two things and count them at the same time, sure xD
2018-09-25 22:45:42	Lil_Dropchk	is group.iter().count() constant time?
2018-09-25 22:45:47	Lil_Dropchk	or does it have to iterate?
2018-09-25 22:46:09	Moongoodboy{K}	not necessarily, and it consumes the iterator
2018-09-25 22:46:22	@mbrubeck	The default implementation iterates, but some specific iterators provide a constant-time version
2018-09-25 22:46:27	Moongoodboy{K}	(it's very conceivable that ExactSizeIterator makes it O(1) for obvious reasons)
2018-09-25 22:46:29	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-25 22:46:32	@mbrubeck	This is the Group iterator from itertools?
2018-09-25 22:46:34	Lil_Dropchk	i mean the GroupBy from itertools
2018-09-25 22:46:44	Lil_Dropchk	https://docs.rs/itertools/0.7.8/itertools/structs/struct.GroupBy.html
2018-09-25 22:46:44	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 22:46:58	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-25 22:47:20	<--	neverfox (neverfox@moz-adcn3n.sub-174-203-22.myvzw.com) has quit (Ping timeout: 121 seconds)
2018-09-25 22:47:21	Lil_Dropchk	do only types that impl ExactSizeIterators have O(1) .count() ?
2018-09-25 22:47:25	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-25 22:47:44	@mbrubeck	Neither Groups nor Group provide an optimized `count`
2018-09-25 22:47:50	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-25 22:48:10	Moongoodboy{K}	nah, just `.fold((0, 0, 0), |(count, left_sum, right_sum), (left, right)| (count + 1, left_sum + left, right_sum + right))`
2018-09-25 22:48:38	@mbrubeck	Lil_Dropchk: `ExactSizeIterator` and optimized `count`  aren't tied together technically, but logically if you can provide one then you can provide the other.
2018-09-25 22:48:53	<--	liquidnight (marcus@moz-l8t0ic.hava.ftbi.0c23.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:50:11	Lil_Dropchk	mbrubeck: but are there non-ExactSizeIterator types that have a O(1) .count()?
2018-09-25 22:51:45	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-25 22:52:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 22:52:10	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-25 22:53:00	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-25 22:53:06	@mbrubeck	Lil_Dropchk: I don't know.  They can technically exist but "shouldn't" (in the sense that it would make sense to make them impl ExactSizeIterator)
2018-09-25 22:53:25	Lil_Dropchk	ok
2018-09-25 22:56:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:58:12	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 22:58:16	Lil_Dropchk	mbrubeck: if i need to iterate over the same group multiple times, do i have to .clone() it (if i don't want to collect() it into a Vec and iterate that)?
2018-09-25 22:58:29	Lil_Dropchk	group.clone().map(...
2018-09-25 22:59:22	Lil_Dropchk	hm, it's not Clone :(
2018-09-25 22:59:28	<--	mmacherey (Thunderbird@moz-gkgj1q.dyn.telefonica.de) has quit (Client exited)
2018-09-25 22:59:35	Lil_Dropchk	so i HAVE to collect it into a Vec if i want to iterate it multiple times?
2018-09-25 22:59:48	<--	justsomequestions (gumble@moz-3q3kac.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-25 23:00:34	<--	Kilobyte (stephan@moz-16b42s.dip0.t-ipconnect.de) has quit (Quit: WeeChat 2.2)
2018-09-25 23:02:28	<--	enterprisey (enterprisey@moz-95f9bq.cit.cornell.edu) has quit (Ping timeout: 121 seconds)
2018-09-25 23:02:46	-->	ryeu (ryeu@moz-1266tl.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-25 23:03:28	<--	ryeu (ryeu@moz-1266tl.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-25 23:06:00	-->	liquidnight (marcus@moz-u64bh9.rmgv.2h81.0c22.2a01.IP) has joined #rust-beginners
2018-09-25 23:06:58	-->	adray (aray@moz-mjh.tl0.65.159.IP) has joined #rust-beginners
2018-09-25 23:07:15	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 23:07:21	<--	Ferdirand (max@moz-6he.fek.162.213.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:07:23	-->	Ferdirand (max@moz-6he.fek.162.213.IP) has joined #rust-beginners
2018-09-25 23:09:26	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-09-25 23:09:56	-->	jordilin (jordilin@moz-r6rbec.res.rr.com) has joined #rust-beginners
2018-09-25 23:10:04	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-25 23:11:08	dpc1	Lil_Dropchk: can you share some code :)
2018-09-25 23:11:13	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:11:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:11:32	<--	Ferdirand (max@moz-6he.fek.162.213.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:12:26	Lil_Dropchk	dpc1: mbrubeck: is this the most efficient way to write this (not cloning most of the fields when collecting, only the ones that are needed afterwards. and only iterating once with the fold): http://dpaste.com/39QF425
2018-09-25 23:12:27	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:12:39	-->	Ferdirand (max@moz-6he.fek.162.213.IP) has joined #rust-beginners
2018-09-25 23:12:53	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2018-09-25 23:13:37	Lil_Dropchk	my first/naive version collected the whole group into a vec first (ALL fields) and then iterated multiple times to calc the sums
2018-09-25 23:13:41	dpc1	looks fine to me
2018-09-25 23:14:01	Lil_Dropchk	dpc1: but it's harder to read because of peek etc
2018-09-25 23:14:19	Lil_Dropchk	and is this really correct? i had to make group mut because peek() requires it
2018-09-25 23:14:29	dpc1	i don't think you need to make it mut
2018-09-25 23:14:29	<--	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-25 23:14:31	Lil_Dropchk	but i dont want to skip the first item when getting the name
2018-09-25 23:14:35	Lil_Dropchk	dpc1:  i do
2018-09-25 23:14:44	Lil_Dropchk	https://doc.rust-lang.org/std/iter/struct.Peekable.html#method.peek
2018-09-25 23:14:54	Lil_Dropchk	but it makes it harder to read
2018-09-25 23:15:44	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-25 23:19:32	-->	martin2 (martin@moz-od4rc6.anteldata.net.uy) has joined #rust-beginners
2018-09-25 23:21:07	Moongoodboy{K}	eugh, dpaste.com.
2018-09-25 23:21:25	<--	Norti (Mibbit@moz-uejc8b.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 23:22:25	Codur	how do I write this in idiomatic functional safe rust? https://play.rust-lang.org/?gist=ed1fb32929304b89f9fcbe32953451a6&version=stable&mode=debug&edition=2015
2018-09-25 23:23:21	@mbrubeck	Codur: Here's one way https://play.rust-lang.org/?gist=bfae964191d894c79ca97df77106ac08&version=stable&mode=debug&edition=2015
2018-09-25 23:23:47	-->	gaveen (gaveen@moz-4dj.kmd.231.123.IP) has joined #rust-beginners
2018-09-25 23:24:20	<--	Aimai (Aimai@moz-d963ei.dip0.t-ipconnect.de) has quit (Quit: leaving)
2018-09-25 23:25:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 23:25:25	Codur	zip ofc! just used it this morning and already forgot omg
2018-09-25 23:26:36	dpc1	xD
2018-09-25 23:27:12	Codur	thanks!
2018-09-25 23:27:19	Lil_Dropchk	Moongoodboy{K}: whats wrong with dpaste?
2018-09-25 23:27:29	Moongoodboy{K}	doesn't support https: <.<
2018-09-25 23:28:22	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:28:33	dpc1	better to use:
2018-09-25 23:28:34	dpc1	!paste
2018-09-25 23:28:34	+rustbot	Paste code at https://play.rust-lang.org/ and click "Share" or paste large text at https://paste.rs/
2018-09-25 23:28:46	Codur	dpaste doesn't run the code and can't be looked back (or could it?)
2018-09-25 23:29:17	Codur	but this zip thing is fun
2018-09-25 23:29:27	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:29:38	Codur	I go to sleep, thanks for the help!
2018-09-25 23:30:28	<--	Codur (Mibbit@moz-533o4l.catv.broadband.hu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-25 23:30:52	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-25 23:32:02	-->	aem34i (x@moz-0ko.0cn.165.188.IP) has joined #rust-beginners
2018-09-25 23:32:53	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-25 23:40:20	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-25 23:40:43	<--	Dariost (Dariost@moz-5nr.9t5.48.151.IP) has quit (Client exited)
2018-09-25 23:42:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-25 23:44:29	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-25 23:44:36	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-25 23:47:10	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:48:02	Lil_Dropchk	is this correct to construct a CET date and convert it to naive as utc? CET.from_local_datetime(&NaiveDate::from_ymd(y, m, d).and_hms(hour, min, sec))?.naive_utc()
2018-09-25 23:48:32	Lil_Dropchk	i'm confused because the chrono-tz examples do it differently https://github.com/chronotope/chrono-tz#examples
2018-09-25 23:49:01	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-25 23:49:11	Lil_Dropchk	with that way it'd be CET.ymd(..).hms(..).with_timezone(&Utc)
2018-09-25 23:50:12	-->	himi (sjjf@moz-psjk59.anu.edu.au) has joined #rust-beginners
2018-09-25 23:57:17	-->	BearOfJade (Thunderbird@moz-g9at8k.wireless.uvic.ca) has joined #rust-beginners
2018-09-25 23:58:07	<--	BearOfJade (Thunderbird@moz-g9at8k.wireless.uvic.ca) has quit (Client exited)
2018-09-25 23:59:41	@mbrubeck	Lil_Dropchk: with_timezone doesn't return a NaiveDateTime
2018-09-25 23:59:51	Lil_Dropchk	ok so it's right?
2018-09-26 00:00:03	Lil_Dropchk	but how can i construct a CET Date and convert that to NaiveDate in UTC?
2018-09-26 00:00:22	@mbrubeck	I think your code is right.
2018-09-26 00:00:28	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:00:34	Lil_Dropchk	i mean, how can i get today() in CET 
2018-09-26 00:00:52	Lil_Dropchk	(and then convert it to NaiveDate in UTC)
2018-09-26 00:01:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 00:01:14	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 00:03:00	@mbrubeck	Lil_Dropchk: What exactly do you mean by that?
2018-09-26 00:03:20	Lil_Dropchk	mbrubeck: i mean i want to get today() but in CET timezone
2018-09-26 00:03:44	@mbrubeck	Okay, so that would be "2018-09-26" for example
2018-09-26 00:03:54	Lil_Dropchk	yes but interpreted in CET
2018-09-26 00:04:05	<--	badmann (badmann@moz-r1ktcp.dpec.6een.ab88.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:04:12	@mbrubeck	what does it mean to you to convert that from CET to UTC?
2018-09-26 00:04:14	Lil_Dropchk	i only found today() for utc
2018-09-26 00:04:52	Lil_Dropchk	mbrubeck: the midnight time of today() in CET
2018-09-26 00:04:54	@mbrubeck	And if you want a NaiveDate in UTC, why not call `Utc::today`?
2018-09-26 00:04:58	@mbrubeck	Ah, okay.
2018-09-26 00:05:07	<--	brucem (textual@moz-cloti7.ivsr.hm43.9800.2405.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:05:13	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 00:05:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:05:49	Lil_Dropchk	i want to get the midnight time of today() in CET, then convert it to .naive_utc()
2018-09-26 00:05:59	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 00:06:00	Lil_Dropchk	for a pg range query
2018-09-26 00:06:10	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-26 00:07:06	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:07:10	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 00:07:44	@mbrubeck	huh, this is not what I expected https://docs.rs/chrono/0.4.6/src/chrono/date.rs.html#233-247
2018-09-26 00:07:55	@mbrubeck	I have to leave now, sorry.
2018-09-26 00:08:01	<--	SomeDude (pascal@moz-5qkr7k.g5kr.iei5.0908.2a02.IP) has quit (Quit: Leaving.)
2018-09-26 00:08:41	Lil_Dropchk	mbrubeck: why is that wrong, the date has to be rounded
2018-09-26 00:08:52	Lil_Dropchk	that's why i want to take the midnight time
2018-09-26 00:08:56	-->	asyncsec (asyncsec@moz-3770va.res.rr.com) has joined #rust-beginners
2018-09-26 00:09:48	Lil_Dropchk	so should i just use Date::<Utc>::today() and interpret the d, m, y of that as CET to construct a CET midnight time?
2018-09-26 00:10:07	Lil_Dropchk	but that'd be wrong
2018-09-26 00:10:29	Lil_Dropchk	it could be another day in CET than in UTC 
2018-09-26 00:11:06	-->	brucem (textual@moz-su9.7v6.22.184.IP) has joined #rust-beginners
2018-09-26 00:12:47	@mbrubeck	Lil_Dropchk: What if you get `Utc::now()`, convert to CET, convert to NaiveDateTime, and then use the d,m,y of that to construct a midnight time?
2018-09-26 00:12:58	<--	giesch (user@moz-2j9.iv2.140.159.IP) has quit (Connection closed)
2018-09-26 00:13:26	@mbrubeck	using naive_local to get the NaiveDateTime
2018-09-26 00:13:50	Lil_Dropchk	mbrubeck: i just thought about using Utc::now(), then converting to CET, then taking the d,m,y components with hms 0,0,0 to construct a CET DateTime, then converting that to DateTime<Utc>, then naive_utc()
2018-09-26 00:14:08	Lil_Dropchk	but naive_local() will return the time of the server, right?
2018-09-26 00:14:22	Lil_Dropchk	i mean local always refers to the local time that the code is running on, right?
2018-09-26 00:14:31	Lil_Dropchk	*of the computer
2018-09-26 00:14:42	Moongoodboy{K}	this is so overcomplicated; is there really not just a way to /convert between two timezones/
2018-09-26 00:15:01	Lil_Dropchk	Moongoodboy{K}: chrono-tz
2018-09-26 00:15:09	<--	xet7 (xet7@moz-8mtke4.rev.dnainternet.fi) has quit (The TLS connection was non-properly terminated.)
2018-09-26 00:16:09	<--	hannesenator (Fenith@moz-dg7669.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-26 00:16:16	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 00:18:51	<--	cdr255 (cdr255@moz-1bermg.5rhd.p3se.0547.2601.IP) has quit (Quit: Leaving)
2018-09-26 00:19:21	-->	hannesenator (Fenith@moz-dg7669.tbcn.telia.com) has joined #rust-beginners
2018-09-26 00:19:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 00:20:05	<--	hamsteri_ (hamsteri@moz-hs7.fvt.60.194.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 00:21:58	-->	Kermit (Mibbit@moz-9hko4e.wi.charter.com) has joined #rust-beginners
2018-09-26 00:23:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:24:55	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-26 00:25:07	-->	mstallmo (mstallmo@moz-pp4qto.il.comcast.net) has joined #rust-beginners
2018-09-26 00:25:42	-->	jec_ (jec@moz-pboa8b.ks.cox.net) has joined #rust-beginners
2018-09-26 00:27:11	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-26 00:27:20	Lil_Dropchk	mbrubeck: is this correct? http://dpaste.com/2AKMBR6
2018-09-26 00:27:21	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:27:24	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 00:29:11	-->	alatiera_ (alatiera@moz-dsljla.access.hol.gr) has joined #rust-beginners
2018-09-26 00:30:56	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:30:56	jec_	Hello, I am going through The Rust Book and in Chapter 12 you are walked through a project where you build a command line tool similar to grep.  There is a function that accepts "args: &[String]" and you pass in a reference to the command line arguments which are type annotated as "Vec<String>" .  My question is, why doesn't the function the function signature that parses those arguments accept "args: &Vec<String>" is "&[String]"
2018-09-26 00:30:56	jec_	 the same as "&Vec<String>"?
2018-09-26 00:31:38	Lil_Dropchk	jec_: &[String] is more general
2018-09-26 00:31:46	Lil_Dropchk	it takes a slice to the data
2018-09-26 00:31:53	Lil_Dropchk	it's not hardcoded to Vec
2018-09-26 00:32:00	Lil_Dropchk	Vec ref can be coerced to slice ref
2018-09-26 00:32:06	<--	alatiera (alatiera@moz-ob4a2f.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-26 00:32:45	-->	sp1ff_ (sp1ff@moz-tfkmvv.3i8v.at4v.0119.2620.IP) has joined #rust-beginners
2018-09-26 00:32:51	jec_	Lil_Dropchk: so then the same function could also accept an array OR Vec, I'm assuming?
2018-09-26 00:33:42	Lil_Dropchk	yes
2018-09-26 00:33:48	Lil_Dropchk	because all it cares about is the data
2018-09-26 00:33:57	Lil_Dropchk	it's not trying to do any Vec-specific things
2018-09-26 00:34:04	Lil_Dropchk	like checking the .capacity()
2018-09-26 00:34:17	jec_	oh, ok, thank you for the help and explanation. I appreciate it! :)
2018-09-26 00:34:51	Lil_Dropchk	jec_: basically you only take &Vec<T> when you really care about the fact that it's a Vec
2018-09-26 00:35:05	Lil_Dropchk	but then it's usually &mut Vec<T>, e.g. if you need to set the len
2018-09-26 00:35:17	Lil_Dropchk	or clear() the vec
2018-09-26 00:35:17	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-26 00:36:38	jec_	thank Lil_Dropchk
2018-09-26 00:36:45	jec_	i mean....thank you :)
2018-09-26 00:37:33	<--	jec_ (jec@moz-pboa8b.ks.cox.net) has left #rust-beginners
2018-09-26 00:38:17	Lil_Dropchk	you're welcome :)
2018-09-26 00:39:47	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-26 00:40:45	Kermit	When I read a function like "fn examplefn<F> (sometype: F) -> bool {"  how does the <F> bit translate into equivalent English?  I sort of get that <F> can restricting, filtering or qualifying the F input somehow but it feels like a blind spot in my understanding. 
2018-09-26 00:41:56	stephaneyfx	Kermit: examplefn is parameterized/generic over type F
2018-09-26 00:42:19	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 00:44:07	-->	cp (cp@moz-fresc2.asahinet.com) has joined #rust-beginners
2018-09-26 00:45:55	-->	jec_ (jec@moz-pboa8b.ks.cox.net) has joined #rust-beginners
2018-09-26 00:47:02	Kermit	Thanks.  This chemist will have to think about that a bit longer than the average computer scientist maybe.  :)  
2018-09-26 00:47:03	<--	insidious (insidious@moz-4g30lp.resnet.uofs.edu) has quit (Quit: WeeChat 2.2)
2018-09-26 00:47:18	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-26 00:47:35	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 00:47:39	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 00:49:13	durka42	Kermit: I translate that line as "for any type F the function examplefn takes one argument, called sometype, of type F, and returns bool. its definition is as follows:"
2018-09-26 00:49:14	stephaneyfx	Kermit: It means that you can have examplefn taking i32 (F is i32), String (F is String) or whatever type you like (the example you gave does not impose constraints on type F). Does that help?
2018-09-26 00:49:20	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 00:50:33	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 00:51:36	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-26 00:52:00	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-09-26 00:55:53	<--	KB5 (KB5@moz-e9262u.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2018-09-26 00:56:03	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-26 00:56:24	--	U007D is now known as U007D_afk
2018-09-26 01:01:30	-->	nickhs (nickhs@moz-ikmprl.res.rr.com) has joined #rust-beginners
2018-09-26 01:06:39	-->	mstallmo_ (mstallmo@moz-pp4qto.il.comcast.net) has joined #rust-beginners
2018-09-26 01:07:06	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:07:07	<--	mstallmo (mstallmo@moz-pp4qto.il.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-26 01:07:55	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:10:19	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 01:10:23	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-26 01:10:30	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-26 01:11:34	<--	asyncsec (asyncsec@moz-3770va.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 01:12:36	-->	mstallmo__ (mstallmo@moz-pp4qto.il.comcast.net) has joined #rust-beginners
2018-09-26 01:13:06	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-26 01:14:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 01:14:37	<--	mstallmo_ (mstallmo@moz-pp4qto.il.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-26 01:15:32	-->	siddhartha13 (uid129228@moz-6g82kr.hathersage.irccloud.com) has joined #rust-beginners
2018-09-26 01:15:38	siddhartha13	hi all
2018-09-26 01:15:40	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 01:15:44	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:15:50	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:15:50	--	Raychen1 is now known as Raychen
2018-09-26 01:16:04	siddhartha13	i am having an issue where a wrong error type is being passed upstream in a deserializer, but i don't know how to fix it
2018-09-26 01:16:31	siddhartha13	note: expected type `<D as serde::Deserializer<'de>>::Error`
2018-09-26 01:16:32	siddhartha13	               found type `std::num::ParseIntError`
2018-09-26 01:16:47	siddhartha13	can anyone help me troubleshoot what it is that i have to do exactly?
2018-09-26 01:18:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:18:57	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 01:22:35	panicbit	siddhartha13: You should use D::Error::custom to create an error that works
2018-09-26 01:22:35	<--	BK1603 (uid316735@moz-jgv72q.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 01:22:56	siddhartha13	i'm not sure how to do that
2018-09-26 01:23:00	siddhartha13	1s
2018-09-26 01:23:00	panicbit	e.g. you could do `.parse().map_err(|e| D::Error::custom(e))`
2018-09-26 01:23:11	<--	clarkenciel (clarkenciel@moz-d75.1gc.154.47.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:23:11	<--	nickhs (nickhs@moz-ikmprl.res.rr.com) has quit (Connection closed)
2018-09-26 01:23:14	panicbit	or even shorter: `.parse().map_err(D::Error::custom)`
2018-09-26 01:24:04	panicbit	This requires that `serde::de::Error` is in scope!
2018-09-26 01:24:20	panicbit	it's atrait that D::Error is required to implement
2018-09-26 01:25:01	jec_	I continue receiving warnings for unused imports, more specifically a warning for "use std::io::prelude::*" I tried to put an attribute above this import #[allow(dead_code)] but this appears to have had no affect.  All my google searches return me to adding the allow dead code attribute above structs or functions.  Is there a different attribute for imports?
2018-09-26 01:26:07	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 01:26:44	panicbit	dead_code is for something different
2018-09-26 01:27:01	panicbit	you want unused_imports
2018-09-26 01:27:02	siddhartha13	what is that section of code doing exactly panicbit?
2018-09-26 01:27:16	panicbit	siddhartha13: It creates a D::Error
2018-09-26 01:27:28	panicbit	from the existing error
2018-09-26 01:27:47	panicbit	Error::custom accepts anything that implements the Display traits
2018-09-26 01:27:49	panicbit	trait*
2018-09-26 01:27:51	jec_	thank you panicbit
2018-09-26 01:27:51	siddhartha13	how do i place this in the code? i'm currently using a match that returns Result<T,E>
2018-09-26 01:27:56	panicbit	jec_: <3
2018-09-26 01:28:09	panicbit	siddhartha13: Can you show that part of your code?
2018-09-26 01:28:20	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-26 01:28:22	<--	mstallmo__ (mstallmo@moz-pp4qto.il.comcast.net) has quit (Quit: Leaving)
2018-09-26 01:28:28	-->	mstallmo (mstallmo@moz-pp4qto.il.comcast.net) has joined #rust-beginners
2018-09-26 01:28:30	siddhartha13	https://www.irccloud.com/pastebin/BleRn60l/
2018-09-26 01:30:09	panicbit	siddhartha13: Ok, so for your case you can do `Err(error) => Err(D::Error::custom(error))`
2018-09-26 01:30:31	panicbit	assuming you have a `use serde::de::Error;`
2018-09-26 01:30:39	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:30:48	<--	pingwin (brian@moz-r6puto.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 01:30:54	-->	autoferrit (uid142250@moz-88e5vo.brockwell.irccloud.com) has joined #rust-beginners
2018-09-26 01:31:14	panicbit	you can also rewrite your code a little bit
2018-09-26 01:31:19	panicbit	(if you want to)
2018-09-26 01:31:50	<--	liquidnight (marcus@moz-u64bh9.rmgv.2h81.0c22.2a01.IP) has quit (Connection closed)
2018-09-26 01:31:50	panicbit	https://play.rust-lang.org/?gist=03d5a76ad9818daba991f8b2db0fe637&version=stable&mode=debug&edition=2015
2018-09-26 01:31:53	joris	drager: because it introduces a cognitive overhead. Even if end results must never be negative, it is easy to write arithmetic expressions that would temporarily become negative as a step
2018-09-26 01:32:23	joris	drager: using signed it works unsigned it does not. And i find it easier to think about overflow than underflow to 0
2018-09-26 01:32:31	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 01:32:39	panicbit	siddhartha13: It depends a little bit on your taste if you want to write it that way tho
2018-09-26 01:32:44	<--	gaveen (gaveen@moz-4dj.kmd.231.123.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:32:50	panicbit	Using a match is perfectly fine
2018-09-26 01:34:09	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-26 01:34:49	<--	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-26 01:34:49	siddhartha13	i have `use serde::de::Error;`
2018-09-26 01:35:02	siddhartha13	why do i have to use `custom()`?
2018-09-26 01:35:47	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 01:36:39	panicbit	Probably
2018-09-26 01:36:41	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:36:45	panicbit	There are some other methods you could use
2018-09-26 01:36:52	panicbit	but custom is probaby the easiest
2018-09-26 01:37:01	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:37:03	panicbit	since you cna just shove your existing errors in there
2018-09-26 01:37:22	panicbit	siddhartha13: https://docs.serde.rs/serde/de/trait.Error.html
2018-09-26 01:37:47	panicbit	You can use any methoy that is on that trait
2018-09-26 01:38:50	panicbit	er sorry
2018-09-26 01:38:52	panicbit	I misread
2018-09-26 01:39:03	panicbit	I read "do I have to use `custom()`?"
2018-09-26 01:39:11	siddhartha13	haha
2018-09-26 01:39:14	siddhartha13	yeah i got you
2018-09-26 01:39:17	panicbit	You see, the error type is generic
2018-09-26 01:39:31	panicbit	But you have to construct an error some way
2018-09-26 01:39:39	panicbit	And it could be anything
2018-09-26 01:39:49	panicbit	The trat allows you to construct an error
2018-09-26 01:39:53	panicbit	trait*
2018-09-26 01:40:18	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 01:40:23	siddhartha13	am i understanding this right that i can pass a message (as an &str) to `custom()`?
2018-09-26 01:40:29	panicbit	Yup
2018-09-26 01:40:31	panicbit	totally
2018-09-26 01:40:38	siddhartha13	alright let me try it out
2018-09-26 01:40:40	panicbit	because &str implements Display
2018-09-26 01:40:56	panicbit	:3
2018-09-26 01:41:38	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 01:42:09	<--	brucem (textual@moz-su9.7v6.22.184.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-26 01:42:25	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 01:43:28	siddhartha13	`Err(error) => Err(D::Error::custom("could not find view-id ident {:?}",error))`?
2018-09-26 01:43:58	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-26 01:44:06	siddhartha13	oh that doesn't work
2018-09-26 01:44:29	siddhartha13	how can i format the error in? do I have to call `String::from()`?
2018-09-26 01:49:20	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 01:49:22	Kermit	Thanks
2018-09-26 01:50:18	<--	Kermit (Mibbit@moz-9hko4e.wi.charter.com) has left #rust-beginners
2018-09-26 01:50:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 01:50:47	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 01:52:09	-->	gaveen (gaveen@moz-art.jns.231.123.IP) has joined #rust-beginners
2018-09-26 01:52:30	siddhartha13	oh, looks like what i was trying to do was already done by someone else :P
2018-09-26 01:52:35	siddhartha13	thank you nonetheless!
2018-09-26 01:54:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:56:26	<--	jec_ (jec@moz-pboa8b.ks.cox.net) has quit (Quit: Leaving.)
2018-09-26 01:57:11	-->	jcob (user@moz-881.6e5.7.152.IP) has joined #rust-beginners
2018-09-26 01:58:32	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 01:59:26	<--	jordilin (jordilin@moz-r6rbec.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 01:59:29	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 02:00:20	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:00:28	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 02:02:46	<--	AtumT (IRC@moz-7f8cuc.gvt.net.br) has quit (Client exited)
2018-09-26 02:03:11	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-26 02:05:35	-->	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has joined #rust-beginners
2018-09-26 02:06:04	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-26 02:06:19	panicbit	siddhartha13: You can use the format macro
2018-09-26 02:06:23	panicbit	or could
2018-09-26 02:06:41	siddhartha13	oh i don't think i came across that yet
2018-09-26 02:06:47	panicbit	siddhartha13: `Err(error) => Err(D::Error::custom(format!("could not find view-id ident {:?}", error)))`
2018-09-26 02:06:48	siddhartha13	i am still in the traits chapter of the rust book
2018-09-26 02:06:57	panicbit	siddhartha13: It works the same as print! or println!
2018-09-26 02:06:58	siddhartha13	yeah, i figured that was how it worked :) thank you!
2018-09-26 02:07:04	panicbit	except that it returns a String
2018-09-26 02:07:19	panicbit	siddhartha13: <3
2018-09-26 02:07:23	siddhartha13	:3
2018-09-26 02:07:24	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-26 02:10:15	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 02:10:18	-->	asyncsec (asyncsec@moz-n6lufj.dyn6.twc.com) has joined #rust-beginners
2018-09-26 02:13:29	--	niconii_ is now known as niconii
2018-09-26 02:13:40	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-26 02:13:55	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 02:15:15	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:15:23	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:15:32	--	Raychen1 is now known as Raychen
2018-09-26 02:16:51	-->	starblue (juergen@moz-jqf48n.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-26 02:17:45	-->	mib_oqnhp6 (Mibbit@moz-o87ji0.dsl.bell.ca) has joined #rust-beginners
2018-09-26 02:18:08	<--	mib_oqnhp6 (Mibbit@moz-o87ji0.dsl.bell.ca) has left #rust-beginners
2018-09-26 02:18:15	<--	starblue1 (juergen@moz-l3ilvb.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-26 02:20:28	<--	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-26 02:21:14	<--	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has quit (Connection closed)
2018-09-26 02:23:26	-->	Guest4 (textual@moz-6h8.1an.118.45.IP) has joined #rust-beginners
2018-09-26 02:23:36	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:23:40	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 02:24:21	-->	supermedia_art (supermedia_@moz-pdj73t.ipv4.nycmesh.net) has joined #rust-beginners
2018-09-26 02:24:23	-->	charleslu (Mibbit@moz-s2ct1i.stanford.edu) has joined #rust-beginners
2018-09-26 02:26:21	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 02:27:42	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:28:35	--	Raychen1 is now known as Raychen
2018-09-26 02:28:59	<--	D_ (D_@moz-v7iusd.adsl.inetia.pl) has quit (Ping timeout: 121 seconds)
2018-09-26 02:30:54	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-26 02:31:34	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 02:32:29	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-26 02:32:30	-->	cxiao (cxiao@moz-sng.ido.103.172.IP) has joined #rust-beginners
2018-09-26 02:34:02	-->	jazzpi (jazzpi@moz-i6l8pk.space) has joined #rust-beginners
2018-09-26 02:34:08	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 02:34:34	-->	clpo13 (clpo13@moz-5j8ktg.clpo.info) has joined #rust-beginners
2018-09-26 02:34:38	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:35:18	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-26 02:37:07	-->	D_ (D_@moz-v7iusd.adsl.inetia.pl) has joined #rust-beginners
2018-09-26 02:37:29	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 02:38:01	<--	Guest4 (textual@moz-6h8.1an.118.45.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-26 02:38:06	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:38:10	<--	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:38:45	<--	weeji (jihi@moz-fj5d52.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 02:41:40	-->	cubetastic (Thunderbird@moz-8pvqrp.9s9s.sg38.0204.2405.IP) has joined #rust-beginners
2018-09-26 02:42:37	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-26 02:43:36	-->	quaddle (Mibbit@moz-6s0.o81.158.220.IP) has joined #rust-beginners
2018-09-26 02:43:37	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 02:43:49	cubetastic	How do I control a glcd(JHD12864E, KS0108) with a raspberry pi using rust?
2018-09-26 02:43:56	quaddle	Is `rustup docs` command broken for anyone else?
2018-09-26 02:45:03	-->	siddhart_ (siddharthar@moz-6pgqps.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-26 02:45:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 02:46:19	<--	clpo13 (clpo13@moz-5j8ktg.clpo.info) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-26 02:47:43	<--	siddhartharao17 (siddharthar@moz-tao08e.2fii.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:49:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:50:50	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-26 02:51:10	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:51:10	<--	sp1ff_ (sp1ff@moz-tfkmvv.3i8v.at4v.0119.2620.IP) has quit (Connection closed)
2018-09-26 02:51:37	-->	weeji (jihi@moz-1rvq4o.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 02:52:41	-->	siddhartharao17 (siddharthar@moz-i8lv0d.fmhv.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-26 02:53:22	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-26 02:54:05	<--	siddhart_ (siddharthar@moz-6pgqps.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:54:25	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 02:56:04	<--	proc (aron@moz-ifbhd6.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-26 02:56:10	durka42	quaddle: what does it do for you?
2018-09-26 02:56:21	durka42	cubetastic: probably a question for #rust-embedded
2018-09-26 02:56:50	quaddle	durka42: It does nothing
2018-09-26 02:56:54	cubetastic	durka42: ok, sure
2018-09-26 02:56:58	durka42	no error? :/
2018-09-26 02:57:09	quaddle	nope
2018-09-26 02:57:28	durka42	I think it's `rustup doc`
2018-09-26 02:57:29	cubetastic	durks42: ok - what OS?
2018-09-26 02:57:37	cubetastic	*durka42:
2018-09-26 02:57:50	durka42	quaddle: well, either one works here
2018-09-26 02:57:57	durka42	quaddle: could be it's trying to open a browser but the browser is broken
2018-09-26 02:58:18	cubetastic	durka42: what OS?
2018-09-26 02:58:23	durka42	for what?
2018-09-26 02:58:48	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 02:58:50	cubetastic	so that u can go to the file manually
2018-09-26 02:59:02	cubetastic	instead of making it open the file in a browser for you
2018-09-26 02:59:23	durka42	I think you should be talking to quaddle
2018-09-26 02:59:25	quaddle	rustup doc doesn't work either. probably firefox is being weird
2018-09-26 02:59:42	cubetastic	In Linux, it should be @ file:///home/username/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/share/doc/rust/html/book/2018-edition/ch07-03-importing-names-with-use.html
2018-09-26 03:00:11	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-26 03:00:20	cubetastic	ohh yes, I'm talking to quaddle. sorry
2018-09-26 03:00:43	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 03:00:58	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 03:01:03	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 03:02:52	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:02:54	-->	ufobat___ (Martin@moz-0slgs0.dyn.telefonica.de) has joined #rust-beginners
2018-09-26 03:03:24	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 03:03:29	-->	clpo13 (clpo13@moz-5j8ktg.clpo.info) has joined #rust-beginners
2018-09-26 03:03:31	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 03:03:32	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 03:06:08	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 03:06:11	<--	ufobat_ (Martin@moz-dgj40i.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-26 03:06:11	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 03:06:19	<--	alx741 (alx741@moz-9ki.0fs.196.181.IP) has quit (Client exited)
2018-09-26 03:07:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:08:04	martin2	is this a good place to ask for reviews?
2018-09-26 03:08:54	Yaniel	sure
2018-09-26 03:09:09	Yaniel	although reddit may be better unless you plan to hang around for a long time
2018-09-26 03:09:43	-->	neal_ (neal@moz-9dp4t9.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 03:10:32	martin2	I might as well try
2018-09-26 03:11:26	<--	charleslu (Mibbit@moz-s2ct1i.stanford.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 03:11:55	-->	gza (einar@moz-7kbl4a.customer.cdi.no) has joined #rust-beginners
2018-09-26 03:12:01	martin2	https://gist.github.com/martskins/6defbc89d9125e2ef1f4f050a7329b3e
2018-09-26 03:12:16	-->	dozn (dozn@moz-3pudru.vs.shawcable.net) has joined #rust-beginners
2018-09-26 03:12:37	<--	neal (neal@moz-fj4r48.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 03:13:08	martin2	there's a lot of it "insepired" by jonhoo's video on it, but I surely have a ton of antipatterns there
2018-09-26 03:13:19	<--	quaddle (Mibbit@moz-6s0.o81.158.220.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 03:15:03	martin2	I should probably say what that is too.. it's a very basic hashmap implementation
2018-09-26 03:17:18	-->	enterprisey (enterprisey@moz-jnn2fh.cit.cornell.edu) has joined #rust-beginners
2018-09-26 03:18:38	-->	guelosk (Mibbit@moz-ong.dtt.5.189.IP) has joined #rust-beginners
2018-09-26 03:18:45	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:19:48	<--	asyncsec (asyncsec@moz-n6lufj.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 03:19:53	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:19:56	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 03:20:40	<--	guelosk (Mibbit@moz-ong.dtt.5.189.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 03:21:04	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 03:21:15	<--	clpo13 (clpo13@moz-5j8ktg.clpo.info) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-26 03:21:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 03:23:17	<--	jcob (user@moz-881.6e5.7.152.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:24:46	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-26 03:25:24	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:25:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:27:24	<--	raktajino (raktajino@moz-f92.voh.170.107.IP) has quit (Quit: byeee)
2018-09-26 03:28:22	-->	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has joined #rust-beginners
2018-09-26 03:29:16	<--	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-26 03:30:25	--	U007D_afk is now known as U007D
2018-09-26 03:31:09	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 03:31:09	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-26 03:31:12	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 03:31:33	<--	ChaiTRex (ChaiTRex@moz-f2u.fbr.15.4.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:31:52	<--	siddhartharao17 (siddharthar@moz-i8lv0d.fmhv.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:32:51	-->	brucem (textual@moz-gu8ae7.p5eo.vasu.9800.2405.IP) has joined #rust-beginners
2018-09-26 03:34:44	<--	U007D (U007D@moz-m0o.9b9.245.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:34:59	-->	U007D (U007D@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-26 03:35:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:36:09	<--	cubetastic (Thunderbird@moz-8pvqrp.9s9s.sg38.0204.2405.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:38:00	<--	yjv (yjv@moz-u3cm8h.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-26 03:38:16	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-26 03:40:15	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 03:42:52	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-26 03:44:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:46:30	-->	cubetastic (Thunderbird@moz-8pvqrp.9s9s.sg38.0204.2405.IP) has joined #rust-beginners
2018-09-26 03:49:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 03:50:12	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 03:50:32	<--	cubetastic (Thunderbird@moz-8pvqrp.9s9s.sg38.0204.2405.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:52:04	-->	ghoklp (ricardo@moz-8ik.s93.101.189.IP) has joined #rust-beginners
2018-09-26 03:53:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 03:54:44	<--	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has quit (Quit: WeeChat 2.2)
2018-09-26 03:56:31	<--	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 03:56:56	ghoklp	I'm using bindgen to bind to an c library that has one one function that is declared in the header but not defined in the .c .When using that lib from C, i can define the library together with my executable code. How do I do that on rust? the obvious way fails saying I'm doing a double definition of the function.
2018-09-26 03:59:08	-->	kimundi- (kimundi@moz-5ik6h5.versanet.de) has joined #rust-beginners
2018-09-26 03:59:16	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 03:59:33	-->	indigo747 (indigo747@moz-bgsfrb.dhcp.cruzio.com) has joined #rust-beginners
2018-09-26 04:00:20	<--	niconii (nicole@moz-4pu85a.midco.net) has quit (Quit: leaving)
2018-09-26 04:00:37	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 04:01:16	<--	kimundi (kimundi@moz-8a3qg0.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-26 04:01:16	--	kimundi- is now known as kimundi
2018-09-26 04:02:29	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 04:02:49	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 04:02:53	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 04:02:55	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 04:03:48	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:05:50	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-26 04:06:12	-->	subhojitpaul (subhojit777@moz-bmc.a64.225.110.IP) has joined #rust-beginners
2018-09-26 04:06:12	-->	subhojit777 (subhojit777@moz-bmc.a64.225.110.IP) has joined #rust-beginners
2018-09-26 04:06:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 04:11:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:14:22	<--	martin1 (martin@moz-c7v.9s6.64.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:15:08	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:15:09	Yaniel	ghoklp: sounds like a function that is defined in some library that is linked into the c program?
2018-09-26 04:15:13	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 04:15:29	Yaniel	unless you mean that it's *defined* in the header
2018-09-26 04:15:42	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 04:15:47	ghoklp	yes, it's *defined* in the header, just the prototype
2018-09-26 04:16:10	Yaniel	that's a declaration, not a definition
2018-09-26 04:16:11	ghoklp	then the program that uses that lib needs to define that one function itself
2018-09-26 04:16:26	Yaniel	ah
2018-09-26 04:16:32	Yaniel	is it some kind of callback?
2018-09-26 04:16:40	ghoklp	ops, yes, it's *declared* in the header
2018-09-26 04:16:52	Yaniel	because this seems like some rather bizarre architecture
2018-09-26 04:18:02	Yaniel	anyway so you need to define it somewhere in your rust code and export it as if you were developing a dll
2018-09-26 04:18:10	ghoklp	No, it's the error handling function. I made the library myself, so maybe it's weird really...
2018-09-26 04:18:36	Yaniel	if you control the C code I'd say refactor it to use an ordinary callback
2018-09-26 04:19:01	Yaniel	get a function pointer from the caller and call it a day
2018-09-26 04:19:38	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-26 04:21:50	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-26 04:21:50	ghoklp	but I tried simply defining the function in the rust code, using 'extern "C"', but it still gives undefined reference if I blacklist the function in bindgen, and if I don't blacklist it it results in a double definition error
2018-09-26 04:22:39	Yaniel	you might have to define it in a separate crate
2018-09-26 04:22:39	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 04:22:53	Yaniel	anyway I suggest you put it in a context object with the rest of your global state and pass that around everywhere.
2018-09-26 04:23:06	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 04:23:17	Yaniel	if you are really averse to that, maybe use global statics on the C side
2018-09-26 04:23:45	<--	supermedia_art (supermedia_@moz-pdj73t.ipv4.nycmesh.net) has quit (Ping timeout: 121 seconds)
2018-09-26 04:24:08	Yaniel	but I'd refuse to even review that one if you tried to do it at $work
2018-09-26 04:24:45	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 04:25:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 04:25:34	-->	Cetra (Cetra@moz-3qreko.parashift.com.au) has joined #rust-beginners
2018-09-26 04:25:49	<--	jrl (jrl@moz-0b9j9m.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 04:29:16	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:29:40	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 04:29:49	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 04:30:47	-->	jrl (jrl@moz-0b9j9m.res.rr.com) has joined #rust-beginners
2018-09-26 04:31:01	ghoklp	well, guess those complicate things a bit, but thanks for the help Yaniel
2018-09-26 04:31:50	Yaniel	it's not exactly an idiomatic pattern in C either :P
2018-09-26 04:32:30	Yaniel	it probably comes down to rustc's dead code elimination removing that fn
2018-09-26 04:33:04	<--	subhojitpaul (subhojit777@moz-bmc.a64.225.110.IP) has quit (Quit: Leaving)
2018-09-26 04:33:56	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 04:34:19	Yaniel	since it's an executable crate and thus "obviously" doesn't need any functions it doesn't use
2018-09-26 04:34:37	ghoklp	the idiomatic solution in C is using a callback then? I'm not sure how C should handle having the library user decide on how to handle errors
2018-09-26 04:34:50	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-26 04:34:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 04:35:27	Yaniel	callbacks are quite idiomatic AFAIK
2018-09-26 04:35:32	Yaniel	and port nicely to other languages
2018-09-26 04:35:55	Yaniel	even dynamic ones
2018-09-26 04:36:55	<--	jrl (jrl@moz-0b9j9m.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 04:37:44	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Quit: Leaving)
2018-09-26 04:38:18	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 04:38:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:39:36	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:40:25	--	U007D is now known as U007D_afk
2018-09-26 04:40:55	<--	Guest61891 (nj0rd@moz-1p463o.dsl.tropolys.de) has quit (Ping timeout: 121 seconds)
2018-09-26 04:41:01	-->	jrl (jrl@moz-0b9j9m.res.rr.com) has joined #rust-beginners
2018-09-26 04:42:04	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 04:42:52	<--	mstallmo (mstallmo@moz-pp4qto.il.comcast.net) has quit (Quit: Leaving)
2018-09-26 04:43:28	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:43:39	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 04:43:55	--	U007D_afk is now known as U007D
2018-09-26 04:43:57	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 04:45:09	<--	jrl (jrl@moz-0b9j9m.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 04:45:42	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-26 04:46:29	-->	jrl (jrl@moz-0b9j9m.res.rr.com) has joined #rust-beginners
2018-09-26 04:47:59	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:49:16	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 04:51:31	<--	jrl (jrl@moz-0b9j9m.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 04:53:03	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 04:53:23	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 04:53:35	-->	Guest61891 (nj0rd@moz-0h9in8.dsl.tropolys.de) has joined #rust-beginners
2018-09-26 04:53:56	--	U007D is now known as U007D_afk
2018-09-26 04:55:12	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-26 04:56:42	-->	jrl (jrl@moz-0b9j9m.res.rr.com) has joined #rust-beginners
2018-09-26 04:57:03	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-26 04:57:05	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:57:55	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 04:58:13	-->	eyans (a@moz-vidc9b.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-26 04:58:15	-->	siddhartharao17 (siddharthar@moz-i8lv0d.fmhv.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-26 04:59:39	-->	siddhart_ (siddharthar@moz-6pgqps.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-26 04:59:43	<--	siddhartharao17 (siddharthar@moz-i8lv0d.fmhv.oelm.0420.2001.IP) has quit (Connection closed)
2018-09-26 04:59:53	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-26 05:00:52	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 05:01:14	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 05:01:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 05:01:56	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 05:01:59	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-26 05:02:29	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-26 05:03:10	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Quit: WeeChat 2.2)
2018-09-26 05:04:51	--	U007D_afk is now known as U007D
2018-09-26 05:05:02	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 05:05:08	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-26 05:05:16	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-26 05:06:01	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:09:16	<--	alatiera_ (alatiera@moz-dsljla.access.hol.gr) has quit (Quit: Leaving)
2018-09-26 05:09:18	-->	emerentius_ (emerentius@moz-215tg4.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 05:09:26	<--	emerentius (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 05:10:25	<--	ghoklp (ricardo@moz-8ik.s93.101.189.IP) has left #rust-beginners
2018-09-26 05:15:45	--	U007D is now known as U007D_afk
2018-09-26 05:16:06	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-26 05:16:53	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:17:02	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 05:19:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 05:19:45	--	U007D_afk is now known as U007D
2018-09-26 05:20:14	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-26 05:20:52	<--	turbobob (turbobob@moz-tuvq7p.ca.comcast.net) has quit (Connection closed)
2018-09-26 05:22:42	Moongoodboy{K}	martin2: quickly: consider renaming resize(); remove() should probably return Option<V>; len() should return usize; the &HashMap<..> iterator should probably yield `(&K, &V)`; it should probably not store all the pairs; missing iterators over `(&mut K, &mut V)` and `(K, V)`; missing like a bunch of trait impls
2018-09-26 05:22:53	Moongoodboy{K}	martin2: small stuff: use just `foo` instead of `return foo;` when it's at the end of a function; consider renaming local variables like `ekey` and `eval`; consider importing replace() since you use it a bunch; drop the parens in `n if n < (self.items.len())`
2018-09-26 05:23:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:25:53	-->	Relaed (relaed@moz-jan398.bbtec.net) has joined #rust-beginners
2018-09-26 05:26:07	<--	Relaed (relaed@moz-jan398.bbtec.net) has quit (Quit: leaving)
2018-09-26 05:29:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 05:29:45	Moongoodboy{K}	martin2: …I think your hashing may be using a different random state each time (which is no good if you like being able to retrieve things). Have you tested this implementation just by, say, cloning it from a std HashMap and checking that you get all the same keys and values back?
2018-09-26 05:29:45	--	U007D is now known as U007D_afk
2018-09-26 05:30:31	Moongoodboy{K}	oh, also some stuff looks O(n) that should be `O(n log n)` or something (like get())
2018-09-26 05:33:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:34:36	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 05:34:48	-->	pmp (Mibbit@moz-l6mrlh.gv.shawcable.net) has joined #rust-beginners
2018-09-26 05:35:30	<--	emerentius_ (emerentius@moz-215tg4.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 05:37:56	<--	GreenJello (GreenJello@moz-u41.r97.58.209.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 05:38:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 05:39:16	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:39:20	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 05:40:31	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-26 05:40:51	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-26 05:42:35	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:43:42	-->	pdkl (paul@moz-4geeq6.2uca.23vc.1700.2600.IP) has joined #rust-beginners
2018-09-26 05:44:00	-->	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has joined #rust-beginners
2018-09-26 05:44:03	pdkl	overall i have a good feel for rust,except traits.
2018-09-26 05:45:23	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:45:27	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 05:45:34	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-26 05:45:34	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-26 05:47:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 05:47:30	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 05:51:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:52:02	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 05:56:45	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-26 05:56:52	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-26 06:01:09	-->	KB5 (KB5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-26 06:05:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 06:06:15	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-26 06:06:16	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-26 06:08:14	<--	pdkl (paul@moz-4geeq6.2uca.23vc.1700.2600.IP) has quit (Quit: Konversation terminated!)
2018-09-26 06:09:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:11:10	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:14:03	-->	yk (yk@moz-49v.eva.234.80.IP) has joined #rust-beginners
2018-09-26 06:14:48	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 06:18:50	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:20:14	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-26 06:21:23	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-26 06:23:37	<--	bsrd (weechat@moz-2ct.n8j.15.51.IP) has quit (Quit: WeeChat 2.2)
2018-09-26 06:23:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 06:24:03	-->	bsrd (weechat@moz-2ct.n8j.15.51.IP) has joined #rust-beginners
2018-09-26 06:25:35	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Connection closed)
2018-09-26 06:26:36	<--	bluss (bluss@moz-rjksla.customer.tdc.net) has quit (Ping timeout: 121 seconds)
2018-09-26 06:27:22	drager	joris: Yes, I agree. There's room for mistakes. So what you're doing and suggests is to *always* (most of the time) use signed? What's the drawback for doing that?
2018-09-26 06:28:05	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:30:17	<--	eyans (a@moz-vidc9b.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-26 06:32:24	-->	troyvoy88 (troyvoy88@moz-803.loc.244.207.IP) has joined #rust-beginners
2018-09-26 06:33:20	Moongoodboy{K}	drager, joris: drawback: every operation ever on a usize has to verify that `n >= 0`
2018-09-26 06:34:08	Moongoodboy{K}	that probably ends up being a performance hit with the sheer pervasiveness of usize
2018-09-26 06:34:49	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-26 06:35:08	drager	I see, but I'm fine if I avoid usize?
2018-09-26 06:35:11	Moongoodboy{K}	…okay, not every operation, but every pass through a function boundary
2018-09-26 06:35:39	Moongoodboy{K}	can't avoid usize|isize; we need it for lengths!
2018-09-26 06:35:49	<--	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-26 06:36:06	Moongoodboy{K}	well, I guess you could insist on abolishing it in favor if u64|i64 (??), but that really doesn't fix that problem
2018-09-26 06:36:11	drager	Ah, in the std
2018-09-26 06:37:36	<--	martin2 (martin@moz-od4rc6.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-26 06:38:33	<--	gza (einar@moz-7kbl4a.customer.cdi.no) has quit (Quit: Lost terminal)
2018-09-26 06:38:51	<--	yk (yk@moz-49v.eva.234.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:40:36	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 06:41:10	Moongoodboy{K}	joris: seems to me that most|all of the places you'd run into that is when you're subtracting a positive value near zero. checked_sub() can help with unsigned numbers here.
2018-09-26 06:41:21	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-26 06:41:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 06:41:36	alercah	Moongoodboy{K}: what do you mean by "every operation has to very that n >= 0"
2018-09-26 06:41:37	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 06:41:41	alercah	that's true by definition
2018-09-26 06:41:46	alercah	it needs no verification
2018-09-26 06:42:03	Moongoodboy{K}	joris: instead of using just sub() and checking if the result is negative, use checked_sub() and check if the result is None :)
2018-09-26 06:42:15	Moongoodboy{K}	alercah: not if we were to get rid of usize and use isize everywhere!
2018-09-26 06:42:28	alercah	oh.yes, of course
2018-09-26 06:42:37	Moongoodboy{K}	which is not what I said, to be fair
2018-09-26 06:42:46	Moongoodboy{K}	s,on a usize,that was previously on a usize,
2018-09-26 06:43:42	-->	Mind1949 (Mibbit@moz-sqe.ho4.176.60.IP) has joined #rust-beginners
2018-09-26 06:45:40	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:45:57	-->	ishan (ishan@moz-uallci.gupa.9uae.4053.2409.IP) has joined #rust-beginners
2018-09-26 06:46:09	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:46:25	<--	Mind1949 (Mibbit@moz-sqe.ho4.176.60.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 06:48:27	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:48:36	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 06:49:08	<--	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has quit (Connection closed)
2018-09-26 06:49:13	-->	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has joined #rust-beginners
2018-09-26 06:50:47	<--	siddhart_ (siddharthar@moz-6pgqps.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 06:51:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 06:53:29	-->	oms (oms@moz-3rgj36.dyn.telefonica.de) has joined #rust-beginners
2018-09-26 06:54:08	-->	ecstaticm0rse (ecstaticm0r@moz-6isr7l.tukw.qwest.net) has joined #rust-beginners
2018-09-26 06:55:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:55:43	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 06:55:48	<--	troyvoy88 (troyvoy88@moz-803.loc.244.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 06:55:52	-->	troyvoy88 (troyvoy88@moz-296.cb3.168.173.IP) has joined #rust-beginners
2018-09-26 06:56:35	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 06:58:33	-->	troyvoy88__ (troyvoy88@moz-vuc.e8e.112.62.IP) has joined #rust-beginners
2018-09-26 06:59:31	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 06:59:33	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 06:59:39	-->	siddhartharao17 (siddharthar@moz-6pgqps.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-26 06:59:46	<--	troyvoy88__ (troyvoy88@moz-vuc.e8e.112.62.IP) has quit (Quit: Leaving)
2018-09-26 06:59:58	-->	troyvoy88__ (troyvoy88@moz-vuc.e8e.112.62.IP) has joined #rust-beginners
2018-09-26 07:00:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 07:00:48	<--	troyvoy88 (troyvoy88@moz-296.cb3.168.173.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:00:48	<--	himi (sjjf@moz-psjk59.anu.edu.au) has quit (Ping timeout: 121 seconds)
2018-09-26 07:01:00	--	troyvoy88__ is now known as troyvoy88
2018-09-26 07:04:30	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:04:43	 *	scottmcm would be fine with no `isize`, really -- I've never seen a good place for it
2018-09-26 07:06:03	<--	ecstaticm0rse (ecstaticm0r@moz-6isr7l.tukw.qwest.net) has quit (Ping timeout: 121 seconds)
2018-09-26 07:06:09	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-26 07:06:12	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-26 07:06:39	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 07:06:41	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 07:07:59	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-26 07:08:37	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-26 07:09:06	<--	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Quit: Leaving)
2018-09-26 07:09:23	-->	pachuco (Mibbit@moz-u4g.97k.149.169.IP) has joined #rust-beginners
2018-09-26 07:09:32	joris	drager: not always, it makes sense to use unsigned for low level stuff (like wire protocols not really representing numbers), or fundamentally not signed stuffs, like codepoints etc. usize also makes sense
2018-09-26 07:09:48	joris	Moongoodboy{K}: yes, but the problem is that you need to think about it when you write code
2018-09-26 07:10:02	<--	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 07:10:47	joris	i almost forgot isize existed :D it's probably not that useful indeed
2018-09-26 07:11:38	-->	Sgeo (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-26 07:13:52	drager	joris: Yeah, that's why I wrote *always* (most of the time) to make room for low level stuff :P
2018-09-26 07:14:05	<--	pachuco (Mibbit@moz-u4g.97k.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 07:14:43	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-26 07:17:35	Moongoodboy{K}	scottmcm: we need isize, too, for e.g. pointer offsets
2018-09-26 07:17:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 07:18:53	Moongoodboy{K}	joris: doesn't seem like /more/ cognitive overhead. You need to think about it becoming negative anyways.
2018-09-26 07:20:56	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-26 07:21:06	scottmcm	Moongoodboy{K}: there's .add() and .sub() instead now, which I like better anyway
2018-09-26 07:21:07	Moongoodboy{K}	I've seen isize in a couple surprising places, though, resulting in an effective range of usize::min_value()..=isize::max_value() (!) with not-immediately-apparent consequences of overflow
2018-09-26 07:21:56	scottmcm	I've never seen a place that did .offset() without knowing a priori whether it was positive or negative
2018-09-26 07:22:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:22:28	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-26 07:22:32	Moongoodboy{K}	hmmmm
2018-09-26 07:22:41	Moongoodboy{K}	could|should we deprecate isize then?
2018-09-26 07:23:44	scottmcm	I don't think it's actually practical, since maybe you want to ashr a usize, for example
2018-09-26 07:24:23	scottmcm	(not that I can think of a reason to, but...)
2018-09-26 07:25:38	<--	siddhartha13 (uid129228@moz-6g82kr.hathersage.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 07:27:07	-->	brucem_ (textual@moz-r57f29.p5eo.vasu.9800.2405.IP) has joined #rust-beginners
2018-09-26 07:27:40	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-26 07:27:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 07:29:04	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-26 07:29:15	<--	brucem (textual@moz-gu8ae7.p5eo.vasu.9800.2405.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:31:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:33:34	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-26 07:33:52	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 07:35:44	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 07:36:18	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-26 07:36:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 07:37:16	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Ping timeout: 121 seconds)
2018-09-26 07:40:16	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:40:22	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-26 07:40:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:42:19	<--	lnoid (lnoid@moz-n5n5kv.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-26 07:42:23	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 07:43:47	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-26 07:44:39	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-26 07:45:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 07:45:47	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 07:46:11	<--	tsal (tsal@moz-c8ehtn.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-26 07:47:25	-->	tsal (tsal@moz-khhfui.versanet.de) has joined #rust-beginners
2018-09-26 07:49:12	-->	mib_p47woj (Mibbit@moz-6s0.o81.158.220.IP) has joined #rust-beginners
2018-09-26 07:49:30	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-26 07:49:50	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:50:02	-->	mib_tthptv (Mibbit@moz-s40.4lo.60.103.IP) has joined #rust-beginners
2018-09-26 07:50:08	mib_p47woj	Hi, I heard something about a GC'ed pointer coming to the std, this helps people who want to use Rust as a high level language. Is there any new news on that?
2018-09-26 07:51:33	mib_tthptv	hi, can anyone help?  I have installed rustup via curl https://sh.rustup.rs -sSf | sh. But in terminal it is not found. 
2018-09-26 07:51:55	mib_p47woj	what does it say, mbrcknl ?
2018-09-26 07:52:09	mib_tthptv	rustup: command not found
2018-09-26 07:52:11	kimundi	mib_tthptv: Terminals don't automatically reload their environment variables - try logging in again, or just rebooting if thats easier
2018-09-26 07:52:27	-->	ddev (Mibbit@moz-lhhq07.brain.net.pk) has joined #rust-beginners
2018-09-26 07:52:29	mib_tthptv	Thanks. Let me try that
2018-09-26 07:52:33	kimundi	mib_p47woj: I'm not aware of any recent development in regard to GC pointers
2018-09-26 07:52:46	<--	mib_tthptv (Mibbit@moz-s40.4lo.60.103.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 07:53:14	mib_p47woj	Oh well nvm.  I was talking about this btw  https://manishearth.github.io/blog/2016/08/18/gc-support-in-rust-api-design/
2018-09-26 07:54:10	kimundi	mib_p47woj: Yeah, that is over 2 years ago. I'm not aware o the idea being motballed, but it certianly did not get implemented much yet :)
2018-09-26 07:54:15	-->	Mafus (Mibbit@moz-uejc8b.highway.telekom.at) has joined #rust-beginners
2018-09-26 07:54:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 07:55:37	<--	enterprisey (enterprisey@moz-jnn2fh.cit.cornell.edu) has quit (Connection closed)
2018-09-26 07:55:47	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 07:56:11	-->	frogaincia (Mibbit@moz-260.j6u.26.118.IP) has joined #rust-beginners
2018-09-26 07:56:35	Moongoodboy{K}	mib_p47woj: but Rust is already a high-level language :(
2018-09-26 07:56:37	<--	frogaincia (Mibbit@moz-260.j6u.26.118.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 07:58:09	ddev	Hello everyone, I am reading rust by example section 8: https://doc.rust-lang.org/rust-by-example/flow_control/match/destructuring/destructure_pointers.html and I can't understand how the first match works if I can drop the &. It says
2018-09-26 07:58:14	ddev	/ ^ We see that if the matching `&`s are dropped, then the `i32` // should be assigned to `val`.
2018-09-26 07:58:18	ddev	This means we are comparing &i32 with i32 which shouldn't work right?
2018-09-26 07:59:06	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 07:59:39	mib_p47woj	Moongoodboy{K}: Well technically, yes. But in my book, a high level language is a language that rids you of all cognitive overhead of resource management (for Rust it's lifetime and ownership management) etc. I want to think about data structures, not ownership and lifetimes if you know what I mean
2018-09-26 07:59:42	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Quit: WeeChat 2.2)
2018-09-26 07:59:46	scottmcm	mib_p47woj: if something happens soon, it might be more integration with the GC in WASM
2018-09-26 08:00:21	<--	pmp (Mibbit@moz-l6mrlh.gv.shawcable.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 08:00:57	-->	Simon (Simon@moz-ggmvg7.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-26 08:01:48	-->	mib_u24iiv (Mibbit@moz-v8sjs8.customer.tdc.net) has joined #rust-beginners
2018-09-26 08:01:56	kimundi	mib_p47woj: I get what you mean, but even with a GC pointer you would still have to do that
2018-09-26 08:02:24	Moongoodboy{K}	mib_p47woj: Rust gains safety (lacking in manual languages like C) and efficiency (lacking in GC languages like Java). The tradeoff it makes is learning curve and cognitive overhead. If you don't want that, Rust may not be right for you.
2018-09-26 08:02:48	kimundi	mib_p47woj: You would need an completly alternate std library that uses a hypothetical GC pointer everywhere to get closer, and even then borrowing and lifetimes are integral to the very basics of how to design any kind of Rust API
2018-09-26 08:02:49	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Quit: WeeChat 2.2)
2018-09-26 08:02:55	Moongoodboy{K}	it does sound like you just want a GC language, where stuff is cleaned up and you don't have to worry about it.
2018-09-26 08:03:08	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-26 08:03:13	scottmcm	Also, GC languages don't fix resource management
2018-09-26 08:03:14	<--	mib_u24iiv (Mibbit@moz-v8sjs8.customer.tdc.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 08:03:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 08:03:50	indigo747	Go and the JVM are both GCed, and there are enough JVM languages I expect you can find one you like
2018-09-26 08:04:05	scottmcm	I got a 4AM call 2 weeks ago because my service died, and the root cause seems to have been that is didn't have RAII, so something wasn't cleaned up right, and the GC didn't fix it.
2018-09-26 08:05:10	Moongoodboy{K}	(to be fair, if you don't RAII|OBRM your thing in Rust, it also won't be cleaned up right :P )
2018-09-26 08:06:06	-->	Eragon (Eragon@moz-iiirhc.abo.wanadoo.fr) has joined #rust-beginners
2018-09-26 08:07:57	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 08:08:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:08:22	-->	jones (jonas@moz-jqo904.customer.lyse.net) has joined #rust-beginners
2018-09-26 08:08:54	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-09-26 08:09:31	<--	cxiao (cxiao@moz-sng.ido.103.172.IP) has quit (Client exited)
2018-09-26 08:10:00	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-26 08:10:23	scottmcm	Well yes, but if you RAII it it'll be cleaned up by default, instead of the java behaviour of AutoCloseable NOT defaulting to being cleaned up
2018-09-26 08:12:47	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-26 08:13:17	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-26 08:16:19	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-26 08:17:04	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-26 08:19:37	ddev	Can somebody explain why the second match works. Thanks. https://gist.github.com/rust-play/84649edb63a47d034baef59326563bc1
2018-09-26 08:19:47	<--	mib_p47woj (Mibbit@moz-6s0.o81.158.220.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 08:20:56	jones	ddev: I think there was an update to rust a while ago that automatically dereference certain things in a match statement (I could be wrong)
2018-09-26 08:21:11	-->	lnoid (lnoid@moz-n5n5kv.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-26 08:21:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 08:22:31	jones	nope I am wrong
2018-09-26 08:23:00	-->	paulvt (paul.van.ti@moz-7j9h6s.fb56.nn7d.a446.2a02.IP) has joined #rust-beginners
2018-09-26 08:23:23	ddev	Do you know where can I read more about this? I am reading rust by example and can't understand section 8.
2018-09-26 08:23:42	ddev	This page https://doc.rust-lang.org/rust-by-example/flow_control/match/destructuring/destructure_pointers.html
2018-09-26 08:24:20	<--	subhojit777 (subhojit777@moz-bmc.a64.225.110.IP) has quit (Quit: Leaving)
2018-09-26 08:24:21	<--	siddhartharao17 (siddharthar@moz-6pgqps.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 08:24:26	jones	heh actually this looks a bit bananas: https://play.rust-lang.org/?gist=75cc4bd5e1fa662df0eaf2fcb7957ae6&version=stable&mode=debug&edition=2015
2018-09-26 08:25:21	ddev	Magic
2018-09-26 08:25:51	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-26 08:25:52	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:25:56	jones	I would've expected the first one (&val) to be a &&u32
2018-09-26 08:26:42	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-26 08:28:28	sgift	Rust 1.26 introduced "nicer match bindings" https://blog.rust-lang.org/2018/05/10/Rust-1.26.html though I'm not sure if that's what happens here (no time to look at the moment). But there's a description in that blog posts, maybe that helps
2018-09-26 08:28:53	jones	sgift: now I'm interested and having a look, thanks!
2018-09-26 08:29:53	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 08:30:49	-->	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has joined #rust-beginners
2018-09-26 08:31:04	jones	I do like the new match but the playground link I posted still looks a bit bananas to me :D
2018-09-26 08:31:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 08:32:17	-->	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-26 08:32:56	-->	holmgr (holmgr@moz-3b0v68.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-26 08:34:25	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:35:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:37:44	<--	holmgr (holmgr@moz-3b0v68.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-26 08:38:40	ddev	This might be a stupid question, but what exactly does match matches? Is it just the type? If it does then i32 and &i32 are same? Would explain why it works for both.
2018-09-26 08:39:03	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-26 08:40:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 08:40:47	ddev	I think it does more than that.
2018-09-26 08:41:13	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-26 08:43:02	<--	brucem_ (textual@moz-r57f29.p5eo.vasu.9800.2405.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-26 08:43:12	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:43:16	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 08:43:54	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-26 08:44:09	-->	holmgr (holmgr@moz-3b0v68.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-26 08:44:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:45:37	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 08:46:42	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:48:18	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 08:48:34	kimundi	ddev: match is short for "pattern match"
2018-09-26 08:49:17	kimundi	ddev: which basically means "take a value, and try to match it against a possible structure the value might have"
2018-09-26 08:49:39	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 08:49:47	kimundi	Historically, this was pretty strict in Rust - if your value where of type &T, you would have to match with the pattern `&...` for example
2018-09-26 08:50:30	kimundi	But because the compiler can track properly what types are involved, and some patterns can not cause confusion if they are matched implicitly, there hasbeen a recent addition that basically automatically matches references in patterns
2018-09-26 08:51:01	-->	yk (yk@moz-49v.eva.234.80.IP) has joined #rust-beginners
2018-09-26 08:51:36	kimundi	So if you say have a `&(A, B)` and do `match foo { (x, y) => { ... } }` then that is implicitly the same as `match foo { &(ref x, ref y) => { ... } }`
2018-09-26 08:51:53	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 08:51:56	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 08:52:11	-->	Relaed (relaed@moz-jan398.bbtec.net) has joined #rust-beginners
2018-09-26 08:53:50	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:54:10	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-09-26 08:56:55	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 08:57:23	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 08:57:24	--	Raychen1 is now known as Raychen
2018-09-26 08:57:42	jones	kimundi: how come &val in this match statement is dereferencing? I thought * would've been used instead: https://play.rust-lang.org/?gist=ffdce298cacbf2ba92d6dd22baef94df&version=stable&mode=debug&edition=2015
2018-09-26 08:57:54	jones	s/would/should/
2018-09-26 08:58:24	jones	I'm probably thinking about this incorrectly (& = ref, * = deref)
2018-09-26 08:58:25	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 08:59:08	kimundi	jones: pattern amtching syntax does not have the same semantic as expressions
2018-09-26 08:59:18	kimundi	in a expression, &foo takes the address of the value foo
2018-09-26 08:59:47	kimundi	in a pattern, &foo matches a reference and binds the value behind the treference to the pattern "foo"
2018-09-26 09:00:24	kimundi	roughly, & means derference in a pattern - pattern syntax mirrors expressions syntax where possible
2018-09-26 09:00:38	<--	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has quit (Connection closed)
2018-09-26 09:00:39	kimundi	It makes more sense with other example, like for example tupel
2018-09-26 09:00:45	kimundi	let (a, b) = (1, 2);
2018-09-26 09:01:14	kimundi	the expression (1, 2) creates a tuple from the values 1 and 2, the pattern (a, b) takes the tuple appart and binds the values to the variables a and b
2018-09-26 09:02:48	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:04:24	<--	holmgr (holmgr@moz-3b0v68.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-26 09:04:36	jones	kimundi: okay that kind of makes sense: `let (&a, &b) = (&1u32, &2);` would say that `a = 1u32` ?
2018-09-26 09:05:20	kimundi	yes
2018-09-26 09:05:39	jones	and `let (a, &b) = (&1, &2);` would mean: `let x: u32 = *a;`
2018-09-26 09:05:57	ddev	"pattern amtching syntax does not have the same semantic as expressions" This is so helpful.
2018-09-26 09:06:28	<--	npmccallum (npmccallum@moz-9tof33.wlfrct.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-26 09:07:08	-->	justsomequestions (gumble@moz-r3bbv6.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-26 09:07:29	kimundi	jones: confusing example, but yes, a would be a &i32 there
2018-09-26 09:07:31	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 09:08:14	jones	kimundi: is it the case that * is not available in pattern matching? so `let (*a, &b) = ...` wouldn't mean anything?
2018-09-26 09:08:31	kimundi	* is not valid pattern syntax, yes
2018-09-26 09:09:03	kimundi	and argument could be made that "*" should exist with the meaning of "ref", but that was found to weird when this syntax got decided uppon... :P
2018-09-26 09:09:54	jones	kimundi: is it incorrect to say that & in a pattern is the same as * in an expression?
2018-09-26 09:10:25	kimundi	well not "the same", but it performs roughly the same operation, yeah
2018-09-26 09:11:50	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Ping timeout: 121 seconds)
2018-09-26 09:11:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:12:03	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:12:30	<--	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-26 09:13:00	jones	okay that makes it easier to think about these things. Thank kimundi for explaining this, and thanks ddev for starting this in the first place! 
2018-09-26 09:13:16	-->	somewone (somewone@moz-rg0.h2s.113.141.IP) has joined #rust-beginners
2018-09-26 09:13:34	kimundi	gald I could help :)
2018-09-26 09:13:55	-->	holmgr (holmgr@moz-98s792.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-26 09:15:00	-->	ahnk (Mibbit@moz-ehft0b.bredband.comhem.se) has joined #rust-beginners
2018-09-26 09:15:04	ahnk	hello
2018-09-26 09:16:20	ahnk	I am a graphics programmer that wants to transition to Rust, I need to be able to use DirectX12 with the beta api for raytracing without some wrapper that abstracts anything away
2018-09-26 09:16:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 09:17:25	Yaniel	!crate directx-sys
2018-09-26 09:17:26	+rustbot	directx-sys (0.1.0) - Rust FFI bindings for the DirectX API -> https://crates.io/crates/directx-sys <https://docs.rs/directx-sys>
2018-09-26 09:17:42	Arnavion	>2 years ago
2018-09-26 09:17:48	kimundi	ahnk: I'd also join #rust-gamedev
2018-09-26 09:18:18	Yaniel	apparently there's also {!crate d3d12-sys}
2018-09-26 09:18:18	+rustbot	d3d12-sys (0.2.0) - Contains function definitions for the Windows API library d3d12. See winapi for types and constants. -> https://crates.io/crates/d3d12-sys <https://docs.rs/d3d12-sys>
2018-09-26 09:18:34	Yaniel	and yes, it probably needs an update
2018-09-26 09:19:53	-->	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has joined #rust-beginners
2018-09-26 09:21:00	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:23:47	-->	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-26 09:24:00	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 09:25:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 09:25:51	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-26 09:28:32	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:29:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:30:00	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-26 09:31:25	<--	ishan (ishan@moz-uallci.gupa.9uae.4053.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:36:42	-->	edcragg- (edcragg@moz-sjrvib.co.uk) has joined #rust-beginners
2018-09-26 09:38:26	<--	edcragg (edcragg@moz-b6j.2dv.205.90.IP) has quit (Quit: Leaving)
2018-09-26 09:38:56	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:38:57	--	edcragg- is now known as edcragg
2018-09-26 09:39:00	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 09:40:04	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Quit: Leaving)
2018-09-26 09:42:19	-->	mib_9sb8lz (Mibbit@moz-4fto0h.adsl.tpnet.pl) has joined #rust-beginners
2018-09-26 09:43:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 09:45:54	mib_9sb8lz	Hi, I've got a function that returns an Option<&str>, and I'd like to parse that str getting a Result<Option<Sth>, ParseError> in the end for easy bubbling up of the error with ?. I can't seem to come up with a nice way to do this.
2018-09-26 09:47:09	-->	frans_student (Mibbit@moz-kgm.uma.183.91.IP) has joined #rust-beginners
2018-09-26 09:47:46	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:48:51	-->	skeleten (user@moz-iic.6lt.83.130.IP) has joined #rust-beginners
2018-09-26 09:48:58	-->	ibrokemypie (conor@moz-akj.afs.124.1.IP) has joined #rust-beginners
2018-09-26 09:49:15	frans_student	Hey, I'm looking for a way to initialize an Array2 of structs, any thoughts?
2018-09-26 09:52:31	mib_9sb8lz	Oh, turns out there's a 'transpose' method on Option just for what I wanted to do
2018-09-26 09:52:37	mib_9sb8lz	Too bad it's nightly only
2018-09-26 09:53:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 09:53:26	Yaniel	implement TryFrom?
2018-09-26 09:57:09	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 09:57:13	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 09:57:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 10:02:48	<--	autoferrit (uid142250@moz-88e5vo.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 10:03:41	<--	justsomequestions (gumble@moz-r3bbv6.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-26 10:07:09	ibrokemypie	what does *mut *mut ::std::os::raw::c_char
2018-09-26 10:07:12	ibrokemypie	actually mean?
2018-09-26 10:08:50	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-26 10:10:25	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-26 10:11:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 10:12:17	kimundi	pointer to a pointer to a C char
2018-09-26 10:12:39	ibrokemypie	how would I convert it to a rust string?
2018-09-26 10:13:08	<--	ddev (Mibbit@moz-lhhq07.brain.net.pk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 10:13:44	Moongoodboy{K}	probably via ::std::ffi::CStr
2018-09-26 10:13:54	kimundi	assuming the inner pointer points to a valid C string, you would create a CStr with the inner pointer (derferencing the outer one), and then use its methods to turn it into a CString and/or String or &str
2018-09-26 10:13:56	<--	mib_9sb8lz (Mibbit@moz-4fto0h.adsl.tpnet.pl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 10:14:45	ibrokemypie	I tried CStr::from_ptr(), however it wants an i8 rather than *-ptr
2018-09-26 10:14:51	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-26 10:14:53	Moongoodboy{K}	you need to know that you logically own the string before making it into a CString though
2018-09-26 10:15:10	Moongoodboy{K}	and that's entirely on you to ensure (Rust has no idea)
2018-09-26 10:15:12	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-26 10:15:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 10:16:09	Moongoodboy{K}	…actually, you can't do that anyway because allocators
2018-09-26 10:16:13	Moongoodboy{K}	use CStr
2018-09-26 10:17:28	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Connection closed)
2018-09-26 10:17:53	Moongoodboy{K}	ibrokemypie: from_ptr() takes a `*const c_char`. That error sounds like you're passing a `*const *const c_char` instead (look at the full types)
2018-09-26 10:18:07	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 10:19:01	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-26 10:19:11	Moongoodboy{K}	and the “expected i8, found *-ptr” is only part of the story
2018-09-26 10:19:22	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 10:19:46	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-26 10:20:05	Arnavion	or they misread the error
2018-09-26 10:20:20	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 10:21:19	-->	yaymukund (yaymukund@moz-fp6tda.cable.virginm.net) has joined #rust-beginners
2018-09-26 10:21:50	ibrokemypie	the type returned by the c function is *mut *mut c_char, though the documentation of the library says it return an array of strings
2018-09-26 10:22:30	Moongoodboy{K}	what it wants: `*const c_char`
2018-09-26 10:22:30	Moongoodboy{K}	      expected i8 here ^^^^^^
2018-09-26 10:22:30	Moongoodboy{K}	what you passed: `*const *const c_char`
2018-09-26 10:22:30	Moongoodboy{K}	        found *-ptr here ^^^^^^^^^^^^^
2018-09-26 10:22:39	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 10:23:17	Moongoodboy{K}	error is accurate, if a bit misleading. Rust tends to give those.
2018-09-26 10:23:20	ibrokemypie	how do I go from *const *cont c_char to just *const c_char?
2018-09-26 10:23:35	Moongoodboy{K}	and yeah, that's how you return an array of strings in C.
2018-09-26 10:23:44	Moongoodboy{K}	do you just want the first one, or
2018-09-26 10:23:49	ibrokemypie	first one yes
2018-09-26 10:24:08	ibrokemypie	though it'd be good to know how to get all of them into a rust array
2018-09-26 10:24:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 10:24:47	Arnavion	How do you know how many are there
2018-09-26 10:24:57	ibrokemypie	you don't
2018-09-26 10:25:04	ibrokemypie	well
2018-09-26 10:25:08	Moongoodboy{K}	well, you have to /somehow/
2018-09-26 10:25:10	ibrokemypie	there should be one or more
2018-09-26 10:25:17	Moongoodboy{K}	the answer can be “it's null-terminated”
2018-09-26 10:25:27	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-26 10:25:58	ibrokemypie	Returns:
2018-09-26 10:26:00	ibrokemypie	 An array of package names, or NULL on error.
2018-09-26 10:27:47	-->	brucem (textual@moz-qond45.ivsr.hm43.9800.2405.IP) has joined #rust-beginners
2018-09-26 10:28:14	Arnavion	Library from 2009. Wonder if they'll accept an issue that their docs are insufficient
2018-09-26 10:28:35	Arnavion	(   https://github.com/sebnow/pkgparse/blob/master/pkgparse.h#L128-L129   )
2018-09-26 10:28:54	Arnavion	Anyway yes, it's probably that the last element is nullptr
2018-09-26 10:29:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 10:29:40	Arnavion	So find that nullptr and you have the number of elements, convert it to a &[*char] with slice::from_raw_parts, then iter().map() each element to a CStr
2018-09-26 10:31:06	ibrokemypie	so to find the null pointer i would loop through and check .is_null()?
2018-09-26 10:32:23	Arnavion	with offset() / add(), yes
2018-09-26 10:32:59	Arnavion	Or well
2018-09-26 10:33:34	Arnavion	Since you're going to iterate over it anyway, you could map each to a CStr and push to a Vec in that same iteration, instead of building an intermediate &[*char]
2018-09-26 10:33:36	Arnavion	Whatever you want
2018-09-26 10:33:44	Moongoodboy{K}	^2
2018-09-26 10:33:56	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 10:34:15	ibrokemypie	how would I iterate over the c array?
2018-09-26 10:34:20	Moongoodboy{K}	start with an empty Vec<CStr>, iterate, and push
2018-09-26 10:34:22	Moongoodboy{K}	oh, uh
2018-09-26 10:34:25	Arnavion	<Arnavion> with offset() / add(), yes
2018-09-26 10:35:01	yaymukund	I'm stuck trying to turn a `Stream<hyper::Chunk>` into something that implements Read + Seek + Send + 'static. It looks like `Chunk` impls `From<Vec<u8>>`, `From<&'static [u8]>`, and `AsRef<[u8]>`, which should maybe be useful.
2018-09-26 10:35:05	Arnavion	loop { if p.is_null() { break; } CStr::from(p); p = p.add(1); }
2018-09-26 10:35:13	Arnavion	(Pseudocode, going from memory)
2018-09-26 10:35:29	Moongoodboy{K}	looks good
2018-09-26 10:35:47	Moongoodboy{K}	and just push() each CStr after constructing it
2018-09-26 10:35:54	Arnavion	yaymukund: .concat2() will convert the Stream<Chunk> to a Future<Chunk>, where that Chunk is an aggregate of all the Chunks from the Stream
2018-09-26 10:36:10	Arnavion	yaymukund: After that Deref the Chunk to a &[u8], or whatever you want
2018-09-26 10:36:16	<--	ljhms (ljhms@moz-95m2u0.cust.bahnhof.se) has quit (Ping timeout: 121 seconds)
2018-09-26 10:36:19	<--	jones (jonas@moz-jqo904.customer.lyse.net) has quit (Quit: WeeChat 2.2)
2018-09-26 10:36:45	Arnavion	yaymukund: You'll probably need to wrap it in a Cursor to get Seek
2018-09-26 10:36:59	yaymukund	Arnavion: `concat2` would block until all the chunks are received, right?
2018-09-26 10:37:16	Arnavion	yaymukund: As I said, it returns a Future<Chunk>, where that Chunk is an aggregate of all the Chunks from the Stream
2018-09-26 10:37:27	<--	luizdepra (luizdepra@moz-l3dn2s.pflq.ojo3.1284.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 10:37:39	ibrokemypie	is p the *const *const i8?
2018-09-26 10:37:42	-->	luizdepra (luizdepra@moz-5bq1mq.pflq.ojo3.1284.2001.IP) has joined #rust-beginners
2018-09-26 10:37:43	yaymukund	er, right, sorry, that Future would only resolve after all the chunks have streamed, right?
2018-09-26 10:37:53	yaymukund	I'd like to do it in a buffered fashion
2018-09-26 10:38:00	Arnavion	yaymukund: That's what "all the Chunks from the Stream" means.
2018-09-26 10:38:01	-->	nullbit (nullbit@moz-eqc.9o4.59.182.IP) has joined #rust-beginners
2018-09-26 10:38:29	-->	jones (jonas@moz-jqo904.customer.lyse.net) has joined #rust-beginners
2018-09-26 10:38:53	-->	liquidnight (marcus@moz-4jang5.5pvr.rgii.0c23.2a01.IP) has joined #rust-beginners
2018-09-26 10:39:19	yaymukund	ah, sorry to make you repeat yourself
2018-09-26 10:39:32	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-26 10:41:14	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-26 10:42:10	ibrokemypie	std::ptr::read(std::ptr::read(p))?
2018-09-26 10:43:51	ibrokemypie	ah
2018-09-26 10:43:59	ibrokemypie	well I got it to compile
2018-09-26 10:44:03	ibrokemypie	no it just sits
2018-09-26 10:44:10	yaymukund	i've tried referring to the stream as `impl AsRef<[u8]>` and doing `BufReader::new(Cursor::new(stream))`, but I don't think that gives me `Send`
2018-09-26 10:44:11	ibrokemypie	s/no/now/
2018-09-26 10:44:36	Arnavion	yaymukund: You wrap the Chunk, not the Stream<Chunk>
2018-09-26 10:45:06	-->	ljhms (ljhms@moz-95m2u0.cust.bahnhof.se) has joined #rust-beginners
2018-09-26 10:45:24	ibrokemypie	https://bpaste.net/show/50a0ed04f045
2018-09-26 10:45:52	ibrokemypie	I think this gets stuck in the loop forever
2018-09-26 10:46:10	Arnavion	p.add() doesn't work like that
2018-09-26 10:46:12	Arnavion	Read its docs
2018-09-26 10:47:07	Arnavion	Also you don't need   ptr::read(p)   , just   *p
2018-09-26 10:47:18	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 10:47:31	ibrokemypie	without the read it doesnt compile
2018-09-26 10:47:32	ibrokemypie	   = note: expected type `*const i8`
2018-09-26 10:47:34	ibrokemypie	              found type `*const *const i8`
2018-09-26 10:47:48	Arnavion	Read carefully.
2018-09-26 10:48:38	yaymukund	Arnavion: but I'm looking to Read + Seek + Send the whole stream, not each individual chunk?
2018-09-26 10:49:13	Arnavion	yaymukund: I'm not going to repeat myself a fourth time
2018-09-26 10:49:30	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 10:49:36	<--	cp (cp@moz-fresc2.asahinet.com) has quit (Quit: Disappears in a puff of smoke)
2018-09-26 10:49:42	ibrokemypie	https://bpaste.net/show/fcee7150d118
2018-09-26 10:49:57	-->	ddev (Mibbit@moz-lhhq07.brain.net.pk) has joined #rust-beginners
2018-09-26 10:49:59	ibrokemypie	alright, it actually adds now and the loop ends, with a seg fault
2018-09-26 10:51:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 10:52:44	ibrokemypie	ah, got it
2018-09-26 10:53:04	ibrokemypie	https://bpaste.net/show/c119ad063c19
2018-09-26 10:53:06	ibrokemypie	this works
2018-09-26 10:53:12	ibrokemypie	just dont really understand it
2018-09-26 10:53:21	-->	mib_kk250o (Mibbit@moz-ms1.v08.241.84.IP) has joined #rust-beginners
2018-09-26 10:53:35	Arnavion	if p.is_null() {   should be   if (*p).is_null() {
2018-09-26 10:54:37	<--	mib_kk250o (Mibbit@moz-ms1.v08.241.84.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 10:54:51	Arnavion	(You still also need a p.is_null() check before the loop, since the docs say the function returns nullptr on error)
2018-09-26 10:55:43	-->	monti (monti@moz-p36.f0h.59.176.IP) has joined #rust-beginners
2018-09-26 10:55:46	<--	monti (monti@moz-p36.f0h.59.176.IP) has left #rust-beginners
2018-09-26 10:56:16	ibrokemypie	is (*p) the same as std::ptr::read(p)?
2018-09-26 10:56:36	Arnavion	In this particular case, yes
2018-09-26 10:56:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 10:57:48	ibrokemypie	https://bpaste.net/show/18da9f06a990
2018-09-26 10:57:51	ibrokemypie	in this case?
2018-09-26 10:57:57	ibrokemypie	can it be something else?
2018-09-26 10:58:19	kimundi	ibrokemypie: ptr::read() is for rare unsafe cases where you don't want the more safe semantics of a normal deref with *. With the types you have here, there is actually no difference, but in general you should use normal derferencing per default
2018-09-26 10:58:26	-->	aaja (Mibbit@moz-fn7.t0q.100.101.IP) has joined #rust-beginners
2018-09-26 10:58:37	<--	Mafus (Mibbit@moz-uejc8b.highway.telekom.at) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 10:58:51	-->	monti (monti@moz-p36.f0h.59.176.IP) has joined #rust-beginners
2018-09-26 10:59:04	kimundi	Concretely, ptr::read(p) works in more potentially-wrong cases than just *p
2018-09-26 10:59:17	Moongoodboy{K}	eval: #[derive(Debug)] struct Foo; let foo = Foo; let ptr = &foo as *const _; unsafe { *ptr }
2018-09-26 10:59:20	--	Notice(eval): error[E0507]: cannot move out of dereference of raw pointer
2018-09-26 10:59:22	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=a2474e83a608357e3aa0be0558d2d2b2&version=stable&mode=debug
2018-09-26 10:59:25	aaja	hello, I have a library function that I know can return errors with ErrorKind::TimedOut, how do I match against the Error kind?
2018-09-26 10:59:31	Moongoodboy{K}	okay, yeah, that's what I thought
2018-09-26 11:00:11	Arnavion	aaja: Which ErrorKind? std::io::ErrorKind?
2018-09-26 11:00:18	Moongoodboy{K}	ibrokemypie: ptr::read() bitcopies a T out from behind a rawpointer. As that error indicates, you can't move from out of a rawpointer just by dereferencing.
2018-09-26 11:00:21	ibrokemypie	potentially-wrong?
2018-09-26 11:00:53	Moongoodboy{K}	ptr::read() unconditionally gives you ownership of the `T`. *This is unsound in most cases.*
2018-09-26 11:01:10	aaja	yeah std::io::ErrorKind
2018-09-26 11:01:11	<--	indigo747 (indigo747@moz-bgsfrb.dhcp.cruzio.com) has quit (Ping timeout: 121 seconds)
2018-09-26 11:01:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:01:32	Arnavion	aaja: std::io::Error::kind() gives you the ErrorKind. Then compare it with TimedOut using ==
2018-09-26 11:01:37	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 11:01:48	Moongoodboy{K}	it leaves behind a logically uninitialized T, which you have to be very careful not to use, drop, or otherwise observe
2018-09-26 11:01:53	ibrokemypie	so ptr::read() is like it calls .to_owned()?
2018-09-26 11:02:05	Moongoodboy{K}	Almost exactly the opposite.
2018-09-26 11:02:08	ibrokemypie	oh
2018-09-26 11:02:21	Arnavion	Moongoodboy{K}: The value left behind is untouched. It's not logically uninitialized
2018-09-26 11:02:26	kimundi	ibrokemypie: it duplicates the value even if that would be a totoally broken thing to do
2018-09-26 11:02:27	<--	holmgr (holmgr@moz-98s792.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-26 11:02:30	<--	laalaa (asdf@moz-20t4fs.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-26 11:02:33	Arnavion	Moongoodboy{K}: The danger is that you now have two copies of the same value
2018-09-26 11:02:33	Moongoodboy{K}	what kimundi said.
2018-09-26 11:02:52	<--	monti (monti@moz-p36.f0h.59.176.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:02:57	ibrokemypie	why is that danger?
2018-09-26 11:03:15	Moongoodboy{K}	ibrokemypie: it's basically every possible memory error right there
2018-09-26 11:03:46	Arnavion	If it was a String, you now have two String values that think they own the same data. When the second one drops it'll try to release data that was already released by the first
2018-09-26 11:03:55	Arnavion	etc
2018-09-26 11:03:57	kimundi	ibrokemypie: Say you have a String and duplicate it - then both String have a pointer to the same memory allocation on the inside. this means you can get use-after-free, double-free, race conditions, etc
2018-09-26 11:04:05	Moongoodboy{K}	^
2018-09-26 11:04:05	ibrokemypie	ah
2018-09-26 11:04:08	ibrokemypie	that makes sense
2018-09-26 11:04:30	kimundi	ibrokemypie: I recommend reading through some of Rusts unsafe code documentation if this is stuff that is not clear to you, before doing more with raw pointers
2018-09-26 11:04:40	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 11:05:12	yaymukund	OK, let me try again. if I wrap each chunk in a Cursor, then `seek(pos)` would seek to the position within the chunk. This is not what I want. If I `concat2` the stream, then the entire stream would have to complete before I could seek anything. I'd like something in the middle, whereby it maintains a lazy internal buffer. If I `seek(some_distant_not_yet_loaded_position)`, then it would read 
2018-09-26 11:05:18	yaymukund	only as much as necessary to get there. This is how I *imagine* it works under the hood if I wrap a stream in a BufReader and a Cursor, but it's possible my mental model is off.
2018-09-26 11:05:44	yaymukund	s/possible/likely/ :)
2018-09-26 11:05:56	-->	holmgr (holmgr@moz-acfsk9.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-26 11:06:09	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 11:06:11	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 11:07:04	Moongoodboy{K}	ibrokemypie: ptr::read() effectively /moves/ the T, *without telling anyone*, and leaves the original bytes in place.
2018-09-26 11:07:20	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-26 11:07:32	Moongoodboy{K}	it…yeah, I can't put it better than kimundi. It bitcopies the value unconditionally, even if that would be a totally unsound thing to do.
2018-09-26 11:08:15	kimundi	ibrokemypie: This might interest you: https://doc.rust-lang.org/nomicon/
2018-09-26 11:09:03	-->	AtumT (IRC@moz-7f8cuc.gvt.net.br) has joined #rust-beginners
2018-09-26 11:11:15	<--	huin (huin@moz-chh2cr.zen.co.uk) has quit (Ping timeout: 121 seconds)
2018-09-26 11:11:31	-->	mib_kzu85o (Mibbit@moz-0mm.bp3.200.115.IP) has joined #rust-beginners
2018-09-26 11:12:14	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 11:12:28	<--	mib_kzu85o (Mibbit@moz-0mm.bp3.200.115.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 11:12:46	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 11:12:50	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-26 11:12:57	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-26 11:14:57	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 11:16:46	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:17:29	Arnavion	yaymukund: Make a bytes::BytesMut. Have the Stream use extend_from_slice() to append each Chunk to the BufMut. For reading, deref the BufMut to get a &[u8], read what you want, then advance() the amount you read to pop it off from the front of the BufMut
2018-09-26 11:19:10	Arnavion	chain()ing multiple Chunks instead of copying to a single BufMut might work as well
2018-09-26 11:19:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:19:52	-->	Aimai (Aimai@moz-ogljru.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 11:20:19	-->	vmx (vmx@moz-qite1i.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 11:22:45	--	japaric|away is now known as japaric
2018-09-26 11:24:56	-->	martin2 (martin@moz-ab0esq.anteldata.net.uy) has joined #rust-beginners
2018-09-26 11:26:12	-->	nunatak (nunatak@moz-0o9u0v.netcologne.de) has joined #rust-beginners
2018-09-26 11:26:20	yaymukund	Arnavion: ooo, this makes sense
2018-09-26 11:26:30	yaymukund	thank you! i'll give it a shot
2018-09-26 11:32:48	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 11:32:53	-->	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has joined #rust-beginners
2018-09-26 11:34:45	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Ping timeout: 121 seconds)
2018-09-26 11:36:16	-->	pamaury (pamaury@moz-f3tvef.mpi-sws.org) has joined #rust-beginners
2018-09-26 11:36:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:38:59	-->	dgordienko (dgordienko@moz-m9h.9fv.180.94.IP) has joined #rust-beginners
2018-09-26 11:40:07	-->	xuanzi (Mibbit@moz-7r8.hd4.30.218.IP) has joined #rust-beginners
2018-09-26 11:40:32	<--	xuanzi (Mibbit@moz-7r8.hd4.30.218.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 11:41:40	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 11:42:34	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 11:43:50	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-09-26 11:45:39	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-26 11:46:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:48:56	<--	ibrokemypie (conor@moz-akj.afs.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:49:45	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:51:40	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 11:55:41	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 11:56:02	<--	holmgr (holmgr@moz-acfsk9.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-26 11:56:10	<--	martin2 (martin@moz-ab0esq.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-26 11:56:50	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-26 11:58:57	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-26 12:00:12	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-26 12:00:47	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 12:01:07	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-26 12:01:33	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-26 12:04:49	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:05:16	<--	nullbit (nullbit@moz-eqc.9o4.59.182.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-26 12:05:56	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 12:06:13	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-26 12:06:21	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 12:09:28	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:09:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 12:10:53	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:11:38	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-26 12:13:56	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:15:58	<--	dgordienko (dgordienko@moz-m9h.9fv.180.94.IP) has quit (Quit: Leaving)
2018-09-26 12:16:38	laalaa	https://paste.debian.net/1044454/
2018-09-26 12:16:55	laalaa	why isn't it compiling?
2018-09-26 12:17:04	laalaa	I don't get the error message
2018-09-26 12:17:29	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-26 12:17:32	Ferdirand	you want eprintln!() maybe, not format!() ?
2018-09-26 12:17:55	Lumpio-	Extra ; on line 80 laalaa
2018-09-26 12:18:06	Lumpio-	That causes the if to "return" () from one branch
2018-09-26 12:18:25	Ferdirand	ah sorry didn't read the bottom block
2018-09-26 12:18:30	Ferdirand	what Lumpio- said
2018-09-26 12:18:35	Lumpio-	I wonder if the compiler could be made to detect that
2018-09-26 12:18:46	Lumpio-	That the result of an if block is going to eventually be assigned to something
2018-09-26 12:18:55	Lumpio-	Because then it could be made into a lint ("don't put a ; if you intend to return a value")
2018-09-26 12:20:07	laalaa	ah thanks
2018-09-26 12:20:40	Moongoodboy{K}	we already suggest removing semicolons, don't we?
2018-09-26 12:20:53	Moongoodboy{K}	that's totally already a thing
2018-09-26 12:20:55	Aankhen``	I always do.
2018-09-26 12:21:47	Lumpio-	hmm
2018-09-26 12:21:55	Lumpio-	Maybe it doesn't detect it through the match?
2018-09-26 12:22:47	Lumpio-	https://play.rust-lang.org/?gist=5b5f980f23685f33e91dacbe1ffbbd85&version=stable&mode=debug&edition=2015 it's not perfect
2018-09-26 12:23:03	Lumpio-	https://play.rust-lang.org/?gist=e6776f523fb004a5e99aa584fc13cea7&version=stable&mode=debug&edition=2015 specifying the types makes it detect it
2018-09-26 12:23:41	<--	gaveen (gaveen@moz-art.jns.231.123.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 12:23:59	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-26 12:25:09	Lumpio-	https://play.rust-lang.org/?gist=5d60fb7daa292e01fcf7edc067872d30&version=stable&mode=debug&edition=2015 doesn't even seem to work with an obvious type ({integer} is not special)
2018-09-26 12:25:48	Lumpio-	Apparently the lint only appears if the type of the variable being assigned to is already defined?
2018-09-26 12:25:57	Lumpio-	And when type deduction is involved it breaks
2018-09-26 12:26:16	Lumpio-	Maybe the lint is based on the type being known and it notices "ah, this would return () instead of the known type T, let's put a lint"
2018-09-26 12:26:36	Lumpio-	Instead of "this if seems to be an expression, but it returns () which is a bit pointless, let's put a lint"
2018-09-26 12:27:25	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 12:28:01	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:28:28	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-26 12:30:31	Ferdirand	that could be more reliably detected if the type system could distinguish an effectful () from an accidental ; that discards a pure expression
2018-09-26 12:31:02	Ferdirand	let's make effectful statements return IO<()> instead ! 
2018-09-26 12:31:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:33:21	-->	dthul_ (dthul@moz-hbqasi.ethz.ch) has joined #rust-beginners
2018-09-26 12:33:55	<--	troyvoy88 (troyvoy88@moz-vuc.e8e.112.62.IP) has quit (Quit: Leaving)
2018-09-26 12:35:36	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:36:24	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-26 12:37:02	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 12:41:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:41:43	Xion	IO things that may fail but don't produce a meaningful return value already return io::Result<()>
2018-09-26 12:43:00	Lumpio-	Does Rust know what is a "pure" expression though
2018-09-26 12:43:20	Lumpio-	There's no concept of pure functions at least
2018-09-26 12:45:58	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 12:47:28	-->	mib_bkawkk (Mibbit@moz-2p6.kp3.87.88.IP) has joined #rust-beginners
2018-09-26 12:47:53	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:48:27	<--	mib_bkawkk (Mibbit@moz-2p6.kp3.87.88.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 12:49:00	Ferdirand	i know, it was a joke. My bad if it wasn't funny.
2018-09-26 12:49:15	dpc1	xD
2018-09-26 12:49:32	kimundi	Lumpio-: Pureness is hard to define with global side-effects being possible
2018-09-26 12:49:38	-->	refold (refold@moz-0ig.vcg.98.88.IP) has joined #rust-beginners
2018-09-26 12:49:41	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-26 12:49:54	kimundi	However, constexprs fit that bill incidentially
2018-09-26 12:50:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 12:50:11	dpc1	what side effects?
2018-09-26 12:51:12	kimundi	like access the global allocator for example
2018-09-26 12:51:23	kimundi	(re: pure functions)
2018-09-26 12:51:46	-->	marc (marc@moz-jml0k8.0van.78om.2450.2a02.IP) has joined #rust-beginners
2018-09-26 12:51:48	dpc1	uhmm so const fns can be considered pure?
2018-09-26 12:53:33	kimundi	as a (heh) side-effect of the requirements for being const, yeah
2018-09-26 12:53:42	-->	qb (Mibbit@moz-qr097o.intermediasud.com) has joined #rust-beginners
2018-09-26 12:53:48	Lumpio-	Is accessing the global allocator a side effect if the data doesn't escape the function
2018-09-26 12:54:06	Lumpio-	I.e. why shouldn't a const fn be allowed to use a temporary String
2018-09-26 12:54:06	kimundi	Lumpio-: You changed the state of the allocator
2018-09-26 12:54:43	Lumpio-	Maybe it can be excluded from what's considered state heh
2018-09-26 12:54:46	Ferdirand	but should the state of the allocator be observable from the main program ?
2018-09-26 12:55:04	Lumpio-	I mean, nothing is actually 100% purely pure on a physical computer
2018-09-26 12:55:15	Lumpio-	Even a constant function can overflow the stack
2018-09-26 12:55:24	kimundi	The allocator is just an example, you can modify any global variable from a normal function
2018-09-26 12:56:02	dpc1	how does haskell manage pure fns then?
2018-09-26 12:56:14	dpc1	referring to the 100% purely pure 
2018-09-26 12:56:30	qb	Hello :-) I'm looking for a sorted map which "sorts the map" at the insertion using the Ord trait. Does it exist in the std lib ? or is there a crate for that ? I didn't find one. This collection exists in C++ (called Map).
2018-09-26 12:56:30	kimundi	they abstract that stuff away in the runtime
2018-09-26 12:56:40	kimundi	which Rust does not do
2018-09-26 12:56:44	dpc1	uhmm true
2018-09-26 12:57:11	marc	total beginner here: https://play.rust-lang.org/?gist=bf2f6adb640e48a9a9db0527fb4c3fc4&version=stable&mode=debug&edition=2015 the match in line 6 will return () instead of my struct, but why? Line 10 would be working (no error handling though)
2018-09-26 12:57:15	kimundi	(also Haskell does also the equivalent of "unsafe", so they are also not technically purely pure)
2018-09-26 12:57:28	<--	ced_c (ced_c@moz-q9o.aks.15.51.IP) has quit (Connection closed)
2018-09-26 12:58:12	kimundi	marc: calling println!() gives you a return value of type (), which is a different type than the type of p
2018-09-26 12:59:06	kimundi	marc: This would not be a problem if you stopped execution in the Err case though - say by chaing println to panic!(), or returning inside the the match in case of Err
2018-09-26 12:59:23	-->	DaQue (Mutter@moz-l8bs7u.5gl9.o266.0001.2600.IP) has joined #rust-beginners
2018-09-26 12:59:57	marc	how to return inside the match in the error case?
2018-09-26 13:00:28	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 13:00:48	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Ping timeout: 121 seconds)
2018-09-26 13:01:00	marc	maybe a match is the wrong approach? i just want to get a struct in success case and just the error message in error case (?)
2018-09-26 13:01:30	kimundi	marc: For example, like this: https://play.rust-lang.org/?gist=7341adf616c46cec928f383e15622495&version=stable&mode=debug&edition=2015
2018-09-26 13:01:44	kimundi	marc: what do you want to do with the error message?
2018-09-26 13:01:48	-->	elichai2 (uid212594@moz-racuhj.highgate.irccloud.com) has joined #rust-beginners
2018-09-26 13:02:09	<--	DaQue (Mutter@moz-l8bs7u.5gl9.o266.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-26 13:02:18	dpc1	marc: you can do `something_that_returns_result.expect("some message");`
2018-09-26 13:02:55	kimundi	marc: You might want to look at https://doc.rust-lang.org/book/second-edition/ch09-00-error-handling.html#error-handling :)
2018-09-26 13:03:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 13:04:38	marc	kimundi: thank you for the playground link! that inner return statement is new to me! and yes, im having the rust book open next to me. Working my way through. Thanks a lot so far! :)
2018-09-26 13:04:42	<--	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-09-26 13:05:00	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 13:05:37	dpc1	:)
2018-09-26 13:06:31	-->	Mateon2 (Thunderbird@moz-699b2g.supernova.orange.pl) has joined #rust-beginners
2018-09-26 13:07:37	<--	Mateon1 (Thunderbird@moz-6audnv.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-26 13:07:38	--	Mateon2 is now known as Mateon1
2018-09-26 13:07:52	-->	xet7 (xet7@moz-f2l2ri.rev.dnainternet.fi) has joined #rust-beginners
2018-09-26 13:07:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 13:09:46	<--	Jackneill (Jackneill@moz-qc8.qoh.0.81.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 13:10:14	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-26 13:11:10	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-26 13:11:48	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-09-26 13:12:16	-->	Jackneill (Jackneill@moz-qc8.qoh.0.81.IP) has joined #rust-beginners
2018-09-26 13:12:43	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Quit: WeeChat 2.2)
2018-09-26 13:12:45	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-26 13:12:50	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-26 13:13:36	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 13:14:16	-->	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has joined #rust-beginners
2018-09-26 13:14:26	-->	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has joined #rust-beginners
2018-09-26 13:14:38	-->	Dariost (Dariost@moz-a1g.nim.48.151.IP) has joined #rust-beginners
2018-09-26 13:17:21	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-26 13:17:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 13:18:22	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 13:19:11	-->	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has joined #rust-beginners
2018-09-26 13:19:33	-->	jperras (jperras@moz-9k27j4.ln67.g62t.1970.2001.IP) has joined #rust-beginners
2018-09-26 13:19:48	<--	vmx (vmx@moz-qite1i.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 13:19:58	-->	mib_79xs08 (Mibbit@moz-sdq.03l.25.212.IP) has joined #rust-beginners
2018-09-26 13:19:58	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-26 13:20:07	-->	vmx (vmx@moz-p7ltuf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 13:20:12	<--	mib_79xs08 (Mibbit@moz-sdq.03l.25.212.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 13:20:20	-->	supermedia_art (supermedia_@moz-pdj73t.ipv4.nycmesh.net) has joined #rust-beginners
2018-09-26 13:22:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 13:23:53	<--	frans_student (Mibbit@moz-kgm.uma.183.91.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 13:26:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 13:29:11	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-26 13:30:16	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-26 13:31:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 13:33:38	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 13:35:10	<--	cjd (user@moz-h743q3.4o9k.q5k2.0e0a.2a01.IP) has left #rust-beginners
2018-09-26 13:35:40	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 13:37:36	<--	ljhms (ljhms@moz-95m2u0.cust.bahnhof.se) has quit (Ping timeout: 121 seconds)
2018-09-26 13:37:46	-->	ljhms (ljhms@moz-had1t8.priv.bahnhof.se) has joined #rust-beginners
2018-09-26 13:38:30	-->	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has joined #rust-beginners
2018-09-26 13:39:31	-->	danecando (danecando@moz-lbv.uqb.236.12.IP) has joined #rust-beginners
2018-09-26 13:40:41	<--	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 13:41:52	-->	asyncsec (asyncsec@moz-mif4vu.dyn6.twc.com) has joined #rust-beginners
2018-09-26 13:41:55	-->	sp1ff_ (sp1ff@moz-a042gu.3i8v.at4v.0119.2620.IP) has joined #rust-beginners
2018-09-26 13:42:39	-->	donryudragoni (ryu@moz-nkf.4kp.3.187.IP) has joined #rust-beginners
2018-09-26 13:45:18	-->	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has joined #rust-beginners
2018-09-26 13:46:38	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 13:47:09	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-26 13:49:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 13:50:16	<--	ddev (Mibbit@moz-lhhq07.brain.net.pk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 13:50:27	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-26 13:53:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 13:54:29	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-26 13:54:32	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-26 13:54:35	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 13:56:43	<--	marc (marc@moz-jml0k8.0van.78om.2450.2a02.IP) has quit (Quit: Konversation terminated!)
2018-09-26 13:56:43	<--	supermedia_art (supermedia_@moz-pdj73t.ipv4.nycmesh.net) has quit (Ping timeout: 121 seconds)
2018-09-26 13:59:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 13:59:07	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:02:55	-->	Zoom (Zoom@moz-p7k.ju9.151.91.IP) has joined #rust-beginners
2018-09-26 14:03:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:03:29	<--	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:03:56	-->	justsomequestions (gumble@moz-je7il2.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-26 14:07:41	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:08:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 14:09:23	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-26 14:12:21	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:13:24	-->	cp (cp@moz-4f5h05.asahi-net.or.jp) has joined #rust-beginners
2018-09-26 14:13:57	-->	mmacherey (Thunderbird@moz-opo8v1.dyn.telefonica.de) has joined #rust-beginners
2018-09-26 14:17:30	WindowsBunny	ahnk: Use winapi directly for all your DirectX stuff
2018-09-26 14:18:32	Moongoodboy{K}	qb: BTreeMap is sorted
2018-09-26 14:19:22	<--	mmacherey (Thunderbird@moz-opo8v1.dyn.telefonica.de) has quit (Connection closed)
2018-09-26 14:19:28	-->	mmacherey (Thunderbird@moz-opo8v1.dyn.telefonica.de) has joined #rust-beginners
2018-09-26 14:19:34	qb	Is it sorted at the insertion using the Ord trait ?
2018-09-26 14:19:50	WindowsBunny	ahnk: I recommend joining #winapi if you want to talk more about using winapi
2018-09-26 14:20:03	Moongoodboy{K}	You can't have a sorted ::std::collections::HashMap, though, because it stores pairs in an arbitrary order (a.k.a. sorted by hash, using a random…thing, with the hasher)
2018-09-26 14:20:20	-->	mib_rg9fe7 (Mibbit@moz-tae.1r8.131.27.IP) has joined #rust-beginners
2018-09-26 14:20:35	Moongoodboy{K}	errr…I'm not sure, but iteration is in sorted order!
2018-09-26 14:21:19	qb	Ok thank you.
2018-09-26 14:21:31	-->	alx741 (alx741@moz-paq.0fs.196.181.IP) has joined #rust-beginners
2018-09-26 14:21:32	<--	sp1ff_ (sp1ff@moz-a042gu.3i8v.at4v.0119.2620.IP) has quit (Connection closed)
2018-09-26 14:21:41	<--	mib_rg9fe7 (Mibbit@moz-tae.1r8.131.27.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 14:22:13	-->	raktajino (raktajino@moz-f92.voh.170.107.IP) has joined #rust-beginners
2018-09-26 14:22:28	<--	mmacherey (Thunderbird@moz-opo8v1.dyn.telefonica.de) has quit (Client exited)
2018-09-26 14:22:46	-->	mmacherey (Thunderbird@moz-opo8v1.dyn.telefonica.de) has joined #rust-beginners
2018-09-26 14:23:06	--	U007D_afk is now known as U007D
2018-09-26 14:25:34	-->	emerentius_ (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 14:26:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 14:27:13	-->	sp1ff_ (sp1ff@moz-gchqia.3i8v.at4v.0119.2620.IP) has joined #rust-beginners
2018-09-26 14:28:05	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-26 14:28:20	-->	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has joined #rust-beginners
2018-09-26 14:29:14	<--	qb (Mibbit@moz-qr097o.intermediasud.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 14:30:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:32:11	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-26 14:32:21	<--	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:32:23	-->	martin1 (martin@moz-c7v.9s6.64.190.IP) has joined #rust-beginners
2018-09-26 14:33:04	<--	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has quit (Quit: I've fallen into /dev/null and can't get out!)
2018-09-26 14:34:17	<--	nunatak (nunatak@moz-0o9u0v.netcologne.de) has quit (Quit: Leaving)
2018-09-26 14:34:26	<--	mmacherey (Thunderbird@moz-opo8v1.dyn.telefonica.de) has quit (Client exited)
2018-09-26 14:35:26	-->	LupusNoctu (kd0bpv@moz-hqpv83.mn.charter.com) has joined #rust-beginners
2018-09-26 14:35:29	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 14:37:36	-->	arunkumar413 (arunkumar41@moz-bpo.uh3.48.157.IP) has joined #rust-beginners
2018-09-26 14:39:08	<--	sp1ff_ (sp1ff@moz-gchqia.3i8v.at4v.0119.2620.IP) has quit (Connection closed)
2018-09-26 14:39:09	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-26 14:39:30	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:40:09	--	U007D is now known as U007D_afk
2018-09-26 14:40:15	-->	mib_hl9ee3 (Mibbit@moz-6fe.aor.149.169.IP) has joined #rust-beginners
2018-09-26 14:44:15	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 14:44:42	-->	dalley (dalley@moz-uo550c.dyn6.twc.com) has joined #rust-beginners
2018-09-26 14:44:54	--	U007D_afk is now known as U007D
2018-09-26 14:46:54	<--	mkollaro (mkollaro@moz-23tevi.imu.intel.com) has quit (Quit: bye)
2018-09-26 14:48:43	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:48:44	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 14:49:21	<--	matt-h (matt-h@moz-t1ckfj.biz.rr.com) has quit (The TLS connection was non-properly terminated.)
2018-09-26 14:53:15	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:55:40	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 14:56:22	-->	mimo (Silver@moz-fn9vuf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 14:57:57	--	U007D is now known as U007D_afk
2018-09-26 14:59:05	<--	mib_hl9ee3 (Mibbit@moz-6fe.aor.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 15:00:15	--	U007D_afk is now known as U007D
2018-09-26 15:00:22	-->	npmccallum (npmccallum@moz-sofk7b.ikg3.ms77.030a.2602.IP) has joined #rust-beginners
2018-09-26 15:01:14	-->	matt-h (matt-h@moz-t1ckfj.biz.rr.com) has joined #rust-beginners
2018-09-26 15:02:01	<--	aem34i (x@moz-0ko.0cn.165.188.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 15:02:08	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 15:02:28	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-26 15:03:25	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 15:03:29	-->	mib_lfgaap (Mibbit@moz-33j.0id.103.198.IP) has joined #rust-beginners
2018-09-26 15:04:08	<--	mib_lfgaap (Mibbit@moz-33j.0id.103.198.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 15:05:34	-->	GreenJello (GreenJello@moz-645qdp.ph.cox.net) has joined #rust-beginners
2018-09-26 15:06:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:07:18	-->	_mesph (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-26 15:08:25	-->	GreenJel_ (GreenJello@moz-vja.vnp.83.23.IP) has joined #rust-beginners
2018-09-26 15:08:32	<--	mimo (Silver@moz-fn9vuf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 15:09:35	<--	GreenJello (GreenJello@moz-645qdp.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-26 15:09:42	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:09:57	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-26 15:11:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 15:15:27	<--	artfwo (artfwo@moz-fb0.8oo.75.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:15:46	<--	dthul_ (dthul@moz-hbqasi.ethz.ch) has quit (Connection closed)
2018-09-26 15:15:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:15:59	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-09-26 15:16:12	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-26 15:16:22	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Quit: Leaving)
2018-09-26 15:16:29	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-26 15:16:46	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-26 15:17:29	<--	_mesph (miqid@moz-7qp.555.122.1.IP) has quit (Client exited)
2018-09-26 15:19:08	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-26 15:19:24	<--	skeleten (user@moz-iic.6lt.83.130.IP) has quit (Connection closed)
2018-09-26 15:19:43	-->	mib_lp0rt2 (Mibbit@moz-qvu.a9h.87.80.IP) has joined #rust-beginners
2018-09-26 15:20:42	-->	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has joined #rust-beginners
2018-09-26 15:21:00	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 15:24:13	-->	hamsteri_ (hamsteri@moz-hs7.fvt.60.194.IP) has joined #rust-beginners
2018-09-26 15:24:16	mib_lp0rt2	hi a question about stack allocation. Does the end result (machine code!?) of compiled rust code “reorder” the stack so FIFO retrieval is optimal?  For example; take my v1 and v2 examples respectively:  fn main() {    let bottom : usize =  93576255;    let top : usize = 93476256;    println!("Bottom, {}!", bottom);    println!("Top, {}!", top); }  fn main() {
2018-09-26 15:25:02	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:26:05	mib_lp0rt2	v1: fn main() {    let bottom : usize =  93576255;    let top : usize = 93476256;    println!("Bottom, {}!", bottom);    println!("Top, {}!", top); }
2018-09-26 15:26:10	mib_lp0rt2	v2: fn main() {    let bottom : usize =  93576255;    let top : usize = 93476256;    println!("Top, {}!", top);    println!("Bottom, {}!", bottom); }
2018-09-26 15:26:18	mib_lp0rt2	 According to the source code v1 is not optimal; we access the bottom stack value before the top. Will this "problem" be fixed when the code is actually "executed" by my CPU  I thought it would be fixed at the LLVM-IR level but inspecting this shows that the stack is allocated according to my declarations in the source code.
2018-09-26 15:26:25	<--	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:27:01	kimundi	mib_lp0rt2: For most platforms, the stack is not actually implemented as a pure stack in hardware and software
2018-09-26 15:27:25	kimundi	mib_lp0rt2: Rather, its just a memory allocation with a maximum size and a pointer indicating the current top
2018-09-26 15:28:15	kimundi	mib_lp0rt2: If a variable gets created or destroyed, that has usually no effect on the native code running - its just a bunch of memroy offsets for the stackframe of the current function
2018-09-26 15:29:11	kimundi	Additionally, most platforms are register machines, which means data of local variables will be put into one of many different registers by the compiler
2018-09-26 15:29:33	-->	Qwfwq (Qwfwq@moz-90dba7.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 15:29:46	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 15:30:03	kimundi	how the logical stack is mapped to the registers and the real physical memory section for the stack is decided by the compiler backend and compiler optimizations
2018-09-26 15:30:37	kimundi	Which indeed does things like ensuring that often accessed data is put in registers, and rarely accessed data is stored in slower memory
2018-09-26 15:30:49	kimundi	and also handles transfering data between both locations as needed
2018-09-26 15:31:45	-->	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has joined #rust-beginners
2018-09-26 15:32:11	Moongoodboy{K}	mib_lp0rt2: addressing the last part of your question, the toolchain will 100% reorder memory locations (in space) and accesses (in time) if the way they were written in source is suboptimal
2018-09-26 15:32:12	-->	artfwo (artfwo@moz-ei7.hqq.232.91.IP) has joined #rust-beginners
2018-09-26 15:32:17	kimundi	Re your example: LLVM IR does not give you a complete picture of what the actual native assembler code will do
2018-09-26 15:32:26	Qwfwq	I'm coming back to writing Rust libraries with slightly more coding experience now. I'm just curious, as I keep writing structs for both the deserialization(let's say DataStruct) and serialization(NewDataStruct), and often times these structs are the exact same other than NewDataStruct does not have a created_at and modified_at field. 
2018-09-26 15:33:04	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-26 15:33:48	<--	npmccallum (npmccallum@moz-sofk7b.ikg3.ms77.030a.2602.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:34:05	mib_lp0rt2	kimundi: Moongoodboy{K}: thank you!
2018-09-26 15:34:05	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:34:51	Moongoodboy{K}	mmhmm c:
2018-09-26 15:34:54	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 15:35:34	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 15:35:48	Qwfwq	I was wondering, given that having two structs of nearly the same type for every object isn't very DRY, if there's an article in the Rust Book somewhere that I should look at about maybe making a more generic struct that can make me repeat these fields less often. 
2018-09-26 15:36:44	ilmari	Qwfwq: you could write a macro that declares both structs, one with the extra _at fields
2018-09-26 15:37:50	jones	Qwfwq: instead of having Foo { val: u32 } and Bar { val: u32, other_val: String }; you could have Foo { val: u32 } and Bar { foo: Foo, other_val: String}
2018-09-26 15:38:23	Qwfwq	ilmari: I really should commit to learning macros. They seem powerful for something like this.
2018-09-26 15:38:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 15:39:23	Qwfwq	jones: Aha! That's also very convenient for a library with the serde-flatten feature. I may go that route.
2018-09-26 15:39:48	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-09-26 15:39:50	Qwfwq	Thanks both of you. I'm going to check out what both look like in code. Gotta love the IRC, even when it's beginner stuff. 
2018-09-26 15:40:16	dpc1	:)
2018-09-26 15:40:19	Moongoodboy{K}	^.^
2018-09-26 15:42:51	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 15:43:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:44:02	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 15:44:14	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-26 15:44:47	<--	emerentius_ (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 15:47:23	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:49:54	--	U007D is now known as U007D_afk
2018-09-26 15:51:46	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-09-26 15:51:51	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 15:52:17	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Quit: WeeChat 2.2)
2018-09-26 15:53:09	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-26 15:53:24	-->	mib_vihwop (Mibbit@moz-u44.bbg.138.207.IP) has joined #rust-beginners
2018-09-26 15:54:31	-->	emerentius_ (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 15:54:50	-->	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-26 15:55:07	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 15:56:29	<--	CognitiveRadiation (cognitive@moz-0scgij.heun.bj6h.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 15:56:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 15:57:42	-->	CognitiveRadiation (cognitive@moz-0scgij.heun.bj6h.0644.2601.IP) has joined #rust-beginners
2018-09-26 15:57:59	--	U007D_afk is now known as U007D
2018-09-26 16:00:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:02:06	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 16:02:09	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-26 16:04:50	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-26 16:05:02	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:06:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 16:07:59	--	U007D is now known as U007D_afk
2018-09-26 16:09:51	<--	Aimai (Aimai@moz-ogljru.dip0.t-ipconnect.de) has quit (Quit: leaving)
2018-09-26 16:10:22	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:11:53	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-26 16:12:32	<--	somewone (somewone@moz-rg0.h2s.113.141.IP) has quit (Connection closed)
2018-09-26 16:12:57	<--	paulvt (paul.van.ti@moz-7j9h6s.fb56.nn7d.a446.2a02.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 16:13:11	-->	somewone (somewone@moz-rg0.h2s.113.141.IP) has joined #rust-beginners
2018-09-26 16:13:39	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Ping timeout: 121 seconds)
2018-09-26 16:13:41	supermedia_art	whats the deal with str and slice, should you not be able to .reverse() a mut str?
2018-09-26 16:14:22	<--	Zoom (Zoom@moz-p7k.ju9.151.91.IP) has quit (Quit: Leaving)
2018-09-26 16:15:16	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 16:15:33	kimundi	supermedia_art: str is utf-8 encoded unicode codepoints. Its _possible_ to reverse those correctly, but also not very useful, so its not a provided operation
2018-09-26 16:15:35	-->	siddhartharao17 (siddharthar@moz-673qi2.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-26 16:15:45	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-26 16:15:56	Moongoodboy{K}	supermedia_art: it's technically possible to reverse the codepoints of an arbitrary str in-place, but nontrivial
2018-09-26 16:16:03	Moongoodboy{K}	also you might bork the meaning
2018-09-26 16:16:07	<--	mib_vihwop (Mibbit@moz-u44.bbg.138.207.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 16:16:10	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-26 16:16:15	kimundi	If you are dealing with ASCII-only text, it would be best to temporarily convert to [u8] and back
2018-09-26 16:16:44	Moongoodboy{K}	[T], though, sure
2018-09-26 16:17:22	Moongoodboy{K}	and indeed there is a [T]::reverse()
2018-09-26 16:17:45	supermedia_art	lol whats [T]? 
2018-09-26 16:18:57	supermedia_art	array of type T?
2018-09-26 16:19:03	Moongoodboy{K}	the general slice type
2018-09-26 16:19:07	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-26 16:19:08	Moongoodboy{K}	https://doc.rust-lang.org/std/primitive.slice.html
2018-09-26 16:19:08	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-26 16:19:19	Moongoodboy{K}	contrast [T; N] (array) and Vec<T>
2018-09-26 16:19:35	-->	siddhart_ (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-26 16:19:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:19:37	supermedia_art	ok cool, been trying to figure out how to convert the str to that..
2018-09-26 16:19:49	<--	siddhartharao17 (siddharthar@moz-673qi2.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:20:07	Moongoodboy{K}	there's a str::as_bytes()
2018-09-26 16:21:08	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-26 16:21:46	-->	rumpler (Mibbit@moz-jju.rcs.72.223.IP) has joined #rust-beginners
2018-09-26 16:22:30	-->	alatiera (alatiera@moz-qg3rqu.access.hol.gr) has joined #rust-beginners
2018-09-26 16:22:58	<--	rumpler (Mibbit@moz-jju.rcs.72.223.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 16:25:12	<--	emerentius_ (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 16:26:30	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:27:00	-->	GenghisJohn (GenghisJohn@moz-crk71v.user.start.ca) has joined #rust-beginners
2018-09-26 16:28:13	<--	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:29:20	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-26 16:29:45	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-26 16:33:05	-->	enterprisey (enterprisey@moz-s8b729.cit.cornell.edu) has joined #rust-beginners
2018-09-26 16:33:09	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 16:33:13	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-26 16:35:09	--	U007D_afk is now known as U007D
2018-09-26 16:35:11	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:35:41	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-26 16:36:27	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-26 16:36:57	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 16:37:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:38:08	-->	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has joined #rust-beginners
2018-09-26 16:41:29	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:42:15	<--	somewone (somewone@moz-rg0.h2s.113.141.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 16:42:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 16:43:30	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-26 16:43:54	laalaa	https://paste.debian.net/1044503/
2018-09-26 16:44:12	<--	alx741 (alx741@moz-paq.0fs.196.181.IP) has quit (Client exited)
2018-09-26 16:44:24	laalaa	any tips how to solve the error?
2018-09-26 16:45:17	--	U007D is now known as U007D_afk
2018-09-26 16:45:23	laalaa	id is an integer on the database side
2018-09-26 16:46:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 16:48:47	<--	mib_lp0rt2 (Mibbit@moz-qvu.a9h.87.80.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 16:49:21	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-26 16:51:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 16:52:42	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-09-26 16:55:12	-->	pixlark_ (pixlark@moz-k91.t4e.125.149.IP) has joined #rust-beginners
2018-09-26 16:56:02	<--	enterprisey (enterprisey@moz-s8b729.cit.cornell.edu) has quit (Connection closed)
2018-09-26 16:56:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:00:11	-->	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has joined #rust-beginners
2018-09-26 17:01:31	<--	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 17:02:02	-->	jeramyRR (jeramyRR@moz-lhjog3.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-26 17:02:37	<--	jeramyRR (jeramyRR@moz-lhjog3.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 17:04:43	-->	enterprisey (enterprisey@moz-s8b729.cit.cornell.edu) has joined #rust-beginners
2018-09-26 17:04:45	@mbrubeck	laalaa: What type is the `AdministratorCookie::id` field in Rust?
2018-09-26 17:04:46	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:05:15	laalaa	pub id: u32
2018-09-26 17:05:39	-->	keret (Mibbit@moz-jq1mcb.versanet.de) has joined #rust-beginners
2018-09-26 17:06:03	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 17:06:10	keret	hello! is there a crate that gives me info/specs about my application and os? maybe platform, memory usage, ...
2018-09-26 17:06:24	@mbrubeck	supermedia_art: If you want to reverse a string while correctly handling multi-byte or multi-codepoint clusters, see https://crates.io/crates/unicode-reverse
2018-09-26 17:06:24	keret	memory usage by application would be important
2018-09-26 17:06:31	@mbrubeck	That crate will let you do it in place, and the docs also show how to do it not-in-place using just the `unicode-segementation` crate
2018-09-26 17:06:38	<--	siddhart_ (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:07:17	@mbrubeck	keret: https://crates.io/crates/sysinfo provides some system-wide information
2018-09-26 17:07:22	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:07:39	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-26 17:08:17	-->	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-26 17:09:15	-->	dpc1 (dpc@moz-b0e.km5.186.1.IP) has joined #rust-beginners
2018-09-26 17:09:33	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 17:09:53	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-26 17:09:55	supermedia_art	mbrubeck: thanks!!
2018-09-26 17:10:40	@mbrubeck	supermedia_art: Out of curiousity, why do you want to reverse a string?
2018-09-26 17:11:01	@mbrubeck	(Since I wrote this code, I'm always interested what people might use it for.)
2018-09-26 17:12:27	supermedia_art	mbrubek: working on the rust track in exercism :)
2018-09-26 17:13:33	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 17:13:51	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:13:54	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-26 17:16:22	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-26 17:17:53	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-26 17:18:42	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-26 17:19:19	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 17:22:30	<--	refold (refold@moz-0ig.vcg.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:23:12	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-26 17:23:20	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:24:49	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-26 17:26:58	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-26 17:28:05	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 17:28:52	-->	clarkenciel (clarkenciel@moz-d75.1gc.154.47.IP) has joined #rust-beginners
2018-09-26 17:30:17	-->	QwertyDragon_ (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-26 17:31:05	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-26 17:31:05	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 17:31:38	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-26 17:32:27	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:32:39	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 17:33:39	-->	bluss (bluss@moz-jgdsfd.cust.tele2.se) has joined #rust-beginners
2018-09-26 17:34:30	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-26 17:34:46	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-26 17:35:37	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:35:38	-->	mib_5t46aq (Mibbit@moz-lva.oh8.230.223.IP) has joined #rust-beginners
2018-09-26 17:35:44	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-26 17:36:38	<--	mib_5t46aq (Mibbit@moz-lva.oh8.230.223.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 17:36:46	-->	mr_fribble (Mibbit@moz-lva.oh8.230.223.IP) has joined #rust-beginners
2018-09-26 17:37:31	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 17:37:51	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:37:54	<--	clarkenciel (clarkenciel@moz-d75.1gc.154.47.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:38:00	-->	mib_67222w (Mibbit@moz-lva.oh8.230.223.IP) has joined #rust-beginners
2018-09-26 17:38:47	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 17:39:24	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-26 17:40:01	<--	justsomequestions (gumble@moz-je7il2.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-26 17:40:04	-->	jihi (jih@moz-lojmf6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 17:40:44	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-26 17:41:32	WindowsBunny	Why do things like exercism insist on telling people to do things that are useless in real life?
2018-09-26 17:41:35	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:42:32	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Quit: Leaving)
2018-09-26 17:42:32	<--	mr_fribble (Mibbit@moz-lva.oh8.230.223.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 17:42:49	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:43:41	<--	QwertyDragon (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Quit: Leaving)
2018-09-26 17:43:42	<--	dalley (dalley@moz-uo550c.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-26 17:43:47	-->	dalley (dalley@moz-uo550c.dyn6.twc.com) has joined #rust-beginners
2018-09-26 17:43:54	Ferdirand	like what ?
2018-09-26 17:44:05	WindowsBunny	like reversing a string
2018-09-26 17:45:23	-->	emerentius_ (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 17:46:37	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 17:46:46	-->	aem34i (x@moz-0ko.0cn.165.188.IP) has joined #rust-beginners
2018-09-26 17:46:47	<--	mib_67222w (Mibbit@moz-lva.oh8.230.223.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 17:49:05	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:49:31	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-09-26 17:49:42	GreenJel_	WindowsBunny, there are courses that basically pull from these tasks http://rosettacode.org/wiki/Category:Rust which is good for people that are newer to programming, and then there are courses that aim to develop a single app, which are usually aimed at more experienced devs
2018-09-26 17:50:45	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:52:35	<--	jperras (jperras@moz-9k27j4.ln67.g62t.1970.2001.IP) has quit (Quit: WeeChat 2.2)
2018-09-26 17:52:44	<--	liquidnight (marcus@moz-4jang5.5pvr.rgii.0c23.2a01.IP) has quit (Connection closed)
2018-09-26 17:52:50	@mbrubeck	For purposes of a homework exercise, the simple-but-not-really-correct `string.chars().rev().collect()` is probably the best answer
2018-09-26 17:53:02	-->	mdlayher-M (mdlayherma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-26 17:53:06	@mbrubeck	and is what you'd get from the naive approach in, say, Haskell
2018-09-26 17:53:19	@mbrubeck	and it's better than the naive approach in UTF-16 languages like JS or Java
2018-09-26 17:54:32	WindowsBunny	and it's far better than the naive approach in C :P
2018-09-26 17:55:23	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 17:56:09	@mbrubeck	Swift is the only popular language I know where the naive solution is also "correct" for some reasonable value of "correct"
2018-09-26 17:56:30	<--	pixlark_ (pixlark@moz-k91.t4e.125.149.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 17:57:27	-->	ubuntourist (kjcole@moz-45sb18.cgn.spcsdns.net) has joined #rust-beginners
2018-09-26 17:57:27	dgriffen	does reversing a string even make sense in some languages?
2018-09-26 17:57:50	-->	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has joined #rust-beginners
2018-09-26 17:58:11	ilmari	mbrubeck: I'm pretty sure perl6 gets it right too (the basic unit of its strings is graphemes)
2018-09-26 17:58:18	@mbrubeck	ilmari: cool!
2018-09-26 17:59:32	@mbrubeck	Lots of languages have the concept of `is_palindrome(s: &str) -> bool { s == reverse(s) }` for some definition of `reverse`
2018-09-26 17:59:35	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 18:00:00	@mbrubeck	but the definition of `reverse` for a given language doesn't always correspond directly to anything defined by the Unicode standard.
2018-09-26 18:01:14	mdlayher-M	hey gang, i've only been doing rust for a couple of days but would appreciate some feedback on: https://github.com/mdlayher/flac-rs/blob/master/src/lib.rs!
2018-09-26 18:01:54	mdlayher-M	in particular, i'm skeptical of my use of the Block enum, the way i'm parsing the slices, and i haven't put in the work yet to figure out how to convert errors properly
2018-09-26 18:02:20	-->	That_Guy_Anon (elys@moz-6lb.5eq.79.109.IP) has joined #rust-beginners
2018-09-26 18:02:41	mdlayher-M	coming from go, i've gotta say i'm also super happy that rustfmt and clippy exist.  clippy gave me some good tips
2018-09-26 18:02:52	<--	pamaury (pamaury@moz-f3tvef.mpi-sws.org) has quit (Quit: this->disconnect())
2018-09-26 18:03:25	-->	indigo747 (indigo747@moz-bgsfrb.dhcp.cruzio.com) has joined #rust-beginners
2018-09-26 18:03:38	That_Guy_Anon	i am trying to configure gitlab-ci in a decent way but i have no idea about it, is this configuration good: https://pastebin.com/gcQQLFBe
2018-09-26 18:03:55	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-26 18:04:42	ilmari	mbrubeck: perl6 basically follows the unicode grapheme cluster boundary spec for what it considers "characters"
2018-09-26 18:04:45	ilmari	https://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries
2018-09-26 18:05:09	-->	pamaury (pamaury@moz-f3tvef.mpi-sws.org) has joined #rust-beginners
2018-09-26 18:05:14	<--	vmx (vmx@moz-p7ltuf.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-26 18:05:21	@mbrubeck	mdlayher-M: Looks really good overall!  Surprising you've only been doing Rust a few days.
2018-09-26 18:05:42	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 18:05:43	@mbrubeck	mdlayher-M: You can simplify `Stream` a bit by making it own its reader: https://github.com/mdlayher/flac-rs/commit/c9c09d910828401f1a8ca879abb6ac3be4d6d918
2018-09-26 18:05:47	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 18:06:22	mdlayher-M	thanks! glad i'm mostly on the right track. i've gotta say, lifetime parameters are totally the hardest thing for me right now.
2018-09-26 18:06:27	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-26 18:06:33	@mbrubeck	mdlayher-M: And since there's a generic `impl<T: Read> Read for &mut T` (and same for `Seek`), callers can still use it with a reference if they want to.
2018-09-26 18:06:47	mdlayher-M	i'm working my way through Programming Rust at the moment and planned to get a copy of The Book whenever 2018 edition comes out on paper if possible
2018-09-26 18:07:11	<--	donryudragoni (ryu@moz-nkf.4kp.3.187.IP) has quit (Quit: WeeChat 2.2)
2018-09-26 18:07:30	<--	arunkumar413 (arunkumar41@moz-bpo.uh3.48.157.IP) has quit (Quit: Leaving)
2018-09-26 18:07:33	keret	mbrubeck: thanks a lot, sysinfo offers everything i need!
2018-09-26 18:08:19	@mbrubeck	woot
2018-09-26 18:09:08	<--	Simon (Simon@moz-ggmvg7.dynamic.mnet-online.de) has quit (Connection closed)
2018-09-26 18:09:20	-->	donryudragoni (ryu@moz-nkf.4kp.3.187.IP) has joined #rust-beginners
2018-09-26 18:09:59	mdlayher-M	i was also pretty surprised that my knock-off metaflac program is nearly as quick as the C implementation. that's awesome.
2018-09-26 18:10:18	mdlayher-M	since there's already a good looking FLAC crate out there, i figured i'd look at doing something else as my first "real" crate
2018-09-26 18:10:28	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-26 18:12:01	mdlayher-M	i assume you get the hang of more complicated patterns after you've used them a few times?  was reading about them in my book and i was astounded at the number of possibilities
2018-09-26 18:12:21	@mbrubeck	yeah... there's a lot to learn
2018-09-26 18:12:42	That_Guy_Anon	also, is it ok to put the unit tests into the tests directory aswell?
2018-09-26 18:13:15	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 18:14:10	@mbrubeck	That_Guy_Anon: Tests in the `tests` directory are compiled as separate crates, so they can only test your library's public API
2018-09-26 18:14:23	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-26 18:14:29	@mbrubeck	That_Guy_Anon: If you want to test internals, you'll need to put the tests where they have access to private APIs
2018-09-26 18:14:49	@mbrubeck	Hence the "unit test" versus "integration test" distinction.
2018-09-26 18:14:53	That_Guy_Anon	hmh, so i can't cleanly sepereate my tests from the rest of my code.
2018-09-26 18:15:11	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 18:15:15	@mbrubeck	You can always put them into submodules of the modules they are testing (and put those submodules in their own files)
2018-09-26 18:16:46	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-26 18:16:55	<--	enterprisey (enterprisey@moz-s8b729.cit.cornell.edu) has quit (Connection closed)
2018-09-26 18:16:57	-->	mib_rw3uni (Mibbit@moz-ca3.vts.124.200.IP) has joined #rust-beginners
2018-09-26 18:17:26	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 18:17:56	mdlayher-M	a repo name question: i've built a lot of Go repos and have typically gone for "foo" instead of "go-foo" because the directory name is significant in Go.  i've seen "foo-rs" a few times for rust now but was curious what the recommended naming scheme is
2018-09-26 18:18:17	mdlayher-M	and does it matter if your crate and repo names match?  for example if i wanted to put "foo-rs" on crates.io as "foo"
2018-09-26 18:18:51	keret	you upload your crate from your computer, not from your git in the end
2018-09-26 18:19:27	-->	ChaiTRex (ChaiTRex@moz-ki2q9l.dynamic.globalcapacity.com) has joined #rust-beginners
2018-09-26 18:19:33	keret	-rs is not recommended on crates.io because every crate there is implied to be rust to begin with
2018-09-26 18:20:27	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 18:20:52	mdlayher-M	sure. so i was thinking about porting a go project i did to rust, so i'd probably do repo name "smbios-rs" but crate name "smbios".  no issues with that?
2018-09-26 18:21:38	keret	no, because your crate's name is based on what you specify inside your cargo.toml
2018-09-26 18:21:41	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-26 18:21:50	@mbrubeck	mdlayher-M: Yeah, that's pretty common
2018-09-26 18:22:02	mdlayher-M	excellent! that'll work just fine then
2018-09-26 18:23:01	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 18:24:45	-->	Simon (Simon@moz-ggmvg7.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-26 18:25:59	-->	justsomequestions (gumble@moz-sthfbo.pptp.stw-bonn.de) has joined #rust-beginners
2018-09-26 18:26:06	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 18:26:35	<--	justsomequestions (gumble@moz-sthfbo.pptp.stw-bonn.de) has quit (Connection closed)
2018-09-26 18:26:59	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-26 18:27:01	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Connection closed)
2018-09-26 18:27:02	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 18:27:38	That_Guy_Anon	if i want to create an application but split everything from main.rs into lib.rs(modules). do i still use extern crate <name> to include that lib.rs file?
2018-09-26 18:28:50	<--	Simon (Simon@moz-ggmvg7.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-26 18:29:17	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-26 18:30:17	<--	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 18:30:30	-->	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-26 18:31:36	@mbrubeck	That_Guy_Anon: yes
2018-09-26 18:32:07	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 18:32:23	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 18:33:12	-->	eyans (a@moz-9hildl.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-26 18:35:43	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-26 18:36:08	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 18:36:37	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 18:36:42	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-26 18:38:03	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-26 18:38:30	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-26 18:38:50	-->	oodelally (Mibbit@moz-ojl.b3d.142.82.IP) has joined #rust-beginners
2018-09-26 18:39:36	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-26 18:40:53	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 18:41:09	<--	That_Guy_Anon (elys@moz-6lb.5eq.79.109.IP) has quit (Quit: Leaving)
2018-09-26 18:41:52	oodelally	http://mibpaste.com/hgkpqF 
2018-09-26 18:42:02	oodelally	Hello, I am learning about rust macros. The guide book gives an example:  ``` #[macro_export] macro_rules! vec {     ( $( $x:expr ),* ) => {         {             let mut temp_vec = Vec::new();             $(                 temp_vec.push($x);             )*             temp_vec         }     }; } ```  It says  ``` The * following the comma specifies that the
2018-09-26 18:42:12	oodelally	damn how do i paste some code here...
2018-09-26 18:42:30	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-26 18:42:43	kimundi	oodelally: look in the motd
2018-09-26 18:43:38	oodelally	where can i find that?
2018-09-26 18:43:41	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 18:43:45	dgriffen	quick answer, use paste.rs or some similar code pasting site
2018-09-26 18:43:52	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-26 18:45:10	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 18:45:19	oodelally	https://gist.github.com/OoDeLally/010568f4588f1484136397edbf9aadac
2018-09-26 18:45:47	oodelally	I put my request with markdown as a gist
2018-09-26 18:45:56	oodelally	thanks
2018-09-26 18:46:44	@mbrubeck	oodelally: "foo,*" means zero or more "foo" separated by commas
2018-09-26 18:47:02	@mbrubeck	or rather "$(foo),*" means that
2018-09-26 18:47:58	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-09-26 18:47:59	oodelally	what is the comma for then?
2018-09-26 18:48:03	@mbrubeck	The ,* part can be thought of as a unit, meaning "repetition with a separator"
2018-09-26 18:48:09	oodelally	i thought the comma itself was the token to be repeated
2018-09-26 18:48:54	<--	Aankhen`` (notasquid@moz-n20.nku.227.110.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 18:48:56	oodelally	im trying to see it like a regexp-like "*", how is that different ?
2018-09-26 18:49:14	--	japaric is now known as japaric|busy
2018-09-26 18:49:17	@mbrubeck	`$(foo)*` is the syntax for "zero or more foo without separators"
2018-09-26 18:49:18	<--	cubetastic (Thunderbird@moz-h61fe5.726k.5vm0.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 18:49:24	@mbrubeck	so it would match "foo foo foo foo"
2018-09-26 18:49:38	@mbrubeck	`$(,)*`  will match zero or more commas
2018-09-26 18:49:59	@mbrubeck	oodelally: This has some more detail https://danielkeep.github.io/tlborm/book/mbe-macro-rules.html#repetitions
2018-09-26 18:50:16	-->	Aankhen`` (notasquid@moz-frk.3eg.207.49.IP) has joined #rust-beginners
2018-09-26 18:50:55	oodelally	ooooh i see
2018-09-26 18:51:13	oodelally	repetition has a very specific syntax, it is not a regexp at all
2018-09-26 18:51:37	oodelally	"$(foo)" "," and "*" are the 3 arguments of it
2018-09-26 18:51:57	oodelally	okay it makes more sense now
2018-09-26 18:52:22	oodelally	thank you mbrubeck
2018-09-26 18:53:04	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 18:53:23	<--	mib_rw3uni (Mibbit@moz-ca3.vts.124.200.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 18:57:18	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 18:58:45	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 19:00:52	<--	xet7 (xet7@moz-f2l2ri.rev.dnainternet.fi) has quit (Quit: Leaving)
2018-09-26 19:01:22	<--	donryudragoni (ryu@moz-nkf.4kp.3.187.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:02:29	-->	xet7 (xet7@moz-f2l2ri.rev.dnainternet.fi) has joined #rust-beginners
2018-09-26 19:03:16	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:04:02	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-09-26 19:04:15	-->	AtumT_ (IRC@moz-8qa.jsc.213.186.IP) has joined #rust-beginners
2018-09-26 19:04:33	oodelally	Why isnt this compiling ? https://play.rust-lang.org/?gist=fabeb1795094c05c6fe587bd687afa75&version=stable&mode=debug&edition=2015
2018-09-26 19:05:35	stephaneyfx	oodelally: Do you want one println per x?
2018-09-26 19:05:38	@mbrubeck	oodelally: You need a repetition in the expansion to match the repetition in the pattern https://play.rust-lang.org/?gist=11272c8782674ef4b3b6130f22d942f9&version=stable&mode=debug&edition=2015
2018-09-26 19:05:49	-->	skeleten (user@moz-cg84l7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 19:05:54	oodelally	yes i want to print each value
2018-09-26 19:06:01	oodelally	one println per value
2018-09-26 19:06:11	stephaneyfx	oodelally: So what mbrubeck wrote
2018-09-26 19:07:04	<--	AtumT (IRC@moz-7f8cuc.gvt.net.br) has quit (Ping timeout: 121 seconds)
2018-09-26 19:07:11	skeleten	Heya! Is there a way to associated arbitrary data to edges when using `petgraph`?
2018-09-26 19:07:12	oodelally	aha i missed that little *. Thanks again!
2018-09-26 19:08:10	-->	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has joined #rust-beginners
2018-09-26 19:08:31	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 19:10:25	@mbrubeck	skeleten: Yes, a `Graph<N, E>` has data of type `E` associated with its edges.  `E` can be an arbitrary type.
2018-09-26 19:10:35	skeleten	ohh, nice. Thank you!
2018-09-26 19:11:19	-->	donryudragoni (ryu@moz-nkf.4kp.3.187.IP) has joined #rust-beginners
2018-09-26 19:11:22	-->	enterprisey (enterprisey@moz-e2ma94.cit.cornell.edu) has joined #rust-beginners
2018-09-26 19:12:32	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:12:48	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-26 19:12:58	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-26 19:13:14	<--	donryudragoni (ryu@moz-nkf.4kp.3.187.IP) has quit (Quit: WeeChat 2.2)
2018-09-26 19:13:15	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:13:41	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 19:14:07	<--	oodelally (Mibbit@moz-ojl.b3d.142.82.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 19:16:48	jones	/c/c
2018-09-26 19:16:50	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Ping timeout: 121 seconds)
2018-09-26 19:16:51	jones	oops
2018-09-26 19:17:17	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 19:17:47	-->	AtumT (IRC@moz-ieh6sm.gvt.net.br) has joined #rust-beginners
2018-09-26 19:17:56	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 19:18:01	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:18:13	<--	AtumT_ (IRC@moz-8qa.jsc.213.186.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:18:14	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:18:49	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:19:07	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:19:35	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:19:39	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:19:46	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:20:22	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:20:43	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:21:09	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:21:20	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:21:39	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:21:56	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:22:07	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:22:41	-->	Guest4 (textual@moz-n5g.1m5.173.202.IP) has joined #rust-beginners
2018-09-26 19:22:43	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:22:54	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:23:30	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:23:32	-->	mib_9lo5s7 (Mibbit@moz-23d5aq.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 19:23:42	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:23:52	<--	mib_9lo5s7 (Mibbit@moz-23d5aq.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 19:24:17	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:24:27	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:24:28	<--	GreenJel_ (GreenJello@moz-vja.vnp.83.23.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:25:03	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:25:09	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-26 19:26:35	-->	GreenJello (GreenJello@moz-d06.hj2.153.185.IP) has joined #rust-beginners
2018-09-26 19:26:43	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 19:26:50	-->	jperras (jperras@moz-07dvop.dsl.bell.ca) has joined #rust-beginners
2018-09-26 19:28:15	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-09-26 19:30:52	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:31:16	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-26 19:31:41	<--	eyans (a@moz-9hildl.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-26 19:33:46	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-26 19:34:21	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-26 19:34:23	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 19:34:32	<--	bluss (bluss@moz-jgdsfd.cust.tele2.se) has quit (Ping timeout: 121 seconds)
2018-09-26 19:35:02	<--	skeleten (user@moz-cg84l7.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 19:35:24	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 19:35:58	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-26 19:36:16	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 19:36:36	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-26 19:38:37	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 19:38:40	-->	gza (einar@moz-7kbl4a.customer.cdi.no) has joined #rust-beginners
2018-09-26 19:38:46	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-26 19:39:23	<--	gza (einar@moz-7kbl4a.customer.cdi.no) has quit (Quit: Lost terminal)
2018-09-26 19:39:49	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-26 19:39:59	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-26 19:40:04	-->	axjt (Mibbit@moz-7kbl4a.customer.cdi.no) has joined #rust-beginners
2018-09-26 19:40:07	<--	adi (adi@moz-omejp7.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-26 19:40:13	<--	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-26 19:40:43	-->	skeleten (user@moz-cg84l7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 19:41:24	<--	ChaiTRex (ChaiTRex@moz-ki2q9l.dynamic.globalcapacity.com) has quit (Ping timeout: 121 seconds)
2018-09-26 19:42:11	skeleten	i'm getting some unresolved imports which confuse me =/ I have a crate import, `xcb` (and `extern crate xcb;` in main.rs). in types.rs i try to `use xcb::xkb`) which claims `no xkb in the root`. What am I doing wrong? o:
2018-09-26 19:42:23	skeleten	!crate xcb
2018-09-26 19:42:23	+rustbot	xcb (0.8.2) - Rust bindings and wrappers for XCB -> https://crates.io/crates/xcb <https://docs.rs/xcb>
2018-09-26 19:43:29	skeleten	oh wait, the docs.rs says there is no xkb in it... though this http://rtbo.github.io/rust-xcb/xcb/xkb/index.html does. huh
2018-09-26 19:44:34	-->	rururu (Mibbit@moz-j20.qbc.65.109.IP) has joined #rust-beginners
2018-09-26 19:44:35	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 19:44:45	rururu	any tokio users here ?
2018-09-26 19:45:01	-->	ChaiTRex (ChaiTRex@moz-ki2q9l.dynamic.globalcapacity.com) has joined #rust-beginners
2018-09-26 19:45:11	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 19:45:15	<--	aem34i (x@moz-0ko.0cn.165.188.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 19:45:33	-->	aem34i (x@moz-0ko.0cn.165.188.IP) has joined #rust-beginners
2018-09-26 19:45:52	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 19:47:25	yaymukund	rururu: i've had luck in #tokio on gitter but i've also found help here. you may have better luck if you just ask. i am a super beginner, so I probably can't help but i'll try
2018-09-26 19:47:57	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-26 19:48:12	-->	adi (adi@moz-omejp7.vsos.ethz.ch) has joined #rust-beginners
2018-09-26 19:48:28	skeleten	I really dislike when features-gated code is not documented in the readme or the docs :(
2018-09-26 19:48:44	-->	huin (huin@moz-chh2cr.zen.co.uk) has joined #rust-beginners
2018-09-26 19:48:49	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-26 19:48:55	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:48:56	-->	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has joined #rust-beginners
2018-09-26 19:49:18	dpc1	send a PR ;)
2018-09-26 19:49:27	dpc1	docs doesn't work with feature gates iirc
2018-09-26 19:49:28	yaymukund	( https://gitter.im/tokio-rs/tokio )
2018-09-26 19:50:21	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-26 19:50:31	skeleten	which is why I understand that the docs of that particular crate are not hosted on docs.rs; however, noting it in the module docs, the readme, or both is highly appreciated IMO
2018-09-26 19:51:27	dpc1	you can send them a PR :)
2018-09-26 19:52:00	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-26 19:52:22	dpc1	which crate is it?
2018-09-26 19:52:23	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 19:52:39	skeleten	!crate xcb
2018-09-26 19:52:39	+rustbot	xcb (0.8.2) - Rust bindings and wrappers for XCB -> https://crates.io/crates/xcb <https://docs.rs/xcb>
2018-09-26 19:54:13	dpc1	uhmm that's a fork 
2018-09-26 19:54:27	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-26 19:54:57	skeleten	its the one listed as `xcb` on crates.io, though o:
2018-09-26 19:54:58	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 19:55:21	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-26 19:55:28	rururu	yaymukund: thanks, I have enough rope to try continuning myself, thanks
2018-09-26 19:55:30	skeleten	and the "original" seems to be abandoned
2018-09-26 19:59:12	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 19:59:26	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-26 20:00:28	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-09-26 20:01:20	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-26 20:01:32	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-26 20:01:40	-->	bluss (bluss@moz-jgdsfd.cust.tele2.se) has joined #rust-beginners
2018-09-26 20:01:51	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:02:20	axjt	I have a struct containing a vec and a reference to an object in the vec, but i get issues with the borrowed value not living long enough when trying to assign the reference, is there a right way to do this?
2018-09-26 20:02:27	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 20:02:28	axjt	Like so: https://pastebin.com/Tq0w4M0S
2018-09-26 20:04:34	dpc1	!pastebin
2018-09-26 20:04:34	+rustbot	pastebin.com is swamped with advertisements and random captchas. Malware found on pastebin.com has resulted in it being blocked for some users. It injects CRLF line-endings. Please, use something else, like https://play.rust-lang.org https://paste.rs https://gist.github.com
2018-09-26 20:05:54	@mbrubeck	axjt: Structs that contain references to their own content are difficult or sometimes even impossible to use in Rust
2018-09-26 20:06:09	axjt	My bad, wasn't aware of that; https://play.rust-lang.org/?gist=f791f2e9bb115a5415b133ebd61d739c
2018-09-26 20:06:22	@mbrubeck	axjt: because a value is "locked" when it's borrowed by a reference, Rust won't let you mutate, move, or destroy the struct once you take the reference.
2018-09-26 20:06:46	<--	sqwishy (sqwishy@moz-apuelp.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-26 20:06:50	mdlayher-M	i was looking at the crates page for xcb mentioned above and noticed an example with roughly 6-7 levels of indentation because of loop/match/etc.  is this frowned upon?  at least in go, we're really serious about keeping scopes small where possible to reduce cognitive load
2018-09-26 20:06:51	@mbrubeck	ajd: For cases like this, I recommend storing an index into the Vec, instead of a reference into it (as long as you know the element won't change position within the Vec while the index exists).
2018-09-26 20:06:53	axjt	Yeah, been fighting the compiler over this for some time
2018-09-26 20:06:56	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:07:06	@mbrubeck	You can have a method that returns a reference to the indexed item.
2018-09-26 20:07:25	@mbrubeck	This way the reference can have a shorter lifetime than the struct itself.
2018-09-26 20:08:12	axjt	I guess that's the solution then. Thanks!
2018-09-26 20:10:03	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-26 20:10:04	-->	That_Guy_Anon (elys@moz-6lb.5eq.79.109.IP) has joined #rust-beginners
2018-09-26 20:10:04	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-26 20:12:14	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 20:12:46	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:14:09	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:14:40	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-26 20:15:37	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 20:16:18	-->	nifker (Mozilla@moz-pfertb.dyn.telefonica.de) has joined #rust-beginners
2018-09-26 20:16:21	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:16:24	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-26 20:16:46	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:17:13	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 20:17:51	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 20:18:04	skeleten	so, it seems the `xcb` library as in `crates.io` does not yet have the kind of functionality I need. The canonical way would then be to use `bindgen` to get myself some FFI bindings, wouldn't it?
2018-09-26 20:18:25	<--	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-26 20:18:42	<--	adi (adi@moz-omejp7.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-26 20:18:52	-->	hyp3rbor3ax (hyp3rbor3ax@moz-nb663v.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 20:19:30	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-26 20:19:52	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 20:20:43	-->	adi (adi@moz-omejp7.vsos.ethz.ch) has joined #rust-beginners
2018-09-26 20:20:43	-->	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has joined #rust-beginners
2018-09-26 20:21:00	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 20:22:29	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-26 20:23:11	<--	Aankhen`` (notasquid@moz-frk.3eg.207.49.IP) has quit (Quit: Sorry, was AFK)
2018-09-26 20:23:31	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 20:25:22	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:25:32	-->	Simon (Simon@moz-ggmvg7.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-26 20:26:24	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-26 20:28:29	That_Guy_Anon	in a match, how can you use the value of _
2018-09-26 20:29:02	jones	That_Guy_Anon: you don't. If you want to bind it to a value change `_` to a name
2018-09-26 20:29:26	<--	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has quit (Client exited)
2018-09-26 20:29:33	jones	iirc: `_` means that the value will go out of scope straight away
2018-09-26 20:29:34	That_Guy_Anon	ok, so i can just change it to a name but it will still be the catch all case?
2018-09-26 20:29:40	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-26 20:29:50	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-26 20:29:56	-->	esteth (Mibbit@moz-0qst65.cable.virginm.net) has joined #rust-beginners
2018-09-26 20:29:57	kimundi	yes
2018-09-26 20:30:33	jones	That_Guy_Anon: https://play.rust-lang.org/?gist=d373093a01f3fcf7d0753e38594126cc&version=stable&mode=debug&edition=2015
2018-09-26 20:30:36	<--	Simon (Simon@moz-ggmvg7.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-26 20:31:00	-->	sqwishy (sqwishy@moz-apuelp.ipv6.telus.net) has joined #rust-beginners
2018-09-26 20:33:13	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-26 20:33:25	That_Guy_Anon	i am trying to write a parser, but i am not sure how to handle the some/number stuff
2018-09-26 20:33:26	That_Guy_Anon	https://gist.github.com/rust-play/ba017a2dd0b0cbab9d9d99c093458981
2018-09-26 20:33:48	That_Guy_Anon	i thought unwrap returns a some, but apparently i misunderstood how to continue with that
2018-09-26 20:33:48	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 20:34:22	jones	Actually this means you can write a match statement against an `enum` that can never happen, but has to be implemented or it will be incorrect: https://play.rust-lang.org/?gist=6c3e8d0b3d2c2a272f9e3a177e087f1d&version=stable&mode=debug&edition=2015
2018-09-26 20:34:26	@mbrubeck	That_Guy_Anon: `unwrap()` returns an f64, or panics if one couldn't be parsed
2018-09-26 20:34:51	That_Guy_Anon	ah, i guess than the random stackoverflow was wrong :D
2018-09-26 20:35:08	That_Guy_Anon	thanks, now i know how to continue
2018-09-26 20:36:15	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 20:36:18	jones	I guess the compiler can't be too clever about it, or am I missing something fundamental perhaps?
2018-09-26 20:36:47	@mbrubeck	jones: Yeah, compiler is just not that smart
2018-09-26 20:36:50	esteth	Hi Rustaceans, I asked yesterday about a good way to represent Z80 registers in rust (AB, CD, EF etc, where A and B can be referred to as either two registers A and B, or a single 16-bit register). I'd like to implement Index for the struct storing the registers, but I need to return a reference
2018-09-26 20:37:01	@mbrubeck	jones: You can use the built-in `unreachable!()` macro for the unreachable case
2018-09-26 20:37:07	esteth	Ideally I could return a reference to a portion of a numeric type, but I don't know if that's possible
2018-09-26 20:37:28	esteth	eg: &my16[lower8bits]
2018-09-26 20:37:55	esteth	I tried to grok the transmute/cast docs, but I don't understand it fully enough. It sounds like what I want may be possible with raw pointers?
2018-09-26 20:38:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 20:40:20	-->	niconii (nicole@moz-3gm7fk.midco.net) has joined #rust-beginners
2018-09-26 20:40:20	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-26 20:40:29	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 20:41:20	-->	Codur (Mibbit@moz-2162gg.catv.broadband.hu) has joined #rust-beginners
2018-09-26 20:42:10	-->	pixlark_ (pixlark@moz-s3etpv.ono5.6g56.0380.2600.IP) has joined #rust-beginners
2018-09-26 20:42:26	-->	mib_g2kpos (Mibbit@moz-1php9r.cpe.cableone.net) has joined #rust-beginners
2018-09-26 20:42:36	<--	luizdepra (luizdepra@moz-5bq1mq.pflq.ojo3.1284.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 20:42:59	-->	mib_7xew67 (Mibbit@moz-uqq.7qj.210.197.IP) has joined #rust-beginners
2018-09-26 20:43:00	<--	mib_g2kpos (Mibbit@moz-1php9r.cpe.cableone.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 20:43:01	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:43:25	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-26 20:43:45	mib_7xew67	Hi, i just installed rust with rustup how do i use it
2018-09-26 20:43:57	That_Guy_Anon	shouldn't `Ok(num) => line.push(Number(num))` resolve the result and turn it into whatever it is?
2018-09-26 20:44:05	jones	mib_7xew67: `cargo new --bin helloworld`
2018-09-26 20:44:06	-->	ndyg (Mibbit@moz-n7dth7.ca.comcast.net) has joined #rust-beginners
2018-09-26 20:44:16	That_Guy_Anon	but it complains that num is still Result and not f64
2018-09-26 20:44:39	dpc1	can you paste somee code
2018-09-26 20:45:05	mib_7xew67	cargo isn't even showing up on my path
2018-09-26 20:45:20	That_Guy_Anon	https://gist.github.com/rust-play/ba017a2dd0b0cbab9d9d99c093458981
2018-09-26 20:45:22	dgriffen	mib_7xew67: what OS?
2018-09-26 20:45:30	dgriffen	and have you restarted your terminal after running rustup?
2018-09-26 20:45:39	mib_7xew67	ArchLinux
2018-09-26 20:45:43	mib_7xew67	And, yes
2018-09-26 20:45:58	<--	ChaiTRex (ChaiTRex@moz-ki2q9l.dynamic.globalcapacity.com) has quit (Ping timeout: 121 seconds)
2018-09-26 20:46:03	dgriffen	I seem to remember arch being a bit funny with how it populates your path
2018-09-26 20:46:28	dgriffen	I think when you run rustup after the install it tells you a file you can source to setup the path properly
2018-09-26 20:46:55	dgriffen	and since you're on arch I assume you used the rustup from the official repository?
2018-09-26 20:46:55	jones	I have no issues in Arch. But you can add ~/.cargo/bin to your path manually
2018-09-26 20:47:06	mib_7xew67	let me try focring the path
2018-09-26 20:47:15	dgriffen	mib_7xew67: are you using bash for your shell?
2018-09-26 20:47:22	mib_7xew67	ZSH
2018-09-26 20:47:34	mib_7xew67	And i already tried `sh`
2018-09-26 20:47:47	mib_7xew67	Even tried a new TTY
2018-09-26 20:47:58	dgriffen	depending on how its getting seeded you may actually have to log out
2018-09-26 20:48:17	mib_7xew67	okay, lemme try that
2018-09-26 20:48:27	<--	ndyg (Mibbit@moz-n7dth7.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 20:48:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 20:48:35	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: leaving)
2018-09-26 20:48:35	stephaneyfx	That_Guy_Anon: If you unwrap, you don't have a Result anymore, i.e. num already has type f64
2018-09-26 20:49:00	That_Guy_Anon	damnit
2018-09-26 20:49:21	That_Guy_Anon	that is the wrong code, apparently the playground doesn
2018-09-26 20:49:25	That_Guy_Anon	t create a new gist
2018-09-26 20:49:30	stephaneyfx	That_Guy_Anon: Remove the call to unwarp, change Some to Ok and None to Err(_) and that should help
2018-09-26 20:49:38	stephaneyfx	*unwrap
2018-09-26 20:50:17	<--	mib_7xew67 (Mibbit@moz-uqq.7qj.210.197.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 20:50:22	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-26 20:50:29	That_Guy_Anon	https://pastebin.com/TVV1dQTr that is the right code
2018-09-26 20:50:29	That_Guy_Anon	sorry
2018-09-26 20:50:43	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-26 20:50:46	<--	esteth (Mibbit@moz-0qst65.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 20:50:59	-->	kermie (Mibbit@moz-6d8.7qj.210.197.IP) has joined #rust-beginners
2018-09-26 20:51:12	stephaneyfx	That_Guy_Anon: May you create a link on the playground by using the "Share" button?
2018-09-26 20:51:24	<--	keret (Mibbit@moz-jq1mcb.versanet.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 20:51:44	jones	That_Guy_Anon: is it line 28 that is causing an issue? because you match on num, but then on 28 you use num (the result)
2018-09-26 20:51:50	dgriffen	That_Guy_Anon: look at the line its referring to
2018-09-26 20:52:13	stephaneyfx	That_Guy_Anon: Link on the playground: https://play.rust-lang.org/?gist=d378c7ba55e10120fd4cc65c2e7aa2d0&version=stable&mode=debug&edition=2015
2018-09-26 20:52:18	That_Guy_Anon	i know that num is a result, but i thought ok(num) would "deresult" it
2018-09-26 20:52:29	-->	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 20:52:34	jones	That_Guy_Anon: it does but only in the scope of the match statement
2018-09-26 20:52:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 20:52:45	dgriffen	That_Guy_Anon: you have a second line.push(Number(num))
2018-09-26 20:52:48	<--	nifker (Mozilla@moz-pfertb.dyn.telefonica.de) has quit (The TLS connection was non-properly terminated.)
2018-09-26 20:52:51	-->	nifker (Mozilla@moz-pfertb.dyn.telefonica.de) has joined #rust-beginners
2018-09-26 20:52:54	dgriffen	outside of the match statement
2018-09-26 20:53:01	That_Guy_Anon	oh...yeah i see it now. 
2018-09-26 20:53:09	<--	kermie (Mibbit@moz-6d8.7qj.210.197.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 20:53:19	-->	ChaiTRex (ChaiTRex@moz-ki2q9l.dynamic.globalcapacity.com) has joined #rust-beginners
2018-09-26 20:53:25	That_Guy_Anon	so rust does work like i understood and i am just a tool...phew :D
2018-09-26 20:53:37	<--	rururu (Mibbit@moz-j20.qbc.65.109.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 20:54:21	dpc1	xD
2018-09-26 20:54:44	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-26 20:56:25	seijikun	Hey guys. Is it possible to execute two consecutive clauses in a match statement, like leaving out a "break;" in a switch-case? https://pastebin.com/m4GrHetr
2018-09-26 20:56:54	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 20:57:05	dpc1	nope
2018-09-26 20:57:18	CognitiveRadiation	seijikun: you might be able to do it with the | operator in the pattern-match
2018-09-26 20:57:24	stephaneyfx	seijikun: Your pattern can be `0 | 1 => ...`
2018-09-26 20:58:12	seijikun	Yeah, that might work. Thanks!
2018-09-26 20:58:43	KiChjang	if i have an Option<&Foo> where Foo: Clone, how can i clone it so that i have an Option<Foo> instead?
2018-09-26 20:59:06	stephaneyfx	KiChjang: .cloned() ?
2018-09-26 20:59:12	KiChjang	wait, it's that easy?
2018-09-26 20:59:14	KiChjang	damnit
2018-09-26 21:01:08	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 21:01:44	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: leaving)
2018-09-26 21:02:30	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-26 21:03:28	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 21:04:29	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 21:04:51	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-26 21:07:10	-->	escks (escks@moz-1lm.4us.136.174.IP) has joined #rust-beginners
2018-09-26 21:07:41	That_Guy_Anon	if i have an vector of an enum type, how do i best write a test to see if the vectors are equal?
2018-09-26 21:08:14	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 21:08:17	stephaneyfx	That_Guy_Anon: Does the enum type implement PartialEq?
2018-09-26 21:08:37	That_Guy_Anon	if you tell me how i can do that it will in a few minutes :D
2018-09-26 21:08:37	jones	That_Guy_Anon: there is probably a better way but if you `#[derive(Debug)]` you can make two strings with format!() and compare that :D
2018-09-26 21:09:03	stephaneyfx	That_Guy_Anon: `#[derive(PartialEq)]` just before your enum type
2018-09-26 21:09:20	stephaneyfx	That_Guy_Anon: Assuming the fields themselves are PartialEq
2018-09-26 21:09:28	Lumpio-	And then I believe you can just use "==" for the vectors
2018-09-26 21:09:34	Lumpio-	As long as the items in the vector are comparable.
2018-09-26 21:09:37	seijikun	stephaneyfx: Does the compiler not implement PartialEq implicitly if possible?
2018-09-26 21:09:37	stephaneyfx	That_Guy_Anon: If the enum contains variants with fields
2018-09-26 21:09:47	Lumpio-	No
2018-09-26 21:09:49	Lumpio-	seijikun
2018-09-26 21:10:02	<--	dorfsmay (dorfsmay@moz-gunu9v.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-26 21:10:17	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-26 21:10:45	That_Guy_Anon	https://play.rust-lang.org/?gist=bbc832bfa08886ef71e4a30ff6547e57&version=stable&mode=debug&edition=2015#
2018-09-26 21:10:46	<--	space-wizard (space-wizar@moz-en26sh.customer.broadstripe.net) has quit (Connection closed)
2018-09-26 21:11:00	That_Guy_Anon	that is the enum in question. since i don't understand half the words you are saying:D
2018-09-26 21:11:06	-->	space-wizard (space-wizar@moz-en26sh.customer.broadstripe.net) has joined #rust-beginners
2018-09-26 21:11:17	stephaneyfx	That_Guy_Anon: https://play.rust-lang.org/?gist=de8474295f67e67c181c742e685f9b84&version=stable&mode=debug&edition=2015
2018-09-26 21:12:19	seijikun	That_Guy_Anon: https://play.rust-lang.org/?gist=f7330f4d92c8b56666e5453701209a5e&version=stable&mode=debug&edition=2015
2018-09-26 21:12:39	stephaneyfx	That_Guy_Anon: https://play.rust-lang.org/?gist=3b64c44ae64bc22a65a36bd1c90f5e17&version=stable&mode=debug&edition=2015
2018-09-26 21:12:59	-->	liquidnight (marcus@moz-4jang5.5pvr.rgii.0c23.2a01.IP) has joined #rust-beginners
2018-09-26 21:13:47	<--	ahnk (Mibbit@moz-ehft0b.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 21:15:12	-->	space-wi_ (space-wizar@moz-en26sh.customer.broadstripe.net) has joined #rust-beginners
2018-09-26 21:16:06	<--	space-wizard (space-wizar@moz-en26sh.customer.broadstripe.net) has quit (Connection closed)
2018-09-26 21:16:35	-->	space-wizard (space-wizar@moz-en26sh.customer.broadstripe.net) has joined #rust-beginners
2018-09-26 21:17:25	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-26 21:17:51	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-26 21:19:00	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-26 21:19:13	<--	space-wi_ (space-wizar@moz-en26sh.customer.broadstripe.net) has quit (Ping timeout: 121 seconds)
2018-09-26 21:19:33	That_Guy_Anon	is there a way to define an entire mod as #[test] so that i don't have to do it manually over every function?
2018-09-26 21:20:45	<--	jihi (jih@moz-lojmf6.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 21:20:57	dpc1	That_Guy_Anon: yes just put the mod under #[cfg(test)]
2018-09-26 21:21:11	<--	jperras (jperras@moz-07dvop.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-26 21:21:24	stephaneyfx	That_Guy_Anon: AFAIK you still need to mark every test function as #[test]
2018-09-26 21:21:27	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 21:21:42	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 21:22:07	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-26 21:22:17	stephaneyfx	That_Guy_Anon: Because you could have helper functions in your test module that are not test entry points
2018-09-26 21:22:52	That_Guy_Anon	makes sense that it isn't default because of that, just thought ther emight be a way to intentionally configure it that way. but no big deal, i just know i will forget it from time to time :D
2018-09-26 21:23:03	<--	danecando (danecando@moz-lbv.uqb.236.12.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-26 21:23:37	<--	pixlark_ (pixlark@moz-s3etpv.ono5.6g56.0380.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 21:23:54	dpc1	oh misread your question. yeah you will need the #[cfg(test)]
2018-09-26 21:24:06	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-26 21:27:00	-->	simmons (simmons@moz-3sml9a.nu) has joined #rust-beginners
2018-09-26 21:27:58	Codur	that reminded me of something, what if my code has #test, but it doesn't have cfg(test)? I
2018-09-26 21:28:06	Codur	I'm asking because it works
2018-09-26 21:28:16	Codur	is there a drawback?
2018-09-26 21:28:54	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 21:30:22	dpc1	when you run the code, it might be compiling those fns
2018-09-26 21:31:16	That_Guy_Anon	ok, is there any way to get the first line of a string without stripping it= chars.next() strips it from the string
2018-09-26 21:35:31	<--	seijikun (seijikun@moz-766438.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 21:36:04	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 21:36:10	<--	nifker (Mozilla@moz-pfertb.dyn.telefonica.de) has quit (The TLS connection was non-properly terminated.)
2018-09-26 21:36:43	-->	seijikun (seijikun@moz-59r0pc.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 21:37:02	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-26 21:37:23	<--	That_Guy_Anon (elys@moz-6lb.5eq.79.109.IP) has quit (Quit: Leaving)
2018-09-26 21:39:07	-->	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has joined #rust-beginners
2018-09-26 21:40:33	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-26 21:40:54	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: leaving)
2018-09-26 21:43:11	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 21:43:43	-->	mib_kg97u8 (Mibbit@moz-b8d.mku.205.129.IP) has joined #rust-beginners
2018-09-26 21:43:45	<--	seijikun (seijikun@moz-59r0pc.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 21:43:49	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-26 21:44:02	-->	seijikun (seijikun@moz-13qb7j.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 21:44:10	mib_kg97u8	Hey, thanks for the assistance with the installation with `rustup`
2018-09-26 21:44:30	mib_kg97u8	Turns out it was installed to the root's home directory
2018-09-26 21:45:29	mib_kg97u8	So, I fixed it by migrating the folder and toolchains to the user directory
2018-09-26 21:45:30	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 21:45:59	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-26 21:46:01	mib_kg97u8	Rust seems like a very promising language and i want to port my NodeJS App to Rust for better performance
2018-09-26 21:47:23	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-26 21:47:35	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-26 21:48:47	dpc1	:)
2018-09-26 21:49:06	Havvy	!mib @ mib_kg97u8 
2018-09-26 21:49:06	+rustbot	mib_kg97u8: Hello, Mibbit user with a “mib_<random>” nickname. Please change your nickname to something less confusing by saying `/nick NEW_NAME_HERE`. Welcome to IRC. :)
2018-09-26 21:49:30	--	mib_kg97u8 is now known as C0D3R_CPP
2018-09-26 21:49:56	C0D3R_CPP	@Havvy, Thanks
2018-09-26 21:50:45	yaymukund	https://github.com/djherbis/rust-stream looks like it hasnt been maintained in a little while - do folks know of any alternatives? 
2018-09-26 21:51:27	yaymukund	(or an alternate approach)
2018-09-26 21:52:05	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-26 21:52:32	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-26 21:52:42	<--	bluss (bluss@moz-jgdsfd.cust.tele2.se) has quit (Ping timeout: 121 seconds)
2018-09-26 21:53:37	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-26 21:53:56	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 21:55:09	<--	Codur (Mibbit@moz-2162gg.catv.broadband.hu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 21:55:10	-->	bluss (bluss@moz-jgdsfd.cust.tele2.se) has joined #rust-beginners
2018-09-26 21:55:23	<--	C0D3R_CPP (Mibbit@moz-b8d.mku.205.129.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 21:55:51	-->	ncoish (Mibbit@moz-ip0.qts.9.76.IP) has joined #rust-beginners
2018-09-26 21:56:48	-->	C0D3R_CPP (Mibbit@moz-b8d.mku.205.129.IP) has joined #rust-beginners
2018-09-26 21:57:07	-->	jperras (jperras@moz-2nrcg6.uhso.9t0k.b100.2605.IP) has joined #rust-beginners
2018-09-26 21:57:12	<--	C0D3R_CPP (Mibbit@moz-b8d.mku.205.129.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 22:00:39	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-26 22:01:50	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 22:02:16	-->	Dionakra (Mibbit@moz-ldjl7c.user.ono.com) has joined #rust-beginners
2018-09-26 22:02:34	<--	Dionakra (Mibbit@moz-ldjl7c.user.ono.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 22:02:44	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 22:06:30	ncoish	I'm trying to write a trait for mocking interactions with a Child process (std::process::Child). 
2018-09-26 22:06:37	ncoish	My program should take the stdout instance from Child and log its output, line-by-line actively as its updated using a logging macro.
2018-09-26 22:06:49	ncoish	In testing, I'd like to write a mock for the child process, but I'm having a hard time figuring out the return type for the method in the trait that "returns something that I can iterate over to get new Strings as new lines are written to it"
2018-09-26 22:08:01	stephaneyfx	ncoish: Box<Read> might work
2018-09-26 22:08:11	<--	Cldfire (Cldfire@moz-u87e9u.ip-158-69-193.net) has quit (Ping timeout: 121 seconds)
2018-09-26 22:08:37	-->	Cldfire (Cldfire@moz-u87e9u.ip-158-69-193.net) has joined #rust-beginners
2018-09-26 22:08:47	stephaneyfx	ncoish: And you can use BufReader if you want to read line by line
2018-09-26 22:10:09	ncoish	Thanks stephaneyfx That's basically the path that I started down, but I think I got caught up when I saw that String doesn't impl Read, so I wasn't sure how to create a nice mock from a String, but maybe BufReader will help with that.
2018-09-26 22:10:58	stephaneyfx	ncoish: You can get the bytes in the String and that should be Read
2018-09-26 22:11:29	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-26 22:12:16	stephaneyfx	ncoish: Actually Cursor<String> looks like it is Read
2018-09-26 22:12:49	ncoish	Ah! Nice that might be exactly what I was looking for.
2018-09-26 22:12:50	ncoish	Thanks a ton
2018-09-26 22:13:01	stephaneyfx	You're welcome
2018-09-26 22:14:10	simmons	There must be something I'm missing about struct method signatures and lifetimes. Does anyone know why next3() in this example works, but next2() can't be called without a lifetime error?  https://play.rust-lang.org/?gist=2db0f891d4a558ff2dbc0401c7b24749&version=stable&mode=debug&edition=2015
2018-09-26 22:15:19	simmons	The only difference is one takes &mut Self, and the other takes the more explicit type &mut Splitter.
2018-09-26 22:15:55	stephaneyfx	simmons: next3 is not quite equivalent. If you make it closer to the 2 others, there's an error as well: https://play.rust-lang.org/?gist=8e4d42deefb03095f0542bc4493c5911&version=stable&mode=debug&edition=2015
2018-09-26 22:16:21	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-26 22:16:34	stephaneyfx	simmons: The change is to specify that the parameter type is `&'a mut Splitter<'a>`
2018-09-26 22:16:58	stephaneyfx	simmons: Without the `<'a>` bit, Splitter gets its own lifetime different from `'a`
2018-09-26 22:17:14	simmons	stephanyfx: Ah ha!  That is exactly what I was failing to see.  Thanks!
2018-09-26 22:17:33	stephaneyfx	You're welcome
2018-09-26 22:20:22	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-26 22:20:36	<--	enterprisey (enterprisey@moz-e2ma94.cit.cornell.edu) has quit (Connection closed)
2018-09-26 22:22:10	-->	quartz55 (quartz@moz-bnt9nb.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-26 22:25:58	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-09-26 22:26:08	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-26 22:26:10	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-09-26 22:26:58	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-26 22:30:43	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-26 22:31:26	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 22:31:48	-->	gnzlbg (gnzlbg@moz-ebf904.vpn.rwth-aachen.de) has joined #rust-beginners
2018-09-26 22:31:49	<--	yk (yk@moz-49v.eva.234.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 22:31:55	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Quit: Leaving)
2018-09-26 22:32:30	-->	gnzlbg_ (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 22:32:30	<--	gnzlbg (gnzlbg@moz-ebf904.vpn.rwth-aachen.de) has quit (Connection closed)
2018-09-26 22:39:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-26 22:39:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 22:42:15	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 22:43:17	-->	danecando (danecando@moz-b76u9n.sdba.4jle.1700.2600.IP) has joined #rust-beginners
2018-09-26 22:43:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 22:43:47	<--	bluss (bluss@moz-jgdsfd.cust.tele2.se) has quit (Ping timeout: 121 seconds)
2018-09-26 22:45:02	<--	Dariost (Dariost@moz-a1g.nim.48.151.IP) has quit (Client exited)
2018-09-26 22:45:57	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 22:46:01	<--	ubuntourist (kjcole@moz-45sb18.cgn.spcsdns.net) has quit (The TLS connection was non-properly terminated.)
2018-09-26 22:46:47	<--	Eragon (Eragon@moz-iiirhc.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-26 22:47:04	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 22:50:13	<--	jperras (jperras@moz-2nrcg6.uhso.9t0k.b100.2605.IP) has quit (Connection closed)
2018-09-26 22:51:53	<--	gnzlbg_ (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-26 22:52:13	<--	pamaury (pamaury@moz-f3tvef.mpi-sws.org) has quit (Ping timeout: 121 seconds)
2018-09-26 22:52:26	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-26 22:53:01	-->	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-26 22:53:27	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 22:54:41	-->	jperras (jperras@moz-hrj9ou.dsl.bell.ca) has joined #rust-beginners
2018-09-26 22:55:31	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 22:56:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 22:57:40	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 22:57:42	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 23:00:43	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 23:01:22	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 23:04:13	<--	asyncsec (asyncsec@moz-mif4vu.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 23:05:27	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-26 23:06:35	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 23:07:29	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 23:08:34	-->	Fishrock123 (Fishrock123@moz-to8hlh.dsl.bell.ca) has joined #rust-beginners
2018-09-26 23:08:47	-->	troyvoy88 (troyvoy88@moz-vuc.e8e.112.62.IP) has joined #rust-beginners
2018-09-26 23:10:44	<--	ChaiTRex (ChaiTRex@moz-ki2q9l.dynamic.globalcapacity.com) has quit (Ping timeout: 121 seconds)
2018-09-26 23:11:03	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-26 23:13:10	<--	Relaed (relaed@moz-jan398.bbtec.net) has quit (Ping timeout: 121 seconds)
2018-09-26 23:13:29	<--	elichai2 (uid212594@moz-racuhj.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-26 23:14:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 23:14:44	-->	martin2 (martin@moz-ocsccf.anteldata.net.uy) has joined #rust-beginners
2018-09-26 23:15:08	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 23:15:27	Lil_Dropchk	which crate contains a function to map Option's where the closure can return Result?
2018-09-26 23:16:32	Lil_Dropchk	so that one can do `let x = o.map(|y| foo(y)? )?;` instead of the verbose `let x = if let Some(..) = .. { .. } else { None };`
2018-09-26 23:16:51	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-26 23:18:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 23:18:58	<--	garypen (garypen@moz-fkrai1.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-26 23:19:14	-->	Kilobyte (stephan@moz-u2m04u.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 23:19:56	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-26 23:20:22	WindowsBunny	Lil_Dropchk: How do you unify None and Err?
2018-09-26 23:20:51	Lil_Dropchk	WindowsBunny: that map func should return Result<Option<T>, E>
2018-09-26 23:20:55	-->	garypen (garypen@moz-fkrai1.cable.virginm.net) has joined #rust-beginners
2018-09-26 23:20:58	Lil_Dropchk	hence the 2 `?`s
2018-09-26 23:20:58	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-26 23:21:31	WindowsBunny	just do o.map(|y| foo(y))??
2018-09-26 23:21:43	Lil_Dropchk	no
2018-09-26 23:21:50	Lil_Dropchk	i dont want to abort if the Option is None
2018-09-26 23:22:03	WindowsBunny	what do you want to do if it is None?
2018-09-26 23:22:04	Lil_Dropchk	and the return type of the caller is Result
2018-09-26 23:22:09	Lil_Dropchk	WindowsBunny: continue
2018-09-26 23:22:25	WindowsBunny	So you want to ? on the Result, but allow the Option to be stored in the variable
2018-09-26 23:22:30	Lil_Dropchk	i just want to map the option 
2018-09-26 23:22:35	Lil_Dropchk	yes
2018-09-26 23:22:39	Lil_Dropchk	abort if err
2018-09-26 23:25:10	-->	ChaiTRex (ChaiTRex@moz-ki2q9l.dynamic.globalcapacity.com) has joined #rust-beginners
2018-09-26 23:25:42	<--	jsatk (jesseatkins@moz-ioini4.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-09-26 23:30:09	--	U007D_afk is now known as U007D
2018-09-26 23:30:53	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-26 23:31:19	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-26 23:32:06	<--	seijikun (seijikun@moz-13qb7j.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-26 23:32:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 23:33:35	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-26 23:35:53	-->	yjv (yjv@moz-121hil.pa.comcast.net) has joined #rust-beginners
2018-09-26 23:36:35	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 23:39:56	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-26 23:42:02	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 23:42:24	--	U007D is now known as U007D_afk
2018-09-26 23:43:04	-->	syntaxman (wade@moz-lgb666.members.linode.com) has joined #rust-beginners
2018-09-26 23:45:25	-->	zmt98 (zmt@moz-t3l9nu.g40m.cfl6.1700.2600.IP) has joined #rust-beginners
2018-09-26 23:45:29	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-26 23:45:42	<--	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-26 23:45:44	-->	makinen_ (asdf@moz-fveb6i.rev.dnainternet.fi) has joined #rust-beginners
2018-09-26 23:46:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 23:47:02	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-26 23:47:49	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-26 23:48:01	<--	yjv (yjv@moz-121hil.pa.comcast.net) has quit (Connection closed)
2018-09-26 23:48:28	-->	yjv (yjv@moz-121hil.pa.comcast.net) has joined #rust-beginners
2018-09-26 23:48:33	<--	ncoish (Mibbit@moz-ip0.qts.9.76.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-26 23:48:36	<--	zmt99 (zmt@moz-hlnnv0.g40m.cfl6.1700.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 23:49:02	-->	syncplicity (sync@moz-m86iq7.dyn.optonline.net) has joined #rust-beginners
2018-09-26 23:50:58	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-26 23:51:22	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-26 23:51:22	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 23:51:44	<--	skeleten (user@moz-cg84l7.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-26 23:51:53	<--	yjv (yjv@moz-121hil.pa.comcast.net) has quit (Connection closed)
2018-09-26 23:52:06	Lil_Dropchk	WindowsBunny: http://dpaste.com/17VYMCB
2018-09-26 23:52:10	Lil_Dropchk	this is what i mean
2018-09-26 23:53:12	<--	makinen_ (asdf@moz-fveb6i.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-26 23:54:08	emerentius_	Lil_Dropchk: .transpose()
2018-09-26 23:54:10	emerentius_	unstable
2018-09-26 23:54:15	-->	yjv (yjv@moz-121hil.pa.comcast.net) has joined #rust-beginners
2018-09-26 23:54:52	Lil_Dropchk	emerentius_: how is that the same?
2018-09-26 23:55:18	emerentius_	option.map(foo).transpose() does exactly that
2018-09-26 23:55:23	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-26 23:55:53	emerentius_	but it's unstable
2018-09-26 23:56:04	WindowsBunny	oooo, transpose
2018-09-26 23:56:07	Havvy	!crate transpose
2018-09-26 23:56:07	+rustbot	Crate 'transpose' does not exist.
2018-09-26 23:56:22	emerentius_	Havvy: stdlib
2018-09-26 23:56:43	Havvy	Yes, I know it's in the stdlib. I was wondering if somebody also made a crate for it.
2018-09-26 23:56:47	Lil_Dropchk	but it's still verbose and harder to read than `try_map(f)`
2018-09-26 23:57:16	Lil_Dropchk	btw, what is the name of the feature where we can omit Ok(r) for ret vals at the end of scopes?
2018-09-27 00:00:21	<--	Guest4 (textual@moz-n5g.1m5.173.202.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-27 00:00:35	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:01:51	-->	swampflared (zmt@moz-n82mr0.g40m.cfl6.1700.2600.IP) has joined #rust-beginners
2018-09-27 00:01:56	<--	dpc1 (dpc@moz-b0e.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-27 00:02:02	@mbrubeck	Lil_Dropchk: formerly `catch` expressions, now `try` expressions
2018-09-27 00:02:06	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-27 00:02:06	@mbrubeck	or the related https://internals.rust-lang.org/t/pre-rfc-throwing-functions/5419
2018-09-27 00:02:16	Lil_Dropchk	mbrubeck: i mean in normal blocks/bodies
2018-09-27 00:03:00	@mbrubeck	The "throwing functions" proposal would add that for function bodies
2018-09-27 00:03:01	Lil_Dropchk	such as `let v = opt.map(|x| foo(x)?).transpose()?;` (no `Ok(..)` there)
2018-09-27 00:03:48	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Connection closed)
2018-09-27 00:03:54	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-27 00:03:54	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 00:03:56	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-27 00:04:02	Lil_Dropchk	mbrubeck: any idea how i can change my name on the internals forum? when i signed up with github, i accidentally used a different nick and now i have a different name on rust-users and internals :(
2018-09-27 00:04:13	Lil_Dropchk	i want to use my github name there
2018-09-27 00:04:15	@mbrubeck	Lil_Dropchk: I can change it for you
2018-09-27 00:04:25	Lil_Dropchk	ok great
2018-09-27 00:04:27	@mbrubeck	what are the old and new names?
2018-09-27 00:04:28	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:04:31	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:04:32	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:04:47	@mbrubeck	(you can DM me if you prefer)
2018-09-27 00:04:49	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:05:06	<--	zmt98 (zmt@moz-t3l9nu.g40m.cfl6.1700.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:05:50	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:05:52	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (Connection closed)
2018-09-27 00:05:52	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:05:55	Lil_Dropchk	i can't DM, it says my nick is not registered :(
2018-09-27 00:06:25	Lil_Dropchk	(here on irc)
2018-09-27 00:06:49	Havvy	Lil_Dropchk: /msg nickserv register your-pass your-email
2018-09-27 00:06:49	@mbrubeck	oh right, I set myself to registered-only during the latest wave of DM spam
2018-09-27 00:07:01	@mbrubeck	You can DM me on internals, or email mbrubeck@mozilla.com
2018-09-27 00:07:11	<--	Fishrock123 (Fishrock123@moz-to8hlh.dsl.bell.ca) has quit (Quit: Leaving...)
2018-09-27 00:07:26	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-27 00:08:04	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:08:29	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Ping timeout: 121 seconds)
2018-09-27 00:08:50	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 00:08:59	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:09:34	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:09:57	Lil_Dropchk	mbrubeck: i DMed you on the internals forum
2018-09-27 00:10:26	Lil_Dropchk	(btw, it's annoying that Ctrl-F always brings up this non-native search box)
2018-09-27 00:10:35	@mbrubeck	Lil_Dropchk: done
2018-09-27 00:11:02	Lil_Dropchk	thanks :)
2018-09-27 00:11:04	axjt	Is there a trait you can use as bound to be able to cast a generic to usize?
2018-09-27 00:11:43	-->	hamsteri__ (hamsteri@moz-rf0.e1o.73.77.IP) has joined #rust-beginners
2018-09-27 00:11:48	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 00:12:15	durka42	Lil_Dropchk: I hate the non-native search and scroll as well
2018-09-27 00:12:20	durka42	axjt: Into<usize> is as close as you can get
2018-09-27 00:12:28	-->	Guest4 (textual@moz-n5g.1m5.173.202.IP) has joined #rust-beginners
2018-09-27 00:12:49	@mbrubeck	axjt: There's https://docs.rs/num-traits/0.2.1/num_traits/cast/trait.ToPrimitive.html
2018-09-27 00:12:56	@mbrubeck	`Into<usize>` is near useless
2018-09-27 00:12:59	@mbrubeck	because only `u8` implements it
2018-09-27 00:13:00	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:13:33	<--	Guest4 (textual@moz-n5g.1m5.173.202.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-27 00:13:42	Lil_Dropchk	mbrubeck: can't we allow omitting Ok() without the `throws` keyword?
2018-09-27 00:13:47	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:13:48	Lil_Dropchk	just inferring it
2018-09-27 00:13:55	<--	hamsteri_ (hamsteri@moz-hs7.fvt.60.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:14:07	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:15:53	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:16:07	<--	escks (escks@moz-1lm.4us.136.174.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:16:22	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 00:18:36	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 00:18:37	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:18:51	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:18:52	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:22:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:23:46	@mbrubeck	It's probably possible, but I haven't seen it proposed.
2018-09-27 00:24:37	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Quit: WeeChat 2.2)
2018-09-27 00:27:25	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 00:27:54	<--	jperras (jperras@moz-hrj9ou.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 00:28:19	emerentius_	I have and the reception wasn't that positive
2018-09-27 00:29:34	<--	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:31:29	<--	yjv (yjv@moz-121hil.pa.comcast.net) has quit (Connection closed)
2018-09-27 00:31:41	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:31:54	@mbrubeck	auto-wrapping with Ok has been controversial even the versions with explicit opt-in (like `catch` and `throws`)
2018-09-27 00:31:58	-->	yjv (yjv@moz-121hil.pa.comcast.net) has joined #rust-beginners
2018-09-27 00:32:31	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-27 00:32:58	<--	Kilobyte (stephan@moz-u2m04u.dip0.t-ipconnect.de) has quit (Quit: WeeChat 2.2)
2018-09-27 00:33:23	@mbrubeck	For now, in Rust 2018 with `feature(try_blocks)`, you can wrap your entire body in `try { ... }` if you want auto-wrapping.
2018-09-27 00:35:28	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:35:31	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:35:43	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-27 00:36:48	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 00:37:22	<--	syncplicity (sync@moz-m86iq7.dyn.optonline.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 00:37:25	Lil_Dropchk	i still have to convert my huge project to rust2018..
2018-09-27 00:37:49	Lil_Dropchk	btw, with ripgrep, how can i only search in *.rs files?
2018-09-27 00:39:49	Cetra	rg -t rust
2018-09-27 00:40:47	Lil_Dropchk	Cetra: thx. and more general (any other file extension)?
2018-09-27 00:40:49	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:43:20	Cetra	You can do a file glob: `rg -g "*.rs"`
2018-09-27 00:43:47	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 00:45:34	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 00:47:21	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-09-27 00:48:43	-->	P1RATEZ (piratez@moz-h769d6.cable.rogers.com) has joined #rust-beginners
2018-09-27 00:49:56	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 00:50:03	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-27 00:51:09	-->	alx741 (alx741@moz-a07.9bn.15.190.IP) has joined #rust-beginners
2018-09-27 00:52:06	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:52:31	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-27 00:52:42	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-27 00:52:50	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-27 00:55:35	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 00:57:06	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 00:59:55	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 01:00:16	<--	cyphase (cyphase@moz-ugsfho.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 01:00:35	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 01:00:48	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 01:00:49	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (Connection closed)
2018-09-27 01:00:50	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 01:01:14	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 01:01:26	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 01:01:45	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-27 01:01:47	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Quit: Leaving)
2018-09-27 01:01:47	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:01:52	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-27 01:01:59	-->	cyphase (cyphase@moz-ugsfho.ca.comcast.net) has joined #rust-beginners
2018-09-27 01:02:22	<--	alatiera (alatiera@moz-qg3rqu.access.hol.gr) has quit (Quit: Leaving)
2018-09-27 01:02:37	<--	hrld (hrld@moz-4f847a.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-27 01:02:58	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-09-27 01:03:08	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-27 01:03:08	<--	yjv (yjv@moz-121hil.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 01:03:21	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-27 01:03:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 01:04:45	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 01:06:02	<--	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-27 01:07:10	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-27 01:07:56	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:12:33	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 01:13:12	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 01:15:59	Lil_Dropchk	Cetra: thx
2018-09-27 01:16:39	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:16:52	-->	mib_0dk0c8 (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-27 01:17:03	-->	yjv (yjv@moz-mr0.nmn.107.97.IP) has joined #rust-beginners
2018-09-27 01:17:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:17:20	mib_0dk0c8	Can someone help me constrain a lifetime parameter? https://play.rust-lang.org/?gist=d1742253da46a5fd2e0b8373803ab66f&version=stable&mode=debug&edition=2015
2018-09-27 01:17:41	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 01:17:47	-->	sp1ff_ (sp1ff@moz-c2m5gf.3i8v.at4v.0119.2620.IP) has joined #rust-beginners
2018-09-27 01:19:23	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 01:20:04	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 01:20:09	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-27 01:20:15	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:21:12	-->	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has joined #rust-beginners
2018-09-27 01:21:12	<--	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 01:21:44	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 01:21:58	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 01:22:44	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-27 01:23:04	mib_0dk0c8	poke
2018-09-27 01:25:44	<--	GreenJello (GreenJello@moz-d06.hj2.153.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:26:00	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-27 01:26:21	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:26:41	<--	mib_0dk0c8 (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 01:26:57	<--	quartz55 (quartz@moz-bnt9nb.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:27:46	<--	martin2 (martin@moz-ocsccf.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-27 01:28:48	-->	GreenJello (GreenJello@moz-5ah.vnp.83.23.IP) has joined #rust-beginners
2018-09-27 01:29:53	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-27 01:30:33	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 01:30:33	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 01:32:02	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:33:10	-->	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has joined #rust-beginners
2018-09-27 01:33:11	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 01:33:15	<--	axjt (Mibbit@moz-7kbl4a.customer.cdi.no) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 01:33:55	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:33:55	--	Raychen1 is now known as Raychen
2018-09-27 01:35:30	<--	oms (oms@moz-3rgj36.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 01:35:55	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:36:14	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 01:37:57	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:38:04	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 01:39:50	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 01:39:51	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-27 01:41:46	<--	whaley (whaley@moz-clj5uc.jo2t.qoll.a880.2604.IP) has quit (Quit: WeeChat 1.9.1)
2018-09-27 01:41:58	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 01:42:27	<--	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-27 01:43:09	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 01:43:11	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:43:37	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 01:43:48	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 01:43:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:47:58	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 01:49:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 01:49:46	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 01:50:15	-->	mortisha (Mibbit@moz-6s0.o81.158.220.IP) has joined #rust-beginners
2018-09-27 01:51:37	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-27 01:51:40	-->	cp (cp@moz-fresc2.asahinet.com) has joined #rust-beginners
2018-09-27 01:51:44	<--	alx741 (alx741@moz-a07.9bn.15.190.IP) has quit (Client exited)
2018-09-27 01:52:51	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 01:53:05	-->	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 01:53:27	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:56:12	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-27 01:56:21	-->	martin2 (martin@moz-ocsccf.anteldata.net.uy) has joined #rust-beginners
2018-09-27 01:57:07	-->	hyp3rbor3ax_ (hyp3rbor3ax@moz-ch694u.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 01:57:49	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 01:58:42	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 02:00:17	<--	hyp3rbor3ax (hyp3rbor3ax@moz-nb663v.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 02:00:19	mortisha	Hi. I have created a ::std::io::BufReader from a file. Now I want to (1) acquire system buffer size (2) create a string of that size (3) read chunk from the reader until the source finishes. I have gotten until https://play.rust-lang.org/?gist=e8102068ad53b12d191a873deb13bd8b&version=stable&mode=debug&edition=2015   anyone willing to take the wheel? 
2018-09-27 02:00:31	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 02:02:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:04:14	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:04:24	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 02:05:39	<--	yjv (yjv@moz-mr0.nmn.107.97.IP) has quit (Connection closed)
2018-09-27 02:06:30	-->	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-27 02:07:21	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 02:07:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 02:07:33	-->	jperras (jperras@moz-5pvceo.dsl.bell.ca) has joined #rust-beginners
2018-09-27 02:09:17	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-27 02:11:34	<--	Sanqui (SanquiG@moz-33aens.net) has quit (Ping timeout: 121 seconds)
2018-09-27 02:11:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:12:19	-->	Sanqui (SanquiG@moz-33aens.net) has joined #rust-beginners
2018-09-27 02:12:29	-->	asyncsec (asyncsec@moz-3770va.res.rr.com) has joined #rust-beginners
2018-09-27 02:14:10	<--	asyncsec (asyncsec@moz-3770va.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 02:14:18	<--	liquidnight (marcus@moz-4jang5.5pvr.rgii.0c23.2a01.IP) has quit (Connection closed)
2018-09-27 02:15:07	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 02:15:22	<--	starblue (juergen@moz-jqf48n.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-27 02:15:50	-->	starblue (juergen@moz-0jdrdn.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-27 02:16:22	<--	Sanqui (SanquiG@moz-33aens.net) has quit (Ping timeout: 121 seconds)
2018-09-27 02:16:29	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:16:34	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 02:17:17	-->	Sanqui (SanquiG@moz-33aens.net) has joined #rust-beginners
2018-09-27 02:17:58	<--	sp1ff_ (sp1ff@moz-c2m5gf.3i8v.at4v.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:17:59	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 02:18:25	<--	martin2 (martin@moz-ocsccf.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-27 02:19:56	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 02:20:14	<--	jperras (jperras@moz-5pvceo.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 02:20:21	-->	martin2 (martin@moz-ocsccf.anteldata.net.uy) has joined #rust-beginners
2018-09-27 02:20:30	-->	jperras (jperras@moz-a1re9l.dsl.bell.ca) has joined #rust-beginners
2018-09-27 02:21:12	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 02:21:32	-->	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 02:21:45	-->	cubetastic (Thunderbird@moz-1smf3c.ik6d.sldf.4072.2409.IP) has joined #rust-beginners
2018-09-27 02:24:03	<--	andyhoang (andyhoang@moz-4lhakn.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:24:28	<--	AtumT (IRC@moz-ieh6sm.gvt.net.br) has quit (Client exited)
2018-09-27 02:24:43	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-27 02:24:48	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 02:24:54	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-27 02:25:14	<--	mortisha (Mibbit@moz-6s0.o81.158.220.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 02:25:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 02:25:35	<--	kulshrax (kulshrax@moz-q2b2h9.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:25:55	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 02:29:30	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:31:08	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:32:15	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-27 02:32:29	<--	jazzpi (jazzpi@moz-i6l8pk.space) has quit (Quit: ZNC - http://znc.in)
2018-09-27 02:33:22	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-27 02:33:59	<--	martin2 (martin@moz-ocsccf.anteldata.net.uy) has quit (Quit: WeeChat 2.1)
2018-09-27 02:34:07	-->	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has joined #rust-beginners
2018-09-27 02:35:06	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 02:35:56	-->	jperras_ (jperras@moz-cq4cfh.dsl.bell.ca) has joined #rust-beginners
2018-09-27 02:36:24	-->	siddhartharao17 (siddharthar@moz-b9j.sr5.107.128.IP) has joined #rust-beginners
2018-09-27 02:36:56	<--	weeji (jihi@moz-1rvq4o.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 02:37:39	<--	jperras (jperras@moz-a1re9l.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 02:38:16	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 02:39:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:42:27	<--	yaymukund (yaymukund@moz-fp6tda.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-09-27 02:43:25	-->	sp1ff_ (sp1ff@moz-lfv7co.myfairpoint.net) has joined #rust-beginners
2018-09-27 02:44:10	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:44:12	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 02:44:18	-->	mib_qc5mbb (Mibbit@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 02:45:14	mib_qc5mbb	Does anyone know of any pure rust decoders for tiffs with Fax4 compression?
2018-09-27 02:45:46	mib_qc5mbb	I'd really love to avoid using something like imagemagick or libvips.
2018-09-27 02:48:20	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:48:43	-->	axjt (Mibbit@moz-7kbl4a.customer.cdi.no) has joined #rust-beginners
2018-09-27 02:49:53	-->	weeji (jihi@moz-ntfciq.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 02:49:59	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-27 02:51:10	<--	sp1ff_ (sp1ff@moz-lfv7co.myfairpoint.net) has quit (Ping timeout: 121 seconds)
2018-09-27 02:52:58	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 02:53:11	-->	montezuma (Mibbit@moz-dlo13f.abhsia.telus.net) has joined #rust-beginners
2018-09-27 02:56:01	<--	cubetastic (Thunderbird@moz-1smf3c.ik6d.sldf.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:56:25	<--	montezuma (Mibbit@moz-dlo13f.abhsia.telus.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 02:57:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 02:57:28	-->	cubetastic (Thunderbird@moz-1smf3c.ik6d.sldf.4072.2409.IP) has joined #rust-beginners
2018-09-27 03:00:49	-->	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has joined #rust-beginners
2018-09-27 03:01:22	-->	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-27 03:01:47	-->	ufobat_ (Martin@moz-cej76t.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 03:02:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 03:04:27	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:04:32	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 03:05:05	<--	ufobat___ (Martin@moz-0slgs0.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 03:06:14	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Quit: Leaving)
2018-09-27 03:06:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:09:42	-->	neal (neal@moz-2r1vh3.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 03:11:30	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 03:12:35	<--	neal_ (neal@moz-9dp4t9.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 03:13:58	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-27 03:14:44	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 03:15:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:16:51	<--	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 03:17:37	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 03:18:38	-->	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-27 03:19:15	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:19:31	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-27 03:20:16	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 03:20:38	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:20:41	-->	syncplicity (sync@moz-bc2tj6.k461.7phr.fb90.2607.IP) has joined #rust-beginners
2018-09-27 03:20:43	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 03:23:40	<--	cubetastic (Thunderbird@moz-1smf3c.ik6d.sldf.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:24:38	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:26:26	<--	siddhartharao17 (siddharthar@moz-b9j.sr5.107.128.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:26:45	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:26:54	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 03:28:30	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-27 03:30:55	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:31:00	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 03:32:48	<--	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has quit (Quit: WeeChat 2.2)
2018-09-27 03:32:50	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-27 03:34:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 03:34:24	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 03:34:41	Yaniel	does {!crate tiff} not support it?
2018-09-27 03:34:42	+rustbot	tiff (0.2.1) - TIFF decoding and encoding library in pure Rust -> https://crates.io/crates/tiff <https://docs.rs/tiff>
2018-09-27 03:34:44	syncplicity	hey guys, whats the command to open the rust book locally?
2018-09-27 03:34:53	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-27 03:36:36	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 03:37:37	mib_qc5mbb	Yaniel Nope. No fax support for the Piston crate.
2018-09-27 03:37:50	Yaniel	you could add it :P
2018-09-27 03:38:06	mib_qc5mbb	I'd love to. Not really sure where to start.
2018-09-27 03:38:10	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 03:38:19	Yaniel	that can be fixed
2018-09-27 03:38:28	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 03:38:29	Yaniel	step 1 is always cloning the repo and building locally
2018-09-27 03:39:11	Yaniel	(also hacktoberfest is starting soon, so contributing to projects on gh can get you a cool t-shirt ;>)
2018-09-27 03:39:19	syncplicity	I got it, rustup doc
2018-09-27 03:40:14	mib_qc5mbb	Well here goes nothing :)
2018-09-27 03:40:19	-->	ibrokemypie (conor@moz-6pf.acm.132.1.IP) has joined #rust-beginners
2018-09-27 03:40:22	ibrokemypie	hey
2018-09-27 03:40:34	Yaniel	mib_qc5mbb: in this case I think the recommended way to go would be to start a new crate for fax compression
2018-09-27 03:40:36	ibrokemypie	any chance I could get some feedback on the projct I am working on?
2018-09-27 03:40:59	ibrokemypie	its the first thing I have written in rust and it isnt finished, though it is somewhat functional so far
2018-09-27 03:41:00	ibrokemypie	https://github.com/ibrokemypie/makeppkg
2018-09-27 03:41:09	Yaniel	ibrokemypie: you'll have to wait a couple of hours but I can take a look
2018-09-27 03:41:17	joris	hey ibrokemypie glad to see you made some progress !
2018-09-27 03:42:01	ibrokemypie	thanks!
2018-09-27 03:42:01	ibrokemypie	yeah, battled with using a 10 year old c library in it, but I got it
2018-09-27 03:42:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:42:32	ibrokemypie	so far it can patch the PKGBUILD itself, which in many use cases is all you need, so at this point it should already be useful
2018-09-27 03:43:09	joris	i'm busy with work stuff for now, will have a look later 
2018-09-27 03:43:41	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 03:45:38	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-27 03:46:34	<--	ibrokemypie (conor@moz-6pf.acm.132.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:46:41	-->	ibrokemypie (conor@moz-l9s.c73.124.1.IP) has joined #rust-beginners
2018-09-27 03:46:52	<--	jperras_ (jperras@moz-cq4cfh.dsl.bell.ca) has quit (Connection closed)
2018-09-27 03:46:57	<--	brucem (textual@moz-qond45.ivsr.hm43.9800.2405.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-27 03:47:08	<--	syncplicity (sync@moz-bc2tj6.k461.7phr.fb90.2607.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 03:47:57	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 03:48:38	Yaniel	mib_qc5mbb: so take a look at the public API of the deflate crate for example
2018-09-27 03:49:03	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-27 03:49:03	-->	jperras_ (jperras@moz-cq4cfh.dsl.bell.ca) has joined #rust-beginners
2018-09-27 03:49:23	<--	daimrod (daimrod@moz-0dfr4r.omecha.info) has quit (Ping timeout: 121 seconds)
2018-09-27 03:49:39	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-27 03:49:40	-->	daimrod (daimrod@moz-0dfr4r.omecha.info) has joined #rust-beginners
2018-09-27 03:51:41	<--	ibrokemypie (conor@moz-l9s.c73.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:51:54	<--	jperras_ (jperras@moz-cq4cfh.dsl.bell.ca) has quit (Connection closed)
2018-09-27 03:51:57	-->	panitaliemom (Mibbit@moz-msqse1.tx.comcast.net) has joined #rust-beginners
2018-09-27 03:52:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:52:23	Yaniel	looks like there is a spec available http://www.itu.int/rec/T-REC-T.6-198811-I/en
2018-09-27 03:52:33	<--	panitaliemom (Mibbit@moz-msqse1.tx.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 03:52:36	<--	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 03:52:56	-->	jperras_ (jperras@moz-p2kg1m.dsl.bell.ca) has joined #rust-beginners
2018-09-27 03:53:36	-->	knowCold (Mibbit@moz-nn9.ded.253.218.IP) has joined #rust-beginners
2018-09-27 03:54:15	Yaniel	so building a basic `decompress_bytes(data: &[u8]) -> Vec<u8>` should be quite straightforward
2018-09-27 03:54:49	mib_qc5mbb	Yaniel that's *really* helpful. Thank you. Gives me a starting point.
2018-09-27 03:54:50	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:55:12	Yaniel	you're welcome
2018-09-27 03:56:10	<--	ChaiTRex (ChaiTRex@moz-ki2q9l.dynamic.globalcapacity.com) has quit (Ping timeout: 121 seconds)
2018-09-27 03:57:04	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 03:57:12	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 03:57:22	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 03:58:15	--	U007D_afk is now known as U007D
2018-09-27 03:58:19	<--	jperras_ (jperras@moz-p2kg1m.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 03:58:48	knowCold	hello
2018-09-27 03:58:55	-->	ufobat___ (Martin@moz-nupobk.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 04:00:03	<--	kimundi (kimundi@moz-5ik6h5.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-27 04:00:08	<--	knowCold (Mibbit@moz-nn9.ded.253.218.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 04:00:48	-->	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has joined #rust-beginners
2018-09-27 04:01:07	-->	kimundi (kimundi@moz-bvk6ha.versanet.de) has joined #rust-beginners
2018-09-27 04:01:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:01:45	-->	asyncsec (asyncsec@moz-kuo9b2.dyn6.twc.com) has joined #rust-beginners
2018-09-27 04:01:47	-->	subhojit777 (subhojit777@moz-eq4.h9p.163.122.IP) has joined #rust-beginners
2018-09-27 04:02:10	<--	ufobat_ (Martin@moz-cej76t.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 04:02:21	<--	asyncsec (asyncsec@moz-kuo9b2.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 04:03:24	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:03:55	-->	brucem (textual@moz-qond45.ivsr.hm43.9800.2405.IP) has joined #rust-beginners
2018-09-27 04:04:00	<--	niconii (nicole@moz-3gm7fk.midco.net) has quit (Quit: leaving)
2018-09-27 04:04:19	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 04:08:01	-->	kermi (Mibbit@moz-aeo.98u.74.47.IP) has joined #rust-beginners
2018-09-27 04:08:51	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 04:08:54	--	U007D is now known as U007D_afk
2018-09-27 04:10:01	<--	kermi (Mibbit@moz-aeo.98u.74.47.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 04:10:28	--	U007D_afk is now known as U007D
2018-09-27 04:10:43	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 04:11:43	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 04:12:23	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:12:32	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 04:13:22	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:14:49	-->	syncplicity (sync@moz-45f8qb.l7ea.7e6v.fb90.2607.IP) has joined #rust-beginners
2018-09-27 04:15:18	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 04:16:57	<--	mib_qc5mbb (Mibbit@moz-uc1288.optusnet.com.au) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 04:17:15	Schmeckinger	hi
2018-09-27 04:18:39	<--	brucem (textual@moz-qond45.ivsr.hm43.9800.2405.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-27 04:19:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:20:28	--	U007D is now known as U007D_afk
2018-09-27 04:22:57	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-27 04:23:43	--	U007D_afk is now known as U007D
2018-09-27 04:24:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 04:24:29	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-27 04:26:37	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:26:49	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 04:28:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:29:43	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:33:43	--	U007D is now known as U007D_afk
2018-09-27 04:34:45	-->	Brenevin (Brenevin@moz-udq.mhs.98.155.IP) has joined #rust-beginners
2018-09-27 04:35:17	-->	sgift_ (madison@moz-dahr74.7tqg.ttkk.0a61.2001.IP) has joined #rust-beginners
2018-09-27 04:35:40	Brenevin	If I know that a multiplier is always going to be a multiple of 32, is there a micro-optimization available to transform x*i (i is the multiplier) into a different operation using bitshifting?
2018-09-27 04:35:43	Brenevin	Or something similar?
2018-09-27 04:36:11	Brenevin	Of course, the compiler would do this by implementing it in assembly, which doesn't help me learn how it would be done on the programming-language level.
2018-09-27 04:36:50	Brenevin	I'm seeing lots of results where DIVISION can be optimized by some magical calculations that are somehow beyond my grasp right now, but not much about multiplication.
2018-09-27 04:36:55	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-27 04:38:32	<--	sgift (madison@moz-jakjsg.7tqg.ttkk.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:38:52	--	U007D_afk is now known as U007D
2018-09-27 04:38:56	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:39:00	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 04:39:34	<--	Guest61891 (nj0rd@moz-0h9in8.dsl.tropolys.de) has quit (Ping timeout: 121 seconds)
2018-09-27 04:41:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 04:45:15	Schmeckinger	do you have an example what the multiplication would look like?
2018-09-27 04:45:44	Schmeckinger	Brenevin
2018-09-27 04:46:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:46:15	emerentius_	Brenevin: if you're still going to need a multiplication
2018-09-27 04:46:23	emerentius_	I don't think shifting will help
2018-09-27 04:47:05	emerentius_	also multiplication is pretty fast already
2018-09-27 04:47:40	emerentius_	this gives a good explanation of how division by constants can be optimized to multiplication and shifting
2018-09-27 04:47:41	emerentius_	http://ridiculousfish.com/blog/posts/labor-of-division-episode-i.html
2018-09-27 04:48:40	Brenevin	emerentius_: With compiler optimization turned on, absolutely. Unfortunately, it's way above my understanding/implementation level.
2018-09-27 04:49:06	Brenevin	Schmeckinger: Something like int j = i*dim, where dim is a multiple of 32
2018-09-27 04:49:15	Brenevin	will always be a multiple of 32
2018-09-27 04:49:46	Brenevin	but i can't think of any easy way of programmatically determining how many shifts and what constant i should use
2018-09-27 04:50:21	Brenevin	emerentius_: should have prepared you; this is a homework question, so it's full of all sorts of stupid bull, like we can't just implement it in ASM
2018-09-27 04:50:36	-->	ibrokemypie (conor@moz-o7h.ae8.124.1.IP) has joined #rust-beginners
2018-09-27 04:51:24	emerentius_	Brenevin: how do you know it's faster?
2018-09-27 04:51:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 04:51:43	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 04:52:16	-->	Guest61891 (nj0rd@moz-n1c998.dsl.tropolys.de) has joined #rust-beginners
2018-09-27 04:53:37	--	U007D is now known as U007D_afk
2018-09-27 04:53:52	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 04:54:42	<--	ibrokemypie (conor@moz-o7h.ae8.124.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 04:54:53	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-27 04:55:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:00:03	Brenevin	emerentius_: Well, I believe that integer multiplication is much slower than just shifting registers, and that integer multiplication takes more cycles the bigger the int is. Is that right?
2018-09-27 05:01:49	Schmeckinger	but if you take for example x * 32 * 3
2018-09-27 05:03:47	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-27 05:03:47	<--	wolf2k_huh (wolfman2000@moz-rltqss.ga.comcast.net) has quit (Connection closed)
2018-09-27 05:03:47	<--	Salek (salek@moz-v8mq95.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-27 05:03:47	<--	WindowsBunny (Bunny@moz-f75.72t.143.75.IP) has quit (Connection closed)
2018-09-27 05:03:47	<--	akhiros (Akhiros@moz-amu.8kj.45.50.IP) has quit (Connection closed)
2018-09-27 05:03:47	<--	scottmcm (scottmcm@moz-7c1586.wa.comcast.net) has quit (Connection closed)
2018-09-27 05:03:47	-->	madison__ (madison@moz-bbl4dl.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-27 05:03:47	-->	zmt98 (zmt@moz-teule8.sndgca.sbcglobal.net) has joined #rust-beginners
2018-09-27 05:03:47	<--	Gertm (gert@moz-ga73mo.isp.belgacom.be) has quit (Connection closed)
2018-09-27 05:03:47	-->	user404d_ (quincycondu@moz-pap.qup.193.64.IP) has joined #rust-beginners
2018-09-27 05:03:47	<--	QwertyDragon_ (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Connection closed)
2018-09-27 05:03:47	-->	hamsteri_ (hamsteri@moz-rf0.e1o.73.77.IP) has joined #rust-beginners
2018-09-27 05:03:47	<--	stl (stl@moz-pusnkm.broadband.corbina.ru) has quit (Connection closed)
2018-09-27 05:03:47	-->	Salek (salek@moz-v8mq95.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-27 05:03:47	<--	troyvoy88 (troyvoy88@moz-vuc.e8e.112.62.IP) has quit (Connection closed)
2018-09-27 05:03:47	-->	Gertm (gert@moz-m13.10r.67.87.IP) has joined #rust-beginners
2018-09-27 05:03:47	<--	hyp3rbor3ax_ (hyp3rbor3ax@moz-ch694u.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-27 05:03:47	-->	akhiros (Akhiros@moz-amu.8kj.45.50.IP) has joined #rust-beginners
2018-09-27 05:03:47	-->	nthro (ryan@moz-5f0.el6.96.78.IP) has joined #rust-beginners
2018-09-27 05:03:47	-->	PeterRabbit (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-09-27 05:03:47	<--	Strom (strom@moz-34g8ue.dyn.estpak.ee) has quit (NickServ (RECOVER command used by Strom-))
2018-09-27 05:03:47	-->	Strom (strom@moz-34g8ue.dyn.estpak.ee) has joined #rust-beginners
2018-09-27 05:03:47	-->	QwertyDragon_ (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-27 05:03:47	-->	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has joined #rust-beginners
2018-09-27 05:03:47	-->	xorAxAx (alex@moz-l9k73a.srv.alexanderweb.de) has joined #rust-beginners
2018-09-27 05:03:47	-->	zach_ (zach@moz-cbdjgs.raasta.org) has joined #rust-beginners
2018-09-27 05:03:47	<--	Arnavion (Arnavion@moz-qhb.gim.209.104.IP) has quit (Connection closed)
2018-09-27 05:03:47	<--	dforsyth (dforsyth@moz-bkf.b9q.241.192.IP) has quit (Connection closed)
2018-09-27 05:03:47	<--	hamsteri__ (hamsteri@moz-rf0.e1o.73.77.IP) has quit (Connection closed)
2018-09-27 05:03:47	<--	zadig (arouet@moz-q01.pf0.172.163.IP) has quit (Connection closed)
2018-09-27 05:03:47	<--	eval (eval@moz-d2n.rie.25.85.IP) has quit (Connection closed)
2018-09-27 05:03:47	-->	Arnavion (Arnavion@moz-qhb.gim.209.104.IP) has joined #rust-beginners
2018-09-27 05:03:47	-->	troyvoy88 (troyvoy88@moz-vuc.e8e.112.62.IP) has joined #rust-beginners
2018-09-27 05:03:47	-->	cjm_ (c@moz-0mn.m4j.8.24.IP) has joined #rust-beginners
2018-09-27 05:03:47	<--	gildegoma (gildegoma@moz-jpg.f0l.59.139.IP) has quit (Error in the push function.)
2018-09-27 05:03:47	Schmeckinger	it would be faster to multiply by 96 than to shift and then multiply by 3
2018-09-27 05:03:47	Schmeckinger	always shifting would only work if (x * 32 * y) y would be a power of 2
2018-09-27 05:03:47	-->	BDH_ (BDH@moz-k5a.s01.91.192.IP) has joined #rust-beginners
2018-09-27 05:03:47	-->	wolfman2000 (wolfman2000@moz-rltqss.ga.comcast.net) has joined #rust-beginners
2018-09-27 05:03:50	<--	awe (awe@moz-k5s5e5.club) has quit (Connection closed)
2018-09-27 05:03:50	-->	eval (eval@moz-d2n.rie.25.85.IP) has joined #rust-beginners
2018-09-27 05:03:52	-->	dforsyth (dforsyth@moz-bkf.b9q.241.192.IP) has joined #rust-beginners
2018-09-27 05:03:54	-->	isHavvy (Havvy@moz-u0u.3ij.115.97.IP) has joined #rust-beginners
2018-09-27 05:03:54	<--	ajd (ajd@moz-ldd7ol.fs1g.619c.a880.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:03:54	<--	peschkaj (sid156955@moz-82fgtn.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:03:55	-->	emerentius (emerentius@moz-215tg4.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 05:03:57	<--	mmun (sid13585@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:03:59	<--	bgmarx (sid288018@moz-suhljh.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:03:59	<--	context (context@moz-becpij.zro.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:00	<--	rkruppe (sid288677@moz-vrtooq.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:00	<--	dherman (sid7996@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:00	-->	gildegoma (gildegoma@moz-jpg.f0l.59.139.IP) has joined #rust-beginners
2018-09-27 05:04:02	<--	Sapphirus (Sapphirus@moz-ch7hri.sapphirus.org) has quit (Connection closed)
2018-09-27 05:04:02	-->	scottmcm (scottmcm@moz-7c1586.wa.comcast.net) has joined #rust-beginners
2018-09-27 05:04:03	<--	andoriyu (andoriyu@moz-i38dv8.d8te.uek4.e000.2605.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:03	<--	deanedridge (sid306704@moz-qpjerr.stonehaven.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:03	<--	chandlore (sid259138@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:05	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:05	<--	cukier (sid268358@moz-cglp3s.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:05	<--	erickt (sid152955@moz-t3hc1c.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:05	<--	fireglow (fireglow@moz-c48epn.su) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:05	<--	teozkr (sid1463@moz-nfkgfb.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:05	<--	Lymia (lymia@magical.girl.lyrical.lymia.moe) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:06	<--	prikk_ (sid39882@moz-k90njt.brockwell.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:06	<--	asimpson (adam@moz-gefiou.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:06	<--	cbrewster (sid158375@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:07	-->	ay_ (ay@moz-l0u.p17.82.140.IP) has joined #rust-beginners
2018-09-27 05:04:07	-->	andoriyu (andoriyu@moz-2i7ju6.res.rr.com) has joined #rust-beginners
2018-09-27 05:04:08	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:11	-->	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-27 05:04:11	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:11	<--	Intrainos_ (sid87698@moz-9caqvk.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:11	<--	mrsolo (sid27905@moz-1nrm2r.charlton.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:12	<--	gluegadget (sid22336@moz-2a0ro1.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:14	<--	dvn (dvn@moz-jvgdui.janky.solutions) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:15	<--	Kamuela (sid111576@moz-3giuc5.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:15	<--	zgrep (sid43445@moz-oao9lb.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:15	<--	olinkl (sid102653@moz-s103bo.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:15	<--	HeN (sid173181@moz-ahb89l.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:15	<--	jmct (sid160793@moz-o0p3u0.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:15	<--	jkkm (sid181533@moz-2va6as.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:16	<--	jzelinskie (sid17772@moz-8k8jts.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:16	<--	cyjiao (sid251714@moz-7jt5ac.stonehaven.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:16	<--	Nilium (Nilium@moz-uft633.io) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:16	<--	matrim_ (matrim_@moz-2envqn.compute.amazonaws.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:18	<--	lanzafame (sid268998@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:19	<--	Amaranth (Amaranth@moz-ev9kc3.ip-158-69-219.net) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:04:19	<--	callahad (dan@moz-rb8s4i.io) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:04:19	<--	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:04:19	<--	azdle (azdle@moz-tb3.eb7.236.104.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:04:19	<--	wyvern (sid40333@moz-7b9ajc.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:19	<--	creationix (sid228092@moz-m8udh7.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:20	<--	icasdri (icasdri@moz-5e9.qo4.235.168.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:04:22	<--	martin-t (quassel@moz-ic0vc6.de) has quit (Quit: No Ping reply in 120 seconds.)
2018-09-27 05:04:22	<--	Aerath (Aerath@moz-sth8hf.bncfor.me) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:23	<--	r3my (sid262473@moz-ab7oau.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:24	<--	glguy (glguy@moz-7h8mga.o0eg.mkgl.01c0.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:25	<--	Defcronyke (Defcronyke@moz-fpuejq.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:25	<--	kaljaman69 (sid206194@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:26	<--	CensoredUsername (TheNSA@moz-gd0gah.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:26	<--	bruceadams (sid15869@moz-v8a3ln.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:27	<--	bigpet (uid25664@moz-d2pb8r.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:28	<--	kyren (kyren@moz-9vt58p.ic6o.knbj.9001.2603.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:28	<--	kit (sid17936@moz-6divdb.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:28	<--	myk (sid145569@moz-17ek1v.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:28	<--	svartalf (wonderland@moz-20f.mcm.166.188.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:29	<--	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:29	<--	c355e3b (sid212298@moz-1s9l3o.tooting.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:31	<--	percevalbot (supybot@moz-p0s5me.bitergia.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:31	-->	PeterCxy (PeterCxy@moz-lo3.25t.208.173.IP) has joined #rust-beginners
2018-09-27 05:04:32	<--	petrichor (sid87045@moz-h6lmku.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:33	<--	eddyb (sid155877@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:34	<--	neanias (sid218528@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:35	<--	raytiley (sid13397@moz-bp0l5n.highgate.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:35	<--	rnt (rnt@moz-fg0v8q.bc.googleusercontent.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:35	-->	Amaranth (Amaranth@moz-ev9kc3.ip-158-69-219.net) has joined #rust-beginners
2018-09-27 05:04:38	emerentius	Brenevin: if you're operating on fixed size integers, no absolutely not
2018-09-27 05:04:38	<--	rizary_ (sid220347@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:40	<--	SWW13 (SWW13@moz-4fok16.brn.li) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:40	<--	microcolonel (microcolone@moz-3q2nm5.linux-mips.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:40	<--	carols10cents (sid174149@moz-3l0cll.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:41	-->	WindowsBunny (Bunny@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-09-27 05:04:41	<--	karoofish (karoofish@moz-i43t0t.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:41	<--	mikru (mjkillough@moz-295cf4.on.firrre.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:42	<--	asd (akshay@moz-q6qs62.8rnv.rggd.6180.2400.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:42	<--	seanBE (seanBE@moz-e07.dfb.61.108.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:44	<--	worrelsik (rogererens@moz-6it.mlf.20.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:44	<--	pylbrecht (pylbrecht@moz-5bjnh6.contaboserver.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:45	<--	edmoore (sid147314@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:45	<--	brianm (sid167655@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:47	<--	scoobybejesus (sid271506@moz-0bo1s8.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:47	<--	davidtwco (sid224194@moz-rogavl.highgate.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:47	<--	guybrush (guybrush@moz-e9tbr3.buzzle.at) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:48	<--	christianpoveda (sid305436@moz-k5nh4u.charlton.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:48	<--	Minoru (minoru@moz-hckjd5.cloud.tilaa.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:49	<--	thaumavorio (thaumavorio@moz-3v88cl.io) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-27 05:04:49	<--	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has quit (Connection closed)
2018-09-27 05:04:49	<--	xitan (xitan@moz-po9q13.xenv.io) has quit (Quit: Quit.)
2018-09-27 05:04:49	<--	chasinglogic (chasinglogi@moz-hrh.47r.65.159.IP) has quit (Quit: ZNC 1.7.0+deb0+bionic1 - https://znc.in)
2018-09-27 05:04:49	<--	gonz_ (sid304396@moz-8qssdp.irccloud.com) has quit (Connection closed)
2018-09-27 05:04:49	<--	jrlusby (sid295807@moz-8qssdp.irccloud.com) has quit (Connection closed)
2018-09-27 05:04:49	<--	prataprc (sid295920@moz-8qssdp.irccloud.com) has quit (Connection closed)
2018-09-27 05:04:49	<--	alhof_ (sid218368@moz-8qssdp.irccloud.com) has quit (Connection reset by peer)
2018-09-27 05:04:49	<--	scode (sid4878@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	jshrake (sid302840@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	gjnoonan (sid95422@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	tismith (sid299009@moz-8qssdp.irccloud.com) has quit (Connection reset by peer)
2018-09-27 05:04:49	<--	sneagan (sid174158@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	antifuchs (sid10828@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	dwi (sid240145@moz-hup6d3.irccloud.com) has quit (Connection closed)
2018-09-27 05:04:49	<--	terrorjack (sid225236@moz-hup6d3.irccloud.com) has quit (Connection reset by peer)
2018-09-27 05:04:49	<--	banks (sid143431@moz-hup6d3.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	enigmeta_ (sid31405@moz-hup6d3.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	scott (sid25790@moz-hup6d3.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	micrypt_ (sid2865@moz-hup6d3.irccloud.com) has quit (Connection reset by peer)
2018-09-27 05:04:49	<--	notbrent (sid5121@moz-hup6d3.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:04:49	<--	xavex (X@moz-t6f7su.s.time4vps.cloud) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-27 05:04:49	<--	samrg472 (samrg472@moz-h8tjvk.clients.your-server.de) has quit (Quit: Going away...)
2018-09-27 05:04:49	<--	dutchie (jholland@moz-ijqhdc.t6tf.mjp6.0ba8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:50	<--	zacmps (zacmps@moz-b7ne34.apvl.el68.7000.2407.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:50	<--	moobar (sid171730@moz-ahlgle.brockwell.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:51	-->	xitan (xitan@moz-po9q13.xenv.io) has joined #rust-beginners
2018-09-27 05:04:51	-->	Sapphirus (Sapphirus@moz-ch7hri.sapphirus.org) has joined #rust-beginners
2018-09-27 05:04:51	<--	jasper (jasperm@moz-7p9p7i.ipv6.he.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:52	<--	jcnmark6 (jcnmark6@moz-954582.clients.your-server.de) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-27 05:04:53	-->	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has joined #rust-beginners
2018-09-27 05:04:53	<--	riginding (sid156726@moz-hup6d3.irccloud.com) has quit (Connection closed)
2018-09-27 05:04:53	<--	inglesp (sid16306@moz-b77ftn.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:54	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-27 05:04:54	<--	mjl (sid16781@moz-5pec6l.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:54	<--	qyliss^work (qyliss@moz-c1t3ic.vg0l.mjp6.0ba8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:55	<--	graphitemaster (graphitemas@moz-3l1gea.i2gt.qoll.a880.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:55	<--	ivegotasthma (ivegotasthm@moz-h2dh1l.goo4.s8ul.07c8.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:55	-->	samrg472 (samrg472@moz-h8tjvk.clients.your-server.de) has joined #rust-beginners
2018-09-27 05:04:56	<--	dabukalam (dabukalam@moz-c6ik87.abukalam.com) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:04:56	-->	Starlit-Ghost (SG@starlitghost.xyz) has joined #rust-beginners
2018-09-27 05:04:57	<--	vorot93-M (vorot93mat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:57	<--	ahkurtz_ (sid194973@moz-6sfeh2.charlton.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:57	<--	ikjo-M (ikjomatrix@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:57	<--	dl3br-M (dlebrechtm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:57	<--	echopraxia-M (echopraxia@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:57	<--	jakswa-M (jakswamatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:57	<--	TheSirC-M (thesircmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:57	<--	e7fd44f9c0-M (e7fd44f9c0@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:57	<--	eGe (erkka@moz-9qalgf.me) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:58	<--	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 05:04:58	<--	drunner-M (drunnermat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:58	<--	troyvoy88-M (troyvoy88m@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:58	<--	HER0_01 (her0matrix@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:58	<--	bltavares (bltavares@moz-r67.6er.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	sqwishy (sqwishy@moz-apuelp.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	physpi (sid161004@moz-nh6903.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	elomatreb (elomatreb@moz-ev25t9.am) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	lavieestdure-M (lavieestdu@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	tmccrmck-M (tmccrmckma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	hiotz-M (hiotzmatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	fuzen-M (fuzenmatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	eoinoneill-M (theyokaima@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	ynakao-M (ynakaomatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	georich-M (georichmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:04:59	<--	strmpnk (sid2261@moz-c4lgk7.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:00	<--	arctodus (uid322408@moz-skj3ml.highgate.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:00	<--	vasily (sid127482@moz-srdb6d.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:00	-->	jcnmark6 (jcnmark6@moz-954582.clients.your-server.de) has joined #rust-beginners
2018-09-27 05:05:01	-->	spacekookie_ (ThinkCat@moz-0fu.hnc.212.173.IP) has joined #rust-beginners
2018-09-27 05:05:01	<--	laghee (uid283072@moz-n905qf.charlton.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	-->	chasinglogic (chasinglogi@moz-hrh.47r.65.159.IP) has joined #rust-beginners
2018-09-27 05:05:02	<--	prg (prg@moz-ahctar.gm69.tl8k.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	<--	recesfulu (recesfulu@moz-k4acsh.pool6.digikabel.hu) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	<--	tantio-M (tantiomatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	<--	tangleloop-M (tangleloop@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	<--	fifr[m] (fifrdisroo@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	<--	runelabs-M (runelabsma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	<--	silwol-M (silwolmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	<--	hunter_lester-M (hunterlest@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:02	<--	mstea (mistym@moz-cv1ldm.8rnv.rggd.6180.2400.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:04	<--	weeji (jihi@moz-ntfciq.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:04	<--	dav1d (dav1d@moz-5e2ht0.8ovk.lncg.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:05	<--	s0lar1s (quassel@moz-kdn.e8h.199.198.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:05:05	-->	awe (awe@moz-k5s5e5.club) has joined #rust-beginners
2018-09-27 05:05:05	<--	krishnab (uid228852@moz-hu5sdj.highgate.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:06	-->	azdle (azdle@moz-tb3.eb7.236.104.IP) has joined #rust-beginners
2018-09-27 05:05:06	<--	huhlig (sid17687@moz-vpjj03.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:06	<--	Dinnerbone (dinnerbone@moz-n883uc.is.dinnerbone.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:07	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:07	<--	uberjay (uberjay@moz-3jlplg.paradoxical.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:08	<--	D_ (D_@moz-v7iusd.adsl.inetia.pl) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:05:08	<--	heftig (heftig@soyuz.archlinux.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:08	<--	svenstaro (svenstaro@moz-4uavuc.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:09	-->	jrlusby (sid295807@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:09	-->	brianm (sid167655@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:09	-->	scode (sid4878@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:09	<--	WakiMiko (WakiMiko@moz-lcmap3.irt6.onk9.04f8.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:09	<--	mtsr-M (mtsrmatrix@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:09	-->	dwi (sid240145@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:09	-->	banks (sid143431@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:09	-->	tismith (sid299009@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:09	-->	notbrent (sid5121@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	<--	Porkepix (Porkepix@moz-b7geln.i940.2e4u.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:10	-->	rizary_ (sid220347@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	-->	gonz_ (sid304396@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	-->	sneagan (sid174158@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	-->	jshrake (sid302840@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	-->	lanzafame (sid268998@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	-->	edmoore (sid147314@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	-->	micrypt_ (sid2865@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	-->	chandlore (sid259138@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:10	-->	richo2 (richo@moz-0r0.lsm.199.198.IP) has joined #rust-beginners
2018-09-27 05:05:11	<--	zero (zero@moz-n1t.aek.101.46.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:11	<--	vdemeester (sid152725@moz-qoajec.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:11	-->	mmun (sid13585@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:11	-->	eddyb (sid155877@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:12	<--	mbudde (mbuddematr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:12	<--	jayaura (aurabindom@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:12	-->	dherman (sid7996@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:13	<--	rotty (rotty@moz-07gt5n.chaostreff.at) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:14	-->	prataprc (sid295920@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:14	-->	alhof_ (sid218368@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:14	-->	antifuchs (sid10828@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:14	-->	neanias (sid218528@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:14	-->	jazzpi (jazzpi@moz-i6l8pk.space) has joined #rust-beginners
2018-09-27 05:05:14	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:14	<--	nkr (nkr@moz-78ijmm.hc92.dkk4.0180.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:14	<--	voltagex_ (sid133004@moz-kmoj30.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:15	-->	riginding (sid156726@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:15	-->	terrorjack (sid225236@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:15	-->	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-27 05:05:15	<--	Wolvereness (wolfe@moz-9cn80m.uogf.1p11.fcd0.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:15	-->	scott (sid25790@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:15	-->	kaljaman69 (sid206194@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:16	<--	stew (stew@moz-atr.rj4.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:17	<--	dwigton (daniel@moz-k1mj8s.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:17	<--	richo1 (richo@moz-slrmp8.fs1g.619c.a880.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:17	-->	gjnoonan (sid95422@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:18	<--	jml (sid162989@moz-r6e2pi.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:18	<--	neersighted (sid5776@moz-1vtoql.brockwell.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:20	<--	dRk (drk@moz-d658v0.tgcs.h4up.067c.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:20	<--	japaric|busy (japaric@moz-bl4anq.fjft.rf83.0bc8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:20	<--	Frans-Willem (quassel@moz-oa4g6h.dynamic.ziggo.nl) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:05:20	-->	cbrewster (sid158375@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:21	-->	enigmeta_ (sid31405@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:05:22	<--	ystreet01 (ystreet00@moz-7b2gdo.f9ps.qaqf.8901.2400.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:22	<--	esty (esty@moz-g5g251.red) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:23	-->	ystreet00 (ystreet00@moz-mkp.lgm.200.185.IP) has joined #rust-beginners
2018-09-27 05:05:23	<--	beachjar (sid183232@moz-rg73q1.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:24	<--	dormiens (alanjcfs@moz-04u.dnf.241.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Siilwyn-M (siilwynmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	rtlich-M (rotmatrixo@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Singularity-M (singularit@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	moltonel-M (moltonelma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	madmax28-M (madmax28ma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	KernelWard-M (kernelward@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	OneEyed-M (oneeyedmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	KremorAFK-M (kremormatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Jan-M (unsetmatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	FSMaxB-M (fsmaxbmaxb@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	kenden-M (jhartshorn@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	flegmatyk (michalrmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	jaybee-M (jaybeematr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	JulianSparber-M (iamjsparbe@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Cezz-M (cezzlomnik@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	musoke-M (musokematr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	melonballas-M (melonballa@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	rayascott-M (rayascottm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Ronaldho80-M (ronaldho80@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Falconix-M (anderskali@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	dreuter-M (dreutermat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	mathk-M (mathkmatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	thejonny-M (thejonnyma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	neosam-M (neosammatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Tristan_78-M (tristan78m@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	gheoan-M (gheoanmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	willem-M (willemmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	marius_k-M (mariuskmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	tlam-M (tlammatrix@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	syncplicity (sync@moz-45f8qb.l7ea.7e6v.fb90.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Debaran (none@moz-duk0lh.2tf0.65v1.f058.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	mustaqim-M (mustaqimma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	danneu (sid138319@moz-bphcs4.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	jwilm (jwilm@moz-d8jirl.fs1g.619c.a880.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	h_ndrik (hndrikmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	vzaa-M (wololokata@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	ehooper-M (ehoopermat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	fdr-M (fdrmatrixo@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	frunobulax-M (frunobulax@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	hamburglar-M (jessopherm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	Chloe-M (illyamatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	conscio-M (consciomat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	hobofan-M (hobofanmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	MolarAmbiguity-M (molarambig@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	refpga-M (aynahmatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	ijks (ijksmatrix@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	diegoca-M (diegocamat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	tjamaan-M (tjamaanmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:26	<--	KevinMGranger[M] (kevinmgran@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:27	<--	kamalmarhubi (sid26581@moz-b77777.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:27	<--	cjm (c@moz-0mn.m4j.8.24.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:27	<--	Giggaflop (quassel@moz-1t432j.t6sr.gfbq.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:27	<--	jel (sid196086@moz-00943s.charlton.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:27	<--	barzi-M (barzimatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:27	<--	SergioB (sbenitezma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:28	<--	timsim (sid201842@moz-546u3d.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:28	<--	TimoKoesters-M (timokoeste@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:28	<--	fuse512-M (fuse512mat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:28	<--	michel_slm (michel-slm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:28	<--	druzky-M (druzkymatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:29	<--	damiano (quassel@moz-1rie8v.pibit.ch) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:05:29	-->	rusty_dever2 (paschoul@moz-7o9fot.zam.kfa-juelich.de) has joined #rust-beginners
2018-09-27 05:05:29	Brenevin	Hmm.
2018-09-27 05:05:29	<--	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:30	<--	Razaekel (Astra@moz-vsm.kin.236.104.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:05:30	<--	danecando (danecando@moz-b76u9n.sdba.4jle.1700.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:30	<--	bfritz (brad@moz-6c3034.fewerhassles.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:30	<--	lara (lara@moz-t7stsh.eu) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:30	<--	M73arqo-M (m73arqomat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:30	<--	jmnx-M (jmnxmatrix@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:31	<--	xet7 (xet7@moz-f2l2ri.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:31	<--	ploft-shell (sid27279@moz-blc7fm.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:31	<--	zach (zach@moz-cbdjgs.raasta.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:31	<--	joepie91 (sven@moz-r8br6g.fu26.hgeq.0980.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:31	<--	notafile-M (notafilema@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:31	<--	radix-M (radixmatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:31	<--	phaiax-M (phaiaxmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:32	<--	sgift_ (madison@moz-dahr74.7tqg.ttkk.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:32	<--	emerentius_ (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:32	<--	Sgeo (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:32	<--	ay (ay@moz-dijbet.357i.tl8k.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:32	<--	lucus (quassel@moz-0128j4.rasusan.nl) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:32	<--	BDH (BDH@moz-k5a.s01.91.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:32	<--	joehillen (joehillen@moz-236d99.fkdv.ulf6.3c01.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:32	<--	mteufel (mteufel@moz-34h992.urandom.eu.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:33	<--	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:33	<--	Walther (walther@moz-bmdn13.kapsi.fi) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:33	<--	blackbeard420 (blackbeard4@moz-m3fks9.4j5e.qia1.3c03.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:34	<--	moritzheiber (moritzheibe@moz-mbam7c.heiber.im) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:34	<--	andyy-M (andyymatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:34	<--	nyaray (sid4661@moz-iqut0j.brockwell.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	vissl (vissl@moz-j3cina.brq0.flml.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	ventos (ventos@moz-hb2ubo.coding4.coffee) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	ilmari_ (ilmarimatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	rustonaut (rustonautm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	jstone-M (jstonematr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	idubrov (idubrovmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	runbmp-M (runbmpmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	Boscop-M (boscopmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	RaymondFoley-M (raymondfol@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	magnap (magnapmagn@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:35	<--	MatrixTraveler-M (voyagert2b@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 05:05:36	<--	swampflared (zmt@moz-n82mr0.g40m.cfl6.1700.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:36	<--	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:36	<--	yath (yath@moz-masl5h.yath.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:36	<--	rusty_worker (paschoul@moz-f8jven.tsmb.a7dq.0638.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:37	<--	UnlawfulMonad (unlawfulm@moz-65qdhr.ltu1.t7vv.a880.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:37	<--	rkusa (rkusamatri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:37	<--	sgibbs (sgibbsmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:37	<--	traumschule (traumschule@moz-7u5okn.schokokeks.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	-->	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has joined #rust-beginners
2018-09-27 05:05:38	<--	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	ct16k (ryan@moz-5f0.el6.96.78.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	voice_ftp (voiceftp@moz-i3f0e0.academ.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	foophoof (sid209755@moz-ft1khq.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	richinseattle (sid176720@moz-nsg7td.stonehaven.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	lithammer (peter@moz-bk1sbi.d1cd.hotg.2770.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	waldson-M (waldsonmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	gohyda-M (gohydamatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	ragne-M (ragnematri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	AMoose-M (narnymarsm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	clefranco-M (clefrancom@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	bbatha-M (bbathamatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	shanipribadi-M (shanipriba@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	jjmarin-M (jjmarinmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	wehlutyk (wehlutykma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	Jtremback-M (jtrembackm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	Clar-M (clarcharrm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:38	<--	groves (grovesmatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:39	<--	AbrarSyed (AbrarSyedZN@moz-18co96.abrarsyed.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:39	<--	Ycros (ycros@moz-f8shio.ycros.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:39	<--	ephemeron (ephemeron@moz-ghv.c0i.131.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:40	<--	CognitiveRadiation (cognitive@moz-0scgij.heun.bj6h.0644.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:40	<--	snome-M (snomematri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:40	<--	neosam-M1 (neosamma1@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:40	<--	jturner314 (jturner314@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:41	<--	hlieberman (sid17492@moz-ldevbc.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:41	<--	qwandor (quassel@moz-3ec462.logu.bbq3.19f0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:41	<--	gicmo (gicmo@moz-f1migp.xatom.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:41	<--	tamatar (sid206398@moz-bthcle.charlton.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:41	<--	salazar_0418 (quassel@moz-o353h8.playavara.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:41	<--	rqou (rqou@moz-s49t10.malware.xn--xi7a.xn--j6w193g) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:42	<--	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:42	<--	devurandom (quassel@moz-43g9on.kynes.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:42	<--	alatiera1 (alatierama@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:43	-->	voiceftp (voiceftp@moz-i3f0e0.academ.org) has joined #rust-beginners
2018-09-27 05:05:43	<--	adi (adi@moz-omejp7.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:43	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:43	<--	gregbowyer_ (sid85254@moz-7umckp.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:43	<--	adrianbrink (sid204313@moz-gao0gj.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:43	<--	BuddyCasino (sid291636@moz-e0jd2o.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:43	<--	sindre (sindre@moz-t1k057.20n4.mjp6.0ba8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:43	<--	Forkk (forkk@moz-i5pbqp.kslv.dq2b.3c00.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:44	<--	marte-M (martematri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:44	<--	BrunoWindels-M (bwindelsma@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:44	<--	thomasgardner-M (thomasgard@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:44	<--	BobbyReynolds-M (bobbyreyno@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:44	<--	Charles-M (charleschr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:44	<--	pd (pd@moz-07d.36n.203.159.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:45	-->	joepie91 (sven@moz-amr49d.adsl.xs4all.nl) has joined #rust-beginners
2018-09-27 05:05:45	<--	Xion (xion@moz-dc662c.nrni.kv86.79e0.2a00.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:45	<--	PyroLagus (PyroLagus@moz-6a3juu.on.coding4coffee.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:45	<--	Xenith (xenith@moz-n5ujuj.xenith.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:45	<--	Soif-M (soifmatrix@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:45	<--	steveeJ|firrre (steveeJ@moz-gaqel0.3loo.q5uh.b0c0.2a03.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:46	<--	dalley (dalley@moz-uo550c.dyn6.twc.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:46	<--	ag_dubs (sid27508@moz-g5atek.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:46	<--	almonsin (quassel@moz-ltbhcp.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:46	<--	bstrie (punkin@moz-cj5.jf3.99.167.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:47	-->	glguy (glguy@moz-4tck6m.or.comcast.net) has joined #rust-beginners
2018-09-27 05:05:47	<--	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:47	<--	StarlitGhost (SG@2604:a880:800:a1::12:e001) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:47	<--	saolsen (sid26430@moz-t1s9le.charlton.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:47	<--	MelonBread-M (melonbread@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:47	<--	RogerWilcos-M (rogerwilco@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:47	<--	heartoneto-M (heartoneto@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:47	<--	bglm-M (bglmmatrix@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:47	<--	xfix (konrad@moz-450qto.borowski.pw) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:48	<--	user404d (quincycondu@moz-niui7i.carfax.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:48	<--	chrismear (sid99@moz-8agd5d.hathersage.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:48	<--	reu-M (ge1reumatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:48	<--	talvdav-M (talvdavmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:48	<--	iuyte-M (iuytematri@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:48	<--	rawrmonstar-M (rawrmonsta@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:48	<--	sameyepatch-M (sameyepatc@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:48	<--	spacekookie (ThinkCat@moz-bsfnsc.contaboserver.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:49	<--	bkhl (bkhl@moz-td7jhp.hcoop.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:49	<--	fasiha-M (fasihamatr@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:49	<--	Atomicbit-M (atomicbitm@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:49	<--	reedcourty-M (reedcourty@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:49	<--	LaRueGT (laruegtmat@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:49	<--	spastorino (spastorino@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:50	<--	gregg (greg@moz-00mjdg.gnumpf.tk) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:50	<--	erich_ (erich@moz-usk.7m2.55.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:50	<--	mos_basik (quassel@moz-1hi0qb.sk83.bjud.7e00.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:51	<--	manveru (sid26204@moz-0g7cme.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:51	<--	billiob (billiob@moz-0ilt8a.fau.re) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:51	<--	totempaaltj-M (totempaalt@moz-522p1u.matrix.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:51	<--	sbstp (quassel@moz-8mp9u5.mmu9.a6fs.0180.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:51	<--	derekRiemer (derek@moz-p1okds.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:52	<--	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:52	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:52	<--	tinwood (tinwood@moz-vsj1j0.uk0.bigv.io) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:52	<--	voker57 (quassel@moz-d5nrn4.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:53	-->	thaumavorio (thaumavorio@moz-3v88cl.io) has joined #rust-beginners
2018-09-27 05:05:53	<--	GrayShade (quassel@moz-6h1m4k.leje.sn81.2f05.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:53	<--	ryfbhkuh (hzdeppax@moz-ru72kb.1uqv.7nqa.0642.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:53	<--	meretrix (meretrix@moz-fsto1j.32qj.2b5c.fa98.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:53	<--	drager (drager@moz-5c071a.phsp.7c32.b0c0.2a03.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:53	<--	xanewok-q (quassel@moz-sfbm46.sk83.bjud.7e00.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:54	-->	zacmps (zacmps@moz-lekb76.vf.net.nz) has joined #rust-beginners
2018-09-27 05:05:54	-->	hyp3rbor3ax (hyp3rbor3ax@moz-ch694u.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 05:05:54	<--	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:55	-->	martin-t (quassel@moz-ic0vc6.de) has joined #rust-beginners
2018-09-27 05:05:56	<--	PeterRabbitIsFluffy (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:05:58	<--	rseymour (rseymour@moz-rq74fd.pw) has quit (Ping timeout: 121 seconds)
2018-09-27 05:06:00	-->	icasdri (icasdri@moz-5e9.qo4.235.168.IP) has joined #rust-beginners
2018-09-27 05:06:04	<--	adray (aray@moz-mjh.tl0.65.159.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:06:05	<--	axjt (Mibbit@moz-7kbl4a.customer.cdi.no) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 05:06:07	-->	dabukalam (dabukalam@moz-c6ik87.abukalam.com) has joined #rust-beginners
2018-09-27 05:06:13	-->	D_ (D_@moz-v7iusd.adsl.inetia.pl) has joined #rust-beginners
2018-09-27 05:06:14	-->	blackbeard420 (blackbeard4@moz-22sadg.me) has joined #rust-beginners
2018-09-27 05:06:14	<--	bodie (bodie@moz-0d7.259.197.138.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:06:16	-->	s0lar1s (quassel@moz-kdn.e8h.199.198.IP) has joined #rust-beginners
2018-09-27 05:06:17	<--	vegai (vegai@moz-l9ee3p.clients.your-server.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:06:18	<--	Havvy (Havvy@moz-u0u.3ij.115.97.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:06:22	-->	bfritz (brad@moz-6c3034.fewerhassles.com) has joined #rust-beginners
2018-09-27 05:06:24	-->	seanBE (seanBE@moz-e07.dfb.61.108.IP) has joined #rust-beginners
2018-09-27 05:06:24	-->	prg (prg@moz-ntdfvd.com) has joined #rust-beginners
2018-09-27 05:06:26	-->	bkhl (bkhl@moz-td7jhp.hcoop.net) has joined #rust-beginners
2018-09-27 05:06:28	-->	Forkk (forkk@moz-4sb96k.members.linode.com) has joined #rust-beginners
2018-09-27 05:06:28	-->	pd (pd@moz-07d.36n.203.159.IP) has joined #rust-beginners
2018-09-27 05:06:29	-->	bstrie (punkin@moz-cj5.jf3.99.167.IP) has joined #rust-beginners
2018-09-27 05:06:30	-->	elomatreb (elomatreb@moz-ev25t9.am) has joined #rust-beginners
2018-09-27 05:06:30	-->	Minoru (minoru@moz-hckjd5.cloud.tilaa.com) has joined #rust-beginners
2018-09-27 05:06:30	-->	rseymour (rseymour@moz-rq74fd.pw) has joined #rust-beginners
2018-09-27 05:06:31	-->	Razaekel (Astra@moz-vsm.kin.236.104.IP) has joined #rust-beginners
2018-09-27 05:06:31	-->	damiano (quassel@moz-1rie8v.pibit.ch) has joined #rust-beginners
2018-09-27 05:06:33	-->	worrelsik (rogererens@moz-6it.mlf.20.185.IP) has joined #rust-beginners
2018-09-27 05:06:35	<--	obiwahn (heini@moz-a76ho4.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:06:37	-->	Giggaflop (quassel@moz-8nrie9.org) has joined #rust-beginners
2018-09-27 05:06:38	-->	Frans-Willem (quassel@moz-oa4g6h.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-27 05:06:39	-->	ephemeron (ephemeron@moz-ghv.c0i.131.104.IP) has joined #rust-beginners
2018-09-27 05:06:40	-->	dormiens (alanjcfs@moz-04u.dnf.241.192.IP) has joined #rust-beginners
2018-09-27 05:06:40	-->	stew (stew@moz-atr.rj4.243.162.IP) has joined #rust-beginners
2018-09-27 05:06:46	Schmeckinger	what is happening
2018-09-27 05:06:47	-->	devurandom (quassel@moz-6uk9od.kynes.de) has joined #rust-beginners
2018-09-27 05:06:48	-->	Ycros (ycros@moz-f8shio.ycros.org) has joined #rust-beginners
2018-09-27 05:06:49	-->	context (context@moz-becpij.zro.net) has joined #rust-beginners
2018-09-27 05:06:50	--	bstrie is now known as Guest19041
2018-09-27 05:06:50	-->	salazar_0418 (quassel@moz-o353h8.playavara.net) has joined #rust-beginners
2018-09-27 05:06:53	-->	rnt (rnt@moz-fg0v8q.bc.googleusercontent.com) has joined #rust-beginners
2018-09-27 05:06:56	-->	Defcronyke (Defcronyke@moz-fpuejq.com) has joined #rust-beginners
2018-09-27 05:06:57	-->	CensoredUsername (TheNSA@moz-gd0gah.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-27 05:06:58	-->	almonsin (quassel@moz-r4v86o.bb.dnainternet.fi) has joined #rust-beginners
2018-09-27 05:06:59	-->	mos_basik (quassel@moz-0ocn1j.members.linode.com) has joined #rust-beginners
2018-09-27 05:07:00	-->	guybrush (guybrush@moz-e9tbr3.buzzle.at) has joined #rust-beginners
2018-09-27 05:07:02	-->	traumschule (traumschule@moz-7u5okn.schokokeks.org) has joined #rust-beginners
2018-09-27 05:07:03	-->	svartalf (wonderland@moz-20f.mcm.166.188.IP) has joined #rust-beginners
2018-09-27 05:07:03	-->	xanewok-q (quassel@moz-7u30ul.members.linode.com) has joined #rust-beginners
2018-09-27 05:07:09	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Connection closed)
2018-09-27 05:07:13	-->	sqwishy (sqwishy@moz-eufcik.bchsia.telus.net) has joined #rust-beginners
2018-09-27 05:07:16	-->	UnlawfulMonad (unlawfulm@moz-jjc.3m4.203.159.IP) has joined #rust-beginners
2018-09-27 05:07:20	-->	vegai (vegai@moz-l9ee3p.clients.your-server.de) has joined #rust-beginners
2018-09-27 05:07:22	-->	vasily (sid127482@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:23	-->	jkkm (sid181533@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:23	-->	jel (sid196086@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:23	-->	zgrep (sid43445@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:23	-->	xavex (X@moz-t6f7su.s.time4vps.cloud) has joined #rust-beginners
2018-09-27 05:07:23	-->	carols10cents (sid174149@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:24	-->	adi (adi@moz-omejp7.vsos.ethz.ch) has joined #rust-beginners
2018-09-27 05:07:24	-->	physpi (sid161004@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:24	-->	gluegadget (sid22336@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	GrayShade (quassel@moz-27s.2c9.117.79.IP) has joined #rust-beginners
2018-09-27 05:07:25	-->	ag_dubs (sid27508@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	raytiley (sid13397@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	Kamuela (sid111576@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	olinkl (sid102653@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	krishnab (uid228852@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	petrichor (sid87045@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	creationix (sid228092@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	moobar (sid171730@moz-1vt7bj.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	strmpnk (sid2261@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:25	-->	jmct (sid160793@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:26	-->	timsim (sid201842@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:26	-->	foophoof (sid209755@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:26	-->	adrianbrink (sid204313@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:26	-->	neersighted (sid5776@moz-1vt7bj.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:26	-->	richinseattle (sid176720@moz-ne7em1.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:26	-->	bigpet (uid25664@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:27	-->	mrsolo (sid27905@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:27	-->	mjl (sid16781@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:27	-->	inglesp (sid16306@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:28	-->	laghee (sid283072@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:28	-->	christianpoveda (sid305436@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:29	-->	bruceadams (sid15869@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:29	-->	asimpson (adam@moz-gefiou.res.rr.com) has joined #rust-beginners
2018-09-27 05:07:29	--	Minoru is now known as Guest38184
2018-09-27 05:07:29	-->	cyjiao (sid251714@moz-ne7em1.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:29	-->	beachjar (sid183232@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:29	-->	carlosdagos (uid312197@moz-ne7em1.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:29	-->	nyaray (sid4661@moz-1vt7bj.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:30	-->	jml (sid162989@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:30	-->	huhlig (sid17687@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:30	-->	wyvern (sid40333@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:31	-->	Intrainos_ (sid87698@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:31	-->	BuddyCasino (sid291636@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:31	-->	r3my (sid262473@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:31	-->	saolsen (sid26430@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:32	-->	davidtwco (sid224194@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:32	-->	voker57 (quassel@moz-d5nrn4.net) has joined #rust-beginners
2018-09-27 05:07:32	-->	sbstp (quassel@moz-346.qo4.235.168.IP) has joined #rust-beginners
2018-09-27 05:07:32	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-27 05:07:32	-->	ahkurtz_ (sid194973@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:33	-->	Lil_Dropchk (uid18992@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:33	-->	hlieberman (sid17492@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:34	-->	tinwood (tinwood@moz-vsj1j0.uk0.bigv.io) has joined #rust-beginners
2018-09-27 05:07:35	-->	eyans (a@moz-0h2gdj.tbcn.telia.com) has joined #rust-beginners
2018-09-27 05:07:35	-->	gregbowyer_ (sid85254@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:35	-->	manveru (sid26204@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:36	-->	obiwahn (heini@moz-a76ho4.org) has joined #rust-beginners
2018-09-27 05:07:38	-->	ploft-shell (sid27279@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:38	-->	arctodus (uid322408@moz-hup6d3.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:39	-->	kamalmarhubi (sid26581@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:39	-->	HeN (sid173181@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:40	-->	c355e3b (sid212298@moz-8s88h1.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:40	-->	kit (sid17936@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:41	-->	myk (sid145569@moz-rp9ic4.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:42	-->	chrismear (sid99@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:44	-->	tamatar (sid206398@moz-8qssdp.irccloud.com) has joined #rust-beginners
2018-09-27 05:07:49	-->	jwilm (jwilm@moz-84q.eju.236.104.IP) has joined #rust-beginners
2018-09-27 05:07:52	-->	percevalbot (supybot@moz-p0s5me.bitergia.net) has joined #rust-beginners
2018-09-27 05:07:53	-->	zero (zero@moz-n1t.aek.101.46.IP) has joined #rust-beginners
2018-09-27 05:07:56	-->	CognitiveRadiation (cognitive@moz-5ufp9g.ca.comcast.net) has joined #rust-beginners
2018-09-27 05:08:03	-->	xfix (konrad@moz-450qto.borowski.pw) has joined #rust-beginners
2018-09-27 05:08:04	-->	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has joined #rust-beginners
2018-09-27 05:08:06	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 05:08:13	-->	lucus (quassel@moz-0128j4.rasusan.nl) has joined #rust-beginners
2018-09-27 05:08:16	-->	lithammer (peter@moz-cvdnc4.cloud.tilaa.com) has joined #rust-beginners
2018-09-27 05:08:20	-->	heftig (heftig@soyuz.archlinux.org) has joined #rust-beginners
2018-09-27 05:08:22	emerentius	Schmeckinger: netsplit
2018-09-27 05:08:24	-->	bltavares (bltavares@moz-r67.6er.243.162.IP) has joined #rust-beginners
2018-09-27 05:08:25	-->	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has joined #rust-beginners
2018-09-27 05:08:29	-->	drager (drager@moz-1dt.o7g.189.206.IP) has joined #rust-beginners
2018-09-27 05:08:32	-->	matrim_ (matrim_@moz-2envqn.compute.amazonaws.com) has joined #rust-beginners
2018-09-27 05:08:43	-->	voltagex_ (sid133004@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:08:44	-->	scoobybejesus (sid271506@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:08:47	-->	stl (stl@moz-pusnkm.broadband.corbina.ru) has joined #rust-beginners
2018-09-27 05:08:47	indigo747	So I have an enum called Literal, and one of the possible values is an mpsc::Sender with type <Literal>. The rest of Literal is Send and Sync, and while Sender is Send but not Sync, when I add Sender to Literal, Literal becomes neither Send nor Sync.
2018-09-27 05:08:52	-->	danneu (sid138319@moz-7l35ei.irccloud.com) has joined #rust-beginners
2018-09-27 05:08:53	-->	qwandor (quassel@moz-1cp17n.q.geek.nz) has joined #rust-beginners
2018-09-27 05:09:09	-->	bodie (bodie@moz-0d7.259.197.138.IP) has joined #rust-beginners
2018-09-27 05:09:29	-->	syncplicity (sync@moz-45f8qb.l7ea.7e6v.fb90.2607.IP) has joined #rust-beginners
2018-09-27 05:09:31	-->	rqou (rqou@moz-s49t10.malware.xn--xi7a.xn--j6w193g) has joined #rust-beginners
2018-09-27 05:09:31	-->	Nilium (Nilium@moz-uft633.io) has joined #rust-beginners
2018-09-27 05:09:34	-->	derekRiemer (derek@moz-p1okds.com) has joined #rust-beginners
2018-09-27 05:09:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 05:09:38	-->	PyroLagus (PyroLagus@moz-6a3juu.on.coding4coffee.org) has joined #rust-beginners
2018-09-27 05:09:39	-->	dRk (drk@moz-d658v0.tgcs.h4up.067c.2001.IP) has joined #rust-beginners
2018-09-27 05:09:40	-->	fireglow (fireglow@moz-c48epn.su) has joined #rust-beginners
2018-09-27 05:09:43	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-27 05:09:45	-->	rotty (rotty@moz-07gt5n.chaostreff.at) has joined #rust-beginners
2018-09-27 05:09:46	-->	weeji (jihi@moz-ntfciq.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 05:09:47	-->	Xion (xion@moz-dc662c.nrni.kv86.79e0.2a00.IP) has joined #rust-beginners
2018-09-27 05:09:47	-->	Lymia (lymia@magical.girl.lyrical.lymia.moe) has joined #rust-beginners
2018-09-27 05:09:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:09:48	-->	uberjay (uberjay@moz-19ghv2.zanq.org) has joined #rust-beginners
2018-09-27 05:09:48	-->	rkruppe (sid288677@moz-vrtooq.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:09:49	-->	nkr (nkr@moz-78ijmm.hc92.dkk4.0180.2604.IP) has joined #rust-beginners
2018-09-27 05:09:50	-->	mteufel (mteufel@moz-34h992.urandom.eu.org) has joined #rust-beginners
2018-09-27 05:09:50	-->	jasper (jasperm@moz-7p9p7i.ipv6.he.net) has joined #rust-beginners
2018-09-27 05:09:51	-->	SWW13 (SWW13@moz-4fok16.brn.li) has joined #rust-beginners
2018-09-27 05:09:51	-->	pylbrecht (pylbrecht@moz-evf.0df.189.5.IP) has joined #rust-beginners
2018-09-27 05:09:51	-->	Dinnerbone (dinnerbone@moz-n883uc.is.dinnerbone.com) has joined #rust-beginners
2018-09-27 05:09:51	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-27 05:09:52	-->	AbrarSyed (AbrarSyedZN@moz-18co96.abrarsyed.com) has joined #rust-beginners
2018-09-27 05:09:54	-->	graphitemaster (graphitemas@moz-3l1gea.i2gt.qoll.a880.2604.IP) has joined #rust-beginners
2018-09-27 05:09:55	-->	recesfulu (recesfulu@moz-k4acsh.pool6.digikabel.hu) has joined #rust-beginners
2018-09-27 05:09:55	-->	vdemeester (sid152725@moz-qoajec.hathersage.irccloud.com) has joined #rust-beginners
2018-09-27 05:09:56	-->	sindre (sindre@moz-t1k057.20n4.mjp6.0ba8.2001.IP) has joined #rust-beginners
2018-09-27 05:09:57	-->	moritzheiber (moritzheibe@moz-mbam7c.heiber.im) has joined #rust-beginners
2018-09-27 05:09:58	-->	erickt (sid152955@moz-t3hc1c.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:00	-->	xet7 (xet7@moz-f2l2ri.rev.dnainternet.fi) has joined #rust-beginners
2018-09-27 05:10:03	-->	lara (lara@moz-t7stsh.eu) has joined #rust-beginners
2018-09-27 05:10:13	-->	mikru (mjkillough@moz-295cf4.on.firrre.com) has joined #rust-beginners
2018-09-27 05:10:14	-->	microcolonel (microcolone@moz-3q2nm5.linux-mips.org) has joined #rust-beginners
2018-09-27 05:10:14	-->	Walther (walther@moz-bmdn13.kapsi.fi) has joined #rust-beginners
2018-09-27 05:10:14	-->	deanedridge (sid306704@moz-qpjerr.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:15	-->	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-27 05:10:20	-->	mstea (mistym@moz-ijl.i75.199.128.IP) has joined #rust-beginners
2018-09-27 05:10:20	-->	teozkr (sid1463@moz-nfkgfb.hathersage.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:20	-->	cukier (sid268358@moz-cglp3s.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:21	-->	prikk_ (sid39882@moz-k90njt.brockwell.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:22	-->	cvubrugier (cvubrugier@moz-7ruah9.voms.o72t.41d0.2001.IP) has joined #rust-beginners
2018-09-27 05:10:22	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:24	-->	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-27 05:10:25	-->	ryfbhkuh (hzdeppax@moz-8itauu.1uqv.7nqa.0642.2601.IP) has joined #rust-beginners
2018-09-27 05:10:32	-->	jzelinskie (sid17772@moz-8k8jts.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:33	-->	ivegotasthma (ivegotasthm@moz-h2dh1l.goo4.s8ul.07c8.2a01.IP) has joined #rust-beginners
2018-09-27 05:10:38	-->	peschkaj (sid156955@moz-82fgtn.hathersage.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:39	-->	ventos (ventos@moz-hb2ubo.coding4.coffee) has joined #rust-beginners
2018-09-27 05:10:43	-->	bgmarx (sid288018@moz-suhljh.hathersage.irccloud.com) has joined #rust-beginners
2018-09-27 05:10:44	-->	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has joined #rust-beginners
2018-09-27 05:10:44	-->	Debaran (none@moz-6pdmke.2tf0.65v1.f058.2607.IP) has joined #rust-beginners
2018-09-27 05:10:45	-->	joehillen (joehillen@moz-2oec0q.members.linode.com) has joined #rust-beginners
2018-09-27 05:10:48	-->	gicmo (gicmo@moz-f1migp.xatom.net) has joined #rust-beginners
2018-09-27 05:10:49	-->	dutchie (jholland@moz-i5013e.chrys.alid.pw) has joined #rust-beginners
2018-09-27 05:10:52	-->	qyliss^work (qyliss@moz-c1t3ic.vg0l.mjp6.0ba8.2001.IP) has joined #rust-beginners
2018-09-27 05:10:54	-->	japaric (japaric@moz-bl4anq.fjft.rf83.0bc8.2001.IP) has joined #rust-beginners
2018-09-27 05:10:56	-->	asd (akshay@moz-q6qs62.8rnv.rggd.6180.2400.IP) has joined #rust-beginners
2018-09-27 05:11:01	-->	dwigton (daniel@moz-k1mj8s.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 05:11:10	-->	eGe (erkka@moz-9qalgf.me) has joined #rust-beginners
2018-09-27 05:11:13	-->	esty (esty@moz-g5g251.red) has joined #rust-beginners
2018-09-27 05:11:16	-->	vissl (vissl@moz-j3cina.brq0.flml.19f0.2001.IP) has joined #rust-beginners
2018-09-27 05:11:27	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:11:27	<--	sarnold (sarnold@moz-salitc.compute.amazonaws.com) has quit (The TLS connection was non-properly terminated.)
2018-09-27 05:11:29	-->	sarnold (sarnold@moz-salitc.compute.amazonaws.com) has joined #rust-beginners
2018-09-27 05:11:31	-->	dav1d (dav1d@moz-5e2ht0.8ovk.lncg.41d0.2001.IP) has joined #rust-beginners
2018-09-27 05:11:33	-->	WakiMiko (WakiMiko@moz-lcmap3.irt6.onk9.04f8.2a01.IP) has joined #rust-beginners
2018-09-27 05:11:34	-->	autra (augustin@moz-a4ksf8.kou0.fl9b.0e0a.2a01.IP) has joined #rust-beginners
2018-09-27 05:11:36	Orez	can i not Rc<T> -> T unless T is Debug? o_O
2018-09-27 05:11:45	-->	steveeJ|firrre (steveeJ@moz-gaqel0.3loo.q5uh.b0c0.2a03.IP) has joined #rust-beginners
2018-09-27 05:11:45	-->	svenstaro (svenstaro@moz-4uavuc.de) has joined #rust-beginners
2018-09-27 05:11:50	-->	ajd (ajd@moz-ldd7ol.fs1g.619c.a880.2604.IP) has joined #rust-beginners
2018-09-27 05:11:53	-->	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has joined #rust-beginners
2018-09-27 05:12:11	-->	Porkepix (Porkepix@moz-b7geln.i940.2e4u.41d0.2001.IP) has joined #rust-beginners
2018-09-27 05:12:19	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:12:20	-->	Wolvereness (wolfe@moz-9cn80m.uogf.1p11.fcd0.2607.IP) has joined #rust-beginners
2018-09-27 05:12:21	Schmeckinger	Rc only needs T: ?Sized
2018-09-27 05:12:39	Orez	right now i've got Rc::try_unwrap(t).expect("Didn't drop all the refs :((((")
2018-09-27 05:12:42	-->	yath (yath@moz-masl5h.yath.de) has joined #rust-beginners
2018-09-27 05:13:23	-->	chrisgs (Mutter@moz-pcdf98.us.northamericancoax.com) has joined #rust-beginners
2018-09-27 05:13:33	emerentius	Orez: then it's the expect
2018-09-27 05:13:37	-->	zadig (arouet@moz-q01.pf0.172.163.IP) has joined #rust-beginners
2018-09-27 05:13:42	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:14:04	emerentius	.unwrap_or_else(|_| panic!("Didn't drop all the refs :((((")
2018-09-27 05:14:07	<--	aem34i (x@moz-0ko.0cn.165.188.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 05:14:08	-->	Xenith (xenith@moz-n5ujuj.xenith.org) has joined #rust-beginners
2018-09-27 05:14:22	emerentius	that won't try to print out the contained value
2018-09-27 05:14:25	-->	billiob (billiob@moz-0ilt8a.fau.re) has joined #rust-beginners
2018-09-27 05:14:25	-->	gregg (greg@moz-00mjdg.gnumpf.tk) has joined #rust-beginners
2018-09-27 05:14:46	-->	mib_y6jfpq (Mibbit@moz-a6f.9te.17.201.IP) has joined #rust-beginners
2018-09-27 05:15:10	mib_y6jfpq	could you please point me to benchmark section of the most recent rust book ?
2018-09-27 05:15:19	-->	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has joined #rust-beginners
2018-09-27 05:15:58	<--	chrisgs (Mutter@moz-pcdf98.us.northamericancoax.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-27 05:16:41	Schmeckinger	the book has a search function
2018-09-27 05:16:47	-->	dvn (dvn@moz-jvgdui.janky.solutions) has joined #rust-beginners
2018-09-27 05:16:56	Schmeckinger	the benchmark section points you to this https://doc.rust-lang.org/unstable-book/library-features/test.html
2018-09-27 05:17:04	Orez	emerentius: ah lemme give that a try, thanks
2018-09-27 05:17:21	Schmeckinger	but i would recommend the crate criterion for benchmarks
2018-09-27 05:18:02	-->	Aerath (Aerath@moz-sth8hf.bncfor.me) has joined #rust-beginners
2018-09-27 05:18:10	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 05:18:25	Schmeckinger	expect is in ""impl<T, E: fmt::Debug> Result<T, E>
2018-09-27 05:18:27	mib_y6jfpq	Schmeckinger: thank you, google point's me to old version using feature gate
2018-09-27 05:19:08	mib_y6jfpq	I would like to implement a single bench test running on stable
2018-09-27 05:19:24	Schmeckinger	in a bin or a lib?
2018-09-27 05:19:57	-->	karoofish (karoofish@moz-i43t0t.net) has joined #rust-beginners
2018-09-27 05:20:21	mib_y6jfpq	the root crate is bin, but the test is on inner lib crate
2018-09-27 05:20:58	Schmeckinger	Ok because testing a function in a bin without a inner lib isnt possible(i think)
2018-09-27 05:20:59	-->	kulshrax (kulshrax@moz-80q01l.j9oj.d3gv.1010.2600.IP) has joined #rust-beginners
2018-09-27 05:21:21	-->	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-27 05:21:33	Schmeckinger	https://github.com/japaric/criterion.rs
2018-09-27 05:21:44	Schmeckinger	the readme explains it pretty well
2018-09-27 05:22:23	<--	italic (italic@moz-g6bl0t.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:22:26	Schmeckinger	just copy the example and add extern crate your_lib and exchange || fibonacci(20) for your function
2018-09-27 05:22:45	mib_y6jfpq	I see, so there is also no way to do bench on stable without criterion ?
2018-09-27 05:23:36	Schmeckinger	there is a way to use the official bencher, but I was told criterion is better than the official one
2018-09-27 05:24:03	<--	carlosdagos (uid312197@moz-ne7em1.irccloud.com) has quit (Quit: )
2018-09-27 05:24:06	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-27 05:24:11	-->	cxiao (cxiao@moz-sng.ido.103.172.IP) has joined #rust-beginners
2018-09-27 05:25:09	mib_y6jfpq	feature gate is not available on stable, like #![feature(test)]
2018-09-27 05:25:11	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 05:25:37	Schmeckinger	bencher is a port for the official benchmarker that works on stable but the last update was 9 months ago
2018-09-27 05:25:54	-->	callahad (dan@moz-rb8s4i.io) has joined #rust-beginners
2018-09-27 05:26:34	Schmeckinger	benchmark tool*
2018-09-27 05:27:30	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 05:29:05	indigo747	Nevermind, I'm wrong.
2018-09-27 05:30:11	mib_y6jfpq	Schmeckinger: thanks, I am migrating to criterion
2018-09-27 05:30:38	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:30:52	<--	syncplicity (sync@moz-45f8qb.l7ea.7e6v.fb90.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:31:15	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 05:31:40	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:32:03	<--	PeterRabbit (peter@moz-f75.72t.143.75.IP) has quit (Connection closed)
2018-09-27 05:33:17	<--	akhiros (Akhiros@moz-amu.8kj.45.50.IP) has quit (Connection closed)
2018-09-27 05:33:17	<--	nthro (ryan@moz-5f0.el6.96.78.IP) has quit (Connection closed)
2018-09-27 05:33:17	<--	Gertm (gert@moz-m13.10r.67.87.IP) has quit (Connection closed)
2018-09-27 05:33:17	-->	mysteriouspants_ (mysteriousp@moz-1mr6lu.05up.2m88.8800.2600.IP) has joined #rust-beginners
2018-09-27 05:33:17	<--	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has quit (Connection closed)
2018-09-27 05:33:17	-->	cjm__ (c@moz-n9k8pi.1n99.j5ei.0281.2601.IP) has joined #rust-beginners
2018-09-27 05:33:17	-->	sgift_ (madison@moz-dahr74.7tqg.ttkk.0a61.2001.IP) has joined #rust-beginners
2018-09-27 05:33:17	-->	wolf2k_huh (wolfman2000@moz-rltqss.ga.comcast.net) has joined #rust-beginners
2018-09-27 05:33:17	<--	Starlit-Ghost (SG@starlitghost.xyz) has quit (Connection closed)
2018-09-27 05:33:17	<--	hyp3rbor3ax (hyp3rbor3ax@moz-ch694u.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-27 05:33:17	-->	PeterRabbit (peter@moz-ocpse2.o8dh.cakp.6c64.2600.IP) has joined #rust-beginners
2018-09-27 05:33:17	-->	swampflared (zmt@moz-n82mr0.g40m.cfl6.1700.2600.IP) has joined #rust-beginners
2018-09-27 05:33:17	<--	hamsteri_ (hamsteri@moz-rf0.e1o.73.77.IP) has quit (Connection closed)
2018-09-27 05:33:17	-->	indigo747_ (indigo747@moz-bgsfrb.dhcp.cruzio.com) has joined #rust-beginners
2018-09-27 05:33:17	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-27 05:33:17	-->	dalley__ (dalley@moz-uo550c.dyn6.twc.com) has joined #rust-beginners
2018-09-27 05:33:17	-->	hyp3rbor3ax (hyp3rbor3ax@moz-ch694u.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 05:33:17	<--	dforsyth (dforsyth@moz-bkf.b9q.241.192.IP) has quit (Connection closed)
2018-09-27 05:33:17	<--	eyans (a@moz-0h2gdj.tbcn.telia.com) has quit (Connection closed)
2018-09-27 05:33:17	-->	Starlit-Ghost (SG@2604:a880:800:a1::12:e001) has joined #rust-beginners
2018-09-27 05:33:17	-->	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-27 05:33:17	<--	rusty_dever2 (paschoul@moz-7o9fot.zam.kfa-juelich.de) has quit (Connection closed)
2018-09-27 05:33:17	-->	pixlark (pixlark@moz-u21.opc.226.128.IP) has joined #rust-beginners
2018-09-27 05:33:17	<--	sam113101 (sam@moz-c4qco5.mc.videotron.ca) has quit (Connection closed)
2018-09-27 05:33:17	<--	copypaste (copypaste@moz-vcn.gpo.32.45.IP) has quit (Connection closed)
2018-09-27 05:33:17	-->	eyans (a@moz-u5rh0q.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-27 05:33:17	-->	spear3 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-27 05:33:17	<--	spacekookie_ (ThinkCat@moz-0fu.hnc.212.173.IP) has quit (Connection closed)
2018-09-27 05:33:17	-->	rusty_dever2 (paschoul@moz-f8jven.tsmb.a7dq.0638.2001.IP) has joined #rust-beginners
2018-09-27 05:33:18	<--	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Connection closed)
2018-09-27 05:33:19	<--	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has quit (Connection closed)
2018-09-27 05:33:21	-->	salek_ (salek@moz-v8mq95.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-27 05:33:22	-->	ct16k (ryan@moz-5f0.el6.96.78.IP) has joined #rust-beginners
2018-09-27 05:33:23	-->	s34n_ (s34n@moz-idq.5fh.152.104.IP) has joined #rust-beginners
2018-09-27 05:33:24	-->	copypaste (copypaste@moz-vcn.gpo.32.45.IP) has joined #rust-beginners
2018-09-27 05:33:24	<--	mgxm (mgxm@moz-6nr.2qp.32.45.IP) has quit (Connection closed)
2018-09-27 05:33:25	-->	KB5^ (KB5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-27 05:33:25	-->	sam113101 (sam@moz-c4qco5.mc.videotron.ca) has joined #rust-beginners
2018-09-27 05:33:26	<--	ay_ (ay@moz-l0u.p17.82.140.IP) has quit (Connection closed)
2018-09-27 05:33:26	<--	richo2 (richo@moz-0r0.lsm.199.198.IP) has quit (Connection closed)
2018-09-27 05:33:28	-->	space-wi_ (space-wizar@moz-en26sh.customer.broadstripe.net) has joined #rust-beginners
2018-09-27 05:33:29	-->	QwertyDragon__ (QwertyDrago@moz-viv9ku.fios.verizon.net) has joined #rust-beginners
2018-09-27 05:33:29	-->	subhojitpaul (subhojit777@moz-eq4.h9p.163.122.IP) has joined #rust-beginners
2018-09-27 05:33:31	-->	mgxm (mgxm@moz-p7snfm.r2pe.kphg.19f0.2001.IP) has joined #rust-beginners
2018-09-27 05:33:31	<--	Arnavion (Arnavion@moz-qhb.gim.209.104.IP) has quit (Connection closed)
2018-09-27 05:33:31	<--	zadig (arouet@moz-q01.pf0.172.163.IP) has quit (Quit: .)
2018-09-27 05:33:34	-->	Kisoku- (Kisoku@moz-fkq2oi.dhcp.inet.fi) has joined #rust-beginners
2018-09-27 05:33:35	<--	phyber (phyber@moz-9rl740.co.uk) has quit (Connection closed)
2018-09-27 05:33:35	-->	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-27 05:33:40	-->	ay_ (ay@moz-dijbet.357i.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-27 05:33:40	-->	phyber (phyber@moz-9rl740.co.uk) has joined #rust-beginners
2018-09-27 05:33:41	<--	KB5 (KB5@moz-e9262u.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-27 05:33:41	-->	Arnavion (Arnavion@moz-qhb.gim.209.104.IP) has joined #rust-beginners
2018-09-27 05:33:42	-->	richo2 (richo@moz-slrmp8.fs1g.619c.a880.2604.IP) has joined #rust-beginners
2018-09-27 05:33:44	<--	gregburd (sid192750@moz-ne7em1.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:45	<--	gildegoma (gildegoma@moz-jpg.f0l.59.139.IP) has quit (Connection closed)
2018-09-27 05:33:45	-->	gregburd (sid192750@moz-8o7qap.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-27 05:33:46	-->	hamsteri_ (hamsteri@moz-rf0.e1o.73.77.IP) has joined #rust-beginners
2018-09-27 05:33:47	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Connection closed)
2018-09-27 05:33:47	<--	darthdeus (darthdeus@moz-2ah8fp.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:48	<--	joshmarshall (sid41826@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:49	<--	s34n (s34n@moz-idq.5fh.152.104.IP) has quit (Connection closed)
2018-09-27 05:33:49	<--	henrynguyen5 (sid293980@moz-the.lg2.184.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:51	<--	wjlroe (sid1877@moz-1vt7bj.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:51	-->	akhiros (Akhiros@moz-amu.8kj.45.50.IP) has joined #rust-beginners
2018-09-27 05:33:52	<--	jrlusby (sid295807@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:52	<--	astocko (astocko@moz-5nh.5t9.236.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:52	-->	wjlroe (sid1877@moz-bad22q.brockwell.irccloud.com) has joined #rust-beginners
2018-09-27 05:33:53	<--	brianm (sid167655@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:54	<--	scott (sid25790@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:54	<--	lanzafame (sid268998@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:55	<--	sneagan (sid174158@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:55	<--	banks (sid143431@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:55	-->	jrlusby (sid295807@moz-8era1j.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:33:56	<--	hannesenator (Fenith@moz-dg7669.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:56	<--	brion (sid82220@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:57	<--	cbrewster (sid158375@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:57	<--	alhof_ (sid218368@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:33:57	<--	antifuchs (sid10828@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:00	-->	Havvy (Havvy@moz-u0u.3ij.115.97.IP) has joined #rust-beginners
2018-09-27 05:34:00	<--	patrickod (sid18056@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:01	<--	Defcronyke (Defcronyke@moz-fpuejq.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:01	<--	edofic (sid300091@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:03	-->	magnap (magnapmagn@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:34:03	<--	levicole (levicole@moz-hi9ev6.websages.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:06	<--	zero (zero@moz-n1t.aek.101.46.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:07	<--	stian (stian@moz-td0bav.disapped.com) has quit (Connection closed)
2018-09-27 05:34:07	<--	Cetra (Cetra@moz-3qreko.parashift.com.au) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:08	<--	creationix (sid228092@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:08	<--	Kamuela (sid111576@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:08	<--	gluegadget (sid22336@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:08	<--	RoadrunnerWMC (RoadrunnerW@moz-18b.i6e.101.46.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:08	-->	gildegoma (gildegoma@moz-jpg.f0l.59.139.IP) has joined #rust-beginners
2018-09-27 05:34:09	<--	cxiao (cxiao@moz-sng.ido.103.172.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 05:34:09	<--	krishnab (uid228852@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:09	<--	shahn (Sebastian@moz-pcm.9vk.46.78.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:10	-->	spacekookie (ThinkCat@moz-br9ofq.f29c.jhn5.c207.2a02.IP) has joined #rust-beginners
2018-09-27 05:34:10	<--	inglesp (sid16306@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:10	<--	mjl (sid16781@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:10	<--	yrashk (sid1568@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:10	<--	tsutsumi (tsutsumi@moz-bpolbi.members.linode.com) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:10	<--	isra17 (isra17@moz-spbrk8.bc.googleusercontent.com) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:10	<--	Cldfire (Cldfire@moz-u87e9u.ip-158-69-193.net) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:10	<--	drewolson (drewolson@moz-cqs.77m.81.192.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:11	<--	FrozenDroid (FrozenDroid@moz-dm88dc.frozendroid.com) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:11	<--	ccakes (ccakes@moz-40s.vpi.166.188.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:11	<--	thenets (thenets@moz-u0o.np3.89.159.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:11	<--	typevoid (typevoid@moz-fhgbgc.clients.your-server.de) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:11	<--	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has quit (Connection closed)
2018-09-27 05:34:11	<--	subhojit777 (subhojit777@moz-eq4.h9p.163.122.IP) has quit (Connection closed)
2018-09-27 05:34:11	<--	RockyTV (alex@moz-7ff.ol2.249.191.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:11	<--	simpleauthority (simple@moz-98h6s8.an.algorithmjunkie.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:12	<--	Amaranth (Amaranth@moz-ev9kc3.ip-158-69-219.net) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:12	<--	Proximyst (Proximyst@moz-udr.qmt.15.51.IP) has quit (Quit: Ping timeout (120 seconds))
2018-09-27 05:34:12	<--	dustinm` (dustinm@moz-29sbsu.ip-149-56-14.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:13	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-27 05:34:13	<--	Intrainos_ (sid87698@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:13	<--	LeoLambda (Leo@moz-b3efo8.members.linode.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:14	<--	r3my (sid262473@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:14	<--	Mateon1 (Thunderbird@moz-699b2g.supernova.orange.pl) has quit (Connection closed)
2018-09-27 05:34:16	<--	manveru (sid26204@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:16	<--	randomPoison (sid184288@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:17	<--	dormiens (alanjcfs@moz-04u.dnf.241.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:17	<--	prospector (prospector@moz-tl2.cn0.76.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:17	<--	lrlna (sid190207@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:18	<--	gregbowyer_ (sid85254@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:18	<--	TitanNano (sid167046@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:19	-->	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has joined #rust-beginners
2018-09-27 05:34:19	-->	Mateon1 (Thunderbird@moz-699b2g.supernova.orange.pl) has joined #rust-beginners
2018-09-27 05:34:20	<--	tismith (sid299009@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:20	<--	msmorgan (sid253298@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:21	<--	ploft-shell (sid27279@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:22	-->	stian (stian@moz-td0bav.disapped.com) has joined #rust-beginners
2018-09-27 05:34:23	<--	mmun (sid13585@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:23	<--	dwi (sid240145@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:24	<--	chandlore (sid259138@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:24	<--	Dabo (dabo@znc.dabo.guru) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:24	-->	thenets (thenets@moz-u0o.np3.89.159.IP) has joined #rust-beginners
2018-09-27 05:34:24	-->	isra17 (isra17@moz-spbrk8.bc.googleusercontent.com) has joined #rust-beginners
2018-09-27 05:34:25	-->	FrozenDroid (FrozenDroid@moz-dm88dc.frozendroid.com) has joined #rust-beginners
2018-09-27 05:34:25	<--	prataprc (sid295920@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:26	-->	typevoid (typevoid@moz-fhgbgc.clients.your-server.de) has joined #rust-beginners
2018-09-27 05:34:26	<--	riginding (sid156726@moz-hup6d3.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:26	-->	drewolson (drewolson@moz-cqs.77m.81.192.IP) has joined #rust-beginners
2018-09-27 05:34:27	<--	kaljaman69 (sid206194@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:27	-->	Proximyst (Proximyst@moz-udr.qmt.15.51.IP) has joined #rust-beginners
2018-09-27 05:34:28	-->	tsutsumi (tsutsumi@moz-bpolbi.members.linode.com) has joined #rust-beginners
2018-09-27 05:34:28	<--	drivel (me@moz-iqulob.maltekraus.de) has quit (Connection closed)
2018-09-27 05:34:29	-->	Cldfire (Cldfire@moz-u87e9u.ip-158-69-193.net) has joined #rust-beginners
2018-09-27 05:34:30	<--	Frans-Willem (quassel@moz-oa4g6h.dynamic.ziggo.nl) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:34:35	<--	hsiktas (sid224847@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:36	-->	simpleauthority (simple@moz-98h6s8.an.algorithmjunkie.com) has joined #rust-beginners
2018-09-27 05:34:38	-->	Amaranth (Amaranth@moz-ev9kc3.ip-158-69-219.net) has joined #rust-beginners
2018-09-27 05:34:39	<--	foophoof (sid209755@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:40	<--	blackbeard420 (blackbeard4@moz-22sadg.me) has quit (Quit: ZNC 1.7.0 - https://znc.in)
2018-09-27 05:34:41	<--	dwg (dwg@moz-3lksdd.org) has quit (Quit: ZNC - http://znc.in)
2018-09-27 05:34:41	<--	xitan (xitan@moz-po9q13.xenv.io) has quit (Quit: Quit.)
2018-09-27 05:34:41	<--	cpup (cpup@moz-3raguf.ct.charter.com) has quit (Quit: Breaking stuff)
2018-09-27 05:34:41	<--	benny (benny@moz-82dsru.icu) has quit (Quit: ZNC - https://znc.in)
2018-09-27 05:34:41	<--	elomatreb (elomatreb@moz-ev25t9.am) has quit (Quit: mep mep)
2018-09-27 05:34:41	<--	lithammer (peter@moz-cvdnc4.cloud.tilaa.com) has quit (Quit: ZNC - http://znc.in)
2018-09-27 05:34:41	<--	davidtwco (sid224194@moz-hup6d3.irccloud.com) has quit (Connection closed)
2018-09-27 05:34:41	<--	dashed (sid41535@moz-hup6d3.irccloud.com) has quit (Connection closed)
2018-09-27 05:34:41	<--	darknighte (sid214177@moz-hup6d3.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	solidsnack (sid135249@moz-hup6d3.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	wyvern (sid40333@moz-rp9ic4.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	christianpoveda (sid305436@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	hlieberman (sid17492@moz-rp9ic4.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	saolsen (sid26430@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	JackMc (sid85402@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	rnewman (sid301996@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	tmatth (sid143283@moz-8qssdp.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:41	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-27 05:34:41	<--	gmacon (gmacon@moz-t62ti6.kj4jzy.org) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2018-09-27 05:34:41	<--	gcommer (gcommer@moz-huk68g.com) has quit (Quit: byebye)
2018-09-27 05:34:41	<--	ystreet00 (ystreet00@moz-mkp.lgm.200.185.IP) has quit (Quit: Quit)
2018-09-27 05:34:41	<--	LeshaInc (LeshaInc@moz-kl5p31.me) has quit (Quit: ZNC - https://znc.in)
2018-09-27 05:34:41	<--	Thog (Thog@moz-eberbe.moe) has quit (Quit: Bye!)
2018-09-27 05:34:41	<--	ghost64 (ghost64@moz-6m2pkb.xyz) has quit (Quit: See you!)
2018-09-27 05:34:42	-->	brianm (sid167655@moz-6bhtbf.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	alhof_ (sid218368@moz-4qq91e.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	Intrainos_ (sid87698@moz-9caqvk.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	lrlna (sid190207@moz-b85302.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	henrynguyen5 (sid293980@moz-hp19o9.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	krishnab (uid228852@moz-hu5sdj.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	inglesp (sid16306@moz-b77ftn.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	sneagan (sid174158@moz-i58sin.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	ploft-shell (sid27279@moz-blc7fm.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	chandlore (sid259138@moz-lbqccs.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	creationix (sid228092@moz-m8udh7.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	darknighte (sid214177@moz-lf5q6q.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	gluegadget (sid22336@moz-2a0ro1.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	r3my (sid262473@moz-ab7oau.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	patrickod (sid18056@moz-vifn9v.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	lanzafame (sid268998@moz-udlt5k.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	edofic (sid300091@moz-pnj0a8.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	christianpoveda (sid305436@moz-k5nh4u.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	drivel (me@moz-iqulob.maltekraus.de) has joined #rust-beginners
2018-09-27 05:34:42	<--	rfolsom (rfolsom@moz-qun.o6u.131.104.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-27 05:34:42	<--	samrg472 (samrg472@moz-h8tjvk.clients.your-server.de) has quit (Quit: Going away...)
2018-09-27 05:34:42	<--	jcnmark6 (jcnmark6@moz-954582.clients.your-server.de) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-27 05:34:42	<--	jazzpi (jazzpi@moz-i6l8pk.space) has quit (Quit: ZNC - http://znc.in)
2018-09-27 05:34:42	<--	ljhms (ljhms@moz-had1t8.priv.bahnhof.se) has quit (Quit: Bye)
2018-09-27 05:34:42	<--	x7C3 (x7C3@moz-g7v.ded.9.5.IP) has quit (Quit: Another one bites the dust)
2018-09-27 05:34:42	<--	eddyb (sid155877@moz-hup6d3.irccloud.com) has quit (Error in the push function.)
2018-09-27 05:34:42	<--	ag_dubs (sid27508@moz-rp9ic4.irccloud.com) has quit (Connection closed)
2018-09-27 05:34:42	<--	kamalmarhubi (sid26581@moz-rp9ic4.irccloud.com) has quit (Connection reset by peer)
2018-09-27 05:34:42	-->	msmorgan (sid253298@moz-0j96ms.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	solidsnack (sid135249@moz-s3jmnc.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	gregbowyer_ (sid85254@moz-7umckp.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	joshmarshall (sid41826@moz-7d8ep5.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:42	-->	antifuchs (sid10828@moz-98r9pl.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:43	<--	energizer (energizer@moz-0bh.vp8.131.104.IP) has quit (Quit: ZNC 1.7.0+deb0+xenial1 - https://znc.in)
2018-09-27 05:34:43	<--	drpal_ (sid171564@moz-hup6d3.irccloud.com) has quit (Connection closed)
2018-09-27 05:34:43	<--	jkhsjdhjs (jkhsjdhjs@totally.rip) has quit (Quit: Error: Leaving not permitted)
2018-09-27 05:34:43	<--	teratorn (teratorn@moz-tmgcht.vmpanel.net) has quit (Quit: ZNC - https://znc.in)
2018-09-27 05:34:43	<--	subsonik (subsonik@moz-liqq20.netspectrum.de) has quit (Quit: ZNC - https://znc.in)
2018-09-27 05:34:43	-->	yrashk (sid1568@moz-v7fm9u.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:43	-->	wyvern (sid40333@moz-7b9ajc.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	Kamuela (sid111576@moz-3giuc5.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	mjl (sid16781@moz-5pec6l.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	saolsen (sid26430@moz-t1s9le.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	drpal_ (sid171564@moz-2c1jug.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	dwi (sid240145@moz-oh2o3t.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	foophoof (sid209755@moz-ft1khq.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	banks (sid143431@moz-h7d9rl.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	brion (sid82220@moz-fh60ma.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	<--	p0358 (p0358@moz-2vn.gvu.255.85.IP) has quit (Quit: https://youtu.be/nZS3YfmAzAo ZNC - https://znc.in)
2018-09-27 05:34:44	-->	xitan (xitan@moz-po9q13.xenv.io) has joined #rust-beginners
2018-09-27 05:34:44	<--	bltavares (bltavares@moz-r67.6er.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:44	-->	blackbeard420 (blackbeard4@moz-m3fks9.4j5e.qia1.3c03.2600.IP) has joined #rust-beginners
2018-09-27 05:34:44	-->	prataprc (sid295920@moz-djrugj.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	dashed (sid41535@moz-4teott.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	hlieberman (sid17492@moz-ldevbc.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:44	-->	manveru (sid26204@moz-0g7cme.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:45	-->	lithammer (peter@moz-bk1sbi.d1cd.hotg.2770.2a02.IP) has joined #rust-beginners
2018-09-27 05:34:45	-->	dwg (dwg@moz-3lksdd.org) has joined #rust-beginners
2018-09-27 05:34:45	-->	riginding (sid156726@moz-q8svqa.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:46	-->	ag_dubs (sid27508@moz-g5atek.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:46	-->	JackMc (sid85402@moz-o9817s.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:46	-->	randomPoison (sid184288@moz-dm26v0.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:46	-->	kaljaman69 (sid206194@moz-v91tgq.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:46	-->	tismith (sid299009@moz-tkfsbn.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:46	-->	mmun (sid13585@moz-a8vet6.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:46	-->	ghost64 (ghost64@moz-6m2pkb.xyz) has joined #rust-beginners
2018-09-27 05:34:46	-->	cpup (cpup@moz-3raguf.ct.charter.com) has joined #rust-beginners
2018-09-27 05:34:46	-->	jazzpi (jazzpi@moz-i6l8pk.space) has joined #rust-beginners
2018-09-27 05:34:46	-->	eddyb (sid155877@moz-a1ecg4.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:47	-->	gcommer (gcommer@moz-huk68g.com) has joined #rust-beginners
2018-09-27 05:34:47	-->	gmacon (gmacon@moz-t62ti6.kj4jzy.org) has joined #rust-beginners
2018-09-27 05:34:47	<--	worrelsik (rogererens@moz-6it.mlf.20.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:47	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:47	-->	scott (sid25790@moz-oner9m.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:47	-->	rnewman (sid301996@moz-a0kvj1.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:47	-->	hsiktas (sid224847@moz-1aot0a.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:47	-->	davidtwco (sid224194@moz-rogavl.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:48	<--	space-wizard (space-wizar@moz-en26sh.customer.broadstripe.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:49	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 05:34:49	-->	cbrewster (sid158375@moz-o9uab9.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:50	-->	TitanNano (sid167046@moz-5h2dq0.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:50	-->	subsonik (subsonik@moz-liqq20.netspectrum.de) has joined #rust-beginners
2018-09-27 05:34:50	-->	jkhsjdhjs (jkhsjdhjs@totally.rip) has joined #rust-beginners
2018-09-27 05:34:50	-->	ystreet00 (ystreet00@moz-mkp.lgm.200.185.IP) has joined #rust-beginners
2018-09-27 05:34:51	-->	Xinayder (alex@moz-7ff.ol2.249.191.IP) has joined #rust-beginners
2018-09-27 05:34:51	-->	elomatreb (elomatreb@moz-ev25t9.am) has joined #rust-beginners
2018-09-27 05:34:53	-->	teratorn (teratorn@moz-m65973.0rhs.isan.04f8.2a01.IP) has joined #rust-beginners
2018-09-27 05:34:53	-->	x7C3 (x7C3@moz-263qav.jm7b.9t5s.04f8.2a01.IP) has joined #rust-beginners
2018-09-27 05:34:53	<--	eythian (quassel@moz-0av7cu.kallisti.net.nz) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:34:53	<--	pixlark (pixlark@moz-u21.opc.226.128.IP) has quit (Connection closed)
2018-09-27 05:34:53	<--	indigo747 (indigo747@moz-bgsfrb.dhcp.cruzio.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:34:55	--	mysteriouspants_ is now known as mysteriouspants
2018-09-27 05:34:55	-->	tmatth (sid143283@moz-cngt30.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 05:34:59	-->	kamalmarhubi (sid26581@moz-b77777.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 05:35:00	<--	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:00	<--	melfy (melfy@moz-u8ssll.melfy.me) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:02	<--	harmony (harmony@moz-795pos.pw) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:02	<--	rustbot (havvy@moz-u0e4io.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:03	-->	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has joined #rust-beginners
2018-09-27 05:35:03	<--	Disconsented (quassel@moz-nbhjle.com) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:03	<--	hays (quassel@moz-ka9.bgc.2.5.IP) has quit (Connection closed)
2018-09-27 05:35:03	<--	contradictioned (quassel@moz-d6r981.clients.your-server.de) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:05	<--	gcp (gcp@moz-aoi.4l3.201.138.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:06	<--	lerc (quassel@moz-h6d6dg.sparkbb.co.nz) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:06	-->	dustinm` (dustinm@moz-29sbsu.ip-149-56-14.net) has joined #rust-beginners
2018-09-27 05:35:08	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 05:35:08	<--	avidal (avidal@moz-1jq.n5j.236.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:09	-->	p0358 (p0358@moz-2vn.gvu.255.85.IP) has joined #rust-beginners
2018-09-27 05:35:09	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:09	<--	damiano (quassel@moz-1rie8v.pibit.ch) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:10	<--	sebk (sebk@moz-k2bjro.org) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:10	<--	sbstp (quassel@moz-346.qo4.235.168.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:10	<--	Razaekel (Astra@moz-vsm.kin.236.104.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:10	<--	jonalmeida (jonalmeida@moz-kml.1j0.77.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:13	<--	copyninja (quassel@moz-99icpi.copyninja.info) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:14	<--	Raywes88 (derp@moz-t3g.pal.115.24.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:14	<--	Salek (salek@moz-v8mq95.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:16	<--	ephemeron (ephemeron@moz-ghv.c0i.131.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:16	<--	rjstone (rjstone@moz-vrf.v0k.203.159.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:17	-->	ljhms (ljhms@moz-had1t8.priv.bahnhof.se) has joined #rust-beginners
2018-09-27 05:35:17	<--	devurandom (quassel@moz-6uk9od.kynes.de) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:17	-->	LeshaInc (LeshaInc@moz-kl5p31.me) has joined #rust-beginners
2018-09-27 05:35:18	<--	meeh (meeh@moz-cib.fa5.150.193.IP) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-27 05:35:18	-->	Thog (Thog@moz-eberbe.moe) has joined #rust-beginners
2018-09-27 05:35:20	-->	samrg472 (samrg472@moz-h8tjvk.clients.your-server.de) has joined #rust-beginners
2018-09-27 05:35:20	-->	jcnmark6 (jcnmark6@moz-954582.clients.your-server.de) has joined #rust-beginners
2018-09-27 05:35:20	<--	isHavvy (Havvy@moz-u0u.3ij.115.97.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:22	-->	hays (quassel@moz-ka9.bgc.2.5.IP) has joined #rust-beginners
2018-09-27 05:35:22	<--	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:23	<--	dous (dous@moz-3m5.4db.139.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:26	-->	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has joined #rust-beginners
2018-09-27 05:35:28	<--	Kisoku (Kisoku@moz-fkq2oi.dhcp.inet.fi) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:32	-->	Frans-Willem (quassel@moz-oa4g6h.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-27 05:35:32	<--	madison__ (madison@moz-bbl4dl.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:32	<--	ngc0202 (Elite20148@moz-s9tu12.elitebnc.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:36	<--	zmt98 (zmt@moz-teule8.sndgca.sbcglobal.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:37	<--	qfire (qfire@moz-vq63an.CC.CMU.EDU) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:37	<--	UndeadLeech (UndeadLeech@moz-9p3.e6t.227.165.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:38	<--	wolfman2000 (wolfman2000@moz-rltqss.ga.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:38	<--	techne (techne@moz-e8j.p3t.76.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:40	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:41	<--	WindowsBunny (Bunny@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:43	<--	bzikarsky (bzikarsky@moz-qbe2d6.b-zik.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:45	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-27 05:35:46	<--	meredith (meredith@moz-sgjml6.roomag.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:47	-->	chris_p (cpl@moz-vcfefs.dyn.forthnet.gr) has joined #rust-beginners
2018-09-27 05:35:47	<--	codesections (codesection@moz-e45.7hn.29.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:48	<--	cpl (cpl@moz-vcfefs.dyn.forthnet.gr) has quit (Connection closed)
2018-09-27 05:35:50	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:53	<--	lnoid (lnoid@moz-n5n5kv.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:53	<--	masterm (masterm@moz-vdc3fa.pl) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:54	-->	energizer (energizer@moz-0bh.vp8.131.104.IP) has joined #rust-beginners
2018-09-27 05:35:54	<--	tvincent (tvincent@moz-ssa2kb.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:55	-->	eythian (quassel@moz-0av7cu.kallisti.net.nz) has joined #rust-beginners
2018-09-27 05:35:56	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Connection closed)
2018-09-27 05:35:56	<--	Philonous (Philonous__@moz-p99st1.clients.your-server.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:35:59	-->	andyy-M (andyymatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:35:59	<--	cjm_ (c@moz-0mn.m4j.8.24.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:36:04	<--	sinesc (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:36:05	-->	contradictioned (quassel@moz-d6r981.clients.your-server.de) has joined #rust-beginners
2018-09-27 05:36:08	-->	lerc (quassel@moz-h6d6dg.sparkbb.co.nz) has joined #rust-beginners
2018-09-27 05:36:10	-->	damiano (quassel@moz-1rie8v.pibit.ch) has joined #rust-beginners
2018-09-27 05:36:10	<--	liw (liw@moz-t1bdlo.pieni.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:36:10	-->	Razaekel (Astra@moz-vsm.kin.236.104.IP) has joined #rust-beginners
2018-09-27 05:36:11	<--	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:36:12	-->	sbstp (quassel@moz-8mp9u5.mmu9.a6fs.0180.2604.IP) has joined #rust-beginners
2018-09-27 05:36:14	-->	Raywes88 (derp@moz-t3g.pal.115.24.IP) has joined #rust-beginners
2018-09-27 05:36:15	-->	copyninja (quassel@moz-99icpi.copyninja.info) has joined #rust-beginners
2018-09-27 05:36:15	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-27 05:36:15	-->	prospector (prospector@moz-tl2.cn0.76.45.IP) has joined #rust-beginners
2018-09-27 05:36:16	-->	Disconsented (quassel@moz-nbhjle.com) has joined #rust-beginners
2018-09-27 05:36:17	-->	jonalmeida (jonalmeida@moz-afsk3d.20db.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-27 05:36:18	-->	rfolsom (rfolsom@moz-qun.o6u.131.104.IP) has joined #rust-beginners
2018-09-27 05:36:19	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-27 05:36:20	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:36:21	-->	meeh (meeh@moz-cib.fa5.150.193.IP) has joined #rust-beginners
2018-09-27 05:36:22	-->	rjstone (rjstone@moz-eld6av.radix.cc) has joined #rust-beginners
2018-09-27 05:36:23	-->	RoadrunnerWMC (RoadrunnerW@moz-18b.i6e.101.46.IP) has joined #rust-beginners
2018-09-27 05:36:23	-->	dforsyth (dforsyth@moz-bkf.b9q.241.192.IP) has joined #rust-beginners
2018-09-27 05:36:24	-->	LeoLambda (Leo@moz-kksq87.fkdv.ulf6.3c01.2600.IP) has joined #rust-beginners
2018-09-27 05:36:24	-->	zero (zero@moz-n1t.aek.101.46.IP) has joined #rust-beginners
2018-09-27 05:36:27	-->	sebk (sebk@moz-k2bjro.org) has joined #rust-beginners
2018-09-27 05:36:27	-->	bltavares (bltavares@moz-r67.6er.243.162.IP) has joined #rust-beginners
2018-09-27 05:36:27	-->	devurandom (quassel@moz-43g9on.kynes.de) has joined #rust-beginners
2018-09-27 05:36:27	-->	meredith (meredith@moz-sgjml6.roomag.org) has joined #rust-beginners
2018-09-27 05:36:28	<--	fflam (mdt@moz-69jfri.sd.cox.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:36:29	-->	Defcronyke (Defcronyke@moz-fpuejq.com) has joined #rust-beginners
2018-09-27 05:36:29	-->	gcp (gcp@moz-aoi.4l3.201.138.IP) has joined #rust-beginners
2018-09-27 05:36:29	-->	codesections (codesection@moz-e45.7hn.29.38.IP) has joined #rust-beginners
2018-09-27 05:36:31	-->	hannesenator (Fenith@moz-dg7669.tbcn.telia.com) has joined #rust-beginners
2018-09-27 05:36:32	-->	harmony (harmony@moz-795pos.pw) has joined #rust-beginners
2018-09-27 05:36:34	-->	ngc0202 (Elite20148@moz-s9tu12.elitebnc.org) has joined #rust-beginners
2018-09-27 05:36:34	<--	traumschule (traumschule@moz-7u5okn.schokokeks.org) has quit (Ping timeout: 121 seconds)
2018-09-27 05:36:35	-->	darthdeus (darthdeus@moz-2ah8fp.com) has joined #rust-beginners
2018-09-27 05:36:36	-->	worrelsik (rogererens@moz-6it.mlf.20.185.IP) has joined #rust-beginners
2018-09-27 05:36:37	-->	avidal (avidal@moz-1jq.n5j.236.104.IP) has joined #rust-beginners
2018-09-27 05:36:37	-->	qfire (qfire@moz-vq63an.CC.CMU.EDU) has joined #rust-beginners
2018-09-27 05:36:37	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-09-27 05:36:38	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-27 05:36:41	<--	anton (anton@moz-gsb.npk.93.142.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:36:42	-->	ephemeron (ephemeron@moz-h5kea2.i2gt.qoll.a880.2604.IP) has joined #rust-beginners
2018-09-27 05:36:42	-->	bzikarsky (bzikarsky@moz-qbe2d6.b-zik.de) has joined #rust-beginners
2018-09-27 05:36:43	-->	UndeadLeech (UndeadLeech@moz-9p3.e6t.227.165.IP) has joined #rust-beginners
2018-09-27 05:36:43	-->	dormiens (alanjcfs@moz-04u.dnf.241.192.IP) has joined #rust-beginners
2018-09-27 05:36:45	-->	techne (techne@moz-ovkci8.msh6.qo20.19f0.2001.IP) has joined #rust-beginners
2018-09-27 05:36:45	-->	Dabo (dabo@znc.dabo.guru) has joined #rust-beginners
2018-09-27 05:36:47	-->	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has joined #rust-beginners
2018-09-27 05:36:49	-->	fflam (mdt@moz-69jfri.sd.cox.net) has joined #rust-beginners
2018-09-27 05:36:51	-->	benny (benny@moz-82dsru.icu) has joined #rust-beginners
2018-09-27 05:36:54	-->	melfy (melfy@moz-u8ssll.melfy.me) has joined #rust-beginners
2018-09-27 05:36:57	-->	tvincent (tvincent@moz-ssa2kb.fbx.proxad.net) has joined #rust-beginners
2018-09-27 05:37:00	-->	dous (dous@moz-3m5.4db.139.37.IP) has joined #rust-beginners
2018-09-27 05:37:04	-->	runbmp-M (runbmpmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:37:06	-->	lnoid (lnoid@moz-n5n5kv.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-27 05:37:10	-->	Philonous (Philonous__@moz-p99st1.clients.your-server.de) has joined #rust-beginners
2018-09-27 05:37:13	-->	liw (liw@moz-t1bdlo.pieni.net) has joined #rust-beginners
2018-09-27 05:37:13	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:37:13	-->	astocko (astocko@moz-5nh.5t9.236.104.IP) has joined #rust-beginners
2018-09-27 05:37:14	-->	masterm (masterm@moz-vdc3fa.pl) has joined #rust-beginners
2018-09-27 05:37:14	-->	traumschule (traumschule@moz-7u5okn.schokokeks.org) has joined #rust-beginners
2018-09-27 05:37:15	-->	anton (anton@moz-gsb.npk.93.142.IP) has joined #rust-beginners
2018-09-27 05:37:16	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 05:37:23	-->	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has joined #rust-beginners
2018-09-27 05:37:27	<--	QwertyDragon_ (QwertyDrago@moz-viv9ku.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:37:38	-->	Gertm (gert@moz-ga73mo.isp.belgacom.be) has joined #rust-beginners
2018-09-27 05:37:59	--	WindowsBunny1 is now known as WindowsBunny
2018-09-27 05:38:14	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 05:38:32	-->	MatrixTraveler-M (voyagert2b@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:38:48	-->	Boscop-M (boscopmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:39:03	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 05:39:04	-->	zadig (arouet@moz-q01.pf0.172.163.IP) has joined #rust-beginners
2018-09-27 05:39:34	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:39:35	--	Raychen1 is now known as Raychen
2018-09-27 05:39:56	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-27 05:39:58	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 05:40:00	-->	RaymondFoley-M (raymondfol@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:40:00	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 05:40:07	-->	levicole (levicole@moz-hi9ev6.websages.com) has joined #rust-beginners
2018-09-27 05:40:55	-->	jstone-M (jstonematr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:41:01	<--	billiob (billiob@moz-0ilt8a.fau.re) has quit (The TLS connection was non-properly terminated.)
2018-09-27 05:41:04	-->	billiob (billiob@moz-0ilt8a.fau.re) has joined #rust-beginners
2018-09-27 05:41:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:41:27	-->	jmnx-M (jmnxmatrix@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:42:40	-->	sgibbs (sgibbsmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:42:54	<--	kulshrax (kulshrax@moz-80q01l.j9oj.d3gv.1010.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 05:43:04	-->	Jtremback-M (jtrembackm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:43:06	<--	sarnold (sarnold@moz-salitc.compute.amazonaws.com) has quit (The TLS connection was non-properly terminated.)
2018-09-27 05:43:08	-->	sarnold (sarnold@moz-salitc.compute.amazonaws.com) has joined #rust-beginners
2018-09-27 05:43:12	-->	Clar-M (clarcharrm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:43:17	-->	kulshrax (kulshrax@moz-80q01l.j9oj.d3gv.1010.2600.IP) has joined #rust-beginners
2018-09-27 05:43:35	-->	AMoose-M (narnymarsm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:44:29	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 05:44:40	-->	groves (grovesmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:44:48	-->	rkusa (rkusamatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:45:57	-->	bbatha-M (bbathamatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:46:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 05:46:50	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:47:02	-->	ragne-M (ragnematri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:47:10	-->	waldson-M (waldsonmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:47:19	<--	kulshrax (kulshrax@moz-80q01l.j9oj.d3gv.1010.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 05:47:19	-->	italic (italic@moz-nvdogu.ca.comcast.net) has joined #rust-beginners
2018-09-27 05:47:27	-->	jjmarin-M (jjmarinmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:47:29	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 05:47:50	-->	clefranco-M (clefrancom@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:47:53	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 05:48:22	-->	shanipribadi-M (shanipriba@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:48:25	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 05:48:26	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 05:48:30	-->	gohyda-M (gohydamatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:49:02	<--	spear3 (spear2@moz-jsi95h.or.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-27 05:49:11	-->	idubrov (idubrovmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:49:34	-->	rustonaut (rustonautm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:51:26	-->	snome-M (snomematri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:51:37	-->	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-27 05:52:25	-->	jturner314 (jturner314@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:52:48	-->	alatiera1 (alatierama@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:53:18	--	KB5^ is now known as KB5
2018-09-27 05:53:22	-->	wehlutyk (wehlutykma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:53:37	<--	QwertyDragon__ (QwertyDrago@moz-viv9ku.fios.verizon.net) has left #rust-beginners ("Leaving")
2018-09-27 05:53:42	<--	KB5 (KB5@moz-e9262u.elisa-laajakaista.fi) has quit (Quit: Leaving)
2018-09-27 05:53:47	-->	KB5 (KB5@moz-e9262u.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-27 05:55:07	-->	ccakes (ccakes@moz-40s.vpi.166.188.IP) has joined #rust-beginners
2018-09-27 05:55:08	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 05:55:21	<--	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 05:55:31	-->	BobbyReynolds-M (bobbyreyno@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:55:54	-->	thomasgardner-M (thomasgard@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:56:00	-->	jeramyRR (jeramyRR@moz-ma7vko.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-27 05:56:41	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-27 05:57:05	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 05:57:22	-->	Soif-M (soifmatrix@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:57:54	-->	BrunoWindels-M (bwindelsma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 05:59:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:00:21	<--	GreenJello (GreenJello@moz-5ah.vnp.83.23.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 06:00:28	-->	Charles-M (charleschr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:00:51	-->	neosam-M1 (neosamma1@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:01:24	<--	P1RATEZ (piratez@moz-h769d6.cable.rogers.com) has quit (Quit: )
2018-09-27 06:01:36	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:01:39	-->	heartoneto-M (heartoneto@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:02:03	-->	iuyte-M (iuytematri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:02:51	-->	RogerWilcos-M (rogerwilco@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:03:03	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 06:03:03	-->	bglm-M (bglmmatrix@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:03:24	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 06:03:43	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-27 06:04:19	-->	reu-M (ge1reumatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:04:27	-->	MelonBread-M (melonbread@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:05:39	-->	sameyepatch-M (sameyepatc@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:06:33	-->	ibrokemypie (conor@moz-uq2.6fa.124.1.IP) has joined #rust-beginners
2018-09-27 06:07:16	-->	rawrmonstar-M (rawrmonsta@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:07:24	-->	talvdav-M (talvdavmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:07:26	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-27 06:08:07	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 06:09:22	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 06:09:40	-->	marte-M (martematri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:10:36	-->	reedcourty-M (reedcourty@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:11:25	<--	ibrokemypie (conor@moz-uq2.6fa.124.1.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-27 06:12:12	-->	fasiha-M (fasihamatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:12:50	<--	mysteriouspants (mysteriousp@moz-1mr6lu.05up.2m88.8800.2600.IP) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2018-09-27 06:13:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 06:13:51	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-27 06:14:30	-->	spastorino (spastorino@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:14:30	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-27 06:14:37	-->	LaRueGT (laruegtmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:14:45	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 06:16:06	-->	totempaaltj-M (totempaalt@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:16:07	<--	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 06:17:10	-->	Atomicbit-M (atomicbitm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:17:11	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:17:40	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-27 06:17:50	-->	ilmari_ (ilmarimatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:18:33	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 06:18:40	-->	vorot93-M (vorot93mat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:18:53	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 06:20:06	-->	ikjo-M (ikjomatrix@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:20:22	-->	dl3br-M (dlebrechtm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:20:30	-->	TheSirC-M (thesircmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:21:18	-->	e7fd44f9c0-M (e7fd44f9c0@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:21:31	-->	echopraxia-M (echopraxia@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:21:55	-->	jakswa-M (jakswamatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:22:20	-->	troyvoy88-M (troyvoy88m@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:22:29	-->	HER0_01 (her0matrix@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:22:45	-->	drunner-M (drunnermat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:22:47	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 06:22:52	-->	georich-M (georichmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:22:55	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 06:24:04	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 06:24:36	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 06:26:13	-->	lavieestdure-M (lavieestdu@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:26:16	-->	kulshrax (kulshrax@moz-a74.9o0.201.199.IP) has joined #rust-beginners
2018-09-27 06:26:19	<--	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:26:21	-->	ynakao-M (ynakaomatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:26:32	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 06:26:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:27:04	<--	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-27 06:27:09	-->	hiotz-M (hiotzmatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:27:10	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 06:27:17	-->	tmccrmck-M (tmccrmckma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:28:22	-->	fuzen-M (fuzenmatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:28:22	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 06:28:25	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 06:29:00	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 06:29:34	-->	eoinoneill-M (theyokaima@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:30:21	<--	kulshrax (kulshrax@moz-a74.9o0.201.199.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:31:52	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-27 06:32:20	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 06:32:22	-->	tangleloop-M (tangleloop@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:32:31	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 06:32:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 06:33:18	-->	tantio-M (tantiomatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:33:34	-->	hunter_lester-M (hunterlest@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:33:39	-->	kulshrax (kulshrax@moz-a74.9o0.201.199.IP) has joined #rust-beginners
2018-09-27 06:33:46	-->	runelabs-M (runelabsma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:35:03	-->	oms (oms@moz-k47k0b.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 06:35:17	<--	kulshrax (kulshrax@moz-a74.9o0.201.199.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 06:35:22	-->	silwol-M (silwolmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:35:38	-->	kulshrax (kulshrax@moz-e6l2s2.af01.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 06:35:42	-->	fifr[m] (fifrdisroo@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:36:19	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-27 06:36:32	-->	mtsr-M (mtsrmatrix@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:36:49	-->	jayaura (aurabindom@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:36:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 06:37:02	-->	mbudde (mbuddematr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:37:29	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-27 06:38:28	<--	eyans (a@moz-u5rh0q.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-27 06:39:34	-->	KernelWard-M (kernelward@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:39:40	-->	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has joined #rust-beginners
2018-09-27 06:39:41	<--	kulshrax (kulshrax@moz-e6l2s2.af01.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:39:56	-->	ibrokemypie (ibrokemypie@moz-9vl.sfd.59.139.IP) has joined #rust-beginners
2018-09-27 06:40:21	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-27 06:40:30	-->	rtlich-M (rotmatrixo@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:40:37	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 06:40:39	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 06:41:17	<--	jeramyRR (jeramyRR@moz-ma7vko.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 06:41:27	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-27 06:41:31	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 06:43:13	-->	jeramyRR (jeramyRR@moz-mp6gob.gtpn.ue3c.0601.2601.IP) has joined #rust-beginners
2018-09-27 06:44:36	ibrokemypie	i finally set up znc, i should be able to actually continue conversations now on my spotty connection
2018-09-27 06:45:01	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:47:25	-->	willem-M (willemmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:47:43	-->	tlam-M (tlammatrix@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:49:23	<--	jeramyRR (jeramyRR@moz-mp6gob.gtpn.ue3c.0601.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 06:49:36	-->	bluss (bluss@moz-jgdsfd.cust.tele2.se) has joined #rust-beginners
2018-09-27 06:49:41	-->	jaybee-M (jaybeematr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:49:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 06:51:12	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 06:51:45	-->	musoke-M (musokematr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:52:02	-->	neosam-M (neosammatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:52:18	-->	dreuter-M (dreutermat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:52:24	<--	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has quit (Connection closed)
2018-09-27 06:53:21	-->	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has joined #rust-beginners
2018-09-27 06:54:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:54:25	-->	Cezz-M (cezzlomnik@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:54:43	-->	hamsteri__ (hamsteri@moz-hs7.fvt.60.194.IP) has joined #rust-beginners
2018-09-27 06:54:57	-->	h_ndrik (hndrikmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:55:10	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-27 06:55:21	-->	mustaqim-M (mustaqimma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:55:26	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-27 06:55:29	-->	Siilwyn-M (siilwynmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:55:43	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:56:31	<--	italic (italic@moz-nvdogu.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 06:56:43	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:56:55	<--	hamsteri_ (hamsteri@moz-rf0.e1o.73.77.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 06:57:00	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 06:57:23	<--	pixlark (pixlark@moz-1sj9j7.dickinson.binghamton.edu) has quit (Ping timeout: 121 seconds)
2018-09-27 06:58:06	-->	OneEyed-M (oneeyedmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:58:38	-->	frunobulax-M (frunobulax@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 06:58:55	-->	taorg (textual@moz-8rpc9i.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-27 06:59:07	<--	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 06:59:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 06:59:32	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-27 06:59:33	-->	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-27 06:59:45	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 07:00:31	-->	tjamaan-M (tjamaanmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:00:46	-->	hobofan-M (hobofanmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:00:46	<--	taorg (textual@moz-8rpc9i.dynamicip.rima-tde.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-27 07:00:50	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 07:00:53	-->	taorg (textual@moz-8rpc9i.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-27 07:00:53	<--	taorg (textual@moz-8rpc9i.dynamicip.rima-tde.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-27 07:01:01	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:01:02	-->	KremorAFK-M (kremormatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:01:03	--	Raychen1 is now known as Raychen
2018-09-27 07:01:08	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 07:01:59	-->	hamburglar-M (jessopherm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:02:05	<--	mib_y6jfpq (Mibbit@moz-a6f.9te.17.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 07:02:31	-->	kenden-M (jhartshorn@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:02:47	-->	Ronaldho80-M (ronaldho80@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:03:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:04:36	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-27 07:04:55	-->	melonballas-M (melonballa@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:05:04	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:05:22	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 07:05:28	-->	moltonel-M (moltonelma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:05:43	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 07:06:01	-->	MolarAmbiguity-M (molarambig@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:07:53	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-27 07:07:54	-->	ijks (ijksmatrix@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:07:58	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 07:08:10	-->	Tristan_78-M (tristan78m@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:09:55	<--	Lil_Dropchk (uid18992@moz-rp9ic4.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 07:10:26	-->	vzaa-M (wololokata@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:10:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 07:10:36	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 07:11:46	-->	ehooper-M (ehoopermat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:12:02	-->	conscio-M (consciomat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:12:34	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:13:42	-->	KevinMGranger[M] (kevinmgran@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:15:30	-->	Chloe-M (illyamatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:15:31	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:15:35	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 07:16:10	-->	diegoca-M (diegocamat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:16:31	-->	holmgr (holmgr@moz-cvpp3v.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-27 07:16:34	-->	marius_k-M (mariuskmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:17:00	-->	mathk-M (mathkmatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:17:06	-->	thejonny-M (thejonnyma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:17:59	-->	gheoan-M (gheoanmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:18:29	-->	spear3 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-27 07:18:35	-->	TimoKoesters-M (timokoeste@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:18:40	-->	slongfield (slongfield@moz-jp5uhl.ca.comcast.net) has joined #rust-beginners
2018-09-27 07:19:01	-->	Falconix-M (anderskali@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:19:36	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:20:06	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 07:20:08	slongfield	Is there a way to ignore the type of a function in a match statement, if I'm just calling it for its side effects? E.g, HashSet::insert returns a Bool, but I don't care about its value.  Example (doesn't compile): https://play.rust-lang.org/?gist=7ba4dfc2369ee6b9626a4225a8ad7230&version=stable&mode=debug&edition=2015
2018-09-27 07:20:12	-->	michel_slm (michel-slm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:20:19	-->	druzky-M (druzkymatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:20:53	-->	SergioB (sbenitezma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:21:33	Arnavion	Some(n) if n % 3 == 0 => { set.insert(n); },
2018-09-27 07:21:48	-->	fuse512-M (fuse512mat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:21:55	-->	barzi-M (barzimatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:22:00	slongfield	Aha, thank you!
2018-09-27 07:22:19	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-27 07:22:27	-->	madmax28-M (madmax28ma@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:23:16	-->	JulianSparber-M (iamjsparbe@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:24:20	-->	FSMaxB-M (fsmaxbmaxb@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:24:32	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-27 07:24:37	-->	refpga-M (aynahmatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:26:12	-->	flegmatyk (michalrmat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:26:14	-->	Simon (Simon@moz-g5a621.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-27 07:26:20	-->	Singularity-M (singularit@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:26:28	-->	Jan-M (unsetmatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:26:52	-->	fdr-M (fdrmatrixo@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:27:24	-->	rayascott-M (rayascottm@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:28:07	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 07:28:16	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 07:29:13	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-27 07:29:40	-->	M73arqo-M (m73arqomat@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:29:49	-->	phaiax-M (phaiaxmatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:30:00	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-27 07:30:40	<--	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:31:50	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 07:32:03	-->	radix-M (radixmatri@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:32:59	-->	shahn (Sebastian@moz-pcm.9vk.46.78.IP) has joined #rust-beginners
2018-09-27 07:33:02	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:33:53	-->	notafile-M (notafilema@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-27 07:35:33	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 07:35:51	<--	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:35:59	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-27 07:38:04	-->	swampdawg47 (Mibbit@moz-sm6.dlg.59.143.IP) has joined #rust-beginners
2018-09-27 07:38:08	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 07:38:33	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 07:39:34	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:39:35	--	Raychen1 is now known as Raychen
2018-09-27 07:39:49	swampdawg47	I'm confused about (im)mutability.  If I have `let x : String = String::new()`, this x is called immutable.  Is it saying that I can't change the content of the given underlying String instance, or that I can't re-assign a different variable to the name x?
2018-09-27 07:39:55	-->	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has joined #rust-beginners
2018-09-27 07:41:01	Arnavion	Both
2018-09-27 07:41:39	Arnavion	If you had   let mut x = String::new();   that would allow you to both mutate the String and assign a different String to x
2018-09-27 07:41:48	<--	sgift_ (madison@moz-dahr74.7tqg.ttkk.0a61.2001.IP) has quit (Quit: Leaving)
2018-09-27 07:42:18	swampdawg47	Ok, so I can't turn one behavior on and the other off?
2018-09-27 07:42:20	Arnavion	If you had   let x: &mut String = ...   you would only be able to mutate the String, but not assign a different one to x. And the other way around for   let mut x: &String = ...
2018-09-27 07:42:43	swampdawg47	Mm, I see
2018-09-27 07:43:26	-->	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has joined #rust-beginners
2018-09-27 07:43:40	swampdawg47	`let x: &mut String =...`, this reads like "x is an immutable reference to a mutable string"
2018-09-27 07:44:04	-->	sgift (madison@moz-dahr74.7tqg.ttkk.0a61.2001.IP) has joined #rust-beginners
2018-09-27 07:44:43	<--	tsal (tsal@moz-khhfui.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-27 07:45:19	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 07:46:27	-->	tsal (tsal@moz-va54kv.versanet.de) has joined #rust-beginners
2018-09-27 07:47:59	emerentius	swampdawg47: that kinda works, but it's now a double pointer
2018-09-27 07:48:10	emerentius	it's an immutable binding to a mutable reference to a string
2018-09-27 07:49:09	ibrokemypie	how would one get the index of an element in a vevc that you are iterating over in a for loop?
2018-09-27 07:49:26	Arnavion	.enumerate() on the iterator
2018-09-27 07:49:39	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 07:49:43	ibrokemypie	specifically, how can you remove an element from a vec if you only have the element itself, not it's index
2018-09-27 07:49:57	swampdawg47	emerentius: I see, because x is a pointer to the reference and the reference is a pointer to the String.
2018-09-27 07:50:02	-->	mib_0ipeyn (Mibbit@moz-k32.amm.51.106.IP) has joined #rust-beginners
2018-09-27 07:50:10	<--	mib_0ipeyn (Mibbit@moz-k32.amm.51.106.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 07:50:10	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:50:18	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 07:50:52	emerentius	swampdawg47: no, because the String is a smart pointer
2018-09-27 07:51:11	ibrokemypie	there isn't an enumerate for Vec according to the compiler
2018-09-27 07:51:17	emerentius	x isn't a pointer
2018-09-27 07:51:26	sgift	ibrokemypie: vec.iter().enumerate()
2018-09-27 07:51:35	ibrokemypie	&Vec, sorry
2018-09-27 07:51:39	swampdawg47	emerentius: x doesn't 'have' the address of the smart pointer?
2018-09-27 07:52:39	emerentius	yes, but we're mixing concepts now
2018-09-27 07:52:53	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 07:53:10	emerentius	x doesn't hold a pointer to a mutable reference to the `String` struct
2018-09-27 07:53:29	emerentius	x is the mutable reference to the `String` struct
2018-09-27 07:53:46	emerentius	though I realize now you might have meant the "string" that the String struct points to
2018-09-27 07:54:53	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 07:55:24	swampdawg47	When you say "x is" do you mean "x is bound to"?
2018-09-27 07:55:27	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 07:55:50	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 07:55:51	--	Raychen1 is now known as Raychen
2018-09-27 07:56:08	ibrokemypie	using vector.remove() within a for loop over vector.iter().enumerate() gives me cannot borrow *vector as mutable because it is also borrowed as immutable
2018-09-27 07:56:20	joris	do you know any good formatting crate ? something more automatic than std::fmt
2018-09-27 07:56:55	joris	it's hard to describe but for instance, ocaml as the Format module which use "boxes" to compute line breaks and indentation automatically
2018-09-27 07:56:57	sgift	ibrokemypie: Can you show us an example what you want to do?
2018-09-27 07:56:59	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-09-27 07:58:03	-->	karma (karma@moz-t3e35j.dialog.net.pl) has joined #rust-beginners
2018-09-27 07:58:29	ibrokemypie	https://bpaste.net/show/9936fa4fea55
2018-09-27 07:58:56	scottmcm	Yes, `.iter()` returns something that holds a borrow of the vector
2018-09-27 07:59:37	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 07:59:52	ibrokemypie	how do I work around this?
2018-09-27 07:59:59	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 08:00:27	Arnavion	joris: {!crate textwrap}
2018-09-27 08:00:57	ibrokemypie	how do I work around this?
2018-09-27 08:01:00	ibrokemypie	o
2018-09-27 08:01:02	ibrokemypie	oops
2018-09-27 08:01:02	joris	Arnavion: thanks
2018-09-27 08:01:39	<--	bluss (bluss@moz-jgdsfd.cust.tele2.se) has quit (Ping timeout: 121 seconds)
2018-09-27 08:03:08	emerentius	swampdawg47: yes
2018-09-27 08:03:28	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 08:03:30	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 08:04:51	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Quit: Leaving)
2018-09-27 08:04:53	ibrokemypie	is there some other way to remove the item from the vector?
2018-09-27 08:06:20	emerentius	ibrokemypie: well, yeah, but it's unstable
2018-09-27 08:06:23	emerentius	drain_filter
2018-09-27 08:06:33	ibrokemypie	remove_item?
2018-09-27 08:07:00	emerentius	do you have a lot of items to remove?
2018-09-27 08:07:29	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 08:08:09	swampdawg47	emerentius: There is space allocated on the stack, and the address of the new String is placed in the space.  The variable, x, is bound to this stack location.  It's an immutable binding so it cannot begin referring to another stack location.  The address stored at this location is a mutable reference, so I can update the String.
2018-09-27 08:08:20	-->	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has joined #rust-beginners
2018-09-27 08:08:31	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 08:08:32	--	Raychen1 is now known as Raychen
2018-09-27 08:08:56	ibrokemypie	one
2018-09-27 08:10:37	<--	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-27 08:11:41	emerentius	swampdawg47: conceptually, it just binds a value to a name
2018-09-27 08:12:00	emerentius	I don't think there's a defined relationship to stack space
2018-09-27 08:12:34	<--	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-27 08:12:51	swampdawg47	Ok, and the two degrees of freedom are (1) can the name be bound to a different value, (2) can the value be modified thru this name
2018-09-27 08:13:04	emerentius	the optimizer may move stuff around anyway but for example repeated overwriting in a loop couldn't change the stack space's position
2018-09-27 08:13:10	emerentius	it would just overwrite it repeatedly
2018-09-27 08:13:33	-->	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has joined #rust-beginners
2018-09-27 08:13:56	emerentius	yeah
2018-09-27 08:14:08	emerentius	(2) could also be formulated as "can you take a mutable reference to the value"
2018-09-27 08:14:34	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 08:14:36	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 08:15:06	-->	yk (yk@moz-htp.o4q.169.109.IP) has joined #rust-beginners
2018-09-27 08:15:51	ibrokemypie	I only have a single item to remove
2018-09-27 08:16:10	emerentius	ibrokemypie: let idx = vec.iter().position(|item| item.name.eq_ignore_ascii_case("PKGBUILD"); vec.remove(idx);
2018-09-27 08:16:33	emerentius	I forgot a ")"
2018-09-27 08:16:54	ibrokemypie	would this replace the entire for loop?
2018-09-27 08:17:00	emerentius	yes
2018-09-27 08:17:03	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-27 08:17:04	--	Raychen1 is now known as Raychen
2018-09-27 08:17:09	<--	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-27 08:21:06	<--	spear3 (spear2@moz-jsi95h.or.charter.com) has quit (Quit: Leaving)
2018-09-27 08:21:06	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 08:22:16	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-27 08:23:24	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-27 08:24:40	ibrokemypie	awesome, that worked, thanks!
2018-09-27 08:25:28	<--	Porkepix (Porkepix@moz-b7geln.i940.2e4u.41d0.2001.IP) has quit (Quit: WeeChat 2.1)
2018-09-27 08:26:03	ibrokemypie	is there a function that appends items from one vec to another?
2018-09-27 08:26:20	ibrokemypie	ah
2018-09-27 08:26:22	ibrokemypie	append
2018-09-27 08:26:26	drager	:)
2018-09-27 08:26:37	-->	paulvt (paul.van.ti@moz-fqjbgr.fb56.nn7d.a446.2a02.IP) has joined #rust-beginners
2018-09-27 08:26:45	-->	mib_puzuiq (Mibbit@moz-6a2.pkn.77.93.IP) has joined #rust-beginners
2018-09-27 08:26:48	joris	uh ? didn't know this existed :o
2018-09-27 08:27:03	<--	mib_puzuiq (Mibbit@moz-6a2.pkn.77.93.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 08:27:14	ibrokemypie	is there an append which only copies from the source vector rather than moving them out?
2018-09-27 08:27:19	ibrokemypie	https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.append
2018-09-27 08:27:23	-->	Porkepix (Porkepix@moz-gcohs5.ip-5-39-83.eu) has joined #rust-beginners
2018-09-27 08:27:24	joris	i was going to say "extend", but i guess append is a specialized version 
2018-09-27 08:27:34	joris	ibrokemypie: extend_from_slice iirc
2018-09-27 08:31:45	emerentius	extend(some_slice) should be specialized to do the same thing, anyway
2018-09-27 08:33:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 08:35:40	joris	emerentius: but trait specialisation does not exist yet ? or you mean llvm will be smart enough to do that
2018-09-27 08:37:06	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 08:38:32	<--	emerentius (emerentius@moz-215tg4.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 08:39:29	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 08:39:48	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-09-27 08:42:38	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 08:43:01	-->	mib_t5xf09 (Mibbit@moz-8peosa.net78.udm.net) has joined #rust-beginners
2018-09-27 08:43:31	scottmcm	specialization exists on nightly, but has soundness bugs so isn't being stabilized soon
2018-09-27 08:43:49	scottmcm	it's used in various places in the standard library, though
2018-09-27 08:43:53	-->	Aankhen`` (notasquid@moz-frk.3eg.207.49.IP) has joined #rust-beginners
2018-09-27 08:44:00	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 08:45:25	<--	mib_t5xf09 (Mibbit@moz-8peosa.net78.udm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 08:46:43	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-09-27 08:46:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 08:47:25	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 08:47:32	joris	didn't know it was used in stdlib, thanks
2018-09-27 08:47:34	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 08:48:30	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-27 08:52:27	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 08:52:54	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 08:55:23	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-27 08:58:33	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-27 09:00:20	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-27 09:01:59	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 09:02:37	-->	arunkumar413 (arunkumar41@moz-765.bt9.48.157.IP) has joined #rust-beginners
2018-09-27 09:05:08	<--	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Connection closed)
2018-09-27 09:05:28	-->	ysz (ysz@moz-o98ss1.clients.cmk.ru) has joined #rust-beginners
2018-09-27 09:07:47	-->	hrld (hrld@moz-4f847a.abo.wanadoo.fr) has joined #rust-beginners
2018-09-27 09:08:24	<--	hamsteri__ (hamsteri@moz-hs7.fvt.60.194.IP) has quit (Connection closed)
2018-09-27 09:10:05	-->	timClicks (Mibbit@moz-tqg.hfs.53.101.IP) has joined #rust-beginners
2018-09-27 09:10:27	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-09-27 09:14:15	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 09:14:22	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 09:14:41	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 09:16:54	-->	ferdinand (Mibbit@moz-o4r.mfb.64.124.IP) has joined #rust-beginners
2018-09-27 09:16:59	timClicks	I have a question for someone who's played with dynamic languages a lot before. I'm sort of struggling with translating something from Python to Rust.
2018-09-27 09:17:48	<--	karma (karma@moz-t3e35j.dialog.net.pl) has quit (Quit: Leaving)
2018-09-27 09:18:13	drager	!ask
2018-09-27 09:18:34	timClicks	This post here outlines a process for generating functions on the fly using expression objects https://jeremykun.com/2012/01/01/random-psychedelic-art/
2018-09-27 09:19:18	timClicks	The most important code is here https://github.com/j2kun/random-art/blob/master/randomart.py#L51-55
2018-09-27 09:19:19	ferdinand	hi, is there any podcast about rust programming?
2018-09-27 09:19:39	timClicks	ferdinand: A good one for new programers is called "new rustacean"
2018-09-27 09:20:08	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-27 09:20:59	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 09:21:18	timClicks	perhaps I'm overthinking things, but I'm a little stuck about how to approach building expression trees and then evaluating them on the fly
2018-09-27 09:21:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 09:21:27	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 09:23:36	-->	catfish_in_a_nutshell (Mibbit@moz-u3e.68o.72.223.IP) has joined #rust-beginners
2018-09-27 09:24:31	<--	timClicks (Mibbit@moz-tqg.hfs.53.101.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 09:25:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 09:25:58	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 09:27:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 09:27:32	ferdinand	@timClicks does the "new rustacean" the only one exisist
2018-09-27 09:27:33	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 09:29:57	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-09-27 09:30:36	-->	dekokun_ (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 09:30:36	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-27 09:30:40	<--	xorAxAx (alex@moz-l9k73a.srv.alexanderweb.de) has left #rust-beginners
2018-09-27 09:31:35	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 09:33:36	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 09:34:50	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 09:35:02	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 09:35:07	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 09:36:47	<--	catfish_in_a_nutshell (Mibbit@moz-u3e.68o.72.223.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 09:37:12	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Ping timeout: 121 seconds)
2018-09-27 09:38:07	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 09:38:16	-->	mib_1a38ga (Mibbit@moz-94d.abu.22.196.IP) has joined #rust-beginners
2018-09-27 09:38:20	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 09:38:32	mib_1a38ga	irc lives
2018-09-27 09:38:53	<--	yk (yk@moz-htp.o4q.169.109.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 09:39:22	<--	ysz (ysz@moz-o98ss1.clients.cmk.ru) has quit (Quit: This computer has gone to sleep)
2018-09-27 09:42:15	-->	DorothyKq (Mibbit@moz-doo.9s9.223.185.IP) has joined #rust-beginners
2018-09-27 09:42:39	DorothyKq	I'm here
2018-09-27 09:45:15	-->	yk (yk@moz-htp.o4q.169.109.IP) has joined #rust-beginners
2018-09-27 09:45:18	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 09:47:29	<--	mib_1a38ga (Mibbit@moz-94d.abu.22.196.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 09:48:46	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-27 09:49:18	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 09:49:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 09:49:51	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 09:50:10	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 09:50:14	--	Raychen1 is now known as Raychen
2018-09-27 09:51:26	<--	ferdinand (Mibbit@moz-o4r.mfb.64.124.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 09:56:01	-->	mkollaro (mkollaro@moz-6em5ra.imu.intel.com) has joined #rust-beginners
2018-09-27 09:57:26	-->	jperras_ (jperras@moz-sb24qp.dsl.bell.ca) has joined #rust-beginners
2018-09-27 09:59:42	<--	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has quit (Quit: Konversation terminated!)
2018-09-27 10:00:05	<--	holmgr (holmgr@moz-cvpp3v.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-27 10:01:37	-->	davidthecoder (david@moz-fb5r3p.dyn.plus.net) has joined #rust-beginners
2018-09-27 10:01:42	<--	jperras_ (jperras@moz-sb24qp.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 10:04:23	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-27 10:08:25	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Ping timeout: 121 seconds)
2018-09-27 10:11:59	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-27 10:13:22	-->	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-27 10:15:23	<--	Simon (Simon@moz-g5a621.dynamic.mnet-online.de) has quit (Quit: Leaving...)
2018-09-27 10:15:27	-->	holmgr (holmgr@moz-cvpp3v.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-27 10:16:05	-->	stomper (Mibbit@moz-m2efqi.adsl.tpnet.pl) has joined #rust-beginners
2018-09-27 10:17:42	<--	DorothyKq (Mibbit@moz-doo.9s9.223.185.IP) has quit (G-Lined: no spamming here)
2018-09-27 10:19:38	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Quit: Leaving.)
2018-09-27 10:20:04	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-27 10:20:45	<--	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 10:20:53	stomper	Hi, anyone good at clap in here? What I'd like to have is some limited subcommands (like "app quit" and "app test") that maybe accept a few flags, and for common usage no subcommand, just "app <args>", including some mandatory positional args. Not really sure just from reading the docs how to do this.
2018-09-27 10:22:22	-->	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has joined #rust-beginners
2018-09-27 10:22:57	-->	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has joined #rust-beginners
2018-09-27 10:23:21	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-27 10:25:01	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 10:25:38	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-27 10:27:43	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 10:28:51	drager	stomper: Isn't `subcommand` what you want? https://docs.rs/clap/2.32.0/clap/struct.SubCommand.html
2018-09-27 10:29:43	<--	dekokun_ (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 10:31:24	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 10:31:49	stomper	I think that's what I want, but I get tangled up in the details. I think if I use that I'd have to make a subcommand for my "app <args>" variant, and that would mean I have to name it something. So it would be "app subcommand <args>"
2018-09-27 10:32:14	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 10:32:42	<--	cp (cp@moz-fresc2.asahinet.com) has quit (Quit: Disappears in a puff of smoke)
2018-09-27 10:34:57	stomper	It wouldn't be a parsing problem if I was writing a custom command line parser, since the first positional argument to "app <args>" is a number, but I don't see any way to tell clap that :(
2018-09-27 10:35:15	-->	liquidnight (marcus@moz-voh5tm.i39s.bvrq.0c22.2a01.IP) has joined #rust-beginners
2018-09-27 10:37:13	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 10:38:14	-->	AtumT (IRC@moz-ieh6sm.gvt.net.br) has joined #rust-beginners
2018-09-27 10:40:25	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-27 10:41:00	adoa	stomper: clap appears to have macros for types. One example is here https://docs.rs/clap/2.32.0/clap/macro.value_t.html
2018-09-27 10:42:38	adoa	stomper: a full list of macros is in the docs: https://docs.rs/clap/2.32.0/clap/#macros
2018-09-27 10:42:39	-->	mib_uv9r6q (Mibbit@moz-tmf.h0a.143.5.IP) has joined #rust-beginners
2018-09-27 10:42:39	<--	mib_uv9r6q (Mibbit@moz-tmf.h0a.143.5.IP) has quit (Connection closed)
2018-09-27 10:46:39	stomper	That gives me an idea actually. I wonder if I can parse args twice with two different App instances
2018-09-27 10:46:57	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-27 10:48:23	<--	xet7 (xet7@moz-f2l2ri.rev.dnainternet.fi) has quit (Quit: Leaving)
2018-09-27 10:48:38	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-27 10:48:44	-->	xet7 (xet7@moz-to86fv.rev.dnainternet.fi) has joined #rust-beginners
2018-09-27 10:50:46	-->	yer (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-27 10:52:35	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-27 10:52:40	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Connection closed)
2018-09-27 10:52:46	yer	could i have a trait function that says "fn map() -> ConcreteType<I>"......... and in the impl for that trait "impl Trait for ConcreteType<I> { fn map() -> ConcreteType<Self>"............... basically replace <I> with <Self>
2018-09-27 10:52:47	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-27 10:54:36	Moongoodboy{K}	yer: is I a type param to the trait?
2018-09-27 10:55:47	yer	yes
2018-09-27 10:56:04	yer	furthermore ConcreteType already implements what I implements
2018-09-27 10:56:13	yer	that implement the same OtherTrait
2018-09-27 10:56:36	Moongoodboy{K}	then sure; you `impl Trait<Self> for ConcreteType`—
2018-09-27 10:56:40	Moongoodboy{K}	wait, hang on.
2018-09-27 10:56:52	-->	pamaury (pamaury@moz-tr5vfh.mpi-sws.org) has joined #rust-beginners
2018-09-27 10:57:29	Moongoodboy{K}	this probably isn't right. Can you toss code up onto the playground?
2018-09-27 10:57:55	-->	zelda (Mibbit@moz-c2o.8q2.143.139.IP) has joined #rust-beginners
2018-09-27 10:57:59	<--	swampdawg47 (Mibbit@moz-sm6.dlg.59.143.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 10:58:03	yer	yeah gimmie a sec
2018-09-27 11:00:22	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 11:00:52	yer	done https://play.rust-lang.org/?gist=345e9e1e0fa6840a6ebfb2bd2cd5471b&version=stable&mode=debug&edition=2015
2018-09-27 11:00:59	yer	commented the problem area
2018-09-27 11:01:18	<--	holmgr (holmgr@moz-cvpp3v.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-27 11:01:44	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 11:02:18	-->	holmgr (holmgr@moz-cvpp3v.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-27 11:02:18	<--	holmgr (holmgr@moz-cvpp3v.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-27 11:02:19	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-27 11:02:41	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-27 11:03:02	-->	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 11:03:30	yer	what im trying to do is make it so there are some Iterator function that when called on CustomIter, will return a CustomIter concrete type. I want to do this because later (if you scroll down) IntoVenel has a venel() function that is implemted for CustomIter and it accesses self.info  which means it has to know that self is CustomIter
2018-09-27 11:04:19	-->	dekokun_ (dekokun@moz-6upkqi.ucom.ne.jp) has joined #rust-beginners
2018-09-27 11:04:31	<--	dekokun (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Connection closed)
2018-09-27 11:04:43	Moongoodboy{K}	as written, this map() returns CustomIter<Self>, i.e. CustomIter<CustomIter<I>>
2018-09-27 11:04:50	zelda	I have tried the code in Listing 2-4 of the Guessing Game tutorial but receive an unexpected message in the command window: cannot find value 'guess' in this scope
2018-09-27 11:05:01	yer	so I want to preserve the ability to call regular iter functions on CustomIter... without losing its concrete type.. hence this round about way of overriding Iterator functions and returning CustomIter
2018-09-27 11:06:05	yer	Moongoodboy{K} do i have to "type cast" that somehow?
2018-09-27 11:06:06	-->	Mateon2 (Thunderbird@moz-rpbq99.supernova.orange.pl) has joined #rust-beginners
2018-09-27 11:06:12	Moongoodboy{K}	zelda: Listing 2-4 is apparently for illustrative purposes, not meant to be used verbatim: `// ---snip---`
2018-09-27 11:06:33	<--	Mateon1 (Thunderbird@moz-699b2g.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-27 11:06:36	--	Mateon2 is now known as Mateon1
2018-09-27 11:07:32	Moongoodboy{K}	yer: ...since Self is already CustomIter<_>, you can achieve /some function which consumes self and returns a CustomIter/ by just returning Self
2018-09-27 11:07:51	zelda	I have commented all the text out from the previous code listing where it says snip?
2018-09-27 11:08:21	<--	dekokun_ (dekokun@moz-6upkqi.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-27 11:08:39	<--	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-27 11:08:40	<--	adi (adi@moz-omejp7.vsos.ethz.ch) has quit (Ping timeout: 121 seconds)
2018-09-27 11:08:41	yer	ohhhhhhh
2018-09-27 11:08:49	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-27 11:08:58	yer	youre right im literally calling self<self>
2018-09-27 11:09:09	<--	dowwie (dowwie@moz-3dr.dpg.227.23.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 11:09:28	Moongoodboy{K}	you're returning CustomIter<Self>, which is CustomIter<CustomIter<I>>, yes
2018-09-27 11:10:18	yer	if I try this tho i get a cycle https://play.rust-lang.org/?gist=f067948a78b340d7ffcec1ba1402d49a&version=stable&mode=debug&edition=2015
2018-09-27 11:11:54	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-27 11:11:55	Moongoodboy{K}	no, leave the header as it was
2018-09-27 11:12:05	-->	holmgr (holmgr@moz-cvpp3v.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-27 11:12:23	<--	holmgr (holmgr@moz-cvpp3v.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-27 11:12:31	Moongoodboy{K}	impl<I: Iterator> CustomIterExt for CustomIter<I>  // was correct
2018-09-27 11:13:07	Moongoodboy{K}	    where Self: Sized + Iterator // oops, I forgot to copy this bit
2018-09-27 11:13:31	<--	jcalve (jcalve@moz-v4qft6.dynamicip.rima-tde.net) has quit (Ping timeout: 121 seconds)
2018-09-27 11:13:59	<--	artfwo (artfwo@moz-ei7.hqq.232.91.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 11:14:12	-->	artfwo (artfwo@moz-fb0.8oo.75.184.IP) has joined #rust-beginners
2018-09-27 11:14:43	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 11:15:17	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-27 11:16:20	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Connection closed)
2018-09-27 11:16:40	yer	any ideas why I get a "multiple applicable items in scope" I know there is a map in Iterator which CustomIter impls but I want to override it with another iterator's map but still allow CustomIter to impl Iterator
2018-09-27 11:16:46	zelda	Moongoodboy{K}: I have commented all the text out from the previous code listing where it says snip?
2018-09-27 11:17:00	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 11:18:49	Moongoodboy{K}	zelda: I'm not sure what you mean by that. The `---snip---` comment in 2-4 indicates that some code has been ommitted; I infer from that that it is not meant to be compiled or executed, but rather exists just to show you something.
2018-09-27 11:19:08	Moongoodboy{K}	IIRC there are later code samples that are complete
2018-09-27 11:20:32	-->	holmgr (holmgr@moz-31707o.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-27 11:20:39	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 11:20:45	zelda	Moongoodboy{K}: but furtther down it says: However, the code in Listing 2-4 won’t compile yet. Let’s try it:
2018-09-27 11:20:51	<--	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 11:21:10	-->	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has joined #rust-beginners
2018-09-27 11:21:14	Moongoodboy{K}	...oh, I missed that.
2018-09-27 11:21:50	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 11:22:41	Moongoodboy{K}	zelda: okay, so take the code from 2-3 and patch it by adding the `match` from 2-4? I think that's the only change
2018-09-27 11:23:42	zelda	Moongoodboy{K}: I tried that but didn't see the same compile errors as shown?
2018-09-27 11:26:21	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 11:26:46	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-27 11:27:17	<--	yer (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 11:27:52	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-27 11:28:18	Moongoodboy{K}	zelda: ahh, there's also an added import of Ordering
2018-09-27 11:28:49	Moongoodboy{K}	zelda: ...the changes are described in the prose immediately below the code: "The first new bit here is another `use` statement [...]" and "Then we add five new lines at the bottom [...]"
2018-09-27 11:31:06	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 11:35:53	<--	stomper (Mibbit@moz-m2efqi.adsl.tpnet.pl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 11:37:06	-->	xiaojiji (Mibbit@moz-e1124s.optusnet.com.au) has joined #rust-beginners
2018-09-27 11:37:34	<--	xiaojiji (Mibbit@moz-e1124s.optusnet.com.au) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 11:37:53	-->	bellows (Mibbit@moz-ah98ec.dsl.tropolys.de) has joined #rust-beginners
2018-09-27 11:38:55	<--	indigo747_ (indigo747@moz-bgsfrb.dhcp.cruzio.com) has left #rust-beginners ("WeeChat 1.9.1")
2018-09-27 11:41:03	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 11:41:08	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 11:41:54	<--	bellows (Mibbit@moz-ah98ec.dsl.tropolys.de) has quit (Ping timeout: 121 seconds)
2018-09-27 11:42:43	-->	Dariost (Dariost@moz-7tf.n27.48.151.IP) has joined #rust-beginners
2018-09-27 11:44:19	<--	LeshaInc (LeshaInc@moz-kl5p31.me) has quit (Quit: ZNC - https://znc.in)
2018-09-27 11:44:45	-->	LeshaInc (LeshaInc@moz-kl5p31.me) has joined #rust-beginners
2018-09-27 11:48:35	-->	Miniwoffer (Miniwoffer@moz-a1p.ost.247.109.IP) has joined #rust-beginners
2018-09-27 11:49:24	-->	adi (adi@moz-omejp7.vsos.ethz.ch) has joined #rust-beginners
2018-09-27 11:49:49	-->	hellerbarde (phil@moz-c49f28.vsos.ethz.ch) has joined #rust-beginners
2018-09-27 11:50:04	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 11:50:11	<--	LeshaInc (LeshaInc@moz-kl5p31.me) has quit (Quit: ZNC - https://znc.in)
2018-09-27 11:50:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 11:50:33	-->	LeshaInc (LeshaInc@moz-fqmd5b.la8i.bqh1.04f9.2a01.IP) has joined #rust-beginners
2018-09-27 11:51:38	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-09-27 11:52:49	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 11:53:08	-->	jec_ (jec@moz-pboa8b.ks.cox.net) has joined #rust-beginners
2018-09-27 11:54:33	-->	fsasm (fsasm@moz-5fd.qra.178.62.IP) has joined #rust-beginners
2018-09-27 11:54:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 11:55:02	jec_	if one has a main.rs and a lib.rs no other third party modules, do you have to have "extern crate something" inside your main.rs just to get access to whatever is in your lib.rs?  I ask because when I do that, VS Code keeps telling me I'm wrong, although I'm almost positive that this is the way it said to do it in the rust book?  Ugh, confused
2018-09-27 11:56:17	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-27 11:56:48	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 11:56:50	stephaneyfx	jec_: That's the way to do it AFAIK. Are you sure the names match?
2018-09-27 11:57:16	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-27 11:57:25	<--	maarten (maartenBE@moz-61h3to.access.telenet.be) has quit (Ping timeout: 121 seconds)
2018-09-27 11:57:33	-->	maarten (maartenBE@moz-p01hcr.access.telenet.be) has joined #rust-beginners
2018-09-27 11:58:28	-->	jperras_ (jperras@moz-nhr2o8.dsl.bell.ca) has joined #rust-beginners
2018-09-27 11:58:52	-->	makos (makos@moz-3n0770.adsl.tpnet.pl) has joined #rust-beginners
2018-09-27 11:59:05	jec_	yes stephaneyfx, just double checked, they match.  Just so that I am 100% certain, the name of the crate is the same name as the top level folder the project is in correct?  So If my project is in a folder called "clutter" then my crate is also named "clutter".  This is accurate?
2018-09-27 11:59:25	stephaneyfx	jec_: I just tried and VS Code didn't show any error. I started with a bin crate and added lib.rs.
2018-09-27 11:59:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 12:00:13	stephaneyfx	jec_: I think the name to use is the name in the [package] section of Cargo.toml
2018-09-27 12:00:32	stephaneyfx	jec_: With dashes replaced by underscores
2018-09-27 12:00:50	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 12:01:04	jec_	yeah, this is weird....
2018-09-27 12:01:13	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 12:01:33	stephaneyfx	What error message does VS Code give you?
2018-09-27 12:02:08	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:02:44	<--	jperras_ (jperras@moz-nhr2o8.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 12:03:01	jec_	"Cannot find crate for closures" My Cargo.toml name = "closures" I have logic inside a lib.rs folder inside the src directory and inside main I use "extern crate closures"
2018-09-27 12:03:21	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-27 12:03:55	stephaneyfx	Does `cargo build` give any error?
2018-09-27 12:04:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:06:45	jec_	stephaneyfx: i get an error saying one of my structs is provate
2018-09-27 12:07:18	jec_	private**, im about to change that.  But this stuff definitely see's each other....must be a vs code thing
2018-09-27 12:07:28	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:07:32	stephaneyfx	jec_: Have you tried restarting VS Code?
2018-09-27 12:07:59	-->	LeoZ (Mibbit@moz-qku.p21.239.87.IP) has joined #rust-beginners
2018-09-27 12:08:21	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 12:08:29	jec_	Yes, that worked....but still....
2018-09-27 12:08:46	jec_	how frustrating to have to remember to restart when you start adding new files.....
2018-09-27 12:09:03	stephaneyfx	jec_: When adding `extern crate` declarations, I often have to restart VS Code to get rid of the "cannot find crate" error, though I didn't have to do it when creating this simple main.rs + lib.rs project.
2018-09-27 12:09:05	jec_	thanks stephaneyfx...I appreciate you :)
2018-09-27 12:09:37	jec_	must be an issue with extension...i wonder if the extension teams knows this happens?
2018-09-27 12:10:34	stephaneyfx	jec_: https://github.com/rust-lang-nursery/rls-vscode/issues/364
2018-09-27 12:10:56	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-27 12:11:50	stephaneyfx	jec_: Looks like you might not have to restart (all of vs code) after all: https://github.com/editor-rs/vscode-rust/pull/104
2018-09-27 12:11:59	-->	baadc0de (Mibbit@moz-3av.j1t.234.77.IP) has joined #rust-beginners
2018-09-27 12:13:03	<--	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has quit (Quit: Leaving)
2018-09-27 12:13:19	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:13:53	baadc0de	hi guys. I'm a bit stumped about this one
2018-09-27 12:14:36	baadc0de	https://gist.github.com/baadc0de/feb984cc31b23838fe98fcdc3f5069eb
2018-09-27 12:15:54	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-27 12:15:57	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 12:16:16	baadc0de	the way I'm thinking is that x borrows m, for the lifetime of the inner block. The compiler is complaining about m not living long enough.
2018-09-27 12:17:34	<--	makos (makos@moz-3n0770.adsl.tpnet.pl) has quit (Connection closed)
2018-09-27 12:17:36	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 12:17:46	-->	makos (makos@moz-3n0770.adsl.tpnet.pl) has joined #rust-beginners
2018-09-27 12:17:50	jec_	stephaneyfx: I'll have to try clicking that RLS in the status bar next time.  I just tried it a couple times and there's no feed back to the button, so I'm not sure if anything happened or not.  I suppose I'll find out next time!!
2018-09-27 12:17:51	<--	makos (makos@moz-3n0770.adsl.tpnet.pl) has quit (Connection closed)
2018-09-27 12:17:54	stephaneyfx	baadc0de: This works: https://play.rust-lang.org/?gist=5930baaa6bd3bb05d8f71ab189d3cb0d&version=stable&mode=debug&edition=2015
2018-09-27 12:18:24	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 12:18:25	stephaneyfx	jec_: Yeah, I tried too but it does not seem to react to clicks. At least it didn't work for me.
2018-09-27 12:18:51	<--	LeoZ (Mibbit@moz-qku.p21.239.87.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 12:19:07	jec_	stephaneyfx: Inside VS Code I just hit Ctrl + Shift + P and searched "rls"  There appears to be an option to update the RLS and to restart it as well
2018-09-27 12:19:12	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-27 12:19:17	jec_	Might, need to give that a go next time
2018-09-27 12:19:27	stephaneyfx	jec_: Oh ok, thank you :)
2018-09-27 12:20:20	baadc0de	@stephaneyfx ohh, it's because of the return value? Otherwise x would escape out of that block
2018-09-27 12:20:28	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:20:34	stephaneyfx	baadc0de: Rustc sometimes gives surprising errors when the last expression of a block creates a temporary borrowing something
2018-09-27 12:21:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:21:50	<--	Thinkofname (Think@moz-19koog.name) has quit (Quit: Leaving)
2018-09-27 12:21:57	stephaneyfx	baadc0de: Potentially related to {!gh 46413}
2018-09-27 12:21:59	<--	artfwo (artfwo@moz-fb0.8oo.75.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:22:09	stephaneyfx	!gh 46413
2018-09-27 12:22:45	-->	npmccallum (npmccallum@moz-9tof33.wlfrct.sbcglobal.net) has joined #rust-beginners
2018-09-27 12:22:56	stephaneyfx	Oh well... https://github.com/rust-lang/rust/issues/46413
2018-09-27 12:23:14	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 12:23:55	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-27 12:23:55	npmccallum	I want my crate to build on stable. But I also want it to have extra functionality on nightly. Is there a good example of how to do that?
2018-09-27 12:24:18	-->	bugweiser (Mibbit@moz-0bojte.ip.btc-net.bg) has joined #rust-beginners
2018-09-27 12:24:29	-->	Thinkofname (Think@moz-19koog.name) has joined #rust-beginners
2018-09-27 12:24:39	stephaneyfx	baadc0de: Even closer: https://github.com/rust-lang/rust/issues/44801
2018-09-27 12:24:50	dpc1	npmccallum: look at feature gates
2018-09-27 12:26:49	baadc0de	right, I see! thanks for the help.
2018-09-27 12:27:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 12:28:02	npmccallum	dpc1: I'm not asking how to turn on the features. I'm asking for a complete example.
2018-09-27 12:28:07	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-27 12:28:24	dpc1	npmccallum: that's what. you hide the nightly features behind feature gates. so your users can select them if they want.
2018-09-27 12:28:41	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 12:28:42	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 12:28:44	dpc1	and it will build on stable without the nightly stuff
2018-09-27 12:29:12	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:29:25	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-27 12:30:01	bugweiser	Hello. Can somebody explain why this is valid?
2018-09-27 12:30:27	bugweiser	http://mibpaste.com/HRDAY8 
2018-09-27 12:30:35	npmccallum	dpc1: how do I express the nightly dependency in Cargo.toml?
2018-09-27 12:30:41	stephaneyfx	bugweiser: The link seems invalid
2018-09-27 12:30:59	bugweiser	huh
2018-09-27 12:31:15	stephaneyfx	bugweiser: Use the playground instead
2018-09-27 12:31:19	<--	yk (yk@moz-htp.o4q.169.109.IP) has quit (Connection closed)
2018-09-27 12:31:19	stephaneyfx	!playground
2018-09-27 12:31:29	stephaneyfx	https://play.rust-lang.org/
2018-09-27 12:31:33	-->	yk (yk@moz-htp.o4q.169.109.IP) has joined #rust-beginners
2018-09-27 12:31:37	dpc1	npmccallum: just like a normal dependency. make it optional. and then make it depend on a feature gate foo = ["dependency"]
2018-09-27 12:31:44	bugweiser	https://pastebin.com/G5gtByQ5
2018-09-27 12:31:47	<--	baadc0de (Mibbit@moz-3av.j1t.234.77.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 12:31:48	dpc1	!pastebin
2018-09-27 12:32:02	bugweiser	this hould work
2018-09-27 12:32:10	bugweiser	string2 has a lifetime less than result yet its valid
2018-09-27 12:32:11	dpc1	!paste
2018-09-27 12:32:13	npmccallum	dpc1: sorry let me be more clear. How do I express that if you turn on this feature you need nightly to build.
2018-09-27 12:32:42	dpc1	npmccallum: ah. you will have to mention that in your documentnation. 
2018-09-27 12:33:07	dpc1	what we do is we have a "nightly" feature 
2018-09-27 12:33:14	stephaneyfx	bugweiser: string2 has type &'static str
2018-09-27 12:33:35	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 12:33:38	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-27 12:34:21	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 12:34:38	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-27 12:35:21	bugweiser	Ah I see so string2 lives throughout the entire program because its a string literal. Correct?
2018-09-27 12:35:38	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 12:36:53	stephaneyfx	bugweiser: Right
2018-09-27 12:37:24	bugweiser	Got it. Thank you for the help
2018-09-27 12:38:38	npmccallum	dpc1: how do I condition the use of #![feature(...)] on one of my feature gates?
2018-09-27 12:38:44	-->	artfwo (artfwo@moz-jbr.h02.230.185.IP) has joined #rust-beginners
2018-09-27 12:43:00	dpc1	npmccallum: https://github.com/uuid-rs/uuid/blob/master/src/lib.rs#L110
2018-09-27 12:43:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-27 12:43:20	npmccallum	dpc1: thanks!
2018-09-27 12:43:28	dpc1	:)
2018-09-27 12:45:37	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:45:43	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 12:46:45	<--	subhojitpaul (subhojit777@moz-eq4.h9p.163.122.IP) has quit (Quit: Leaving)
2018-09-27 12:47:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 12:49:37	<--	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has quit (Connection closed)
2018-09-27 12:49:45	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:49:52	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 12:50:15	-->	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has joined #rust-beginners
2018-09-27 12:50:36	drager	dpc1: The classic uuid example ;)
2018-09-27 12:53:47	dpc1	xD
2018-09-27 12:54:08	dpc1	drager: gotta get some stars xD
2018-09-27 12:54:19	<--	holmgr (holmgr@moz-31707o.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-27 12:56:00	<--	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 12:58:48	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-27 12:59:00	-->	cubetastic (Thunderbird@moz-1smf3c.ik6d.sldf.4072.2409.IP) has joined #rust-beginners
2018-09-27 12:59:40	<--	Porkepix (Porkepix@moz-gcohs5.ip-5-39-83.eu) has quit (Quit: WeeChat 2.1)
2018-09-27 13:01:37	-->	Porkepix (Porkepix@moz-gcohs5.ip-5-39-83.eu) has joined #rust-beginners
2018-09-27 13:04:26	-->	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-27 13:04:34	<--	Porkepix (Porkepix@moz-gcohs5.ip-5-39-83.eu) has quit (ircservices.mozilla.org (Too many invalid passwords))
2018-09-27 13:05:05	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 13:06:49	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-27 13:07:42	-->	Porkepix (Porkepix@moz-gcohs5.ip-5-39-83.eu) has joined #rust-beginners
2018-09-27 13:10:04	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 13:12:35	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2018-09-27 13:13:06	<--	cubetastic (Thunderbird@moz-1smf3c.ik6d.sldf.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 13:14:23	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust-beginners
2018-09-27 13:14:35	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 13:15:02	drager	:)
2018-09-27 13:16:34	<--	Brenevin (Brenevin@moz-udq.mhs.98.155.IP) has quit (Connection closed)
2018-09-27 13:16:42	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 13:16:52	-->	sp1ff_ (sp1ff@moz-lfv7co.myfairpoint.net) has joined #rust-beginners
2018-09-27 13:17:21	-->	cp (cp@moz-4f5h05.asahi-net.or.jp) has joined #rust-beginners
2018-09-27 13:18:38	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 13:21:01	<--	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has quit (Ping timeout: 121 seconds)
2018-09-27 13:21:23	-->	luizdepra (luizdepra@moz-dd76bg.31up.eidl.1284.2001.IP) has joined #rust-beginners
2018-09-27 13:22:37	-->	asyncsec (asyncsec@moz-pv8aeh.dyn6.twc.com) has joined #rust-beginners
2018-09-27 13:22:45	<--	npmccallum (npmccallum@moz-9tof33.wlfrct.sbcglobal.net) has quit (Client exited)
2018-09-27 13:25:59	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 13:27:38	<--	liquidnight (marcus@moz-voh5tm.i39s.bvrq.0c22.2a01.IP) has quit (Connection closed)
2018-09-27 13:29:00	-->	elichai2 (uid212594@moz-racuhj.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 13:29:54	<--	arunkumar413 (arunkumar41@moz-765.bt9.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 13:30:29	-->	mib_nyfsx0 (Mibbit@moz-sla.6m7.51.106.IP) has joined #rust-beginners
2018-09-27 13:31:39	mib_nyfsx0	hey, i see that unwrap and expect now behave the same way in terms of error mesages. Previously expect used to print out the exact line where the error happened . now both of them print error like: "thread 'main' panicked at 'failed none', libcore/option.rs:989:5"
2018-09-27 13:32:21	mib_nyfsx0	previously in case of expect i used to see the line number of panic in my local source file
2018-09-27 13:33:13	mib_nyfsx0	now it is printing the options.rs:989:5. can anybody tell me which version of rust did this change to expect() ?
2018-09-27 13:33:59	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-27 13:35:45	-->	seijikun (seijikun@moz-13qb7j.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 13:43:54	-->	jpthomson (user@moz-iic.6lt.83.130.IP) has joined #rust-beginners
2018-09-27 13:44:41	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-27 13:47:42	<--	runfalk (runfalk@moz-gs0d5j.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2018-09-27 13:48:07	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 13:48:23	-->	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has joined #rust-beginners
2018-09-27 13:49:19	-->	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has joined #rust-beginners
2018-09-27 13:52:13	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-27 13:53:18	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-27 13:54:20	-->	brucem (textual@moz-jih.3cd.229.49.IP) has joined #rust-beginners
2018-09-27 13:54:29	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-27 13:55:03	--	U007D_afk is now known as U007D
2018-09-27 13:58:15	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 13:58:26	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 13:58:31	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 13:59:18	-->	jperras_ (jperras@moz-rmio3p.dsl.bell.ca) has joined #rust-beginners
2018-09-27 13:59:49	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-27 14:00:17	<--	U007D (U007D@moz-jc56tv.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 14:00:32	-->	U007D (U007D@moz-c5t.9b9.245.162.IP) has joined #rust-beginners
2018-09-27 14:03:07	-->	ysz (ysz@moz-utq.pl8.167.109.IP) has joined #rust-beginners
2018-09-27 14:03:13	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 14:03:23	-->	leaper (Mibbit@moz-5ot.gfg.149.169.IP) has joined #rust-beginners
2018-09-27 14:03:34	<--	jperras_ (jperras@moz-rmio3p.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 14:03:38	<--	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-27 14:03:48	<--	sp1ff_ (sp1ff@moz-lfv7co.myfairpoint.net) has quit (Ping timeout: 121 seconds)
2018-09-27 14:04:11	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 14:04:40	-->	refold (refold@moz-0ig.vcg.98.88.IP) has joined #rust-beginners
2018-09-27 14:04:55	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-27 14:06:01	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 14:06:05	<--	PeterRabbit (peter@moz-ocpse2.o8dh.cakp.6c64.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 14:06:37	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Connection closed)
2018-09-27 14:06:47	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-27 14:07:13	-->	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 14:08:46	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 14:09:02	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 14:10:30	-->	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-27 14:11:23	<--	gnzlbg (gnzlbg@moz-iqechf.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 14:11:32	-->	nifker (Mozilla@moz-pobran.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 14:11:47	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 14:12:32	<--	Miniwoffer (Miniwoffer@moz-a1p.ost.247.109.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 14:12:47	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-27 14:18:22	-->	DaQue (Mutter@moz-rdk.4hv.116.199.IP) has joined #rust-beginners
2018-09-27 14:22:10	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-09-27 14:24:02	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 14:24:22	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-27 14:24:38	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-27 14:28:36	-->	pudgetta (Mibbit@moz-vsa.dds.254.180.IP) has joined #rust-beginners
2018-09-27 14:28:41	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 14:29:13	pudgetta	hi
2018-09-27 14:29:26	-->	squiggy (Mibbit@moz-tmbua1.rev.sfr.net) has joined #rust-beginners
2018-09-27 14:29:38	pudgetta	:(
2018-09-27 14:29:45	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-27 14:29:51	<--	DaQue (Mutter@moz-rdk.4hv.116.199.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 14:30:09	<--	pudgetta (Mibbit@moz-vsa.dds.254.180.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 14:30:43	dpc1	hi
2018-09-27 14:31:19	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-27 14:34:57	dpc1	mib_nyfsx0: it still works the same way: https://play.rust-lang.org/?gist=dcf902e713ce043f54c43d4bc1c06b87&version=nightly&mode=debug&edition=2015. I guess your problem is that you are panicking somewhere else before the except()
2018-09-27 14:35:02	dpc1	s/except()/expect()
2018-09-27 14:37:29	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-27 14:37:59	-->	mib_ic8el1 (Mibbit@moz-eoh.blb.6.201.IP) has joined #rust-beginners
2018-09-27 14:38:08	<--	mib_ic8el1 (Mibbit@moz-eoh.blb.6.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 14:38:57	-->	jperras (jperras@moz-pchilm.jbht.b55b.b100.2605.IP) has joined #rust-beginners
2018-09-27 14:39:46	drager	mib_nyfsx0: Yeah as dpc1 says, I don't think it has changed. Could you show some code?
2018-09-27 14:39:52	drager	!paste
2018-09-27 14:40:29	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-27 14:40:32	drager	Is the bot dead or have I forgot how to communicate with it? :o
2018-09-27 14:40:52	dpc1	the bot is PTO 
2018-09-27 14:40:54	dpc1	xD
2018-09-27 14:40:55	drager	anyways, mib_nyfsx0: http://play.rust-lang.org/
2018-09-27 14:41:13	dpc1	eval: println!("sup");
2018-09-27 14:41:16	--	Notice(eval): sup
2018-09-27 14:41:16	--	Notice(eval): ()
2018-09-27 14:42:00	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 14:42:36	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Connection closed)
2018-09-27 14:42:54	leaper	eval : play despacito
2018-09-27 14:42:56	--	Notice(eval): error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `despacito`
2018-09-27 14:42:58	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=69cebda4ab8a2dfce6100e0e36786232&version=stable&mode=debug
2018-09-27 14:43:06	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-27 14:43:15	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-27 14:44:17	<--	adoa (awachtel@moz-tls.v74.64.158.IP) has quit (Connection closed)
2018-09-27 14:45:48	-->	vivapolonium (Mibbit@moz-qn9quv.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-27 14:47:09	-->	adoa (awachtel@moz-tls.v74.64.158.IP) has joined #rust-beginners
2018-09-27 14:47:47	vivapolonium	hey guys & gals, is there a place to get code reviews for beginners?
2018-09-27 14:48:45	-->	emerentius (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 14:48:55	leaper	vivapolonium: reddit or posting a link to the code here should be enough ...
2018-09-27 14:50:55	<--	raktajino (raktajino@moz-f92.voh.170.107.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-27 14:52:09	dpc1	vivapolonium: you can post your code on users forum https://users.rust-lang.org/
2018-09-27 14:52:44	vivapolonium	I have this little tool which is supposed to encrypt secrets and embedd them in yml files: https://github.com/maexrakete/culper
2018-09-27 14:55:10	vivapolonium	would be nice to get some suggestions for the code. I'm not sure about the encapsulation of the main file. I could use some hints to where I should things more the "rust-way". the whole result/option handling is still quite messy, so I still have to improve this
2018-09-27 14:55:45	mib_nyfsx0	dpc1: am not talking about panic, am talking about, unwrapping from an Option value, using unwrap() or expect()
2018-09-27 14:56:12	mib_nyfsx0	expect() behavior was that it used to show the exact line in my source file when it panic'd on a None value
2018-09-27 14:56:49	mib_nyfsx0	while unwrap() panic'd and showed the error msg pointing to the std lib option.rs implementation of unwrap method
2018-09-27 14:56:53	dpc1	sec let me try something
2018-09-27 14:57:32	mib_nyfsx0	compile locally using rustc. use this code fn main() { let a = None::<i32>.expect(); }
2018-09-27 14:57:56	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-27 14:58:21	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 14:58:28	mib_nyfsx0	try same with, replacing expect() with unwrap()
2018-09-27 14:59:44	dpc1	yah but i don't remember the old behaviour xD
2018-09-27 15:00:05	mib_nyfsx0	try with an older rust version, may rust 1.19
2018-09-27 15:00:14	mib_nyfsx0	*maybe rust 1.19
2018-09-27 15:00:39	dpc1	too much effort xD
2018-09-27 15:00:40	mib_nyfsx0	in expects case it would have printed same as panic!() call
2018-09-27 15:01:08	mib_nyfsx0	pointing to main.rs, and not std lib's options.rs
2018-09-27 15:01:34	dpc1	going off for sometime will be back later. maybe someone else can try it :)
2018-09-27 15:02:27	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 15:02:52	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:03:42	-->	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has joined #rust-beginners
2018-09-27 15:04:59	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 15:04:59	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 15:05:20	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-27 15:05:58	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 15:06:59	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 15:07:13	--	U007D is now known as U007D_afk
2018-09-27 15:07:28	-->	whaley (whaley@moz-clj5uc.jo2t.qoll.a880.2604.IP) has joined #rust-beginners
2018-09-27 15:08:17	<--	leaper (Mibbit@moz-5ot.gfg.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 15:08:45	<--	mib_nyfsx0 (Mibbit@moz-sla.6m7.51.106.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 15:08:55	<--	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 15:08:59	<--	jperras (jperras@moz-pchilm.jbht.b55b.b100.2605.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:08:59	-->	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has joined #rust-beginners
2018-09-27 15:09:06	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:09:21	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 15:10:10	<--	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 15:10:23	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Connection closed)
2018-09-27 15:11:08	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Connection closed)
2018-09-27 15:11:19	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-27 15:11:33	-->	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 15:11:36	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Connection closed)
2018-09-27 15:11:51	<--	Dariost (Dariost@moz-7tf.n27.48.151.IP) has quit (Client exited)
2018-09-27 15:12:13	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:13:08	<--	vivapolonium (Mibbit@moz-qn9quv.dynamic.kabel-deutschland.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 15:13:18	-->	alx741 (alx741@moz-a07.9bn.15.190.IP) has joined #rust-beginners
2018-09-27 15:15:34	--	user404d_ is now known as user404d
2018-09-27 15:17:15	-->	RockyTV (alex@moz-rdbnla.gvt.net.br) has joined #rust-beginners
2018-09-27 15:18:49	-->	alatiera (alatiera@moz-qg3rqu.access.hol.gr) has joined #rust-beginners
2018-09-27 15:19:52	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-27 15:20:35	<--	Xinayder (alex@moz-7ff.ol2.249.191.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:21:00	-->	chrisdotcode (quassel@moz-k5ob4p.jv55.dlrr.fcc8.2607.IP) has joined #rust-beginners
2018-09-27 15:21:34	-->	cyybecgs (hzdeppax@moz-8itauu.1uqv.7nqa.0642.2601.IP) has joined #rust-beginners
2018-09-27 15:21:45	<--	cyybecgs (hzdeppax@moz-8itauu.1uqv.7nqa.0642.2601.IP) has quit (Connection closed)
2018-09-27 15:24:07	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-27 15:25:13	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-27 15:25:43	-->	arunkumar413 (arunkumar41@moz-765.bt9.48.157.IP) has joined #rust-beginners
2018-09-27 15:28:59	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Connection closed)
2018-09-27 15:30:54	quartz	What would be the type definition of a HashMap in which the key is a `&str` to a `String` inside the value itself?
2018-09-27 15:31:03	-->	GreenJello (GreenJello@moz-5ah.vnp.83.23.IP) has joined #rust-beginners
2018-09-27 15:31:40	Moongoodboy{K}	quartz: `HashMap<&str, _>`, same as normal
2018-09-27 15:31:58	Moongoodboy{K}	the problem with doing that, though, is that you then can't move the values into the HashMap[*]
2018-09-27 15:31:58	<--	GreenJello (GreenJello@moz-5ah.vnp.83.23.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 15:32:10	Moongoodboy{K}	because you borrowed them to make the keys :P
2018-09-27 15:32:41	Moongoodboy{K}	and you have to stop borrowing before you can move them in, but then you can't call insert() 'cos you have no key
2018-09-27 15:33:09	quartz	Right that makes sence
2018-09-27 15:33:32	<--	ysz (ysz@moz-utq.pl8.167.109.IP) has quit (Quit: This computer has gone to sleep)
2018-09-27 15:33:38	-->	ysz (ysz@moz-utq.pl8.167.109.IP) has joined #rust-beginners
2018-09-27 15:34:07	Moongoodboy{K}	(*: you can probably actually do this with `crate rental` or something, if you really want to)
2018-09-27 15:34:17	Moongoodboy{K}	why are you trying to do that anyway
2018-09-27 15:34:23	Moongoodboy{K}	s,$,?,
2018-09-27 15:34:39	-->	jperras_ (jperras@moz-edcvc2.dsl.bell.ca) has joined #rust-beginners
2018-09-27 15:35:20	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-27 15:35:38	quartz	I have a struct with a "name" field inside and I just wanted to use that name as the key in an hashmap for easier access
2018-09-27 15:35:57	Moongoodboy{K}	ah, yeah
2018-09-27 15:35:58	quartz	without having to clone Strings everytime
2018-09-27 15:36:17	Moongoodboy{K}	you may be better off just to_owned()in the strings to make the keys
2018-09-27 15:36:37	Lumpio-	There might be a crate for it though
2018-09-27 15:36:48	Lumpio-	Something like a hashmap that takes a function to extract the key from the value
2018-09-27 15:37:00	Lumpio-	It's not that uncommon of a thing
2018-09-27 15:37:19	quartz	I'm only doing it this way because this is a hot path in the code
2018-09-27 15:37:21	Moongoodboy{K}	hmm!
2018-09-27 15:37:24	-->	jperras__ (jperras@moz-2g6rpf.dsl.bell.ca) has joined #rust-beginners
2018-09-27 15:37:26	quartz	I'm interfacing with MongoDB btw
2018-09-27 15:37:45	Moongoodboy{K}	I have a usecase for such a map
2018-09-27 15:37:58	Lumpio-	C# has KeyedCollection that I've used fairly often
2018-09-27 15:38:06	quartz	and transforming an array of Objects into an hashmap indexed by the name of htose objects
2018-09-27 15:38:14	Lumpio-	It doesn't take a function but rather requires you to inherit it and override a method to extract the key but it's the same thing essentially.
2018-09-27 15:38:14	 *	Moongoodboy{K} has multiple maps where the keys are one or two fields from the values
2018-09-27 15:38:29	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-09-27 15:39:41	<--	jperras_ (jperras@moz-edcvc2.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 15:41:30	-->	rce (sid66155@moz-tmja1o.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 15:42:20	<--	yk (yk@moz-htp.o4q.169.109.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:42:21	<--	alx741 (alx741@moz-a07.9bn.15.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:44:26	<--	jperras__ (jperras@moz-2g6rpf.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 15:44:30	-->	jperras__ (jperras@moz-1bfcis.dsl.bell.ca) has joined #rust-beginners
2018-09-27 15:46:33	<--	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-27 15:50:04	<--	codesections (codesection@moz-e45.7hn.29.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:50:08	<--	jperras__ (jperras@moz-1bfcis.dsl.bell.ca) has quit (Connection closed)
2018-09-27 15:50:10	-->	npmccallum (npmccallum@moz-d8863v.redhat.com) has joined #rust-beginners
2018-09-27 15:51:36	<--	ysz (ysz@moz-utq.pl8.167.109.IP) has quit (Quit: This computer has gone to sleep)
2018-09-27 15:51:58	<--	jpthomson (user@moz-iic.6lt.83.130.IP) has quit (Connection closed)
2018-09-27 15:52:19	-->	jperras__ (jperras@moz-j0dhfs.dsl.bell.ca) has joined #rust-beginners
2018-09-27 15:52:28	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 15:53:05	-->	cubetastic (Thunderbird@moz-k3mol0.1q4c.im7o.0204.2405.IP) has joined #rust-beginners
2018-09-27 15:53:32	-->	crab (Mibbit@moz-5ot.gfg.149.169.IP) has joined #rust-beginners
2018-09-27 15:54:37	<--	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has quit (Quit: Leaving)
2018-09-27 15:55:29	-->	alx741 (alx741@moz-a07.9bn.15.190.IP) has joined #rust-beginners
2018-09-27 15:55:48	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-27 15:55:54	-->	le-dragon-dev (Mibbit@moz-85jtmp.capo.montpellier-agglo.com) has joined #rust-beginners
2018-09-27 15:56:59	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:57:01	le-dragon-dev	Hello! I've got a little question: Is it possible in Rust to compile some part of the code only on a specific plateform ?
2018-09-27 15:59:02	<--	jperras__ (jperras@moz-j0dhfs.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 15:59:04	dpc1	le-dragon-dev: yes. you can wrap it in cfg(target = "...") 
2018-09-27 15:59:50	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 15:59:53	-->	yk (yk@moz-htp.o4q.169.109.IP) has joined #rust-beginners
2018-09-27 15:59:56	<--	Porkepix (Porkepix@moz-gcohs5.ip-5-39-83.eu) has quit (Quit: WeeChat 2.1)
2018-09-27 16:00:06	le-dragon-dev	dpc1: Oh I see! Awesome, thank you!
2018-09-27 16:00:18	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-27 16:00:23	-->	gnzlbg (gnzlbg@moz-eu81h9.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 16:00:46	-->	Porkepix (Porkepix@moz-b7geln.i940.2e4u.41d0.2001.IP) has joined #rust-beginners
2018-09-27 16:01:01	dpc1	:)
2018-09-27 16:01:38	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 16:02:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 16:02:43	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 16:02:54	<--	le-dragon-dev (Mibbit@moz-85jtmp.capo.montpellier-agglo.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 16:02:56	crab	I want to make a simple tic-tac-toe game with graphics ... what crate should I use considering the faat that it will be my first game ?
2018-09-27 16:03:08	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 16:03:39	dpc1	crab: do check http://arewegameyet.com
2018-09-27 16:04:24	<--	ljhms (ljhms@moz-had1t8.priv.bahnhof.se) has quit (Quit: Bye)
2018-09-27 16:05:35	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-27 16:05:48	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 16:05:48	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 16:05:59	--	U007D_afk is now known as U007D
2018-09-27 16:06:16	voker57	ggez
2018-09-27 16:06:23	-->	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-27 16:06:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:06:39	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 16:07:08	dpc1	voker57: ?
2018-09-27 16:08:27	crab	dpc1: voker57 was saying to me 
2018-09-27 16:08:29	<--	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2018-09-27 16:09:11	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-27 16:09:42	-->	dthul (dthul@moz-jrn.h11.176.195.IP) has joined #rust-beginners
2018-09-27 16:10:12	-->	GreenJello (GreenJello@moz-5ah.vnp.83.23.IP) has joined #rust-beginners
2018-09-27 16:11:07	dpc1	:)
2018-09-27 16:11:17	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-27 16:11:22	-->	SomeDude (pascal@moz-5qkr7k.g5kr.iei5.0908.2a02.IP) has joined #rust-beginners
2018-09-27 16:11:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 16:11:50	<--	gnzlbg (gnzlbg@moz-eu81h9.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 16:11:53	-->	tvaisanen (tvaisanen@moz-qodoga.bb.dnainternet.fi) has joined #rust-beginners
2018-09-27 16:12:33	-->	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has joined #rust-beginners
2018-09-27 16:13:44	<--	dthul (dthul@moz-jrn.h11.176.195.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:13:55	-->	Binero (Binero@moz-rt0vju.bacj.ns1j.a03f.2a02.IP) has joined #rust-beginners
2018-09-27 16:13:58	-->	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has joined #rust-beginners
2018-09-27 16:14:06	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-27 16:14:53	-->	gnzlbg (gnzlbg@moz-tas9ro.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 16:15:28	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:17:13	<--	cubetastic (Thunderbird@moz-k3mol0.1q4c.im7o.0204.2405.IP) has quit (Client exited)
2018-09-27 16:17:15	Moongoodboy{K}	how do you search crates.io. within a category
2018-09-27 16:18:54	--	U007D is now known as U007D_afk
2018-09-27 16:18:58	<--	gnzlbg (gnzlbg@moz-tas9ro.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 16:19:22	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:19:40	<--	brucem (textual@moz-jih.3cd.229.49.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:20:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 16:20:22	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-09-27 16:20:27	-->	dalley (dalley@moz-uo550c.dyn6.twc.com) has joined #rust-beginners
2018-09-27 16:20:35	<--	dalley (dalley@moz-uo550c.dyn6.twc.com) has quit (Connection closed)
2018-09-27 16:20:51	<--	dalley__ (dalley@moz-uo550c.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-27 16:20:55	-->	dalley (dalley@moz-uo550c.dyn6.twc.com) has joined #rust-beginners
2018-09-27 16:21:13	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-27 16:21:30	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-27 16:22:16	-->	mib_a3p9p6 (Mibbit@moz-rl6.9k2.66.95.IP) has joined #rust-beginners
2018-09-27 16:22:50	-->	brucem (textual@moz-s6qlt9.fo1l.ivjt.44c8.2001.IP) has joined #rust-beginners
2018-09-27 16:22:55	--	U007D_afk is now known as U007D
2018-09-27 16:23:01	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-27 16:23:51	mib_a3p9p6	Hello everyone. Trying to cross compile test project on rust for x86_64-apple-ios target. Surpriseli getting error : Error loading target specification: Could not find specification for target "x86_64-apple-ios"
2018-09-27 16:24:28	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-27 16:24:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:24:59	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Quit: Konversation terminated!)
2018-09-27 16:25:46	<--	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 16:25:47	sgift	mib_a3p9p6: Did you add the apple-ios arch? (rustup target add x86_64-apple-ios)
2018-09-27 16:26:00	-->	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-27 16:26:13	mib_a3p9p6	yes
2018-09-27 16:26:40	sgift	can you paste the whole error message?
2018-09-27 16:26:45	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 16:26:49	sgift	!paste
2018-09-27 16:26:59	-->	jperras__ (jperras@moz-rtklsl.dsl.bell.ca) has joined #rust-beginners
2018-09-27 16:27:03	sgift	.. I thought that was the command.
2018-09-27 16:27:28	Moongoodboy{K}	rip rustbot
2018-09-27 16:27:37	<--	jperras__ (jperras@moz-rtklsl.dsl.bell.ca) has quit (Connection closed)
2018-09-27 16:27:37	mib_a3p9p6	cargo build --target x86_64-apple-ios
2018-09-27 16:28:11	<--	yk (yk@moz-htp.o4q.169.109.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:28:21	mib_a3p9p6	error: failed to run `rustc` to learn about target-specific information  Caused by:   process didn't exit successfully: `rustc - --crate-name ___ --print=file-names --target x86_64-apple-ios --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro` (exit code: 1) --- stderr error: Error loading t
2018-09-27 16:28:40	sgift	and rustup target list shows x86_64-apple-ios (installed)?
2018-09-27 16:28:55	dpc1	Moongoodboy{K}: the lifetime of rustbot is expired xD
2018-09-27 16:28:58	mib_a3p9p6	rustup shows that its installed
2018-09-27 16:29:00	mib_a3p9p6	BUT!
2018-09-27 16:29:18	mib_a3p9p6	rustc --print target-list
2018-09-27 16:29:33	mib_a3p9p6	shows that it knows nothing aboug this target
2018-09-27 16:29:53	<--	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has quit (Quit: ZNC - http://znc.in)
2018-09-27 16:30:04	-->	gnzlbg (gnzlbg@moz-urrig5.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 16:30:37	sgift	Okay, then I have no idea, sorry. Didn't cross-compile to ios so far
2018-09-27 16:31:05	mib_a3p9p6	I have asked my collegue to do the same on other machine
2018-09-27 16:31:11	mib_a3p9p6	works on his side %)
2018-09-27 16:31:22	mib_a3p9p6	rust version the same
2018-09-27 16:31:49	-->	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has joined #rust-beginners
2018-09-27 16:31:50	-->	jperras__ (jperras@moz-tcupvc.dsl.bell.ca) has joined #rust-beginners
2018-09-27 16:32:02	<--	jperras__ (jperras@moz-tcupvc.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-27 16:32:45	-->	jperras (jperras@moz-tcupvc.dsl.bell.ca) has joined #rust-beginners
2018-09-27 16:32:55	--	U007D is now known as U007D_afk
2018-09-27 16:33:26	<--	nifker (Mozilla@moz-pobran.dyn.telefonica.de) has quit (Connection closed)
2018-09-27 16:34:03	-->	P1RATEZ (piratez@moz-h769d6.cable.rogers.com) has joined #rust-beginners
2018-09-27 16:34:24	<--	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has quit (Quit: ZNC - http://znc.in)
2018-09-27 16:34:28	<--	swampflared (zmt@moz-n82mr0.g40m.cfl6.1700.2600.IP) has quit (Quit: Leaving)
2018-09-27 16:34:38	<--	crab (Mibbit@moz-5ot.gfg.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 16:36:11	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-27 16:36:17	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-27 16:36:26	-->	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has joined #rust-beginners
2018-09-27 16:36:29	dpc1	mib_a3p9p6: try updating rustup?
2018-09-27 16:36:36	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-27 16:38:13	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 16:38:44	sgift	and if dpc1s idea doesn't help reinstall it completely. If it works on your colleagues machine, but not on yours that sounds like a broken rustup installation
2018-09-27 16:38:46	<--	jperras (jperras@moz-tcupvc.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 16:40:12	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:40:17	-->	jperras (jperras@moz-j0dhfs.dsl.bell.ca) has joined #rust-beginners
2018-09-27 16:40:38	-->	jihi (jih@moz-g27v0c.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-27 16:41:53	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-27 16:42:24	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:44:51	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-27 16:45:19	<--	jperras (jperras@moz-j0dhfs.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 16:46:16	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-27 16:46:35	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 16:46:46	-->	jperras (jperras@moz-j0dhfs.dsl.bell.ca) has joined #rust-beginners
2018-09-27 16:47:23	-->	slimer (Mibbit@moz-5ot.gfg.149.169.IP) has joined #rust-beginners
2018-09-27 16:47:51	-->	jperras_ (jperras@moz-povk23.dsl.bell.ca) has joined #rust-beginners
2018-09-27 16:48:00	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 16:49:26	-->	Eragon (Eragon@moz-iiirhc.abo.wanadoo.fr) has joined #rust-beginners
2018-09-27 16:49:50	-->	jperras__ (jperras@moz-115jcq.jbht.b55b.b100.2605.IP) has joined #rust-beginners
2018-09-27 16:49:52	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-27 16:49:57	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-27 16:50:42	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 16:50:50	<--	jperras (jperras@moz-j0dhfs.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 16:51:06	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:52:01	<--	jperras_ (jperras@moz-povk23.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 16:52:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:52:19	<--	gnzlbg (gnzlbg@moz-urrig5.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 16:53:56	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 16:54:29	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-27 16:55:47	-->	gnzlbg (gnzlbg@moz-nltrul.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 16:56:17	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-27 16:56:19	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-27 16:56:46	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 16:58:26	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-27 16:59:46	<--	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has quit (Quit: Leaving)
2018-09-27 17:00:30	-->	negi (Mibbit@moz-ho8.teb.167.83.IP) has joined #rust-beginners
2018-09-27 17:00:43	-->	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-27 17:00:59	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-27 17:01:05	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:01:32	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-27 17:01:36	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 17:01:53	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:02:37	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 17:06:57	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-27 17:07:18	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-27 17:11:06	<--	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:12:19	<--	gnzlbg (gnzlbg@moz-nltrul.dyn.telefonica.de) has quit (Connection closed)
2018-09-27 17:12:22	<--	squiggy (Mibbit@moz-tmbua1.rev.sfr.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 17:14:39	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 17:14:42	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-27 17:15:20	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-27 17:15:24	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 17:15:25	--	Raychen1 is now known as Raychen
2018-09-27 17:15:43	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 17:16:12	-->	dthul (dthul@moz-jrn.h11.176.195.IP) has joined #rust-beginners
2018-09-27 17:16:36	mib_a3p9p6	guys
2018-09-27 17:16:48	<--	mib_a3p9p6 (Mibbit@moz-rl6.9k2.66.95.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 17:18:43	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:20:13	<--	dthul (dthul@moz-jrn.h11.176.195.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:20:46	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-27 17:21:28	-->	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-27 17:24:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 17:25:17	<--	hyp3rbor3ax (hyp3rbor3ax@moz-ch694u.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-27 17:25:50	mdlayher-M	hey folks, i'm debating the merits of returning a boxed trait versus an enum for a project i'm working on: https://gist.github.com/rust-play/432ddcfc9e207d31103fd00358728a15
2018-09-27 17:26:02	mdlayher-M	apologies for the lack of context but the project is still in flux and not available online yet.
2018-09-27 17:26:32	mdlayher-M	i'm just curious which of the enum or trait approach are more idiomatic in Rust.  the trait approach is similar to what I'd do in Go, but I'm not trying to write Go in Rust. :)
2018-09-27 17:27:31	-->	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has joined #rust-beginners
2018-09-27 17:28:21	-->	mib_adcztv (Mibbit@moz-qaj.ub6.205.49.IP) has joined #rust-beginners
2018-09-27 17:28:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:28:48	<--	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has quit (Quit: Leaving)
2018-09-27 17:30:00	dgriffen	mdlayher-M: with just the context you posted I would recommend using an enum return. I've seen both approaches used but it normally depends on the exact situation.
2018-09-27 17:30:13	<--	jperras__ (jperras@moz-115jcq.jbht.b55b.b100.2605.IP) has quit (Quit: WeeChat 2.2)
2018-09-27 17:30:42	mdlayher-M	cool. a coworker mentioned the same and that the enum may be more efficient.
2018-09-27 17:31:00	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-27 17:31:03	dgriffen	It all depends, if the enum is quite large then it can end up being more efficient to box it
2018-09-27 17:31:12	--	U007D_afk is now known as U007D
2018-09-27 17:31:32	mdlayher-M	i suppose my callers could always use a trait object or generic function with the output of each enum branch
2018-09-27 17:31:33	<--	mib_adcztv (Mibbit@moz-qaj.ub6.205.49.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 17:32:02	<--	zelda (Mibbit@moz-c2o.8q2.143.139.IP) has left #rust-beginners
2018-09-27 17:32:15	-->	gnzlbg (gnzlbg@moz-qap4pi.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 17:32:47	dgriffen	Yeah, in your case using the enum creates what I would consider cleaner code so I'd go with that. No need to optimize prematurely
2018-09-27 17:33:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 17:33:11	<--	gnzlbg (gnzlbg@moz-qap4pi.dyn.telefonica.de) has quit (Connection closed)
2018-09-27 17:33:19	mdlayher-M	totally! i'm really new to rust so i'm just going for the most straightforward option.
2018-09-27 17:33:19	-->	gnzlbg (gnzlbg@moz-qap4pi.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 17:33:21	mdlayher-M	much appreciated, thanks
2018-09-27 17:34:13	-->	gnzlbg_ (gnzlbg@moz-r8aeh3.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 17:35:02	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:36:18	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Quit: Leaving)
2018-09-27 17:37:21	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:37:30	<--	gnzlbg (gnzlbg@moz-qap4pi.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 17:37:46	-->	poljar (poljar@moz-0as651.net.t-com.hr) has joined #rust-beginners
2018-09-27 17:40:16	<--	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:40:42	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 17:40:49	-->	eyans (a@moz-2qs12p.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-27 17:41:16	-->	gwgw (gwgw@moz-803aul.dhcp.inet.fi) has joined #rust-beginners
2018-09-27 17:41:33	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-27 17:42:07	gwgw	Hi, I got a panic from the unreachable!() call of https://docs.rs/crate/futures/0.1.24/source/src/future/join_all.rs
2018-09-27 17:42:13	gwgw	How's that possible?
2018-09-27 17:42:27	--	U007D is now known as U007D_afk
2018-09-27 17:42:52	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-27 17:43:20	-->	zacbrown (sid200994@moz-d9m360.highgate.irccloud.com) has joined #rust-beginners
2018-09-27 17:45:13	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:45:23	-->	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has joined #rust-beginners
2018-09-27 17:47:42	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-27 17:48:13	<--	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 17:48:29	--	U007D_afk is now known as U007D
2018-09-27 17:48:31	-->	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-27 17:49:25	<--	dthul (dthul@moz-jaeks7.dscv.g469.067c.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:51:03	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 17:51:18	<--	bugweiser (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 17:51:31	negi	@gwgw how do you use it?
2018-09-27 17:53:01	@mbrubeck	It seems like the `Ok(Async::Ready(v)) => Ok(v)` case in that function ought to set `all_done = false` but doesn't.
2018-09-27 17:53:38	Arnavion	all_done is for when everything is Ready
2018-09-27 17:54:29	-->	jperras (jperras@moz-bbsk9c.ln67.g62t.1970.2001.IP) has joined #rust-beginners
2018-09-27 17:55:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 17:55:48	@mbrubeck	Oh, I see... I missed the later `Ok(v) => self.elems[idx] = ElemState::Done(v)`
2018-09-27 17:57:44	Arnavion	gwgw: Do you have any unsafe code in the crate that called join_all?
2018-09-27 17:58:01	Arnavion	gwgw: Particularly around the futures you pass to join_all
2018-09-27 17:58:17	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-27 18:00:00	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 18:00:12	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-27 18:00:20	-->	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has joined #rust-beginners
2018-09-27 18:00:48	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 18:00:59	<--	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has quit (Quit: )
2018-09-27 18:01:10	-->	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has joined #rust-beginners
2018-09-27 18:01:40	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-27 18:02:01	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-27 18:02:44	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-27 18:02:51	<--	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has quit (Quit: )
2018-09-27 18:04:50	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:05:23	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 18:05:39	-->	Xanorax (Xanorax@moz-qemh21.cust.swisscom.ch) has joined #rust-beginners
2018-09-27 18:06:31	Xanorax	hey guys & sebk :D
2018-09-27 18:09:54	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 18:09:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 18:12:05	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-27 18:14:00	-->	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 18:14:04	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:15:05	-->	kulshrax_ (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 18:17:53	gwgw	Arnavion: no
2018-09-27 18:18:01	<--	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:18:28	gwgw	I just don't use unsafe
2018-09-27 18:18:31	<--	arunkumar413 (arunkumar41@moz-765.bt9.48.157.IP) has quit (Quit: Leaving)
2018-09-27 18:18:40	dpc1	xD
2018-09-27 18:18:55	gwgw	It's a telegram bot that serves 1-2k channels, and it's the first time ever that happens this thing
2018-09-27 18:19:00	<--	fsasm (fsasm@moz-5fd.qra.178.62.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:19:09	<--	kulshrax_ (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:19:14	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-27 18:19:33	<--	siddhartharao17 (siddharthar@moz-3eeb0j.uoas.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:19:46	@mbrubeck	gwgw:  Huh. Might be a bug in some unsafe code in a dependency, then... or it could be a hardware fault (bad RAM, maybe).
2018-09-27 18:20:12	gwgw	It's a vps from vps.ag
2018-09-27 18:20:41	@mbrubeck	or a codegen bug in rustc, but that seems less likely to show up randomly after working correctly for a long time
2018-09-27 18:20:53	gwgw	We just use telegram-bot crate, and then tokio
2018-09-27 18:21:45	gwgw	and everything is single threaded
2018-09-27 18:22:20	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-27 18:22:22	<--	pamaury (pamaury@moz-tr5vfh.mpi-sws.org) has quit (Ping timeout: 121 seconds)
2018-09-27 18:22:43	-->	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-27 18:24:04	gwgw	I really don't know what i should check :D
2018-09-27 18:26:19	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-27 18:27:47	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 18:29:50	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-27 18:30:09	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-27 18:32:02	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:32:40	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:34:12	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-27 18:36:16	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-27 18:37:07	<--	gnzlbg_ (gnzlbg@moz-r8aeh3.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 18:38:20	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-27 18:39:42	-->	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 18:40:19	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-27 18:40:54	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-27 18:41:32	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-27 18:42:48	-->	gnzlbg_ (gnzlbg@moz-rihehu.dyn.telefonica.de) has joined #rust-beginners
2018-09-27 18:42:58	-->	Mary1992 (Mibbit@moz-qo3.g7f.252.185.IP) has joined #rust-beginners
2018-09-27 18:43:00	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-27 18:43:27	Mary1992	Hi
2018-09-27 18:45:10	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:45:28	-->	siddhartharao17 (siddharthar@moz-b86.sr5.107.128.IP) has joined #rust-beginners
2018-09-27 18:45:39	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 18:45:49	<--	siddhartharao17 (siddharthar@moz-b86.sr5.107.128.IP) has quit (Connection closed)
2018-09-27 18:45:52	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-27 18:45:56	<--	gnzlbg_ (gnzlbg@moz-rihehu.dyn.telefonica.de) has quit (Connection closed)
2018-09-27 18:46:16	<--	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-27 18:46:16	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (Connection closed)
2018-09-27 18:46:37	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-27 18:46:45	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 18:46:48	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-27 18:47:03	<--	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 18:47:11	-->	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 18:47:13	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 18:47:20	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-27 18:47:42	-->	Dariost (Dariost@moz-rg5.ljl.21.151.IP) has joined #rust-beginners
2018-09-27 18:47:51	-->	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has joined #rust-beginners
2018-09-27 18:48:42	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 18:49:12	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-27 18:49:23	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-27 18:49:48	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 18:49:50	-->	quartz55 (quartz@moz-bnt9nb.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-27 18:50:52	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-27 18:52:13	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-27 18:53:36	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Quit: Leaving)
2018-09-27 18:53:50	--	U007D is now known as U007D_afk
2018-09-27 18:55:14	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 18:56:22	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 18:59:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 19:01:18	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-27 19:02:12	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-27 19:03:32	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 19:04:30	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 19:06:47	--	Guest38184 is now known as Minoru
2018-09-27 19:06:51	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 19:08:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 19:09:19	-->	nunatak (nunatak@moz-0o9u0v.netcologne.de) has joined #rust-beginners
2018-09-27 19:09:22	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 19:09:42	-->	kulshrax_ (kulshrax@moz-q61.9o0.201.199.IP) has joined #rust-beginners
2018-09-27 19:11:44	--	U007D_afk is now known as U007D
2018-09-27 19:11:44	<--	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 19:13:17	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 19:13:53	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 19:14:59	-->	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has joined #rust-beginners
2018-09-27 19:17:05	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 19:17:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 19:19:21	-->	agurk (agurk@moz-ihru49.dhcp.as2116.net) has joined #rust-beginners
2018-09-27 19:19:47	<--	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 19:21:01	agurk	if I want to use a method on a struct that has the same name in many traits the struct implements, can I choose which one without having to import just one of the traits? (the method is .set_name() from GTK, if anyone wondered)
2018-09-27 19:23:56	@mbrubeck	agurk: call it as `TraitName::set_name(foo)` instead of `foo.set_name()`
2018-09-27 19:24:07	agurk	mbrubeck, thanks!
2018-09-27 19:25:15	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-09-27 19:27:37	<--	kulshrax_ (kulshrax@moz-q61.9o0.201.199.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 19:27:59	-->	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 19:28:08	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 19:29:22	<--	Mary1992 (Mibbit@moz-qo3.g7f.252.185.IP) has quit (G-Lined: no spamming here)
2018-09-27 19:29:39	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 19:29:40	-->	ysz (ysz@moz-vqr.jhv.102.83.IP) has joined #rust-beginners
2018-09-27 19:30:18	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-27 19:32:02	<--	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 19:33:44	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 19:34:29	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-09-27 19:44:16	<--	fatpointer (fatpointer@moz-e1j0t6.hashbang.sh) has quit (Ping timeout: 121 seconds)
2018-09-27 19:53:50	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-27 19:53:58	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-27 19:55:30	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-27 19:55:37	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-27 19:56:04	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-27 19:56:47	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:02:19	-->	dalley_ (dalley@moz-fh5sdh.dyn6.twc.com) has joined #rust-beginners
2018-09-27 20:02:47	<--	Binero (Binero@moz-rt0vju.bacj.ns1j.a03f.2a02.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 20:03:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 20:03:25	-->	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-09-27 20:05:28	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-27 20:06:30	<--	dalley (dalley@moz-uo550c.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-27 20:06:39	<--	dalley_ (dalley@moz-fh5sdh.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-27 20:06:43	-->	dalley (dalley@moz-fh5sdh.dyn6.twc.com) has joined #rust-beginners
2018-09-27 20:09:31	<--	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has quit (Quit: Leaving)
2018-09-27 20:11:47	<--	eyans (a@moz-2qs12p.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-27 20:12:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 20:13:46	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 20:14:56	<--	Dariost (Dariost@moz-rg5.ljl.21.151.IP) has quit (Connection closed)
2018-09-27 20:16:14	-->	jsatk_ (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-27 20:16:38	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-09-27 20:17:11	-->	Nooooob (Mibbit@moz-uta.s5q.111.77.IP) has joined #rust-beginners
2018-09-27 20:17:31	<--	Nooooob (Mibbit@moz-uta.s5q.111.77.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 20:17:39	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-27 20:18:29	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:18:31	-->	Dariost (Dariost@moz-rg5.ljl.21.151.IP) has joined #rust-beginners
2018-09-27 20:19:55	<--	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has quit (Quit: Leaving)
2018-09-27 20:21:27	-->	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has joined #rust-beginners
2018-09-27 20:22:30	<--	elichai2 (uid212594@moz-racuhj.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 20:23:11	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-27 20:25:16	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:29:55	<--	Xanorax (Xanorax@moz-qemh21.cust.swisscom.ch) has quit (Quit: Leaving)
2018-09-27 20:30:23	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 20:32:01	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:32:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 20:32:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 20:34:28	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:35:50	<--	jsatk_ (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:36:04	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 20:36:51	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-27 20:39:08	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 20:39:19	<--	ysz (ysz@moz-vqr.jhv.102.83.IP) has quit (Quit: This computer has gone to sleep)
2018-09-27 20:39:22	<--	negi (Mibbit@moz-ho8.teb.167.83.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 20:40:28	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-27 20:40:35	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:41:17	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:44:18	<--	kulshrax (kulshrax@moz-d8np39.8r4b.grs8.010d.2620.IP) has quit (Quit: Leaving...)
2018-09-27 20:44:33	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-27 20:48:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 20:50:48	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 20:53:10	<--	slimer (Mibbit@moz-5ot.gfg.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 20:54:57	<--	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 20:55:59	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-27 20:58:07	-->	niconii (nicole@moz-6s2u8a.midco.net) has joined #rust-beginners
2018-09-27 20:58:08	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-27 20:58:46	<--	gwgw (gwgw@moz-803aul.dhcp.inet.fi) has quit (Quit: Leaving)
2018-09-27 20:59:20	<--	BroodFromBelow (BroodFromBe@moz-49ekok.uberspace.de) has quit (Quit: The Lounge - https://thelounge.github.io)
2018-09-27 20:59:43	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 21:00:15	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 21:01:08	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 21:01:28	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-27 21:01:33	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 21:02:00	-->	adray (aray@moz-mjh.tl0.65.159.IP) has joined #rust-beginners
2018-09-27 21:04:16	-->	PatriciaHk (Mibbit@moz-40l.u8t.185.146.IP) has joined #rust-beginners
2018-09-27 21:05:00	PatriciaHk	hello
2018-09-27 21:06:39	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-27 21:06:55	<--	dalley (dalley@moz-fh5sdh.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-27 21:08:30	<--	npmccallum (npmccallum@moz-d8863v.redhat.com) has quit (Client exited)
2018-09-27 21:12:48	-->	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has joined #rust-beginners
2018-09-27 21:13:17	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 21:18:39	<--	Eragon (Eragon@moz-iiirhc.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-27 21:19:16	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 21:20:08	-->	dalley (dalley@moz-fh5sdh.dyn6.twc.com) has joined #rust-beginners
2018-09-27 21:20:27	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-27 21:20:48	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 21:23:51	-->	BearOfJade (Thunderbird@moz-5hv431.wireless.uvic.ca) has joined #rust-beginners
2018-09-27 21:24:10	<--	jibby (quassel@moz-j5hri2.vt.comcast.net) has quit (Connection closed)
2018-09-27 21:24:13	<--	BearOfJade (Thunderbird@moz-5hv431.wireless.uvic.ca) has quit (Client exited)
2018-09-27 21:24:37	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 21:25:14	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-27 21:26:45	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 21:28:43	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 21:29:16	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-27 21:30:48	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 21:31:08	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 21:32:09	-->	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has joined #rust-beginners
2018-09-27 21:35:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 21:36:05	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 21:37:30	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-27 21:38:29	<--	supermedia_art (supermedia_@moz-crrpli.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-27 21:38:36	<--	Aankhen`` (notasquid@moz-frk.3eg.207.49.IP) has quit (Quit: Sorry, was AFK)
2018-09-27 21:39:25	<--	nunatak (nunatak@moz-0o9u0v.netcologne.de) has quit (Quit: Leaving)
2018-09-27 21:40:09	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 21:42:16	-->	fatpointer (wadadli@moz-mig04k.oik1.u6vv.e000.2605.IP) has joined #rust-beginners
2018-09-27 21:42:53	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-27 21:43:23	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 21:43:37	<--	ketralnis (ketralnis@moz-61c9db.ketralnis.com) has quit (Quit: Coyote finally caught me)
2018-09-27 21:44:27	-->	rustbot (havvy@moz-u0e4io.net) has joined #rust-beginners
2018-09-27 21:44:27	--	Mode #rust-beginners [+v rustbot] by ChanServ
2018-09-27 21:44:39	-->	ncoish (Mibbit@moz-ip0.qts.9.76.IP) has joined #rust-beginners
2018-09-27 21:45:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 21:45:34	ncoish	I have a Child generated from std::process::Command, and I want to write to its stdin several times throughout the life of my program. Unfortunately, it seems that the only way that I can get the data to be pushed to the child process is to drop the stdin pipe after writing to it
2018-09-27 21:45:46	ncoish	This means I can't continue writing more data to stdin later. Am I missing somethign?
2018-09-27 21:46:36	-->	nineczar (nate@moz-al9sd1.ma.comcast.net) has joined #rust-beginners
2018-09-27 21:46:59	<--	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 21:47:45	<--	m_101 (m_101@moz-3lv891.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-27 21:48:11	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-27 21:48:57	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-27 21:49:21	<--	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 21:49:38	-->	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has joined #rust-beginners
2018-09-27 21:49:49	-->	m_101 (m_101@moz-mp5r4s.abo.wanadoo.fr) has joined #rust-beginners
2018-09-27 21:49:58	<--	dalley (dalley@moz-fh5sdh.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-27 21:51:10	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 21:52:27	<--	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-27 21:52:28	<--	jihi (jih@moz-g27v0c.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-27 21:53:32	-->	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-27 21:54:04	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-27 21:54:10	@mbrubeck	ncoish: Did you call .flush() after writing?
2018-09-27 21:54:49	@mbrubeck	ncoish: Nevermind, there's no buffering in ChildStdin so that's a no-op...
2018-09-27 21:55:36	ncoish	Yeah I looked at the underlying source and the implementation of flush is just `Ok(())` :P
2018-09-27 21:55:52	@mbrubeck	ncoish: It ought to be writing directly to the child's stdin.  Are you sure the child isn't waiting for EOF?
2018-09-27 21:55:52	<--	jperras (jperras@moz-bbsk9c.ln67.g62t.1970.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 21:56:04	@mbrubeck	How is the child process reading input?
2018-09-27 21:57:09	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-27 21:57:13	-->	mib_pn67hj (Mibbit@moz-ljp1bq.insight.com) has joined #rust-beginners
2018-09-27 21:57:39	<--	PatriciaHk (Mibbit@moz-40l.u8t.185.146.IP) has quit (G-Lined: no spamming here)
2018-09-27 21:58:03	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-27 21:59:08	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-27 21:59:15	<--	himi (sjjf@moz-3q1tqo.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 22:03:18	ncoish	mbrubeck: The child process is an erl instance which normally I can just pass command line input to, and which if I drop the Stdin pipe, gets written to from the Rust program
2018-09-27 22:03:20	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 22:03:35	ncoish	But if I don't drop the pipe, it looks like nothing happens no matter how much junk I try to write to it.
2018-09-27 22:04:22	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-27 22:04:50	ncoish	It seems strange that it would be waiting for EOF, because the command line version doesn't (unless I'm confused about how terminal input works and EOF is implied)
2018-09-27 22:06:43	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 22:07:50	-->	ljhms (ljhms@moz-had1t8.priv.bahnhof.se) has joined #rust-beginners
2018-09-27 22:08:15	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-09-27 22:09:11	@mbrubeck	ncoish: Some programs behave differently depending on whether stdin is a TTY
2018-09-27 22:09:44	@mbrubeck	ncoish: I just ran this program and I can see it writing to "out.txt" every 3 seconds. https://play.rust-lang.org/?gist=91aee9ba9e8840a4f87a2578549eb52f&version=stable&mode=debug&edition=2015
2018-09-27 22:10:24	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-27 22:11:09	@mbrubeck	ncoish: You could run `cat | erl ...` to see how the program behaves when stdin is a pipe...
2018-09-27 22:11:18	@mbrubeck	(and then type input into the terminal)
2018-09-27 22:11:36	ncoish	I'll give that a shot, thanks!
2018-09-27 22:11:48	@mbrubeck	ncoish: Or maybe the program is waiting for a newline or something?  Are you piping multiple lines into it?
2018-09-27 22:11:50	ncoish	Worth noting I'm running on Windows, so all bets might be off ;)
2018-09-27 22:12:07	@mbrubeck	ah, yeah, that test might not apply
2018-09-27 22:12:14	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-09-27 22:12:16	ncoish	Yeah I'm sending newline characters, tried \n, \r\n, nothing seemed to do the trick.
2018-09-27 22:12:23	<--	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-27 22:12:32	--	U007D is now known as U007D_afk
2018-09-27 22:13:54	ncoish	Ah, that trick worked though, when I try to pipe cat, erl doesn't respond to my input
2018-09-27 22:14:09	ncoish	Thanks for the help, this should help me figure out a solution hopefully.
2018-09-27 22:15:54	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 22:18:42	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-27 22:23:21	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-27 22:24:54	<--	ufobat___ (Martin@moz-nupobk.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-27 22:25:31	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-27 22:27:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-27 22:29:35	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 22:30:33	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-27 22:32:15	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 22:33:39	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-27 22:33:45	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (Quit: Leaving...)
2018-09-27 22:34:01	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-27 22:34:08	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 22:34:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 22:34:44	-->	liquidnight (marcus@moz-voh5tm.i39s.bvrq.0c22.2a01.IP) has joined #rust-beginners
2018-09-27 22:35:03	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-27 22:35:28	--	U007D_afk is now known as U007D
2018-09-27 22:36:15	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-27 22:36:20	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 22:36:38	<--	ncoish (Mibbit@moz-ip0.qts.9.76.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 22:37:36	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2018-09-27 22:38:23	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 22:43:15	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-27 22:43:18	-->	mandeep (mandeep@moz-3551vc.dyn.columbia.edu) has joined #rust-beginners
2018-09-27 22:43:22	-->	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has joined #rust-beginners
2018-09-27 22:44:03	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 22:44:07	-->	bivalveoutlaw (igloo@moz-neif26.mn.comcast.net) has joined #rust-beginners
2018-09-27 22:44:50	-->	jperras (jperras@moz-5n7nsb.dsl.bell.ca) has joined #rust-beginners
2018-09-27 22:45:28	--	U007D is now known as U007D_afk
2018-09-27 22:45:39	jossypoo	i'm having trouble getting env logger to work
2018-09-27 22:45:46	jossypoo	i can't get it to work for all crates, only my own
2018-09-27 22:45:47	-->	dalley (dalley@moz-sj3bja.dyn6.twc.com) has joined #rust-beginners
2018-09-27 22:45:52	-->	jperras_ (jperras@moz-9lm9be.7og8.6l0c.b100.2605.IP) has joined #rust-beginners
2018-09-27 22:46:06	jossypoo	i can't figure out how to do it for *everything* instead of just my own code from RUST_LOG env variable
2018-09-27 22:46:16	jossypoo	RUST_LOG=debug isn't working :S
2018-09-27 22:46:52	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 22:47:30	-->	turbobob (turbobob@moz-c9l133.e7e9.m2ej.0647.2601.IP) has joined #rust-beginners
2018-09-27 22:47:51	<--	bivalveoutlaw (igloo@moz-neif26.mn.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-27 22:48:14	mdlayher-M	hey folks! just published my first crate: https://crates.io/crates/smbios. would love feedback on code/docs/Cargo.toml or anything really!
2018-09-27 22:49:11	<--	jperras (jperras@moz-5n7nsb.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-27 22:51:58	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Quit: WeeChat 2.2)
2018-09-27 22:53:12	turbobob	congrats :)
2018-09-27 22:54:57	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-27 22:55:30	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-27 22:56:00	<--	dalley (dalley@moz-sj3bja.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-27 22:56:27	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-27 22:58:03	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 22:58:26	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-27 22:58:59	turbobob	So I was having a big problem where two different components of my webserver were using incompatible versions of tokio
2018-09-27 22:59:12	<--	agurk (agurk@moz-ihru49.dhcp.as2116.net) has quit (Quit: Leaving)
2018-09-27 22:59:31	turbobob	So I wanted to wrap one of the components in a "remote" that runs on a different threadpool from actix-web
2018-09-27 22:59:43	turbobob	so that it can spawn its own threadlocal reactor core on that pool
2018-09-27 23:00:03	turbobob	This is my first real multithreaded code in Rust
2018-09-27 23:00:10	turbobob	does this make sense to you? am I missing something? https://play.rust-lang.org/?gist=75d1d989ba3ded2f888010ece3c8664a&version=stable&mode=debug&edition=2015
2018-09-27 23:01:43	<--	refold (refold@moz-0ig.vcg.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 23:02:56	devurandom	Hello!
2018-09-27 23:03:20	KiChjang	Hi!
2018-09-27 23:03:29	KiChjang	woah it's not blocked anymore?
2018-09-27 23:03:50	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-27 23:04:10	<--	seijikun (seijikun@moz-13qb7j.dip0.t-ipconnect.de) has quit (Quit: Konversation terminated!)
2018-09-27 23:04:17	devurandom	When I have code like match x { A(y) | B(y) => { ... } } and inside ... I want to look whether x was A or B, how would I do that?
2018-09-27 23:04:28	devurandom	Actual real world example: https://github.com/Keats/gutenberg/blob/master/src/cmd/serve.rs#L246-L253
2018-09-27 23:05:10	dpc1	don't think you can 
2018-09-27 23:05:15	devurandom	I am even lacking the words to properly talk about it (or ask Google).
2018-09-27 23:05:28	dpc1	why not have separate match arms?
2018-09-27 23:05:36	KiChjang	yeah, you'd want separate match arms
2018-09-27 23:05:48	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-27 23:05:49	-->	asyncsec_ (asyncsec@moz-fifjkt.dyn6.twc.com) has joined #rust-beginners
2018-09-27 23:05:54	KiChjang	no reason not to if you have behavior that depends exactly on whether it was A or B
2018-09-27 23:06:07	devurandom	dpc1: Because what follows is a huge block of code that is exactly the same for all of them, except for some tiny bit that I am adding now.
2018-09-27 23:06:25	dpc1	put them in a function somewhere (on the impl or a free fn)
2018-09-27 23:06:30	devurandom	Hm, so I'll match on x twice?
2018-09-27 23:06:54	KiChjang	devurandom: no
2018-09-27 23:06:56	dpc1	no
2018-09-27 23:07:02	KiChjang	having separate match arms
2018-09-27 23:07:04	KiChjang	means
2018-09-27 23:07:39	KiChjang	match x { A(y) => { /* handle A(y) here */ } B(y) => { /* handle B(y) here */ } }
2018-09-27 23:07:49	<--	asyncsec (asyncsec@moz-pv8aeh.dyn6.twc.com) has quit (Ping timeout: 121 seconds)
2018-09-27 23:07:53	devurandom	Maybe: match x { A(y) => {... code only for A ...}, B(y) => {... code only for B ...} }; match x { A(y)|B(y) => {... big common block ...} }
2018-09-27 23:08:09	KiChjang	devurandom: no
2018-09-27 23:08:17	KiChjang	extract that common block into a function
2018-09-27 23:08:43	devurandom	k
2018-09-27 23:08:47	devurandom	Thanks!
2018-09-27 23:11:00	<--	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-27 23:12:47	-->	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has joined #rust-beginners
2018-09-27 23:19:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-27 23:21:10	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Connection closed)
2018-09-27 23:21:11	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-27 23:21:30	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-27 23:23:45	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 23:23:48	--	U007D_afk is now known as U007D
2018-09-27 23:25:45	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-27 23:27:32	-->	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-27 23:29:06	-->	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has joined #rust-beginners
2018-09-27 23:33:00	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-27 23:36:37	dpc1	damn forgot to remove a println! statement before publishing xD
2018-09-27 23:37:05	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 23:39:46	-->	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has joined #rust-beginners
2018-09-27 23:40:38	<--	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 23:41:47	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-27 23:44:17	<--	mandeep (mandeep@moz-3551vc.dyn.columbia.edu) has quit (Quit: Leaving)
2018-09-27 23:44:53	--	U007D is now known as U007D_afk
2018-09-27 23:46:29	-->	fatpointer1 (fatpointer@moz-e1j0t6.hashbang.sh) has joined #rust-beginners
2018-09-27 23:46:55	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Client exited)
2018-09-27 23:48:14	<--	alexreg (alexreg@moz-r1dhh6.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-09-27 23:49:23	<--	mib_pn67hj (Mibbit@moz-ljp1bq.insight.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-27 23:50:07	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 23:50:18	<--	alx741 (alx741@moz-a07.9bn.15.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 23:50:43	devurandom	How would I declare my function to accept any object that implements a certain trait? I want to accept anything that implements notify::Watcher, but I get: error[E0038]: the trait `notify::Watcher` cannot be made into an object = note: the trait cannot require that `Self : Sized`. I do not fully understand what this means.
2018-09-27 23:50:55	-->	himi (sjjf@moz-psjk59.anu.edu.au) has joined #rust-beginners
2018-09-27 23:51:09	turbobob	Is there anyway to define this RemoteResource class generically over the resource type that it holds? ('T'): https://play.rust-lang.org/
2018-09-27 23:51:16	turbobob	https://play.rust-lang.org/?gist=516fc6072bb914bddd07582e3597e1b5&version=stable&mode=debug&edition=2015
2018-09-27 23:51:58	Moongoodboy{K}	!object safety
2018-09-27 23:51:58	+rustbot	https://github.com/rust-lang/rfcs/blob/master/text/0255-object-safety.md
2018-09-27 23:52:02	Moongoodboy{K}	nope that's not it
2018-09-27 23:52:06	dpc1	oh rustbot is back
2018-09-27 23:52:06	Moongoodboy{K}	!trait objects
2018-09-27 23:52:06	+rustbot	http://doc.rust-lang.org/book/trait-objects.html
2018-09-27 23:52:21	Moongoodboy{K}	ew
2018-09-27 23:52:36	Moongoodboy{K}	!learn trait objects ~= s/http:/https:/
2018-09-27 23:52:36	+rustbot	Successfully did replacement on 'trait objects'.
2018-09-27 23:52:36	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-27 23:52:37	<--	fatpointer (wadadli@moz-mig04k.oik1.u6vv.e000.2605.IP) has quit (Quit: WeeChat 2.2)
2018-09-27 23:53:28	Schmeckinger	could it be that 1.29.1 doesnt have rls on windows?
2018-09-27 23:53:40	Moongoodboy{K}	devurandom: is this helpful? https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html#object-safety-is-required-for-trait-objects
2018-09-27 23:54:13	-->	Mirconium (Mibbit@moz-12t.ege.220.128.IP) has joined #rust-beginners
2018-09-27 23:54:14	-->	jperras (jperras@moz-3nf.seb.151.184.IP) has joined #rust-beginners
2018-09-27 23:54:19	Mirconium	Hello I have a question
2018-09-27 23:55:00	Mirconium	What is the best collection to use if I want O(1) inserts and removals, and don't need ordering, but the objects don't implement Hash because they contain f64s?
2018-09-27 23:55:04	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-27 23:55:04	<--	jperras_ (jperras@moz-9lm9be.7og8.6l0c.b100.2605.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 23:55:36	Moongoodboy{K}	eval: fn check<T: Hash>(_: T) {} check(f64::max_value())
2018-09-27 23:55:39	--	Notice(eval): error[E0405]: cannot find trait `Hash` in this scope
2018-09-27 23:55:41	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=2e91b830d1400cf7f6bde17a0945d3e1&version=stable&mode=debug
2018-09-27 23:55:46	Schmeckinger	I think Vec has close to O(1)
2018-09-27 23:55:57	-->	alx741 (alx741@moz-a07.9bn.15.190.IP) has joined #rust-beginners
2018-09-27 23:56:02	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-27 23:56:10	Moongoodboy{K}	eval: fn check<T: ::std::hash::Hash>(_: T) {} check(f64::max_value())
2018-09-27 23:56:12	--	Notice(eval): error[E0599]: no function or associated item named `max_value` found for type `f64` in the current scope
2018-09-27 23:56:14	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=fb12e49ec39fdc29b9d54821b4ab2ae1&version=stable&mode=debug
2018-09-27 23:56:17	@mbrubeck	smklein: the channel file has a listing for the `rls-preview` package on windows https://static.rust-lang.org/dist/channel-rust-1.29.1.toml
2018-09-27 23:56:42	Moongoodboy{K}	eval: fn check<T: ::std::hash::Hash>(_: T) {} check(::std::f64::MIN_POSITIVE)  // oh, come on, you could've told me that before!
2018-09-27 23:56:43	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-27 23:56:45	@mbrubeck	Schmeckinger not smklein, sorry
2018-09-27 23:56:45	--	Notice(eval): error[E0277]: the trait bound `f64: std::hash::Hash` is not satisfied
2018-09-27 23:56:47	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=7d39d082645e1325b2ccc22464414039&version=stable&mode=debug
2018-09-27 23:56:53	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-27 23:56:54	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-27 23:56:56	Moongoodboy{K}	huh, that's weird.
2018-09-27 23:56:59	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-27 23:57:12	Mirconium	Vec is O(1) push, but the removal from the middle of it is really bad
2018-09-27 23:57:53	@mbrubeck	Mirconium: You can use `.swap_remove(i)` for O(1) removal in the middle of a Vec if you don't need to maintain order
2018-09-27 23:58:00	Mirconium	Oh, good point.
2018-09-27 23:58:07	@mbrubeck	Mirconium: Or if you want to use a HashSet or BTreeSet, you can use a wrapper like https://crates.io/crates/ordered-float
2018-09-27 23:58:08	Mirconium	Very very good point, thanks!
2018-09-27 23:58:10	Schmeckinger	mbrubeck available = false
2018-09-27 23:58:22	Schmeckinger	[pkg.rls-preview.target.x86_64-pc-windows-gnu]
2018-09-27 23:58:24	devurandom	Moongoodboy{K}: Thanks! I'll read and try to undertand ;)
2018-09-27 23:58:33	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-27 23:58:56	@mbrubeck	Schmeckinger: Huh, weird.  It's available for 64-bit MSVC, and for both 32-bit flavors.
2018-09-27 23:59:06	Schmeckinger	and 32 bit gnu is there too
2018-09-27 23:59:14	Schmeckinger	only 64 bit gnu is missing
2018-09-27 23:59:32	<--	Mirconium (Mibbit@moz-12t.ege.220.128.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 00:00:07	Moongoodboy{K}	Mirconium: good ol' Vec fallback. :) Yeah, it's O(1) if you use push() and swap_remove() (and if you don't have to iterate looking for your object)
2018-09-28 00:00:23	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (The TLS connection was non-properly terminated.)
2018-09-28 00:00:35	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-28 00:00:39	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-28 00:00:46	Schmeckinger	1.29 was mssing rls too, but it was there in 1.28
2018-09-28 00:01:41	<--	SomeDude (pascal@moz-5qkr7k.g5kr.iei5.0908.2a02.IP) has quit (Connection closed)
2018-09-28 00:01:52	Moongoodboy{K}	why don't floats impl—oh, because they're !Eq
2018-09-28 00:02:07	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-28 00:03:32	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 00:04:50	Schmeckinger	no having rls sucks
2018-09-28 00:04:50	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 00:05:04	Schmeckinger	and I dont want to install a nightly to get it
2018-09-28 00:05:15	<--	Dariost (Dariost@moz-rg5.ljl.21.151.IP) has quit (Connection closed)
2018-09-28 00:06:00	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 00:06:40	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:07:12	gentlehelm	you must succumb to the nightly curse
2018-09-28 00:07:52	Schmeckinger	I could switch to beta
2018-09-28 00:08:02	-->	anirm (Mibbit@moz-ah98ec.dsl.tropolys.de) has joined #rust-beginners
2018-09-28 00:08:15	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:08:17	anirm	hello! are there any async ORM in rust?
2018-09-28 00:09:01	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:09:29	gentlehelm	there is http://diesel.rs but i don't know if it is async
2018-09-28 00:09:40	anirm	no, sadly not
2018-09-28 00:09:53	<--	U007D_afk (U007D@moz-c5t.9b9.245.162.IP) has quit (Connection closed)
2018-09-28 00:12:30	-->	backnforth (backnforth@moz-g6p.bac.254.104.IP) has joined #rust-beginners
2018-09-28 00:13:28	-->	jupart_ (coolp_jim@moz-ajj.u2k.169.104.IP) has joined #rust-beginners
2018-09-28 00:14:33	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-28 00:23:50	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-28 00:24:58	<--	weeji (jihi@moz-ntfciq.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-28 00:25:37	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-28 00:26:55	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-28 00:29:40	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 00:31:08	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 00:31:21	<--	leio (leio@moz-h008ot.tech) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2018-09-28 00:33:44	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-28 00:36:39	-->	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has joined #rust-beginners
2018-09-28 00:37:20	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:37:25	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 00:37:50	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:40:28	-->	cigrainger (textual@moz-uc1288.optusnet.com.au) has joined #rust-beginners
2018-09-28 00:41:01	<--	brucem (textual@moz-s6qlt9.fo1l.ivjt.44c8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:41:39	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-28 00:42:56	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 00:43:20	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:43:23	-->	leio (leio@moz-h008ot.tech) has joined #rust-beginners
2018-09-28 00:43:26	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-28 00:46:03	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 00:47:26	-->	weeji (jihi@moz-fo6gu6.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 00:47:28	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:48:08	<--	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 00:49:15	<--	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has quit (The TLS connection was non-properly terminated.)
2018-09-28 00:50:07	<--	quartz55 (quartz@moz-bnt9nb.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:50:10	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:52:09	<--	anirm (Mibbit@moz-ah98ec.dsl.tropolys.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 00:53:56	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-28 00:54:11	-->	picks (Mibbit@moz-5nc.lpi.216.189.IP) has joined #rust-beginners
2018-09-28 00:54:59	-->	troyvoy88__ (troyvoy88@moz-fg66om.0pvd.ir0k.9000.2603.IP) has joined #rust-beginners
2018-09-28 00:57:15	<--	troyvoy88 (troyvoy88@moz-vuc.e8e.112.62.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 00:58:52	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Quit: Zzz)
2018-09-28 00:59:00	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-28 01:00:06	italic	is something going on with #rust? i can't seem to join, but i'm in this one?
2018-09-28 01:00:35	italic	weird...
2018-09-28 01:00:49	italic	./join worked. must be my client
2018-09-28 01:01:35	<--	Ferdirand (max@moz-6he.fek.162.213.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:02:27	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-28 01:02:34	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-28 01:04:23	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-28 01:05:24	<--	troyvoy88__ (troyvoy88@moz-fg66om.0pvd.ir0k.9000.2603.IP) has quit (Quit: Leaving)
2018-09-28 01:05:32	<--	Mokou (mokou@moz-c5ge60.mokou.io) has quit (Quit: Goodbye.)
2018-09-28 01:07:27	-->	Mokou (mokou@moz-c5ge60.mokou.io) has joined #rust-beginners
2018-09-28 01:07:54	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 01:08:39	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 01:08:48	-->	Ferdirand (max@moz-6he.fek.162.213.IP) has joined #rust-beginners
2018-09-28 01:09:51	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 01:12:17	-->	mib_2sugb4 (Mibbit@moz-opk9ij.ca.comcast.net) has joined #rust-beginners
2018-09-28 01:12:36	mib_2sugb4	is there a way to change and Option<T> into an Result<T> ?
2018-09-28 01:12:44	-->	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has joined #rust-beginners
2018-09-28 01:14:23	stephaneyfx	mib_2sugb4: ok_or_(else)
2018-09-28 01:14:28	Moongoodboy{K}	mib_2sugb4: There are many, including `Option::ok()`. If you provide some context, we can advise you on note specifically. :)
2018-09-28 01:14:28	Debaran	mib_2sugb4: yes, there is. check out things like ok_or()
2018-09-28 01:15:27	-->	Cetra (Cetra@moz-3qreko.parashift.com.au) has joined #rust-beginners
2018-09-28 01:16:33	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 01:17:05	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 01:17:43	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:17:43	--	Raychen1 is now known as Raychen
2018-09-28 01:19:40	<--	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 01:19:41	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-28 01:20:38	mib_2sugb4	I checked those out, but I'm looking more for something like and_then on option. I'd like something like if I have and Option<T> then use a closure get T and return Result<T, E>
2018-09-28 01:21:00	mib_2sugb4	I'm kinda thinking that doesn't make a whole lot of sense because that is returning T and E
2018-09-28 01:21:43	mib_2sugb4	I'd use a closure to do some stuff on T and possibly return a different type
2018-09-28 01:21:43	-->	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-28 01:23:18	<--	backnforth (backnforth@moz-g6p.bac.254.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:23:52	Moongoodboy{K}	mib_2sugb4: there's map_or(), which takes a default for the None case and calls a closure in the Some case, returning the exact return type of the closure
2018-09-28 01:24:30	-->	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has joined #rust-beginners
2018-09-28 01:25:35	<--	jsatk (jesseatkins@moz-er7.ftp.185.208.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:25:49	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 01:29:19	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:29:32	<--	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 01:30:20	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 01:30:29	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 01:31:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 01:33:37	-->	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-28 01:33:39	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:33:45	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:34:30	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-28 01:35:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:38:36	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 01:38:42	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-28 01:42:27	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 01:44:04	<--	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-28 01:44:49	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 01:47:17	-->	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has joined #rust-beginners
2018-09-28 01:52:00	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 01:53:22	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 01:53:37	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 01:55:40	-->	siddhartharao17 (siddharthar@moz-e9a3tm.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-28 01:59:57	<--	siddhartharao17 (siddharthar@moz-e9a3tm.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 02:01:22	Lil_Dropchk	Any idea why rustc is crashing here? https://github.com/anowell/interpolate/issues/6
2018-09-28 02:04:02	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-28 02:04:39	-->	smt (smt@moz-j9lv9g.range86-191.btcentralplus.com) has joined #rust-beginners
2018-09-28 02:04:45	<--	mib_2sugb4 (Mibbit@moz-opk9ij.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 02:04:45	<--	smt (smt@moz-j9lv9g.range86-191.btcentralplus.com) has quit (Quit: Leaving)
2018-09-28 02:05:02	sarnold	Lil_Dropchk: nice find :) has a bug been filed with the rust project yet?
2018-09-28 02:05:58	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 02:06:02	sarnold	Lil_Dropchk: the error message says 2018-09-13 -- is that the most recent nightly? maybe it'sl already been fixed
2018-09-28 02:06:25	<--	jupart_ (coolp_jim@moz-ajj.u2k.169.104.IP) has quit (Quit: WeeChat 2.2)
2018-09-28 02:06:27	Lil_Dropchk	sarnold: dunno, i have to use that nightly
2018-09-28 02:06:34	sarnold	oh :(
2018-09-28 02:06:43	<--	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 02:08:12	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Quit: Leaving)
2018-09-28 02:09:21	<--	jperras (jperras@moz-3nf.seb.151.184.IP) has quit (Connection closed)
2018-09-28 02:09:26	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 02:11:54	-->	jperras (jperras@moz-500ss0.dsl.bell.ca) has joined #rust-beginners
2018-09-28 02:13:17	-->	starblue1 (juergen@moz-qh2m7n.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-28 02:14:14	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 02:14:51	<--	starblue (juergen@moz-0jdrdn.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-28 02:17:04	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 02:17:51	-->	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has joined #rust-beginners
2018-09-28 02:18:14	-->	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has joined #rust-beginners
2018-09-28 02:18:25	<--	asyncsec_ (asyncsec@moz-fifjkt.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 02:19:42	-->	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-28 02:21:10	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 02:21:52	-->	Arcaelyx (Arcaelyx@moz-uch8ii.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-09-28 02:24:32	<--	Moongoodboy{K} (LunarToyK@sugar-belle.blackl.net) has quit (Connection closed)
2018-09-28 02:25:12	-->	bdha (bdha@moz-31b.m64.225.165.IP) has joined #rust-beginners
2018-09-28 02:25:46	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-09-28 02:26:33	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 02:26:39	<--	AtumT (IRC@moz-ieh6sm.gvt.net.br) has quit (Client exited)
2018-09-28 02:29:25	<--	oms (oms@moz-k47k0b.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-28 02:30:19	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 02:30:23	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 02:32:29	<--	jazzpi (jazzpi@moz-i6l8pk.space) has quit (Quit: ZNC - http://znc.in)
2018-09-28 02:32:58	-->	Moongoodboy{K} (LunarToyK@sugar-belle.blackl.net) has joined #rust-beginners
2018-09-28 02:34:05	-->	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has joined #rust-beginners
2018-09-28 02:36:58	<--	emerentius (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-28 02:38:13	<--	weeji (jihi@moz-fo6gu6.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-28 02:38:30	<--	orph (orph@moz-0ohdv5.austtx.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 02:39:10	-->	backnforth (backnforth@moz-niq.bac.254.104.IP) has joined #rust-beginners
2018-09-28 02:39:17	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 02:39:47	-->	Acherontius (quassel@moz-jgb98g.rv8s.6bqt.1700.2600.IP) has joined #rust-beginners
2018-09-28 02:40:16	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 02:40:22	<--	Acherontius (quassel@moz-jgb98g.rv8s.6bqt.1700.2600.IP) has quit (Connection closed)
2018-09-28 02:42:02	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-28 02:42:03	-->	huddler (Mibbit@moz-l6n8ni.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-28 02:42:36	<--	nineczar (nate@moz-al9sd1.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 02:43:33	huddler	Can someone provide a pointer as to how to publish documentation along with my crate on crates.io? Is it just an entry in my Cargo.toml? I see many crates linking to docs.rs. Where can I find guidelines on how to publish there?
2018-09-28 02:44:50	stephaneyfx_	huddler: docs.rs will automatically generate the doc for your crate when you publish it to crates.io
2018-09-28 02:46:41	Moongoodboy{K}	huddler: did you publish a crate with no documentation= thing in the manifest, and not automatically get a docs.rs. documentation link on crates.io.?
2018-09-28 02:47:48	huddler	Moongoodboy{K}: yeah, I have no documentation= entry in Cargo.toml. Is that the manifest you are referring to?
2018-09-28 02:48:24	huddler	stephaneyfx_: For some reason it does not. I'll check cargo docs in that case
2018-09-28 02:49:12	stephaneyfx_	huddler: What's the name of your crate?
2018-09-28 02:49:35	huddler	https://crates.io/crates/gui
2018-09-28 02:50:29	-->	asyncsec (asyncsec@moz-q35ht7.dyn6.twc.com) has joined #rust-beginners
2018-09-28 02:50:33	stephaneyfx_	huddler: https://docs.rs/crate/gui/0.1.0
2018-09-28 02:51:05	-->	weeji (jihi@moz-f1b2ou.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 02:53:20	huddler	So I checked `log` and it has `documentation = "https://docs.rs/log"` in Cargo.toml. According to the cargo doc (https://doc.rust-lang.org/cargo/reference/manifest.html) an empty documentation would create a link to doc.rs. That still leaves open the question on how to get it there. I could not find references to it being auto generated
2018-09-28 02:53:34	huddler	Oh!
2018-09-28 02:53:55	huddler	So I guess in that case all I need is an empty documentation field
2018-09-28 02:53:58	huddler	Thanks!
2018-09-28 02:53:58	Moongoodboy{K}	^3 yeah, this happened to me too
2018-09-28 02:54:32	Moongoodboy{K}	…does it have to exist and be empty? IIRC the wording indicates that missing also defaults to using docs.rs. >.>
2018-09-28 02:54:40	Moongoodboy{K}	either way something's broken and should be fixed
2018-09-28 02:55:21	huddler	the documentation basically says that it *can* be left empty, in which case docs.rs is linked by default. But you can obviously specify that directly
2018-09-28 02:56:04	<--	jperras (jperras@moz-500ss0.dsl.bell.ca) has quit (Ping timeout: 121 seconds)
2018-09-28 02:56:20	-->	jperras (jperras@moz-500ss0.dsl.bell.ca) has joined #rust-beginners
2018-09-28 02:58:07	stephaneyfx_	huddler: I'm wondering if crates.io checks that the documentation actually exists on docs.rs before showing a link on the crate page. Given that the doc generation fail for your crate, that might be the reason why there's no link.
2018-09-28 02:58:21	stephaneyfx_	*failed
2018-09-28 02:58:58	Moongoodboy{K}	stephaneyfx_: sounds very plausible
2018-09-28 02:59:20	<--	gentlehelm (jr@moz-kfj.gi2.72.189.IP) has quit (Quit: WeeChat 2.2)
2018-09-28 02:59:40	Gilfoyle	Since as always I still suck at lifetimes, anybody see how I would extend the lifetime of output_string on line 11? It dies there, need to last till the end of the function. https://bpaste.net/show/bb981da766be
2018-09-28 02:59:53	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-28 02:59:55	Moongoodboy{K}	option: add a way to trigger reevaluation of the documentation= field on crates.io., and do that automatically a couple minutes after version publish
2018-09-28 03:00:02	huddler	yeah. That sort of gets me to my next question: is there a playground/staging area for crates.io? E.g., to look at how the readme is rendered and everything? pypi has something like that
2018-09-28 03:00:05	Gilfoyle	Although I'm realizing I can just do a Vec<String> and just borrow each String item as I act on it after returning it... >_>
2018-09-28 03:00:39	Moongoodboy{K}	alternately: update the documentation to recommend against leaving that field missing or blank, for the cases when this happens (which apparently include all initial crate publishes)
2018-09-28 03:01:30	stephaneyfx_	Gilfoyle: The strings you return don't seem to borrow from msg, so you do need to return String
2018-09-28 03:02:19	Moongoodboy{K}	huddler: that's a good idea, especially considering the ways to modify an existing version are currently zero
2018-09-28 03:02:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 03:02:37	Moongoodboy{K}	there's not even a way to trigger reevaluation of the manifest, even without changing it
2018-09-28 03:02:46	Gilfoyle	stephaneyfx_: Yeah I just ended up doing that, works fine.
2018-09-28 03:02:52	huddler	Moongoodboy{K}: :-(
2018-09-28 03:03:13	<--	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:05:43	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-28 03:06:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:08:58	<--	alx741 (alx741@moz-a07.9bn.15.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:10:03	-->	neal_ (neal@moz-8tj3o2.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 03:10:54	<--	huddler (Mibbit@moz-l6n8ni.sntcca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 03:11:40	<--	andyhoang (andyhoang@moz-3mo3f8.gtml.gbn6.0ee0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:12:57	<--	neal (neal@moz-2r1vh3.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-28 03:13:37	<--	gregg (greg@moz-00mjdg.gnumpf.tk) has quit (Connection closed)
2018-09-28 03:14:46	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:14:50	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 03:15:06	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 03:15:26	-->	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has joined #rust-beginners
2018-09-28 03:17:19	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 03:17:51	swalladge	is there a `format!` equivalent for non-literal strings?
2018-09-28 03:17:56	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-28 03:18:18	swalladge	(either std libs or crate)
2018-09-28 03:19:37	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:26:49	<--	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 03:28:09	<--	jperras (jperras@moz-500ss0.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-28 03:29:22	<--	Schmeckinger (Mibbit@moz-28sj44.hsi15.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 03:29:54	-->	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has joined #rust-beginners
2018-09-28 03:30:58	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:31:03	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 03:33:58	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-28 03:33:59	<--	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:34:04	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-28 03:34:07	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-28 03:35:08	<--	alatiera (alatiera@moz-qg3rqu.access.hol.gr) has quit (The TLS connection was non-properly terminated.)
2018-09-28 03:36:59	Moongoodboy{K}	swalladge: that's difficult, because then Rust can't validate the formatting string at compile-time
2018-09-28 03:37:09	Moongoodboy{K}	what all do you need from this formatting operation?
2018-09-28 03:37:24	Moongoodboy{K}	s,-,,
2018-09-28 03:37:27	-->	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has joined #rust-beginners
2018-09-28 03:44:15	swalladge	Moongoodboy{K}: I'd be happy with a function with a signature like fn format(fmt: String, values: [something]) -> Result<String>
2018-09-28 03:44:56	swalladge	i don't need something right now, but i ran up against something a while back when it would have been nice. can't remember exactly what
2018-09-28 03:45:23	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 03:46:37	Moongoodboy{K}	swalladge: how do you need to format the things? Or, equivalently, what are some example formatting strings that cover your usecase here?
2018-09-28 03:47:59	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 03:48:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 03:48:58	-->	siddhartharao17 (siddharthar@moz-e9a3tm.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-28 03:48:58	<--	siddhartharao17 (siddharthar@moz-e9a3tm.oqtm.17gi.0647.2601.IP) has quit (Connection closed)
2018-09-28 03:48:59	-->	siddhartharao17 (siddharthar@moz-e9a3tm.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-28 03:49:16	<--	Arcaelyx (Arcaelyx@moz-uch8ii.77ht.vv5c.2000.2604.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-28 03:50:34	<--	liquidnight (marcus@moz-voh5tm.i39s.bvrq.0c22.2a01.IP) has quit (Connection closed)
2018-09-28 03:51:50	-->	siddhart_ (siddharthar@moz-5hpi31.cn8a.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-28 03:52:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:52:34	<--	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:52:42	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-28 03:52:53	<--	siddhartharao17 (siddharthar@moz-e9a3tm.oqtm.17gi.0647.2601.IP) has quit (Connection closed)
2018-09-28 03:53:23	-->	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-28 03:53:44	--	stephaneyfx_ is now known as stephaneyfx
2018-09-28 03:54:50	<--	siddhart_ (siddharthar@moz-5hpi31.cn8a.oelm.0420.2001.IP) has quit (Connection closed)
2018-09-28 03:55:00	-->	siddhartharao17 (siddharthar@moz-e9a3tm.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-28 03:55:05	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:55:09	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 03:55:24	-->	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-28 03:55:57	-->	neverfox_ (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-28 03:56:44	<--	cigrainger (textual@moz-uc1288.optusnet.com.au) has quit (Ping timeout: 121 seconds)
2018-09-28 03:57:06	-->	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-28 03:57:09	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-28 03:57:22	-->	subhojit777 (subhojit777@moz-0ja.0ir.163.122.IP) has joined #rust-beginners
2018-09-28 03:57:26	<--	neverfox (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:58:27	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 03:58:47	LogicAside	Are there any mature(ish, I'm aware of the relative state) crates for dealing with things like PGP?
2018-09-28 03:58:49	<--	kimundi (kimundi@moz-bvk6ha.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-28 04:00:45	-->	siddhart_ (siddharthar@moz-etjoph.cn8a.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-28 04:02:33	-->	yjv (yjv@moz-u3cm8h.fios.verizon.net) has joined #rust-beginners
2018-09-28 04:03:05	<--	siddhartharao17 (siddharthar@moz-e9a3tm.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 04:03:12	<--	yjv (yjv@moz-u3cm8h.fios.verizon.net) has quit (Connection closed)
2018-09-28 04:03:32	-->	yjv (yjv@moz-u3cm8h.fios.verizon.net) has joined #rust-beginners
2018-09-28 04:05:01	<--	niconii (nicole@moz-6s2u8a.midco.net) has quit (Quit: leaving)
2018-09-28 04:07:34	<--	yjv (yjv@moz-u3cm8h.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-28 04:07:44	-->	kimundi (kimundi@moz-fd6ajs.versanet.de) has joined #rust-beginners
2018-09-28 04:08:03	-->	clpo13 (clpo13@moz-5j8ktg.clpo.info) has joined #rust-beginners
2018-09-28 04:08:24	<--	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 04:09:13	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 04:10:16	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-28 04:11:54	<--	martin1 (martin@moz-c7v.9s6.64.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 04:13:44	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 04:14:10	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 04:14:36	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 04:14:54	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-28 04:15:40	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-09-28 04:18:00	-->	poljar1 (poljar@moz-52nqhq.net.t-com.hr) has joined #rust-beginners
2018-09-28 04:18:06	-->	andyhoang (andyhoang@moz-7fd.jfm.185.113.IP) has joined #rust-beginners
2018-09-28 04:18:10	<--	siddhart_ (siddharthar@moz-etjoph.cn8a.oelm.0420.2001.IP) has quit (Connection closed)
2018-09-28 04:19:42	swalladge	LogicAside: https://sequoia-pgp.org/ might be useful
2018-09-28 04:20:25	swalladge	Moongoodboy{K}: can't remember lol... i better wait until i have the use case again
2018-09-28 04:20:48	<--	poljar (poljar@moz-0as651.net.t-com.hr) has quit (Ping timeout: 121 seconds)
2018-09-28 04:23:28	-->	enterprisey (enterprisey@moz-e2ma94.cit.cornell.edu) has joined #rust-beginners
2018-09-28 04:24:20	Moongoodboy{K}	swalladge: yeah. There're probably ways you can either come up with a literal format string, or sidestep the need for a single overall format!() at all (e.g. with join() and `format!("{}", element)` for each element)
2018-09-28 04:24:23	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 04:24:27	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 04:24:33	Moongoodboy{K}	but it really depends on what you're doing and how much of the formatting functionality you need
2018-09-28 04:26:34	-->	gretch (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-28 04:27:06	<--	gretch (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 04:27:24	-->	gretch (Mibbit@moz-aud.lf1.189.206.IP) has joined #rust-beginners
2018-09-28 04:27:33	gretch	Hi can I ask a question?
2018-09-28 04:29:24	<--	picks (Mibbit@moz-5nc.lpi.216.189.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 04:29:37	-->	Psilidae (pseudo@moz-kc4c2g.jcvlfl.sbcglobal.net) has joined #rust-beginners
2018-09-28 04:30:09	<--	Psilidae (pseudo@moz-kc4c2g.jcvlfl.sbcglobal.net) has quit (Quit: WeeChat 2.0.1)
2018-09-28 04:33:13	<--	clpo13 (clpo13@moz-5j8ktg.clpo.info) has quit (The TLS connection was non-properly terminated.)
2018-09-28 04:33:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 04:34:03	<--	gretch (Mibbit@moz-aud.lf1.189.206.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 04:37:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 04:37:45	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-28 04:38:33	<--	Guest61891 (nj0rd@moz-n1c998.dsl.tropolys.de) has quit (Ping timeout: 121 seconds)
2018-09-28 04:39:42	<--	backnforth (backnforth@moz-niq.bac.254.104.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 04:40:23	<--	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has quit (Quit: Leaving)
2018-09-28 04:46:33	-->	yjv (yjv@moz-u3cm8h.fios.verizon.net) has joined #rust-beginners
2018-09-28 04:49:02	-->	xpm (xpm@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-28 04:49:22	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 04:50:14	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 04:50:35	<--	yjv (yjv@moz-u3cm8h.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-28 04:51:17	-->	Guest61891 (nj0rd@moz-21qgnn.dsl.tropolys.de) has joined #rust-beginners
2018-09-28 04:51:29	-->	alatiera (alatiera@moz-qg3rqu.access.hol.gr) has joined #rust-beginners
2018-09-28 04:51:38	-->	bivalveoutlaw (igloo@moz-neif26.mn.comcast.net) has joined #rust-beginners
2018-09-28 04:52:40	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-28 04:53:19	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-28 04:53:24	-->	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-28 04:53:25	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 04:53:28	<--	xpm (xpm@moz-36hdos.ph.cox.net) has quit (Quit: leaving)
2018-09-28 04:53:32	-->	mysterio1spants (xpm@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-28 04:53:51	-->	froglegstew (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-28 04:53:56	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 04:54:03	-->	alatiera_ (alatiera@moz-22er76.access.hol.gr) has joined #rust-beginners
2018-09-28 04:54:08	froglegstew	i got a good example of what im trying to do can someone take a look at it https://play.rust-lang.org/?gist=66c54284f65ae40709cc4c621175fd4f&version=stable&mode=debug&edition=2015
2018-09-28 04:55:55	-->	alatiera__ (alatiera@moz-rabf45.access.hol.gr) has joined #rust-beginners
2018-09-28 04:56:26	<--	alatiera (alatiera@moz-qg3rqu.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-28 04:56:34	-->	fuogo (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-28 04:57:21	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-28 04:57:21	--	BearOfJade1 is now known as BearOfJade
2018-09-28 04:57:28	<--	fuogo (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 04:57:34	-->	mib_gineql (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-28 04:57:48	<--	bivalveoutlaw (igloo@moz-neif26.mn.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-28 04:57:58	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-28 04:58:08	mib_gineql	What is that ad lol "single russian women looking for a man"
2018-09-28 04:58:16	<--	alatiera_ (alatiera@moz-22er76.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-28 04:58:41	 *	Moongoodboy{K} wonders why anyone would show up in a channel and transcribe an advertisement as their first interaction >.>
2018-09-28 04:58:49	Moongoodboy{K}	especially considering offtopic is /that way/
2018-09-28 04:59:32	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 05:01:07	mib_gineql	I like to come this irc at work but given the ads gonna have treat this as nsfw
2018-09-28 05:01:11	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 05:01:19	Moongoodboy{K}	???
2018-09-28 05:01:26	Moongoodboy{K}	there are no ads here; it's IRC <.<
2018-09-28 05:01:33	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 05:01:50	mib_gineql	Its right by the mibbit logo
2018-09-28 05:01:56	<--	alatiera__ (alatiera@moz-rabf45.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-28 05:02:00	Moongoodboy{K}	oh, you're using Mibbit
2018-09-28 05:02:09	Moongoodboy{K}	report the ad to Mibbit I guess
2018-09-28 05:02:13	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 05:02:18	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 05:02:20	mib_gineql	I dunno i just clicked the link in the official rust site
2018-09-28 05:02:40	Moongoodboy{K}	froglegstew: yeah, I see the confusion here. Lessee.
2018-09-28 05:02:58	Moongoodboy{K}	mib_gineql: most of us are using native IRC clients (some of us, Matrix clients)
2018-09-28 05:03:18	Moongoodboy{K}	there're a few good ones to choose from, and they won't have any ads
2018-09-28 05:03:20	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 05:03:32	mib_gineql	Ah gonna have to use one thanks :)
2018-09-28 05:05:19	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 05:05:20	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 05:05:36	Moongoodboy{K}	mmhmm c:
2018-09-28 05:07:19	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 05:07:19	<--	mib_gineql (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 05:07:49	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 05:07:51	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 05:08:29	froglegstew	Moongoodboy{K} Am I stuck?
2018-09-28 05:08:57	Moongoodboy{K}	Lessee.
2018-09-28 05:11:15	Moongoodboy{K}	(…destruct sequence three, code StructA, StructB, D)
2018-09-28 05:11:19	-->	seph (seph@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-28 05:12:40	-->	eyans (a@moz-d206st.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-28 05:13:59	Moongoodboy{K}	froglegstew: yeah, I'm having a pretty hard time with this. Can we back up a few steps and look at what you're trying to do?
2018-09-28 05:14:01	Moongoodboy{K}	!xy
2018-09-28 05:14:01	+rustbot	The XY problem is asking about the solution you've attempted, when there may be a better approach to your problem if you explain it in full. More at https://meta.stackexchange.com/a/66378
2018-09-28 05:15:33	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 05:16:04	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 05:17:46	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 05:17:48	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 05:17:49	-->	grillon (grillon@moz-tnh86i.0n16.8dab.cb1d.2a01.IP) has joined #rust-beginners
2018-09-28 05:17:54	grillon	hi there
2018-09-28 05:17:58	froglegstew	Moongoodboy{K} Hmm I would have to sit down and make a good sized post. It a very complicated problem. I'm trying to extend some behavior from a library someone on my team wrote. The library can't be touched. It took me some time actually to boil it down this simplified example..
2018-09-28 05:18:54	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-28 05:18:56	-->	U007D (U007D@moz-c5t.9b9.245.162.IP) has joined #rust-beginners
2018-09-28 05:18:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 05:19:13	froglegstew	Moongoodboy{K} I'm trying to allow switch the inner field of StructA with StructB BUT BUT BUT BUT
2018-09-28 05:19:26	Moongoodboy{K}	froglegstew: yeah, part of my problem with it is that it's too abstract and meaningless. It's hard to keep track of all the traits and types, and impossible to understand what you need to accomplish.
2018-09-28 05:19:31	froglegstew	Moongoodboy{K} I need to have whatever the inner inside StructA put inside StructB
2018-09-28 05:19:37	froglegstew	switcharoo
2018-09-28 05:20:20	froglegstew	So basically if I call bar() on StructA it needs to return StructA
2018-09-28 05:20:21	froglegstew	But
2018-09-28 05:20:22	Moongoodboy{K}	Does this library have public docs? We could start on a specific type and say, okay, this is the type I have, and I need to…
2018-09-28 05:20:33	Moongoodboy{K}	s/…/do XYZ with it/
2018-09-28 05:20:38	froglegstew	with whatever { inner } field was in StructA to be switched to StructB
2018-09-28 05:20:42	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 05:21:07	Moongoodboy{K}	Still too specific. Why so you
2018-09-28 05:21:13	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 05:21:14	froglegstew	Moongoodboy{K} I wish I could publish it but its proprietary lol I know that sounds lame but meh this is for work
2018-09-28 05:21:19	Moongoodboy{K}	Why do you want to do all this fiddling and switching with struct fields?
2018-09-28 05:21:22	Moongoodboy{K}	oof, okay
2018-09-28 05:21:40	Moongoodboy{K}	that's gonna be significantly harder to work with, but we can try
2018-09-28 05:21:43	<--	mysterio1spants (xpm@moz-36hdos.ph.cox.net) has quit (Quit: leaving)
2018-09-28 05:22:13	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-28 05:22:15	froglegstew	The goal is extensibility. StructA does specific stuff. But I want to Extend its behavior to do other stuff. It always calls its { inner } field to do that stuff
2018-09-28 05:22:21	froglegstew	I figure if I can switch its inner field
2018-09-28 05:22:27	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 05:22:34	froglegstew	with StructB I can put someone else there to do that other stuff..
2018-09-28 05:22:54	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 05:23:06	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 05:23:21	froglegstew	so StructA actually has a fn do_stuff(&self) { self.inner.actually_do_stuff
2018-09-28 05:24:45	froglegstew	see that? self.inner it makes the inner do it. I want to be able to call specific functions on StructA that I can define, say in a Trait. In the example thats Trait Stumpy. Then impl Stumpy on StructA. Now we must return StructA. Nothing else. But in the process whos to say we cant switch out self.inner for a StructB
2018-09-28 05:24:50	froglegstew	I know that sounds super confusing..
2018-09-28 05:25:15	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-28 05:25:43	-->	mysterioustrousers (xpm@moz-3tmhja.05up.2m88.8800.2600.IP) has joined #rust-beginners
2018-09-28 05:26:15	Moongoodboy{K}	hmm…starting back a bit, “extend StructA with additional behavior” sounds like /wrap it in a newtype, maybe implement Deref, and implement methods with the new behavior/
2018-09-28 05:26:23	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 05:26:39	--	U007D is now known as U007D_afk
2018-09-28 05:27:40	Moongoodboy{K}	that's the typical way to do that, I think
2018-09-28 05:29:29	froglegstew	yes! I definitely want to wrap it. but without wrapping its type. you might say thats crazy how can that be done. well remember, StructA just calls its self.inner. So how about instead of StructB { inner: StructA{} }. I want to do it this way because I always want to work with the type StructA. I never want to work with StructB first. so that fn bar() must
2018-09-28 05:29:37	froglegstew	return StructA and not StructB
2018-09-28 05:29:54	froglegstew	Deref I never considered that. How would that work here?
2018-09-28 05:30:47	froglegstew	TYPO! ::: So how about instead of StructB { inner: StructA{} } I want to return StructA { inner: StructB }
2018-09-28 05:31:17	-->	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has joined #rust-beginners
2018-09-28 05:31:19	<--	subhojit777 (subhojit777@moz-0ja.0ir.163.122.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 05:31:40	froglegstew	also have heard of the newtype pattern but I dont know much about that
2018-09-28 05:34:31	Moongoodboy{K}	…sooo…you want a wrapper of StructA, but one with a type that unifies with StructA, so that you can do things like `let struct_: StructA<..> = actually_a_wrapped_thing;`.
2018-09-28 05:35:02	Moongoodboy{K}	And you can't just modify StructA to add the features you want.
2018-09-28 05:35:13	froglegstew	correct
2018-09-28 05:35:48	Moongoodboy{K}	In other languages, you would simply subclass StructA and call it a day (the subclass type would unify just fine)
2018-09-28 05:36:00	froglegstew	yup inheritance would solve this
2018-09-28 05:36:06	Moongoodboy{K}	Rust doesn't have inheritance or subclassing; the typical thing to do is use a newtype, as mentioned
2018-09-28 05:36:40	froglegstew	im impressed that you were able to nail what i wanted from that confusing explanation :p
2018-09-28 05:37:06	Moongoodboy{K}	So let's look at why you want that type unification. Are you using StructA and Wrapped together somehow? Do you gave a Vec<StructA> or a fn(StructA) or something that you need to also work with `Wrapped`?
2018-09-28 05:37:50	Moongoodboy{K}	Might it be possible to simply change the type to Wrapped, wrap /all/ of them, and call it a day?
2018-09-28 05:38:07	<--	divma (divma@moz-8gcv5a.compute.amazonaws.com) has quit (Ping timeout: 121 seconds)
2018-09-28 05:38:17	Moongoodboy{K}	^4 I guess you could say that I did well…
2018-09-28 05:38:20	 *	Moongoodboy{K} sunglasses
2018-09-28 05:38:24	Moongoodboy{K}	…/unwrapping/ it
2018-09-28 05:38:33	froglegstew	lmao!
2018-09-28 05:38:44	Moongoodboy{K}	X3
2018-09-28 05:39:05	froglegstew	I have functions that StructA impls. In those functions they need access to StructA's fields. I could just make another type FakeStructA with those fields and copy the fields and use that yes..
2018-09-28 05:39:05	froglegstew	but
2018-09-28 05:39:35	froglegstew	then I would need to rewrite for FakeStructA every single function that StructA impls 
2018-09-28 05:39:41	froglegstew	because I want to still use those
2018-09-28 05:39:43	-->	divma (divma@moz-8gcv5a.compute.amazonaws.com) has joined #rust-beginners
2018-09-28 05:40:26	froglegstew	and I don't want that coupling becuse now FakeStructA has to change those many many functions and fields when StructA changes..
2018-09-28 05:41:56	Moongoodboy{K}	Okay, so you just want the type unification so that you can continue to use StructA methods on `Wrapped`?
2018-09-28 05:42:05	froglegstew	Yes
2018-09-28 05:42:37	froglegstew	heres an possible api struct_a.do().for().fun().bar()....
2018-09-28 05:43:00	Moongoodboy{K}	If you `impl Deref for Wrapped { type Target = StructA; }` then you'll get all the StructA methods.
2018-09-28 05:43:16	Moongoodboy{K}	Any that you need to “override” behavior for, you can just implement again on Wrapped
2018-09-28 05:43:27	Moongoodboy{K}	(probably using the contained StructA to do most of the work)
2018-09-28 05:43:29	froglegstew	oh snap
2018-09-28 05:43:42	Moongoodboy{K}	well, all of the &self methods, that is
2018-09-28 05:43:54	froglegstew	hmm there are (self) functions..
2018-09-28 05:44:02	Moongoodboy{K}	I think implemenrint DerefMut as well gives you the `&mut self` ones too
2018-09-28 05:44:12	froglegstew	actually most are 90% are fn foo(self)
2018-09-28 05:44:16	Moongoodboy{K}	consuming methods are more tricky. Hmm
2018-09-28 05:45:13	froglegstew	yeah just checked the vast majority are fn foo(self) -> StructA blah blah
2018-09-28 05:45:22	Moongoodboy{K}	And I take it you want the consuming methods to return `StructA`s that actually behave like `Wrapped`s (or at least have all the same methods)
2018-09-28 05:45:57	Moongoodboy{K}	(or at least `Wrapped`s that have all the StructA methods) *
2018-09-28 05:46:49	Moongoodboy{K}	I think you may be more or less stuck with writing out all the methods, and just making them forward to the inner StructA
2018-09-28 05:47:01	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-28 05:47:29	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 05:47:30	froglegstew	I want the consuming methods to actually continue to operate as they are. The ones that StructA impls can remain unchanged. I only want to introduce a new method for StructA. lets call this method bar(). That method however must return StructA with one caveat. StructA's { inner } field must be a Wrapper I choose
2018-09-28 05:48:14	Moongoodboy{K}	…if all you need is to /add/ a method, you can just write an extension trait
2018-09-28 05:48:26	froglegstew	Yes I have that in the example
2018-09-28 05:48:51	froglegstew	line 37 - 44 and another option on line 48 to 55
2018-09-28 05:49:18	 *	Moongoodboy{K} is focusing less on the code (it was confusing ^.^; ) and more on determining intent
2018-09-28 05:49:52	froglegstew	Moongoodboy{K} Ah.. hmm let me see If I can get a simpler example I think I actually can
2018-09-28 05:50:01	Moongoodboy{K}	Could you have bar() just return a Wrapped, and do all the method forwarding and stuff so that Wrapped has the functionality of a `StructA`?
2018-09-28 05:50:43	froglegstew	With inheritance I could. All the functions are impl'ed directly on StructA "impl StructA { .... }"
2018-09-28 05:51:04	froglegstew	They arent in a trait..
2018-09-28 05:51:55	Moongoodboy{K}	okay, that's sounding like the best bet. Drop the extension trait and…
2018-09-28 05:52:28	Moongoodboy{K}	You'll newtype `StructA`. Let's call the newtype `Wrapped`.
2018-09-28 05:52:41	Moongoodboy{K}	Add an inherent method Wrapped::bar() that returns Wrapped
2018-09-28 05:53:07	Moongoodboy{K}	you can implement Deref from Wrapped to StructA or not; it sounds like that's not where the important functionality is
2018-09-28 05:53:19	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 05:53:50	froglegstew	let me try that
2018-09-28 05:54:00	-->	Psilidae (pseudo@moz-kc4c2g.jcvlfl.sbcglobal.net) has joined #rust-beginners
2018-09-28 05:54:39	Moongoodboy{K}	for each `self`-consuming inherent StructA method that you need on Wrapped as well, implement it like `fn $name(self) -> Wrapped { Wrapped::new(self.inner.$name()) }`
2018-09-28 05:55:53	Moongoodboy{K}	and in the future, when possible, use open-source libraries so that you can just fork them and add features to upstream types directly without having to muck about. :p
2018-09-28 05:57:27	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 05:58:01	froglegstew	Okay so it will take me some time to attempt to wire this up. I will report back hopefully with some good news later on tonight :D
2018-09-28 05:59:27	Moongoodboy{K}	^.^
2018-09-28 05:59:49	Moongoodboy{K}	it mayyyy help to write a macro to generate those forwarding methods…
2018-09-28 05:59:57	Moongoodboy{K}	not by much, though, I don't think
2018-09-28 06:00:14	Moongoodboy{K}	myself, I'd probably just get my editor to generate them for me
2018-09-28 06:00:29	froglegstew	noooooooooo i myself am ant macro :p
2018-09-28 06:00:32	froglegstew	anti*
2018-09-28 06:00:38	froglegstew	all macros must die
2018-09-28 06:00:50	Moongoodboy{K}	oi, macros are useful
2018-09-28 06:00:55	Moongoodboy{K}	Rust macros aren't evil
2018-09-28 06:01:01	Moongoodboy{K}	unlike C ones :D
2018-09-28 06:01:07	froglegstew	^
2018-09-28 06:01:21	froglegstew	I havent learned macros yet in rust
2018-09-28 06:01:28	froglegstew	so i may change my mind
2018-09-28 06:01:58	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 06:04:19	<--	GreenJello (GreenJello@moz-5ah.vnp.83.23.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 06:04:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 06:05:18	<--	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has quit (Quit: WeeChat 2.2)
2018-09-28 06:07:59	Moongoodboy{K}	Rust macros are powerful and hygenic
2018-09-28 06:08:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 06:12:45	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-28 06:14:36	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-28 06:14:48	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-28 06:15:02	-->	oms (oms@moz-m3pt1t.dyn.telefonica.de) has joined #rust-beginners
2018-09-28 06:16:41	-->	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has joined #rust-beginners
2018-09-28 06:18:14	-->	mkollaro1 (mkollaro@moz-r4v86o.bb.dnainternet.fi) has joined #rust-beginners
2018-09-28 06:18:47	<--	P1RATEZ (piratez@moz-h769d6.cable.rogers.com) has quit (Quit: )
2018-09-28 06:21:41	-->	Lucas (Mutter@moz-a7q.lel.230.45.IP) has joined #rust-beginners
2018-09-28 06:21:51	Lucas	hino
2018-09-28 06:21:53	<--	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-28 06:21:56	-->	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has joined #rust-beginners
2018-09-28 06:22:02	Lucas	hi
2018-09-28 06:22:37	<--	Lucas (Mutter@moz-a7q.lel.230.45.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-28 06:22:42	-->	gleisonnerd (Mutter@moz-a7q.lel.230.45.IP) has joined #rust-beginners
2018-09-28 06:22:43	<--	gleisonnerd (Mutter@moz-a7q.lel.230.45.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 06:23:43	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-28 06:26:49	-->	cxiao (cxiao@moz-sng.ido.103.172.IP) has joined #rust-beginners
2018-09-28 06:28:14	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-28 06:31:25	<--	kraythen (rsimmonsjr@moz-soc0ve.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-28 06:32:22	<--	reedhhw (reedhhw@moz-me6m05.irvnca.sbcglobal.net) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-28 06:32:36	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 06:33:50	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 06:33:53	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 06:33:56	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 06:34:06	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-28 06:34:56	<--	seph (seph@moz-lg29g0.fl.comcast.net) has quit (Quit: Lost terminal)
2018-09-28 06:36:28	-->	quibbit (Mibbit@moz-hjs.7a0.213.210.IP) has joined #rust-beginners
2018-09-28 06:36:29	<--	quibbit (Mibbit@moz-hjs.7a0.213.210.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 06:39:29	-->	ufobat___ (Martin@moz-en04p0.dyn.telefonica.de) has joined #rust-beginners
2018-09-28 06:40:14	<--	cxiao (cxiao@moz-sng.ido.103.172.IP) has quit (Client exited)
2018-09-28 06:40:44	-->	Albori (Albori@moz-nr1v0b.fidnet.com) has joined #rust-beginners
2018-09-28 06:43:08	<--	chrisdotcode (quassel@moz-k5ob4p.jv55.dlrr.fcc8.2607.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 06:46:46	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 06:46:51	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 06:47:46	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 06:50:52	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 06:51:02	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 06:51:34	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 06:51:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 06:52:22	<--	eyans (a@moz-d206st.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-28 06:53:13	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-28 06:54:16	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-28 06:56:05	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:02:01	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-28 07:02:41	froglegstew	Moongoodboy{K} I got a working example! This one isn't abstract it has some printlines :) https://play.rust-lang.org/?gist=35d171b221f304f239265bb176dd2a5d&version=stable&mode=debug&edition=2015
2018-09-28 07:08:52	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-28 07:11:07	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:11:12	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 07:12:36	-->	ichihaifu (ichihaifu@moz-d8vltb.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-28 07:13:05	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:13:57	<--	ichihaifu (ichihaifu@moz-d8vltb.elisa-laajakaista.fi) has quit (Quit: Leaving)
2018-09-28 07:14:27	-->	ichihaifu (ichihaifu@moz-d8vltb.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-28 07:16:10	<--	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-28 07:16:47	-->	ichihaifu_ (ichihaifu@moz-d8vltb.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-28 07:19:15	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:19:22	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 07:20:04	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Connection closed)
2018-09-28 07:21:42	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 07:22:32	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-09-28 07:22:35	<--	jec_ (jec@moz-pboa8b.ks.cox.net) has left #rust-beginners
2018-09-28 07:22:43	<--	mysterioustrousers (xpm@moz-3tmhja.05up.2m88.8800.2600.IP) has quit (Quit: Leaving)
2018-09-28 07:23:28	<--	ichihaifu (ichihaifu@moz-d8vltb.elisa-laajakaista.fi) has quit (Quit: Leaving)
2018-09-28 07:24:27	<--	gmacon (gmacon@moz-t62ti6.kj4jzy.org) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2018-09-28 07:24:44	-->	gmacon (gmacon@moz-t62ti6.kj4jzy.org) has joined #rust-beginners
2018-09-28 07:25:24	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:25:29	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 07:26:58	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 07:28:24	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 07:28:45	-->	ichihaifu (ichihaifu@moz-d8vltb.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-28 07:28:52	<--	ichihaifu_ (ichihaifu@moz-d8vltb.elisa-laajakaista.fi) has quit (Client exited)
2018-09-28 07:29:27	-->	alatiera (alatiera@moz-n5git9.access.hol.gr) has joined #rust-beginners
2018-09-28 07:29:40	-->	super_noobie (Mibbit@moz-dr4.ofe.93.142.IP) has joined #rust-beginners
2018-09-28 07:30:19	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-28 07:30:33	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 07:32:13	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 07:32:18	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-28 07:32:40	<--	super_noobie (Mibbit@moz-dr4.ofe.93.142.IP) has left #rust-beginners
2018-09-28 07:32:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 07:34:18	ichihaifu	when function is written to return 'unit type ()', what does that actually mean? (e.g. 'fn return_me() -> () {println!("me!");}' )
2018-09-28 07:34:36	<--	froglegstew (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 07:35:01	ichihaifu	i can see that it returns almost literally whatever I set it to return, but is that literally just it when I specify () as the return type?
2018-09-28 07:35:22	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-28 07:35:52	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-28 07:36:29	<--	artfwo (artfwo@moz-jbr.h02.230.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:36:31	<--	himi (sjjf@moz-psjk59.anu.edu.au) has quit (Connection closed)
2018-09-28 07:36:53	ichihaifu	any downsides, limitations or something to keep in mind? seems a little too convenient
2018-09-28 07:36:56	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 07:37:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:37:18	Ferdirand	i think that fn foo() -> () { .. } is equivalent to fn foo() { .. }
2018-09-28 07:37:35	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 07:37:36	Ferdirand	the latter is just a notation shortcut
2018-09-28 07:38:11	-->	yjv (yjv@moz-u3cm8h.fios.verizon.net) has joined #rust-beginners
2018-09-28 07:38:15	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-28 07:38:42	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 07:39:02	drager	ichihaifu: I don't really understand your question, downsides of what?
2018-09-28 07:39:39	Ferdirand	the unit type is essentially here because it makes the type checking more consistent than if you had to deal separately with expressions and statements, or with procedures and functions
2018-09-28 07:40:15	ichihaifu	well i'm just trying to clarify my confusion a little, in the sample i was looking at it was more of 'fn foo(n: u32) -> ()' - normally i'm seeing the return type specified in place of the ()
2018-09-28 07:40:47	Ferdirand	what other languages do you have experience with ?
2018-09-28 07:41:13	ichihaifu	oh i think it makes a bit more sense now, thanks Ferdirand
2018-09-28 07:41:53	ichihaifu	i'm usually working with just powershell, dabbled in to rust a bit before but stopped for a bit over a year - trying to pick it up again
2018-09-28 07:42:20	ichihaifu	seeing new things in the book that werent there before :)
2018-09-28 07:42:57	drager	ichihaifu: Well, if you want to return something that contains no information, then you should return a unit. Which functions default to, and as Ferdirand wrote. Functions default to that if you do not specify another return type.
2018-09-28 07:43:43	jeikobu	ichihaifu: it doesn't "return literally whatever I set it to return", it will only return ()
2018-09-28 07:43:46	jeikobu	fn return_nothing() -> () { 7; } // compiles
2018-09-28 07:43:48	jeikobu	fn return_7() -> () { 7 } // does not: "expected (), found integral variable"
2018-09-28 07:43:53	jeikobu	The ; is relevent
2018-09-28 07:44:44	jeikobu	(The println!() macro also returns () though, so I used a different example)
2018-09-28 07:44:51	ichihaifu	" fn foo() -> () { .. } is equivalent to fn foo() { .. }" is basically what clarified my question
2018-09-28 07:45:11	jeikobu	OK, sounds like you got it
2018-09-28 07:45:41	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 07:45:47	ichihaifu	yeah, having the () hanging in the provided sample without this clarification raised some confusion for me
2018-09-28 07:45:50	ichihaifu	cheers
2018-09-28 07:48:55	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 07:49:20	<--	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-28 07:49:58	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 07:50:02	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-28 07:50:12	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:51:49	-->	netrino (netrino@moz-ttas6d.moscow.rt.ru) has joined #rust-beginners
2018-09-28 07:54:52	<--	blades (blades@moz-7cfj0d.ga.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 07:55:26	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-28 07:55:50	<--	netrino (netrino@moz-ttas6d.moscow.rt.ru) has quit (Ping timeout: 121 seconds)
2018-09-28 07:56:50	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 07:59:53	-->	blades (blades@moz-7cfj0d.ga.comcast.net) has joined #rust-beginners
2018-09-28 07:59:58	<--	zephyrz4 (zephyrz4@moz-48n.fjj.115.146.IP) has quit (Connection closed)
2018-09-28 08:00:16	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-09-28 08:00:34	-->	zephyrz4 (zephyrz4@moz-48n.fjj.115.146.IP) has joined #rust-beginners
2018-09-28 08:01:48	-->	gamakichi (Mibbit@moz-s7i.i98.51.106.IP) has joined #rust-beginners
2018-09-28 08:02:35	-->	refold (refold@moz-0ig.vcg.98.88.IP) has joined #rust-beginners
2018-09-28 08:07:03	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 08:07:24	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 08:07:37	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 08:10:33	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 08:10:35	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 08:11:35	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Client exited)
2018-09-28 08:14:47	<--	dinfuehr (dinfuehr@moz-gms8op.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-28 08:15:04	<--	leotaku (leotaku@moz-lnm2k9.highway.a1.net) has quit (Ping timeout: 121 seconds)
2018-09-28 08:15:46	-->	leotaku (leotaku@moz-lnm2k9.highway.a1.net) has joined #rust-beginners
2018-09-28 08:15:50	<--	paulvt (paul.van.ti@moz-fqjbgr.fb56.nn7d.a446.2a02.IP) has quit (Client exited)
2018-09-28 08:15:57	-->	dinfuehr (dinfuehr@moz-gms8op.highway.telekom.at) has joined #rust-beginners
2018-09-28 08:16:19	-->	paulvt (paul.van.ti@moz-5lfpak.fb56.nn7d.a446.2a02.IP) has joined #rust-beginners
2018-09-28 08:16:47	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 08:16:51	--	sindre is now known as puse
2018-09-28 08:17:16	-->	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has joined #rust-beginners
2018-09-28 08:21:23	<--	insidious (insidious@moz-01t3eu.resnet.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-09-28 08:23:46	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 08:23:55	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-28 08:24:01	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-28 08:24:48	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-09-28 08:25:15	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 08:25:50	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-28 08:26:42	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-28 08:26:47	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Quit: )
2018-09-28 08:27:35	-->	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has joined #rust-beginners
2018-09-28 08:28:03	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-28 08:29:24	<--	asyncsec (asyncsec@moz-q35ht7.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 08:29:25	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-28 08:29:54	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 08:33:05	<--	andyhoang (andyhoang@moz-7fd.jfm.185.113.IP) has quit (Connection closed)
2018-09-28 08:34:51	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 08:35:17	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-09-28 08:36:14	-->	alatiera_ (alatiera@moz-ih46ll.access.hol.gr) has joined #rust-beginners
2018-09-28 08:36:27	-->	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has joined #rust-beginners
2018-09-28 08:37:06	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 08:38:07	-->	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has joined #rust-beginners
2018-09-28 08:38:50	<--	alatiera (alatiera@moz-n5git9.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-28 08:39:44	-->	mib_dql9c1 (Mibbit@moz-0bojte.ip.btc-net.bg) has joined #rust-beginners
2018-09-28 08:39:51	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 08:40:11	-->	alatiera__ (alatiera@moz-qv6amm.access.hol.gr) has joined #rust-beginners
2018-09-28 08:42:20	<--	alatiera_ (alatiera@moz-ih46ll.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-28 08:44:12	<--	alatiera__ (alatiera@moz-qv6amm.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-28 08:44:22	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 08:46:14	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 08:47:28	-->	Aankhen`` (notasquid@moz-1hp.gpv.69.182.IP) has joined #rust-beginners
2018-09-28 08:47:53	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 08:48:46	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-28 08:50:14	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-28 08:54:07	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-28 08:54:19	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 08:55:03	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 08:56:42	-->	Guest4 (textual@moz-f33.ffr.141.14.IP) has joined #rust-beginners
2018-09-28 09:01:01	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-28 09:01:04	-->	gx (gx@moz-55u.sqi.37.106.IP) has joined #rust-beginners
2018-09-28 09:01:49	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-28 09:01:57	<--	enterprisey (enterprisey@moz-e2ma94.cit.cornell.edu) has quit (Quit: Leaving)
2018-09-28 09:03:08	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-28 09:03:58	-->	kemmis (kemmis@moz-g6hulm.ca.charter.com) has joined #rust-beginners
2018-09-28 09:04:12	-->	holmgr (holmgr@moz-cg3smj.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-28 09:04:58	-->	yk (yk@moz-mrt.tj5.67.95.IP) has joined #rust-beginners
2018-09-28 09:06:54	-->	Mateon2 (Thunderbird@moz-hv3i3k.supernova.orange.pl) has joined #rust-beginners
2018-09-28 09:07:15	<--	kemmis (kemmis@moz-g6hulm.ca.charter.com) has quit (Quit: )
2018-09-28 09:07:32	<--	Mateon1 (Thunderbird@moz-rpbq99.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-28 09:07:33	--	Mateon2 is now known as Mateon1
2018-09-28 09:08:13	-->	kemmisc (kemmis@moz-g6hulm.ca.charter.com) has joined #rust-beginners
2018-09-28 09:08:39	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 09:09:09	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 09:12:45	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 09:13:18	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-28 09:13:48	<--	holmgr (holmgr@moz-cg3smj.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-28 09:14:06	-->	alatiera (alatiera@moz-uqu79o.access.hol.gr) has joined #rust-beginners
2018-09-28 09:14:11	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 09:14:11	--	Raychen1 is now known as Raychen
2018-09-28 09:15:42	<--	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 09:16:00	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-28 09:16:33	ibrokemypie	hey
2018-09-28 09:17:27	drager	Hey
2018-09-28 09:17:33	ibrokemypie	how can extend_from_slice a vector of strings from a vector of structs, taking one of the fields (which is string)
2018-09-28 09:18:13	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 09:18:18	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 09:18:25	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 09:18:42	ibrokemypie	to explain better, i have a vec of strings and a vec of structs, the structs having a field that is a string, I wish to append the string fields of each struct into the first vec
2018-09-28 09:18:55	drager	ibrokemypie: Maybe vec.iter().map(|struct| struct.field) then call extend_from_slice?
2018-09-28 09:18:57	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 09:19:08	-->	ksqsf_ (ksqsf@moz-dv99lg.h0dd.vs72.0da8.2001.IP) has joined #rust-beginners
2018-09-28 09:20:18	-->	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has joined #rust-beginners
2018-09-28 09:20:56	-->	huin1 (huin@moz-chh2cr.zen.co.uk) has joined #rust-beginners
2018-09-28 09:22:34	Lumpio-	ibrokemypie: Use extend not extend_from_slice
2018-09-28 09:22:36	<--	huin (huin@moz-chh2cr.zen.co.uk) has quit (Ping timeout: 121 seconds)
2018-09-28 09:22:50	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-28 09:24:50	-->	lihram (lihrammatr@moz-522p1u.matrix.org) has joined #rust-beginners
2018-09-28 09:25:58	<--	huin1 (huin@moz-chh2cr.zen.co.uk) has quit (Ping timeout: 121 seconds)
2018-09-28 09:26:04	-->	sockmister (Mibbit@moz-9p0cq3.natout.aau.dk) has joined #rust-beginners
2018-09-28 09:26:54	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 09:27:21	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-09-28 09:27:52	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 09:30:37	<--	sockmister (Mibbit@moz-9p0cq3.natout.aau.dk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 09:31:04	ibrokemypie	what does it mean "Can't move out of borrowed context" when I do that?
2018-09-28 09:31:47	-->	alatiera_ (alatiera@moz-84isjo.access.hol.gr) has joined #rust-beginners
2018-09-28 09:32:15	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 09:32:44	ibrokemypie	using sources.extend(patches.iter().map(|patch| patch.path));
2018-09-28 09:33:08	ibrokemypie	sources is a vec of pathbufs, patches is  vec of structs which have a path field, which is a pathbuf
2018-09-28 09:33:23	<--	Guest4 (textual@moz-f33.ffr.141.14.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 09:33:57	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 09:34:03	<--	kemmisc (kemmis@moz-g6hulm.ca.charter.com) has quit (Quit: This computer has gone to sleep)
2018-09-28 09:34:14	-->	kemmisc (kemmis@moz-g6hulm.ca.charter.com) has joined #rust-beginners
2018-09-28 09:34:34	<--	alatiera (alatiera@moz-uqu79o.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-28 09:34:36	-->	Simon (Simon@moz-5e40si.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-28 09:36:55	ibrokemypie	ah, required to_owned I guess
2018-09-28 09:37:15	ibrokemypie	moved it into a for loop as I assume it does the same thing, but is more readable to me
2018-09-28 09:37:31	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 09:37:34	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-28 09:37:37	drager	ibrokemypie: You can also do .into_iter() instead of .iter()
2018-09-28 09:37:52	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 09:38:00	ibrokemypie	whats the difference drager ?
2018-09-28 09:38:07	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 09:38:18	drager	ibrokemypie: https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter
2018-09-28 09:38:28	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 09:39:08	-->	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-09-28 09:39:14	ibrokemypie	it still requires to_owned
2018-09-28 09:39:29	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Connection closed)
2018-09-28 09:40:04	ibrokemypie	what is the difference between these two methods of adding to the vector?
2018-09-28 09:40:06	ibrokemypie	https://bpaste.net/show/eed1b417b381
2018-09-28 09:40:15	-->	Dima (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-09-28 09:42:06	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-28 09:42:44	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-09-28 09:46:48	<--	mib_dql9c1 (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 09:48:02	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-28 09:48:06	<--	oms (oms@moz-m3pt1t.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-28 09:49:34	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Quit: Leaving)
2018-09-28 09:49:59	<--	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has quit (Connection closed)
2018-09-28 09:50:35	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-28 09:57:03	-->	mib_bypf55 (Mibbit@moz-rn0.o7l.136.123.IP) has joined #rust-beginners
2018-09-28 09:59:36	-->	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-28 10:02:17	-->	himi (sjjf@moz-ussp41.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-28 10:02:35	-->	emerentius (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 10:03:07	-->	holmgr (holmgr@moz-p1qh3c.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-28 10:06:35	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 10:07:50	<--	holmgr (holmgr@moz-p1qh3c.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-28 10:09:48	-->	holmgr (holmgr@moz-p1qh3c.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-28 10:10:09	<--	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 10:12:07	-->	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has joined #rust-beginners
2018-09-28 10:12:16	-->	Opus (Opus@moz-8htbp5.eqjm.cipk.0645.2601.IP) has joined #rust-beginners
2018-09-28 10:16:32	-->	patrl (patrl@moz-m17vkr.zas-berlin.de) has joined #rust-beginners
2018-09-28 10:16:44	<--	kemmisc (kemmis@moz-g6hulm.ca.charter.com) has quit (Quit: This computer has gone to sleep)
2018-09-28 10:18:39	<--	Opus (Opus@moz-8htbp5.eqjm.cipk.0645.2601.IP) has quit (Connection closed)
2018-09-28 10:18:46	-->	arunkumar413 (arunkumar41@moz-pc4.r32.48.157.IP) has joined #rust-beginners
2018-09-28 10:19:08	-->	Opus (Opus@moz-8htbp5.eqjm.cipk.0645.2601.IP) has joined #rust-beginners
2018-09-28 10:19:47	Simon	Good morning
2018-09-28 10:20:05	Simon	Using serde, are there any rules regarding backwards compatible changes?
2018-09-28 10:20:52	<--	mib_bypf55 (Mibbit@moz-rn0.o7l.136.123.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 10:22:27	<--	holmgr (holmgr@moz-p1qh3c.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-28 10:23:10	<--	Opus (Opus@moz-8htbp5.eqjm.cipk.0645.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 10:23:33	<--	arunkumar413 (arunkumar41@moz-pc4.r32.48.157.IP) has quit (Quit: Leaving)
2018-09-28 10:24:00	ibrokemypie	is it possible ot create a *const *const i8 in rust
2018-09-28 10:24:03	ibrokemypie	if so, how?
2018-09-28 10:24:42	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 10:25:43	-->	vmx (vmx@moz-9ncght.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 10:26:56	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-28 10:28:06	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 10:29:23	def	let ppfoo = &(&123i8 as *const _) as *const *const i8; // this works, but there's probably a better way
2018-09-28 10:32:19	lihram	How would you recommend sorting a hashmap by value? There don't seem to be any built-in methods for tihs
2018-09-28 10:32:20	ibrokemypie	oh wow thats confusing
2018-09-28 10:32:20	ibrokemypie	apparently just ptr::null() worked
2018-09-28 10:32:37	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 10:34:15	sebk	ibrokemypie: well. what do you want it to point at?
2018-09-28 10:34:26	ibrokemypie	null
2018-09-28 10:34:30	sebk	oh.
2018-09-28 10:34:50	ibrokemypie	lmao
2018-09-28 10:35:28	sebk	Simon: no idea, but you might want to ask in #serde
2018-09-28 10:35:50	sebk	(if that channel does not exist, then it is on gitter…)
2018-09-28 10:36:45	-->	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has joined #rust-beginners
2018-09-28 10:36:58	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 10:37:26	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-28 10:37:31	-->	talldarkwritesbadcode (Mibbit@moz-sm6.dlg.59.143.IP) has joined #rust-beginners
2018-09-28 10:38:27	talldarkwritesbadcode	Are slices some type of magic built-in thing? Or can I get new container types to support the syntax/semantics?
2018-09-28 10:38:46	<--	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has quit (Quit: WeeChat 2.2)
2018-09-28 10:38:56	-->	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has joined #rust-beginners
2018-09-28 10:39:04	sebk	both
2018-09-28 10:39:13	sebk	slices are a primitive type
2018-09-28 10:39:15	-->	monti (monti@moz-kjh.bqv.59.176.IP) has joined #rust-beginners
2018-09-28 10:39:25	<--	monti (monti@moz-kjh.bqv.59.176.IP) has left #rust-beginners
2018-09-28 10:39:35	sebk	but you can implement the Index trait to use x[foo]
2018-09-28 10:39:48	sebk	and x[foo .. bar]
2018-09-28 10:40:11	talldarkwritesbadcode	Ok, makes sense
2018-09-28 10:40:36	sebk	(and IndexMut)
2018-09-28 10:41:34	heftig	lihram: hashmaps/hashsets store their keys and values right in the table so they always have hash order
2018-09-28 10:44:09	<--	lundibundi (lundibundi@moz-cio.tmr.249.134.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 10:45:28	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-28 10:48:18	<--	albinou (albinou@moz-8k3p1j.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-28 10:49:30	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-28 10:51:51	sebk	lihram: try a BTreeMap
2018-09-28 10:51:56	sebk	it is sorted by value
2018-09-28 10:52:11	cukier	Hi! Is there any convention about which types in rust start with a capital letter and which don't? 
2018-09-28 10:52:30	heftig	alternatively you could split the values from the map (a HashMap<K, usize> and a Vec<V>)
2018-09-28 10:52:44	sebk	captital: struct types, traits 
2018-09-28 10:52:47	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 10:52:57	sebk	lower case: variables, function names
2018-09-28 10:53:08	sebk	(should be in the book)
2018-09-28 10:53:18	heftig	built-in types are lowercase, all other should be uppercase
2018-09-28 10:55:21	cukier	So if you have a program with no_std then every type you don't define yourself is lowercase? And the rest is uppercase? Makes sense. Thank you. :)
2018-09-28 10:57:06	<--	patrl (patrl@moz-m17vkr.zas-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-28 10:58:39	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 10:58:46	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 10:59:48	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-28 10:59:48	<--	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection reset by peer)
2018-09-28 11:00:23	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 11:01:16	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 11:01:23	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 11:01:37	ibrokemypie	hey would anyone mind testing to see if my app builds for them? i have a slight worry that it may not because of how I set up the library crate
2018-09-28 11:01:39	ibrokemypie	https://github.com/ibrokemypie/makeppkg
2018-09-28 11:01:42	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-28 11:02:05	<--	captainepoch (quassel@moz-rmqh5n.ddns.jazztel.es) has quit (Connection closed)
2018-09-28 11:02:08	-->	captainepoch (quassel@moz-rmqh5n.ddns.jazztel.es) has joined #rust-beginners
2018-09-28 11:02:13	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 11:02:20	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 11:03:03	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 11:03:03	<--	captainepoch (quassel@moz-rmqh5n.ddns.jazztel.es) has quit (Connection closed)
2018-09-28 11:03:07	-->	captainepoch (quassel@moz-rmqh5n.ddns.jazztel.es) has joined #rust-beginners
2018-09-28 11:04:03	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-28 11:04:31	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-28 11:04:45	-->	tonyseek (tonyseek@moz-inn.3hu.59.139.IP) has joined #rust-beginners
2018-09-28 11:05:28	drager	ibrokemypie: Tips: Setup travis or other CI to build and test your code
2018-09-28 11:05:46	lihram	sebk: Perfect, that's exactly what I was looking for, thanks
2018-09-28 11:05:49	-->	fsasm (fsasm@moz-5fd.qra.178.62.IP) has joined #rust-beginners
2018-09-28 11:06:12	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 11:06:12	ibrokemypie	thats the plan when it's working, just trying to write the functionality first though as I have spent a lot of time screwing around with ci before
2018-09-28 11:07:08	drager	Ah yes
2018-09-28 11:07:32	ibrokemypie	is there a way to desiralise a strong formatted as ('value1' 'value2' 'value3') into something I can append strings to, then re-serialise it in that format?
2018-09-28 11:07:59	<--	gx (gx@moz-55u.sqi.37.106.IP) has quit (Quit: )
2018-09-28 11:08:54	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 11:09:03	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 11:09:27	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 11:09:34	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 11:09:40	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Connection closed)
2018-09-28 11:09:47	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 11:10:17	Rembane	ibrokemypie: You could use a regex to match each 'value_i' into an array, append element and then serialize it again.
2018-09-28 11:10:25	Rembane	ibrokemypie: Does that make sense?
2018-09-28 11:10:50	ibrokemypie	it makes sense, but I have no idea how to do that :P
2018-09-28 11:11:18	Rembane	I see. :)
2018-09-28 11:11:23	Rembane	Are you familiar with regexes?
2018-09-28 11:11:28	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 11:11:36	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 11:11:39	<--	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has quit (Connection closed)
2018-09-28 11:11:44	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-28 11:12:26	ibrokemypie	Sort of, I know what they are and could put a somple one together with some trial and error
2018-09-28 11:12:35	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-28 11:12:49	Rembane	Cool. When I'm done with this game of Go I'm playing I can help you out. :)
2018-09-28 11:13:24	ibrokemypie	alright, hopefully I will still have service but thanks!
2018-09-28 11:15:46	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-28 11:15:53	dpc1	uhmm ibrokemypie o you have a tuple of values?
2018-09-28 11:16:18	-->	ferminter (Mibbit@moz-ii4.ofg.135.194.IP) has joined #rust-beginners
2018-09-28 11:16:37	<--	ferminter (Mibbit@moz-ii4.ofg.135.194.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 11:16:59	-->	dethos (dethos@moz-joj.gtm.138.213.IP) has joined #rust-beginners
2018-09-28 11:17:10	ibrokemypie	dpc1: uh, rust tuple? no
2018-09-28 11:17:10	ibrokemypie	parsing some text which will contain that
2018-09-28 11:17:24	dpc1	ah okay
2018-09-28 11:17:40	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-28 11:19:24	-->	kyrylo_ (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-28 11:19:28	-->	holmgr (holmgr@moz-al8r3c.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-28 11:19:55	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Connection closed)
2018-09-28 11:21:43	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 11:22:13	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 11:23:32	<--	ksqsf_ (ksqsf@moz-dv99lg.h0dd.vs72.0da8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 11:25:47	drager	I suppose you could use serde and implement a serializer yourself
2018-09-28 11:26:44	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 11:26:57	-->	linde12 (Mibbit@moz-0m2e7c.sme.telenor.se) has joined #rust-beginners
2018-09-28 11:27:57	-->	kermi (Mibbit@moz-0bojte.ip.btc-net.bg) has joined #rust-beginners
2018-09-28 11:29:58	<--	glguy (glguy@moz-4tck6m.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 11:30:02	<--	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has quit (Quit: WeeChat 2.2)
2018-09-28 11:31:35	-->	huin1 (huin@moz-chh2cr.zen.co.uk) has joined #rust-beginners
2018-09-28 11:31:41	linde12	hellooo rust! anyone mind giving me a hand with a problem im experiencing? i believe it fits into the category 'fighting the compiler'
2018-09-28 11:32:02	linde12	hellooo rust! anyone mind giving me a hand with a problem im experiencing? i believe it fits into the category 'fighting the compiler'  basically i'm trying to create a small 2d simulation game and i thought that i should have a gamestate struct which in turn contains, amongst other things, a list of entities (Vec<Entity>)
2018-09-28 11:32:13	<--	hrld (hrld@moz-4f847a.abo.wanadoo.fr) has quit (Quit: WeeChat 1.6)
2018-09-28 11:32:21	dpc1	!paste
2018-09-28 11:32:22	+rustbot	Paste code at https://play.rust-lang.org/ and click "Share" or paste large text at https://paste.rs/
2018-09-28 11:32:33	linde12	the problem is that when i try to do some naive 2d collision detection i want to iterate over the entities, call their update method and to that method i want to pass the gamestate or so they can check if they collide with another entity. rust doesn't seem to permit this because i'd have 2 mutable or 1 mutable and 1 immutable reference to the entities. Can is
2018-09-28 11:32:47	linde12	^ i will paste some code to clarify, one moment
2018-09-28 11:32:54	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-28 11:34:14	-->	glguy (glguy@moz-4tck6m.or.comcast.net) has joined #rust-beginners
2018-09-28 11:35:46	linde12	here's some code https://paste.rs/aoQ
2018-09-28 11:36:03	-->	mib_orpc0d (Mibbit@moz-50o.esb.77.212.IP) has joined #rust-beginners
2018-09-28 11:37:40	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-09-28 11:37:58	<--	mib_orpc0d (Mibbit@moz-50o.esb.77.212.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 11:38:15	linde12	the reasons for not wanting to use Rc or RefCell are primarily because i want to ensure that the compiler catches the errors it can, but also i guess because of performance reasons
2018-09-28 11:38:58	dpc1	well if you need it you need it
2018-09-28 11:39:27	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 11:39:32	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-28 11:40:04	linde12	yeah i guess, but i want to know if there a reasonable way to avoid it in this case, maybe i'm thinking of it in a wrong way?
2018-09-28 11:40:35	sebk	linde12: a good solution is to compute a new gamestate out of the old one
2018-09-28 11:40:42	<--	glguy (glguy@moz-4tck6m.or.comcast.net) has quit (Quit: Quit)
2018-09-28 11:40:45	sebk	not modifying it in place
2018-09-28 11:40:49	-->	glguy (glguy@moz-iflv8b.o0eg.mkgl.01c0.2601.IP) has joined #rust-beginners
2018-09-28 11:41:26	linde12	i thought of this as well sebk, and it feels nice to be immutable, but wouldn't that be a major performance drawback?
2018-09-28 11:41:30	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-28 11:41:33	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-28 11:41:34	-->	schnozzle (Mibbit@moz-lle.hhj.187.212.IP) has joined #rust-beginners
2018-09-28 11:41:53	schnozzle	Whats RLS?
2018-09-28 11:42:01	drager	schnozzle: Rust language server
2018-09-28 11:42:25	drager	schnozzle: https://github.com/rust-lang-nursery/rls
2018-09-28 11:42:37	linde12	schnozzle: you can get autocompletion and stuff for you editor with rls and an editor plugin
2018-09-28 11:43:18	sebk	linde12: no. it might be faster
2018-09-28 11:43:24	sebk	it will certainly be more robust
2018-09-28 11:43:51	drager	linde12: I doubt it and is it a problem now you have to deal with? Immutable also tends to be easier to deal with (I prefer immutable)
2018-09-28 11:44:14	sebk	(when mutating in place, the order of the entities changes the calculations)
2018-09-28 11:44:16	schnozzle	thanks drager , but why in other language there is nothing like this?
2018-09-28 11:44:29	drager	schnozzle: There is
2018-09-28 11:45:32	linde12	sebk: i'm not sure i'm following, woudlnt it require major reallocations? if staying immutable is more performant i would definitely want to do so, but i can't see how it would be?
2018-09-28 11:45:35	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-28 11:46:29	dpc1	ya i'd prefer immutable too. what are your performance concerns?
2018-09-28 11:46:30	linde12	drager: i also prefer immutability, but in the case of a game engine i want it to be really performant (even if it's just a toy)
2018-09-28 11:47:15	linde12	dpc1: it's just a toy project and i just want to do things as performant as possible, but my major concern with the immutable solution would be memory reallocation
2018-09-28 11:48:00	linde12	there is no external requirement that says it has to be performant, i just want to make it so :-)
2018-09-28 11:48:03	dpc1	you can give immutability a rip and see whether it is noticable ro not
2018-09-28 11:48:07	dpc1	ya i understand :)
2018-09-28 11:48:10	lihram	linde12: Being able to edit in place instead of reallocating a giant data structure, you mean?
2018-09-28 11:48:44	linde12	dpc1: i will try but my knowledge around benchmarking is very limitied, especially in rust hehe
2018-09-28 11:48:50	linde12	lihram: exactly
2018-09-28 11:49:07	drager	linde12: Sure, I get that. I just think as dpc1 does here, give it a go and try and then maybe think about it more later on :)
2018-09-28 11:49:15	linde12	like, for each entity i would like to check if it collides with another entity, and in that case mutate it somehow
2018-09-28 11:49:23	dpc1	linde12: benchmarking is simpler in rust tbh
2018-09-28 11:49:50	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 11:51:02	linde12	drager, dpc1: yeah i will give it a shot, but i mean there has to be some performance cost right? even if one way isn't noticeably slower than the other i would still like to do it in the "fastest" way
2018-09-28 11:51:08	linde12	thanks by the way <3
2018-09-28 11:51:39	dpc1	i don't think there's much of a time cost. memory wise could be possible 
2018-09-28 11:52:00	Moongoodboy{K}	cukier: no; types from the core crate are still CamelCase
2018-09-28 11:52:08	Moongoodboy{K}	The only types that are snake_case are primitives
2018-09-28 11:52:42	dpc1	camelCase, PascalCase xD
2018-09-28 11:53:01	emerentius	none of the primitives are even long enough to get an underscore
2018-09-28 11:53:15	Moongoodboy{K}	s/CamelCase/UpperCamelCase/
2018-09-28 11:53:20	dpc1	lol
2018-09-28 11:53:26	linde12	dpc1: alright thanks, i will write some benchs and report back how it goes
2018-09-28 11:53:32	dpc1	sure :)
2018-09-28 11:53:48	emerentius	so, maybe all the primitives are lower camel case?
2018-09-28 11:53:52	Moongoodboy{K}	emerentius: does that make it something other than snake_case?
2018-09-28 11:54:18	drager	linde12: I think as dpc1 wrote. Yeah, do some benches
2018-09-28 11:54:41	<--	gamakichi (Mibbit@moz-s7i.i98.51.106.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 11:55:51	cukier	Moongoodboy{K}: Thanks :)
2018-09-28 11:57:17	<--	talldarkwritesbadcode (Mibbit@moz-sm6.dlg.59.143.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 11:57:23	Moongoodboy{K}	mmhmm
2018-09-28 11:57:30	-->	makos (makos@moz-k6ak9j.adsl.tpnet.pl) has joined #rust-beginners
2018-09-28 11:57:35	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-28 11:59:04	<--	yk (yk@moz-mrt.tj5.67.95.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 11:59:20	linde12	drager: okay, i just realised that i can't really bench my version (because rust doesn't let it compile) but i can at least compare immutable vs Rc/RefCell
2018-09-28 11:59:34	<--	makos (makos@moz-k6ak9j.adsl.tpnet.pl) has quit (Connection closed)
2018-09-28 12:00:31	linde12	maybe i can get it to work with some unsafe blocks, just to measure
2018-09-28 12:00:33	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Quit: )
2018-09-28 12:01:26	<--	tonyseek (tonyseek@moz-inn.3hu.59.139.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-28 12:01:50	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 12:01:52	sebk	linde12: you allocate two copies of the game state
2018-09-28 12:01:56	sebk	and then switch references
2018-09-28 12:02:15	-->	pamaury (pamaury@moz-e1gk65.mpi-sws.org) has joined #rust-beginners
2018-09-28 12:02:45	linde12	sebk: ah in order to bench it you mean?
2018-09-28 12:02:53	sebk	in the game
2018-09-28 12:03:08	sebk	let mut state = [GameState; 2]
2018-09-28 12:03:31	Rembane	ibrokemypie: This is a rough draft, does it do what you want? https://play.rust-lang.org/?gist=1c2f10d8dc2d9cb781ef70aba2c2d6f5&version=stable&mode=debug&edition=2015
2018-09-28 12:03:33	linde12	but wouldn't i have to update both of them each time an entity is added/removed then?
2018-09-28 12:03:33	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 12:04:08	sebk	you can also keep two Vec<Entity> around
2018-09-28 12:04:19	sebk	and clear one each cycle (and then reuse it for the new state)
2018-09-28 12:04:19	-->	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has joined #rust-beginners
2018-09-28 12:05:04	linde12	sebk: ah, yeah im doing something similar to that for my immutable bench right now i think
2018-09-28 12:05:14	linde12	update will create a new vec of entities and return a new state
2018-09-28 12:05:19	linde12	instead of mutate
2018-09-28 12:05:36	sebk	instead of creating a new vec, you can clear the old one
2018-09-28 12:06:18	linde12	ah i get what you mean, is clearing it quicker then?
2018-09-28 12:06:47	<--	aaja (Mibbit@moz-fn7.t0q.100.101.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 12:07:33	sebk	clearing drops the remaining elements and sets the size to zero
2018-09-28 12:08:06	<--	andyhoang (andyhoang@moz-o3r.pl7.118.116.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 12:08:21	<--	xialvjun (xialvjun@moz-48m.do2.57.119.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 12:08:24	linde12	ah, great, ill try that thanks
2018-09-28 12:08:36	sebk	it saves the deallocation + allocation
2018-09-28 12:08:41	linde12	yeah
2018-09-28 12:11:45	-->	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has joined #rust-beginners
2018-09-28 12:15:23	ichihaifu	could someone translate this to a PowerShell equivalent (is it even possible?) https://play.rust-lang.org/?gist=e3719e5874c8834687e07b238f7ce792 this input loop has me entirely lost
2018-09-28 12:16:20	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 12:17:14	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-28 12:17:30	<--	schnozzle (Mibbit@moz-lle.hhj.187.212.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 12:20:20	-->	Haggus (siege@moz-pq0.svs.193.91.IP) has joined #rust-beginners
2018-09-28 12:20:51	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 12:24:17	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-28 12:24:19	<--	holmgr (holmgr@moz-al8r3c.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-28 12:24:23	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-28 12:24:53	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-28 12:25:19	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-28 12:25:45	-->	yk (yk@moz-mrt.tj5.67.95.IP) has joined #rust-beginners
2018-09-28 12:25:57	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-28 12:26:37	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 12:27:46	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 12:28:46	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-28 12:29:41	-->	ysz (ysz@moz-4od.ds2.161.95.IP) has joined #rust-beginners
2018-09-28 12:29:42	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-28 12:30:01	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 12:30:34	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-28 12:33:44	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-28 12:33:48	-->	martin1 (martin@moz-c7v.9s6.64.190.IP) has joined #rust-beginners
2018-09-28 12:36:22	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 12:38:34	-->	holmgr (holmgr@moz-40vfp7.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-28 12:39:23	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 12:42:37	<--	holmgr (holmgr@moz-40vfp7.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 12:42:48	linde12	ok i got something very primitive working now for the immutable version at least, but i'm not sure how i would go about to bench the mutable version, maybe you can send me in the right direction?
2018-09-28 12:43:01	linde12	https://paste.rs/Osb
2018-09-28 12:43:19	-->	huddler (Mibbit@moz-cpd82o.cust.vodafonedsl.it) has joined #rust-beginners
2018-09-28 12:43:32	-->	oms (oms@moz-m3pt1t.dyn.telefonica.de) has joined #rust-beginners
2018-09-28 12:43:43	huddler	hi, all
2018-09-28 12:43:45	linde12	the numbers don't really tell me much without something to compare it with, hehe
2018-09-28 12:43:51	linde12	hey huddler
2018-09-28 12:45:26	huddler	i'm and experienced c++ developer, areas of work ranging from O.S. programming (windows/linux) to Desktop app.
2018-09-28 12:46:11	-->	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has joined #rust-beginners
2018-09-28 12:46:39	-->	calatalee (Mibbit@moz-idr.tar.53.201.IP) has joined #rust-beginners
2018-09-28 12:46:44	huddler	how much can take to learn to a good level rust ? Say for example i need a total of 100 units of time to learn at a good level c++ what about rust?
2018-09-28 12:47:35	calatalee	In Haskell, `Map.insert` returns a new map, and the old one doesn't become unavailable. That allows us to have slightly changed versions of the same map in different places without making full copies. Is there anything similar to this in Rust?
2018-09-28 12:48:55	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-28 12:49:35	Lumpio-	huddler: Depends on what you consider "rust" IMO
2018-09-28 12:49:49	Lumpio-	The language and standard library are simpler and faster to learn than C++
2018-09-28 12:50:13	Lumpio-	But is that "rust"? I think in modern languages you have to learn about a bunch of popular libraries too before you can say you're "fluent".
2018-09-28 12:51:49	<--	huddler (Mibbit@moz-cpd82o.cust.vodafonedsl.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 12:53:26	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-28 12:53:57	-->	andyhoang (andyhoang@moz-drpmj6.gtml.gbn6.0ee0.2001.IP) has joined #rust-beginners
2018-09-28 12:56:59	sebk	linde12: with the mutable version, you have to use indices
2018-09-28 12:57:17	sebk	eg, fn compare(&mut item, &other)
2018-09-28 12:57:29	sebk	and call that for all i != j
2018-09-28 12:57:37	Lumpio-	calatalee: Doing that in a systems programming languages feels a bit wrong...
2018-09-28 12:57:51	Lumpio-	It would cause potentially many allocations every single time
2018-09-28 12:58:10	linde12	sebk: ah i see
2018-09-28 12:58:22	linde12	that might be the most performant way i guess
2018-09-28 12:58:31	-->	hrld (hrld@moz-4f847a.abo.wanadoo.fr) has joined #rust-beginners
2018-09-28 12:58:37	linde12	i think this is what's holding me back, the old oop thinking
2018-09-28 12:59:21	linde12	but yeah, if i just keep indices to stuff i should be able to get around the multiple references to the actual entity
2018-09-28 12:59:32	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Connection closed)
2018-09-28 13:00:05	<--	lnoid (lnoid@moz-n5n5kv.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-28 13:00:13	linde12	i feel like the kid who wants to keep the cake and eat it at the same time haha... i wan't rusts safeties and abstractions but i also want to keep my "oop mindset" :p
2018-09-28 13:00:19	calatalee	Lumpio-: but it is for a recursive algorithm which passes a map down
2018-09-28 13:00:44	linde12	thanks sebk, i will try to play around with the indices!
2018-09-28 13:00:53	Lumpio-	I mean you can still do it in two lines by first doing a .clone and then inserting something new but
2018-09-28 13:01:05	sebk	anyway, I would not even try a mutating one…
2018-09-28 13:01:21	Lumpio-	And there's always this: https://docs.rs/im/12.1.0/im/
2018-09-28 13:01:25	sebk	way more complicated and succeptible to order
2018-09-28 13:01:50	sebk	calatalee: possible…
2018-09-28 13:01:58	sebk	but it will be slower
2018-09-28 13:02:35	sebk	(look at crates.io for immutable/persistent maps)
2018-09-28 13:03:11	calatalee	Lumpio-: but then you'll use quadratic memory. Think of: `foo(m.put(x)) + foo(m.put(y))` vs `let m_a = m.clone(); m.put(x); m.put(y); foo(m_a) + foo(m_b)`. The first version requires only log(map_size) allocation for each recursive call, the second one requires map_size allocations for each recursive capp
2018-09-28 13:03:14	sebk	a normal HashMap requires only one memory lookup
2018-09-28 13:03:50	Lumpio-	Yes but they were talking about allocations
2018-09-28 13:03:54	Lumpio-	calatalee: Check out the crate I pasted
2018-09-28 13:03:56	sebk	with linked structures (you want BTree here) it is O(log n)
2018-09-28 13:04:20	calatalee	Lumpio-: yep I'm installing it already, looks like what I need
2018-09-28 13:04:50	calatalee	sebk: yea, but in turn you're able to have N slightly different views of the same map without N full copies, which is what I need!
2018-09-28 13:05:44	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-28 13:05:54	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-28 13:06:15	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-28 13:06:55	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 13:08:14	sebk	calatalee: another option is to use two maps
2018-09-28 13:08:25	sebk	one immutable shared, and one owned
2018-09-28 13:08:34	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-09-28 13:08:39	calatalee	Lumpio-: worked, ty
2018-09-28 13:08:43	sebk	for lookups you first look in the owned one, if the key is not present, in the shared
2018-09-28 13:09:10	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 13:09:18	calatalee	sebk: but it is a recursive call, there will be 2^N different maps for recursion depth N
2018-09-28 13:09:29	sebk	welp
2018-09-28 13:09:30	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-28 13:09:54	sebk	to they all have to exist at the same time?
2018-09-28 13:10:12	sebk	and how many modifications do you expect at one level?
2018-09-28 13:10:27	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 13:12:31	-->	ysz_ (ysz@moz-2q0.oma.155.185.IP) has joined #rust-beginners
2018-09-28 13:12:51	-->	Guest4 (textual@moz-ln4.jd7.74.182.IP) has joined #rust-beginners
2018-09-28 13:14:06	<--	ysz (ysz@moz-4od.ds2.161.95.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 13:14:58	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 13:15:34	calatalee	Yes, it is an evaluator for a language with recursive lets. For example (let a = 1 in [(let a = 10 in a), a + a]); this program should evaluate to [10, 2], but if I used a mutable hashmap, one let would overwrite the value of another, resulting in [10,20].
2018-09-28 13:15:47	calatalee	im is all I need though, thanks <3 
2018-09-28 13:17:34	--	U007D_afk is now known as U007D
2018-09-28 13:17:55	<--	holmgr (holmgr@moz-d8ar0g.eduroam.liu.se) has quit (Connection closed)
2018-09-28 13:18:53	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-28 13:20:24	-->	Dariost (Dariost@moz-rus.9b4.48.151.IP) has joined #rust-beginners
2018-09-28 13:24:18	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 13:27:26	<--	linde12 (Mibbit@moz-0m2e7c.sme.telenor.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 13:28:05	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-28 13:28:30	-->	holmgr (holmgr@moz-40vfp7.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-09-28 13:33:00	<--	ysz_ (ysz@moz-2q0.oma.155.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 13:35:35	-->	ysz (ysz@moz-4od.ds2.161.95.IP) has joined #rust-beginners
2018-09-28 13:37:32	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-28 13:39:05	-->	ysz_ (ysz@moz-2q0.oma.155.185.IP) has joined #rust-beginners
2018-09-28 13:39:46	-->	lnoid (lnoid@moz-n5n5kv.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-28 13:40:53	-->	sp1ff_ (sp1ff@moz-7r7pqs.3i8v.at4v.0119.2620.IP) has joined #rust-beginners
2018-09-28 13:40:57	<--	ysz (ysz@moz-4od.ds2.161.95.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 13:43:17	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-28 13:43:58	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-28 13:47:42	<--	calatalee (Mibbit@moz-idr.tar.53.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 13:47:45	<--	Dima (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 13:49:29	<--	Gertm (gert@moz-ga73mo.isp.belgacom.be) has quit (Quit: leaving)
2018-09-28 13:50:03	<--	kyrylo_ (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 13:50:39	-->	SenasOzys (SenasOzys@moz-njp.ke9.47.194.IP) has joined #rust-beginners
2018-09-28 13:53:27	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-28 13:54:37	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-28 13:55:13	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 13:56:40	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 13:57:05	-->	iammichiel (Mibbit@moz-ecvg2v.abo.wanadoo.fr) has joined #rust-beginners
2018-09-28 13:57:54	<--	holmgr (holmgr@moz-40vfp7.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-09-28 13:58:18	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-28 13:58:25	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-28 13:58:39	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-28 13:59:18	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 13:59:19	-->	dalley (dalley@moz-sj3bja.dyn6.twc.com) has joined #rust-beginners
2018-09-28 13:59:24	<--	Simon (Simon@moz-5e40si.dynamic.mnet-online.de) has quit (Connection closed)
2018-09-28 13:59:35	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 13:59:45	-->	Simon (Simon@moz-5e40si.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-28 14:00:10	-->	mib_f33r70 (Mibbit@moz-1fgop4.scc.kit.edu) has joined #rust-beginners
2018-09-28 14:00:19	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-28 14:00:19	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection reset by peer)
2018-09-28 14:00:30	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 14:00:52	<--	mib_f33r70 (Mibbit@moz-1fgop4.scc.kit.edu) has left #rust-beginners
2018-09-28 14:02:51	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-28 14:02:52	<--	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-28 14:03:25	-->	arunkumar413 (arunkumar41@moz-pc4.r32.48.157.IP) has joined #rust-beginners
2018-09-28 14:03:52	<--	Simon (Simon@moz-5e40si.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-28 14:04:34	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 14:05:49	-->	Dima (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-09-28 14:09:05	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 14:10:08	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-28 14:11:00	-->	patrl (patrl@moz-m17vkr.zas-berlin.de) has joined #rust-beginners
2018-09-28 14:11:02	<--	Dima (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 14:11:12	-->	jperras (jperras@moz-500ss0.dsl.bell.ca) has joined #rust-beginners
2018-09-28 14:11:35	<--	jperras (jperras@moz-500ss0.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-28 14:12:02	-->	Simon (Simon@moz-5e40si.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-28 14:12:40	-->	subhojit777 (subhojit777@moz-0ja.0ir.163.122.IP) has joined #rust-beginners
2018-09-28 14:12:49	<--	subhojit777 (subhojit777@moz-0ja.0ir.163.122.IP) has quit (Quit: Leaving)
2018-09-28 14:13:05	-->	nifker (Mozilla@moz-08eivv.dyn.telefonica.de) has joined #rust-beginners
2018-09-28 14:13:30	-->	alx741 (alx741@moz-a07.9bn.15.190.IP) has joined #rust-beginners
2018-09-28 14:15:25	<--	iammichiel (Mibbit@moz-ecvg2v.abo.wanadoo.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 14:16:30	wildermind	What is the correct crate to use for futures 
2018-09-28 14:16:44	wildermind	? I see a lot of ref's to tokio_core, tokio and just futures-rs 
2018-09-28 14:17:25	-->	expensivehaircut (Mibbit@moz-sm6.dlg.59.143.IP) has joined #rust-beginners
2018-09-28 14:17:32	sebk	futures
2018-09-28 14:17:36	sebk	!crate futures
2018-09-28 14:17:37	+rustbot	futures (0.1.24) - An implementation of futures and streams featuring zero allocations, composability, and iterator-like interfaces.  -> https://crates.io/crates/futures <https://docs.rs/futures>
2018-09-28 14:18:37	<--	Guest4 (textual@moz-ln4.jd7.74.182.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 14:20:13	<--	Aankhen`` (notasquid@moz-1hp.gpv.69.182.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 14:20:33	expensivehaircut	`let x : VecDeque<_> = vec!(1,2,3).into_iter().collect();` Is that the canonical way to create and initialize a VecDeque?
2018-09-28 14:20:48	expensivehaircut	ie, there isn't a vecdq!(1,2,3)
2018-09-28 14:21:08	kimundi	expensivehaircut: There is no macro for it
2018-09-28 14:21:15	kimundi	but, try vec![].into() instead
2018-09-28 14:21:56	-->	gunther (Mibbit@moz-8es.5ue.184.154.IP) has joined #rust-beginners
2018-09-28 14:22:22	sebk	wasn't there a macro crate for it?
2018-09-28 14:22:27	sebk	!crate arrayinit
2018-09-28 14:22:27	+rustbot	Crate 'arrayinit' does not exist.
2018-09-28 14:22:33	sebk	!crate mapinit
2018-09-28 14:22:33	expensivehaircut	Ok, what happens when I use that function? Does it need to rearrange memory?
2018-09-28 14:22:33	+rustbot	Crate 'mapinit' does not exist.
2018-09-28 14:23:01	<--	gunther (Mibbit@moz-8es.5ue.184.154.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 14:23:18	sebk	hm.
2018-09-28 14:23:20	kimundi	expensivehaircut: .into() should do the most-efficient conversion possible
2018-09-28 14:23:24	sebk	expensivehaircut: you can write a macro for it
2018-09-28 14:24:29	sebk	maybe [1, 2, 3].iter().cloned().collect()
2018-09-28 14:24:34	sebk	that avoids the vec allocation
2018-09-28 14:24:40	-->	brucem (textual@moz-9fd.bob.229.49.IP) has joined #rust-beginners
2018-09-28 14:24:44	expensivehaircut	I'm not seeing it as a method for Vec, what is `into()`?
2018-09-28 14:24:59	kimundi	https://doc.rust-lang.org/std/convert/trait.Into.html
2018-09-28 14:25:18	kimundi	Automatically proved for everything with https://doc.rust-lang.org/std/convert/trait.From.html
2018-09-28 14:25:34	-->	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has joined #rust-beginners
2018-09-28 14:25:36	expensivehaircut	Cool
2018-09-28 14:25:57	<--	Dariost (Dariost@moz-rus.9b4.48.151.IP) has quit (Client exited)
2018-09-28 14:26:07	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-28 14:28:57	-->	Dima (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-09-28 14:30:08	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 14:30:55	<--	Haggus (siege@moz-pq0.svs.193.91.IP) has quit (Quit: WeeChat 1.6)
2018-09-28 14:31:50	<--	ysz_ (ysz@moz-2q0.oma.155.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 14:34:12	-->	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has joined #rust-beginners
2018-09-28 14:36:07	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 14:36:08	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-28 14:41:02	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-09-28 14:41:59	<--	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has quit (Connection closed)
2018-09-28 14:49:48	-->	nullbit (nullbit@moz-dm4.tvc.59.182.IP) has joined #rust-beginners
2018-09-28 14:54:14	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 14:56:24	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-28 14:56:34	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 14:57:35	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-28 14:58:43	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 14:59:58	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 15:02:16	--	U007D is now known as U007D_afk
2018-09-28 15:03:14	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 15:06:46	-->	Urania (textual@moz-83q96u.sph.umich.edu) has joined #rust-beginners
2018-09-28 15:10:16	-->	Det (Mibbit@moz-j6qrck.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-28 15:12:05	Det	Hello all, I am trying to install Rust on Windows 7.  I downloaded rustup-init.exe , which when started asks for the VS Build Tools 2017 to be installed. So I downloaded them and installed them, then restarted rustup-init.exe. But it seems not to recognize the vs buildtools.
2018-09-28 15:12:47	-->	alatiera__ (alatiera@moz-2c2fho.access.hol.gr) has joined #rust-beginners
2018-09-28 15:13:07	wildermind	whats the best way to define a 2d matrix of integers that represent a graph and the connections between each vertex? 
2018-09-28 15:13:17	wildermind	the graph is dynamic in his size and is change every time 
2018-09-28 15:14:17	wildermind	for example     let state = [mut [mut 0u8, ..4], ..4];     is a bad options because A. not all edges exist so 4 columns is a waste and B. because according to the rows there's 4 vertexes but I need it dynamic 
2018-09-28 15:14:41	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-28 15:15:04	<--	alatiera_ (alatiera@moz-84isjo.access.hol.gr) has quit (Ping timeout: 121 seconds)
2018-09-28 15:15:40	wildermind	---> maybe Vec<Vec<u32>> graph ? can I iterate it like this graph[i][j] ?  
2018-09-28 15:16:01	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 15:16:21	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 15:16:59	-->	ianbattersby (ianbattersb@moz-qhk.cj3.146.217.IP) has joined #rust-beginners
2018-09-28 15:19:40	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-28 15:20:12	mdlayher-M	could also do the adjacency list approach with Vec<Vec<u32>> unless you're tied to the matrix
2018-09-28 15:20:26	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-28 15:21:01	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-28 15:22:02	wildermind	mdlayher-M: kk thx will go with that 
2018-09-28 15:22:36	mdlayher-M	i'm new to rust but based on what i've learned so far, seems like the right idea! hope it helps
2018-09-28 15:24:43	wildermind	What should be the correct signature of a function borrowing and mutating a Vec<Vec<u32>> ? 
2018-09-28 15:24:57	wildermind	fn get_nodes(mut graph : &Vec< Vec<u32>>) -> tried this the compiler yells at me 
2018-09-28 15:26:03	wildermind	oh sorry a typoe, this is the correct signature -> fn get_nodes(graph : &mut Vec< Vec<u32>>) 
2018-09-28 15:26:17	mdlayher-M	missing the "mut"?
2018-09-28 15:26:46	wildermind	wrong placement of mute :P 
2018-09-28 15:27:23	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 15:28:09	<--	ianbattersby (ianbattersb@moz-qhk.cj3.146.217.IP) has quit (Quit: WeeChat 2.2)
2018-09-28 15:29:23	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-28 15:30:54	lu_zero	I tried to write an example of barebone iterator vs iterator with size_hint and ExactSizeIterator implemented and I got a pretty strange result
2018-09-28 15:31:22	lu_zero	(the barebone version seems about 20% faster)
2018-09-28 15:31:41	wildermind	Ok noob question: What's the rust idimatic way to generate a dynamic array from size 0...N and fill every value at each index 0...N accordingly. Meaning at arr[4] == 4 
2018-09-28 15:32:03	kimundi	wildermind: simple way would be (0..n).collect()
2018-09-28 15:32:18	kimundi	eval: let v: Vec<u8> = (0..10).collect(); v
2018-09-28 15:32:21	--	Notice(eval): [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
2018-09-28 15:32:27	wildermind	oh nice! 
2018-09-28 15:32:29	wildermind	kimundi: ty
2018-09-28 15:32:42	kimundi	lu_zero: it depends on what and how exactly you test, I guess
2018-09-28 15:33:23	lu_zero	kimundi: the code is pretty simple, so I'm wondering what I'm doing wrong
2018-09-28 15:33:34	wildermind	kimundi: how can I make the same beautiful code but instead of 10 with a variable? usize.. 
2018-09-28 15:33:44	wildermind	something like (0..size)
2018-09-28 15:34:07	lu_zero	wildermind: you can do it
2018-09-28 15:34:38	wildermind	https://www.irccloud.com/pastebin/nq6Dmk9b/
2018-09-28 15:34:44	wildermind	the err im getting ^^ 
2018-09-28 15:34:56	-->	umurgdk__ (umurgdk@moz-vm6b78.asahi-net.or.jp) has joined #rust-beginners
2018-09-28 15:35:02	kimundi	wildermind: the types need to match
2018-09-28 15:35:22	kimundi	change the Vec to Vec<usize>, or the (0..size) to (0..(size as u8))
2018-09-28 15:35:24	wildermind	oh wow 
2018-09-28 15:35:26	wildermind	got it 
2018-09-28 15:35:29	wildermind	so noob of me 
2018-09-28 15:35:31	kimundi	u8 is a byte though, I just used that as an example
2018-09-28 15:35:37	wildermind	sorry but, how did you understand that from the error? 
2018-09-28 15:36:42	kimundi	wildermind: Well, the short answeer is that I'Ve read enough error emssages like that to just immediatly kow whats wrong. But if you look at it, the error message says that it gets a Iterator<Item=usize>
2018-09-28 15:37:08	kimundi	That tells you that 0..size is considered a iterator over usize items, which tells you that "size" is a usize
2018-09-28 15:37:20	kimundi	(because thats how the Iterator impl for x..y works)
2018-09-28 15:37:44	kimundi	Based on how the FromIterator impl for Vec<T> works, you also know that it expects a iterator with Item=T
2018-09-28 15:37:48	wildermind	ok good answer lol, I mean I'd expect something "cannot create vec<u8>  from vec<usize> " lol 
2018-09-28 15:38:00	kimundi	Ah, but there is no other vec
2018-09-28 15:38:14	<--	SenasOzys (SenasOzys@moz-njp.ke9.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 15:38:15	wildermind	oh
2018-09-28 15:38:19	kimundi	0..size is a Iterator, that you can repeatedly call .next() on to get all numbers
2018-09-28 15:38:27	wildermind	that makes sense! 
2018-09-28 15:38:36	kimundi	its basically just two counter variables in a struct
2018-09-28 15:39:08	-->	orph (orph@moz-6gu5jt.smvl.4c7r.100c.2600.IP) has joined #rust-beginners
2018-09-28 15:39:17	kimundi	.collect() is the method to get all elements of a iterator until it is exhausted, and at the same time build a concrete data structure that contains them all
2018-09-28 15:39:17	<--	umurgdk__ (umurgdk@moz-vm6b78.asahi-net.or.jp) has quit (Quit: Konversation terminated!)
2018-09-28 15:39:31	<--	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-28 15:39:46	-->	xialvjun (xialvjun@moz-scf.h4a.119.123.IP) has joined #rust-beginners
2018-09-28 15:39:47	<--	xialvjun (xialvjun@moz-scf.h4a.119.123.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 15:39:50	-->	xialvjun (xialvjun@moz-scf.h4a.119.123.IP) has joined #rust-beginners
2018-09-28 15:40:13	kimundi	because you initialize a variable of type Vec<T> with the result value of collect(), the compiler infers that the FromIterator impl for Vec<T> needs to be called, which internally in the collect creates a empty Vec<T>, and then calls .push() with each element of the iterator
2018-09-28 15:40:25	-->	ysz (ysz@moz-q7k.ds2.161.95.IP) has joined #rust-beginners
2018-09-28 15:40:34	kimundi	https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect
2018-09-28 15:40:40	kimundi	https://doc.rust-lang.org/std/iter/trait.FromIterator.html
2018-09-28 15:41:37	wildermind	I see thats interesting. but im wondering , the iterator does not keep a state of the previous elements right? meaning pull out iterator from [0,1,2] while pointing to the last element it does not know that theres 0 and 1 right? so how does the .collect() knows which elements to populate the Vec with ? 
2018-09-28 15:42:13	wildermind	I guess in other words my question is how in this case `let v: Vec<usize> = (0..size).collect();` the collect function knows with what values to populate the Vec it's returning ? 
2018-09-28 15:42:27	wildermind	according to what you say the Vec is initiated inside .collect() right? 
2018-09-28 15:43:06	wildermind	how does it know to take 0..size as values inside the collect function? :O 
2018-09-28 15:43:37	kimundi	wildermind: the `0..size` expression results in a value of this struct: https://doc.rust-lang.org/src/core/ops/range.rs.html#82-89
2018-09-28 15:43:55	kimundi	Which is a struct with two intgers, one for the start = 0, and one for the end = size
2018-09-28 15:44:08	kimundi	each time .next() is called, that struct gets changed such that strt counts up
2018-09-28 15:44:27	wildermind	ohhh good stuff ok i get it now, looking through the src code 
2018-09-28 15:44:28	kimundi	(0, 10) -> .next() -> (1, 10) -> ...
2018-09-28 15:44:49	kimundi	iterating over a iterator always changes the state of the iterator
2018-09-28 15:45:08	kimundi	for example, a iterator for a vector effectivly consists of a intger for the position in it
2018-09-28 15:45:25	kimundi	(its more complicated like that in practice, but thats the idea)
2018-09-28 15:45:55	wildermind	but the iterator also holds the vector as well? not only the value ? 
2018-09-28 15:46:01	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-28 15:46:09	kimundi	no, the iterator is unrelated to the vector here
2018-09-28 15:46:14	wildermind	I see 
2018-09-28 15:46:30	wildermind	I guess the next thing would be to implement an iterator myself 
2018-09-28 15:46:37	kimundi	.collect() calls the from_iter implementation of Vec<T>
2018-09-28 15:46:50	wildermind	ohhh 
2018-09-28 15:46:51	kimundi	FromIterator is a different trait
2018-09-28 15:47:06	<--	lkurusa_ (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-28 15:47:12	-->	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-28 15:47:23	kimundi	https://doc.rust-lang.org/src/alloc/vec.rs.html#1758-1763
2018-09-28 15:47:40	kimundi	But that delegates itself to some implementation detail that I have yet to find myself again :D
2018-09-28 15:48:04	wildermind	kimundi: bless you sir :D 
2018-09-28 15:48:24	kimundi	but baisically its a function that gets the iterator, and on it inside just creates a empty vector, callss next() on the iterator to exhaustion while appending to the vector, and then returns the vector
2018-09-28 15:48:52	-->	DeltaManiac (DeltaManiac@moz-78h.afh.171.122.IP) has joined #rust-beginners
2018-09-28 15:48:54	kimundi	Ah, its right below
2018-09-28 15:48:54	kimundi	https://doc.rust-lang.org/src/alloc/vec.rs.html#1843
2018-09-28 15:49:06	<--	DeltaManiac (DeltaManiac@moz-78h.afh.171.122.IP) has quit (Connection closed)
2018-09-28 15:49:11	<--	orph (orph@moz-6gu5jt.smvl.4c7r.100c.2600.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 15:49:42	kimundi	Its doing some funky stuff with optimizations though :D
2018-09-28 15:50:05	wildermind	ye its hard to get the code clearly with the templates also lol 
2018-09-28 15:50:17	wildermind	size_hint() :O
2018-09-28 15:51:03	-->	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has joined #rust-beginners
2018-09-28 15:52:50	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 15:53:17	kimundi	wildermind: https://play.rust-lang.org/?gist=6a4437edb44167569a29f606d44cefdd&version=stable&mode=debug&edition=2015
2018-09-28 15:53:33	kimundi	Heres an minimal example :)
2018-09-28 15:53:34	<--	starblue1 (juergen@moz-qh2m7n.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-28 15:54:15	wildermind	nice!! 
2018-09-28 15:54:28	wildermind	IntoIterator works because u8 auto implements it, right? 
2018-09-28 15:54:36	wildermind	line #10 
2018-09-28 15:54:56	kimundi	not u8, and not auto :)
2018-09-28 15:55:14	kimundi	Range<T> for any T explicitly implements Iterator<Item=T>
2018-09-28 15:55:41	kimundi	0..x is not magic syntax, it just creates a Range struct
2018-09-28 15:55:44	wildermind	i understand the second line but not the first one you said :P what do you mean by auto? 
2018-09-28 15:56:00	kimundi	eval: let x: ::std::ops::Range<u8> = 0..10; x
2018-09-28 15:56:02	--	Notice(eval): 0..10
2018-09-28 15:56:28	<--	prataprc (sid295920@moz-djrugj.charlton.irccloud.com) has left #rust-beginners ("")
2018-09-28 15:56:31	kimundi	wildermind: Rust has implementations that happen "automatically", but most are explicitly written manually in the source code somewhere
2018-09-28 15:56:44	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-28 15:56:53	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-28 15:56:54	wildermind	ok so far so good 
2018-09-28 15:57:10	wildermind	using 0..x == not auto ? 
2018-09-28 15:57:21	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 15:57:29	kimundi	No no, that doesn't even have anything todo with impls xD
2018-09-28 15:58:20	kimundi	`0..x` is the same as doing `std::ops::Range { start: 0, end: 10 }`
2018-09-28 15:58:29	kimundi	Its just syntax for constructing this one concrete struct
2018-09-28 15:58:34	wildermind	oh 
2018-09-28 15:59:15	kimundi	https://doc.rust-lang.org/src/core/ops/range.rs.html#82-89
2018-09-28 15:59:35	wildermind	im on it exactlly 
2018-09-28 15:59:50	kimundi	And that struct just implements Iterator: https://doc.rust-lang.org/src/core/iter/range.rs.html#209-265
2018-09-28 16:00:26	<--	sp1ff_ (sp1ff@moz-7r7pqs.3i8v.at4v.0119.2620.IP) has quit (Connection closed)
2018-09-28 16:00:50	<--	paulvt (paul.van.ti@moz-5lfpak.fb56.nn7d.a446.2a02.IP) has quit (Client exited)
2018-09-28 16:01:18	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-28 16:01:36	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-28 16:01:50	wildermind	ok it makes sense now! 
2018-09-28 16:02:06	-->	jperras (jperras@moz-00e1fu.dsl.bell.ca) has joined #rust-beginners
2018-09-28 16:02:40	wildermind	so just to see that I get it, in your playground what aditional things would I have to implement if I had `SomeCrazyDynamicNestedStruct` instead of u9 in `let v: MyVec<u8> = (0..10).collect();` ? 
2018-09-28 16:02:50	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 16:03:04	kimundi	Nothing
2018-09-28 16:03:08	wildermind	I mean what traits `SomeCrazyDynamicNestedStruct` would have to implement? IntoIterator ? 
2018-09-28 16:03:10	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-28 16:03:18	wildermind	oh nothign right
2018-09-28 16:03:24	kimundi	`let v: MyVec<SomeCrazyStruct> = (0..SomeCrazyStruct::new()).collect();`
2018-09-28 16:03:27	wildermind	because the Vec has IntoIterator
2018-09-28 16:03:29	kimundi	err
2018-09-28 16:03:48	wildermind	yup
2018-09-28 16:03:49	kimundi	`let v: MyVec<SomeCrazyStruct> = (SomeCrazyStruct::something_start()..SomeCrazyStruct::something_end()).collect();`
2018-09-28 16:03:49	wildermind	ok 
2018-09-28 16:04:17	kimundi	Actually, I think its not yet possible to create x..y range with arbitrary types
2018-09-28 16:04:24	kimundi	But thats unrelated to all the iterator stuff here
2018-09-28 16:04:55	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-09-28 16:05:08	wildermind	to use something_start something_start() and something_end() on `SomeCrazyStruct` i'd have to implement https://doc.rust-lang.org/nightly/nightly-rustc/rustc_data_structures/indexed_vec/trait.Idx.html right ? 
2018-09-28 16:05:18	wildermind	ohh 
2018-09-28 16:05:45	wildermind	I see
2018-09-28 16:05:45	<--	andyhoang (andyhoang@moz-drpmj6.gtml.gbn6.0ee0.2001.IP) has quit (Quit: WeeChat 2.2)
2018-09-28 16:06:12	kimundi	https://doc.rust-lang.org/src/core/iter/range.rs.html#25
2018-09-28 16:06:22	kimundi	Afaik that is what Range uses to know hopw to count from start to end
2018-09-28 16:06:26	kimundi	but that is unstable
2018-09-28 16:06:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 16:08:43	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-28 16:09:11	wildermind	kk
2018-09-28 16:09:14	wildermind	thanks a lot! 
2018-09-28 16:09:23	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-28 16:09:43	emerentius	eval: String::new()..String::new()
2018-09-28 16:09:46	--	Notice(eval): ""..""
2018-09-28 16:10:12	kimundi	emerentius: You might be able to create it, but afaik you can't iterate it
2018-09-28 16:10:19	emerentius	yes, only if T: Step
2018-09-28 16:10:26	emerentius	which is currently limited to integers
2018-09-28 16:10:30	emerentius	and Step is unstable
2018-09-28 16:11:29	-->	Hadrian (Mibbit@moz-5vn4o4.194.in-addr.arpa) has joined #rust-beginners
2018-09-28 16:11:34	jones	Does u64 work on 32 bit systems?
2018-09-28 16:11:41	emerentius	jones: yes
2018-09-28 16:12:06	jones	emerentius: thanks!
2018-09-28 16:12:11	-->	umurgdk__ (umurgdk@moz-vm6b78.asahi-net.or.jp) has joined #rust-beginners
2018-09-28 16:12:19	Hadrian	Hello! if I wanted to allocate a temporary array-like structure on the stack how would I do that? 
2018-09-28 16:12:30	Hadrian	with variable lenght
2018-09-28 16:12:39	kimundi	Hadrian: If the size is known at compiletime, then use [T; N]
2018-09-28 16:12:47	emerentius	variable length on the stack isn't possible
2018-09-28 16:12:48	kimundi	If its dynamic, then you can not allocate on the stack, use Vec
2018-09-28 16:12:59	<--	umurgdk__ (umurgdk@moz-vm6b78.asahi-net.or.jp) has quit (Quit: Konversation terminated!)
2018-09-28 16:13:11	Hadrian	is there any reason for that choice? 
2018-09-28 16:13:12	-->	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has joined #rust-beginners
2018-09-28 16:13:43	kimundi	Its hard from a compiler and language design perspective to get dynamic stack allocation right
2018-09-28 16:13:53	Hadrian	oh I see, thanks guys
2018-09-28 16:14:01	kimundi	And not having it does not really make much of an difference
2018-09-28 16:14:21	Hadrian	I guess
2018-09-28 16:14:26	kimundi	Most languages don't have dynamic arrays on the stack
2018-09-28 16:14:43	kimundi	C/C++ are about the only ones, and its non-standrd there still afaik
2018-09-28 16:14:50	emerentius	C does
2018-09-28 16:14:52	emerentius	C++ doesn't
2018-09-28 16:14:55	emerentius	afaik
2018-09-28 16:15:00	kimundi	Right
2018-09-28 16:15:27	Hadrian	well that's all I wanted to know, thanks guys! see yah
2018-09-28 16:15:42	<--	Hadrian (Mibbit@moz-5vn4o4.194.in-addr.arpa) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 16:16:21	-->	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has joined #rust-beginners
2018-09-28 16:19:31	-->	jihi (jih@moz-d486ja.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 16:22:34	<--	kermi (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 16:24:16	-->	gretchen (Mibbit@moz-iav4k3.or.comcast.net) has joined #rust-beginners
2018-09-28 16:24:21	<--	gretchen (Mibbit@moz-iav4k3.or.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 16:25:58	<--	patrl (patrl@moz-m17vkr.zas-berlin.de) has quit (Ping timeout: 121 seconds)
2018-09-28 16:27:36	-->	siddhartharao17 (siddharthar@moz-utj7fu.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-28 16:30:08	-->	siddhart_ (siddharthar@moz-95vf3r.cn8a.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-28 16:31:57	<--	siddhartharao17 (siddharthar@moz-utj7fu.oqtm.17gi.0647.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 16:32:17	<--	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has quit (Quit: Leaving)
2018-09-28 16:32:51	wildermind	how can i iterate an array in rust at get the index && the element itself at the same time? 
2018-09-28 16:33:11	wildermind	for idx, element in array {... }
2018-09-28 16:33:16	jones	wildermind: enumerate
2018-09-28 16:34:06	wildermind	BOOM, ty 
2018-09-28 16:34:14	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 16:34:28	wildermind	jones: is it https://docs.rs/itertools/0.5.2/itertools/fn.enumerate.html 
2018-09-28 16:34:30	wildermind	? 
2018-09-28 16:34:34	dpc1	enumerate
2018-09-28 16:34:40	dpc1	uhmm
2018-09-28 16:34:49	dpc1	it is there in normal iter as well
2018-09-28 16:35:00	wildermind	oh i see now kk 
2018-09-28 16:35:26	jones	https://play.rust-lang.org/?gist=3e2486edaa8c3417dcfc910827096018&version=stable&mode=debug&edition=2015
2018-09-28 16:35:51	wildermind	jones: tyvm! 
2018-09-28 16:36:15	jones	no problem. That will consume the array though (so you might want .iter() instead)
2018-09-28 16:36:28	-->	T (tdoan@moz-k0jkki.e22k.lo4v.e000.2605.IP) has joined #rust-beginners
2018-09-28 16:36:33	<--	T (tdoan@moz-k0jkki.e22k.lo4v.e000.2605.IP) has left #rust-beginners
2018-09-28 16:36:39	jones	consume or take ownership of, not sure of the correct terminology here
2018-09-28 16:37:16	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 16:37:23	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-28 16:38:03	nullbit	https://raw.githubusercontent.com/dsouzadyn/smsh/master/src/main.rs
2018-09-28 16:38:06	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-28 16:38:15	nullbit	can i haz feedback
2018-09-28 16:39:12	<--	Simon (Simon@moz-5e40si.dynamic.mnet-online.de) has quit (Quit: Leaving...)
2018-09-28 16:39:17	--	U007D_afk is now known as U007D
2018-09-28 16:40:24	-->	ImageJPEG (ImageJPEG@moz-g9c.kgu.221.74.IP) has joined #rust-beginners
2018-09-28 16:40:30	-->	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has joined #rust-beginners
2018-09-28 16:40:45	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 16:41:39	<--	ImageJPEG (ImageJPEG@moz-g9c.kgu.221.74.IP) has quit (Quit: Leaving)
2018-09-28 16:41:44	-->	ImageJPEG (ImageJPEG@moz-g9c.kgu.221.74.IP) has joined #rust-beginners
2018-09-28 16:42:16	<--	mkollaro1 (mkollaro@moz-r4v86o.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-28 16:43:34	-->	iffy (Adium@moz-i7n.mhe.103.70.IP) has joined #rust-beginners
2018-09-28 16:44:07	<--	iffy (Adium@moz-i7n.mhe.103.70.IP) has left #rust-beginners
2018-09-28 16:44:27	<--	ufobat___ (Martin@moz-en04p0.dyn.telefonica.de) has quit (Quit: Leaving)
2018-09-28 16:45:09	<--	ysz (ysz@moz-q7k.ds2.161.95.IP) has quit (Quit: This computer has gone to sleep)
2018-09-28 16:45:34	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-28 16:46:57	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 16:47:28	-->	GreenJello (GreenJello@moz-5ah.vnp.83.23.IP) has joined #rust-beginners
2018-09-28 16:47:32	<--	nifker (Mozilla@moz-08eivv.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-28 16:47:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 16:48:10	<--	ImageJPEG (ImageJPEG@moz-g9c.kgu.221.74.IP) has quit (Quit: Leaving)
2018-09-28 16:48:29	-->	ImageJPEG (ImageJPEG@moz-g9c.kgu.221.74.IP) has joined #rust-beginners
2018-09-28 16:48:45	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-28 16:49:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 16:50:12	<--	Det (Mibbit@moz-j6qrck.pools.vodafone-ip.de) has left #rust-beginners
2018-09-28 16:51:28	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 16:52:42	dpc1	nullbit: oh. we have the same official names xD
2018-09-28 16:53:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 16:55:19	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-09-28 16:56:28	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-28 16:56:41	-->	jedahan (textual@moz-61osfl.res.rr.com) has joined #rust-beginners
2018-09-28 16:56:51	<--	jedahan (textual@moz-61osfl.res.rr.com) has quit (The TLS connection was non-properly terminated.)
2018-09-28 16:56:52	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-09-28 16:57:01	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Ping timeout: 121 seconds)
2018-09-28 16:57:09	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Quit: Leaving)
2018-09-28 16:57:31	<--	Urania (textual@moz-83q96u.sph.umich.edu) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 16:58:25	--	U007D is now known as U007D_afk
2018-09-28 16:59:12	-->	ysz (ysz@moz-q7k.ds2.161.95.IP) has joined #rust-beginners
2018-09-28 16:59:45	-->	zeenix (zeenix@moz-ivdn0i.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 17:00:40	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 17:01:28	zeenix	Hi
2018-09-28 17:02:17	zeenix	i'm a bit stumped by why rustc tells me that `caps` here is immutable: https://paste.fedoraproject.org/paste/A5gTocr0E0dJ-ypbWe2Ajg
2018-09-28 17:02:50	zeenix	while at the same time telling me that i don't need to declared it mutable: https://paste.fedoraproject.org/paste/bVDqIdv-mV~c7xcyBBU5xw
2018-09-28 17:03:16	jones	zeenix: might be just me but the links aren't working. Could you use a playground link instead?
2018-09-28 17:04:04	zeenix	for the code, yes
2018-09-28 17:04:10	zeenix	they work fine for me
2018-09-28 17:04:55	<--	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has quit (Connection closed)
2018-09-28 17:04:58	zeenix	https://play.rust-lang.org/?gist=401b889d52e350f67bd2fb400c90bf30&version=stable&mode=debug&edition=2015
2018-09-28 17:06:06	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 17:06:18	<--	ysz (ysz@moz-q7k.ds2.161.95.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 17:07:14	jones	zeenix: try "if let Some(mut s)" 
2018-09-28 17:07:24	jones	rather than "if let Some(s)"
2018-09-28 17:07:37	<--	brucem (textual@moz-9fd.bob.229.49.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 17:07:50	Ferdirand	i think it won't work because s would be borrowing caps mutably
2018-09-28 17:07:53	stephaneyfx	zeenix: I think this is due to the type returned by new_simple
2018-09-28 17:07:58	zeenix	jones, the error is not about the s
2018-09-28 17:08:09	zeenix	stephaneyfx, yeah, slomo just informed me
2018-09-28 17:08:12	stephaneyfx	zeenix: It's GstRc<...> which does not impl DerefMut
2018-09-28 17:08:24	zeenix	that function isn't in the docs for some reason so didn't realize :)
2018-09-28 17:08:28	-->	starblue (juergen@moz-5dm4bq.versanet.de) has joined #rust-beginners
2018-09-28 17:08:34	zeenix	thanks
2018-09-28 17:09:14	-->	ysz (ysz@moz-q7k.ds2.161.95.IP) has joined #rust-beginners
2018-09-28 17:10:10	<--	oms (oms@moz-m3pt1t.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-28 17:10:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 17:10:58	-->	brucem (textual@moz-4ofqv3.4uq1.4q95.44c8.2001.IP) has joined #rust-beginners
2018-09-28 17:11:27	Ferdirand	hold on a second. If there is a fn<'a>(mut &'a T) -> mut &'a U, and I later recast the mut &U into an &U, is the compiler smart enough to figure out that the T is only immutably borrowed ?
2018-09-28 17:12:23	kimundi	Ferdirand: No, the borrow will not turn into a shared borrow
2018-09-28 17:12:27	emerentius	it's &mut and no
2018-09-28 17:12:32	kimundi	If it started as a mutable borrow, it will remain one
2018-09-28 17:12:46	kimundi	Afaik there are some tricky corner cases that require this
2018-09-28 17:12:50	Ferdirand	&mut 'a sorry
2018-09-28 17:12:56	emerentius	&'a mut
2018-09-28 17:13:13	Ferdirand	well
2018-09-28 17:13:27	Ferdirand	i had 4h of sleep last night
2018-09-28 17:14:12	Ferdirand	but i think my point still stands, get_mut_structure would make s borrow caps mutably
2018-09-28 17:14:53	<--	expensivehaircut (Mibbit@moz-sm6.dlg.59.143.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 17:14:56	-->	a_chou (Thunderbird@moz-2bk8tu.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-09-28 17:15:52	stephaneyfx	Ferdirand: Which it can't because `caps` has type `GstRc<CapsRef>` and GstRc does not impl DerefMut
2018-09-28 17:16:33	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 17:17:03	wildermind	is there a function that can be applied to a Vec that is like "list.some()" in js? meaining return bool result with a closure condition on a Vec 
2018-09-28 17:17:23	stephaneyfx	wildermind: Iterator::any ?
2018-09-28 17:17:34	wildermind	stephaneyfx: ty! 
2018-09-28 17:19:48	<--	ysz (ysz@moz-q7k.ds2.161.95.IP) has quit (Quit: This computer has gone to sleep)
2018-09-28 17:20:29	<--	dalley (dalley@moz-sj3bja.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-28 17:21:45	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 17:24:15	<--	zeenix (zeenix@moz-ivdn0i.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-28 17:24:24	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 17:26:14	<--	a_chou (Thunderbird@moz-2bk8tu.ri7p.2kuh.0182.2601.IP) has quit (Client exited)
2018-09-28 17:26:14	-->	dalley (dalley@moz-sj3bja.dyn6.twc.com) has joined #rust-beginners
2018-09-28 17:31:45	-->	ysz (ysz@moz-svn.ds2.161.95.IP) has joined #rust-beginners
2018-09-28 17:32:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-28 17:32:34	-->	mib_eykzyt (Mibbit@moz-6hdhbl.as43234.net) has joined #rust-beginners
2018-09-28 17:34:33	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 17:34:36	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-28 17:37:03	-->	kyrylo_ (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-28 17:37:04	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Connection closed)
2018-09-28 17:39:32	-->	ericho (erich@moz-ok1.7m2.55.192.IP) has joined #rust-beginners
2018-09-28 17:39:53	<--	ysz (ysz@moz-svn.ds2.161.95.IP) has quit (Quit: This computer has gone to sleep)
2018-09-28 17:39:56	-->	ysz (ysz@moz-svn.ds2.161.95.IP) has joined #rust-beginners
2018-09-28 17:41:04	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 17:44:36	<--	mib_eykzyt (Mibbit@moz-6hdhbl.as43234.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 17:45:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 17:45:35	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 17:45:55	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-28 17:46:14	-->	jedahan (textual@moz-61osfl.res.rr.com) has joined #rust-beginners
2018-09-28 17:47:04	jedahan	I'm trying to compare an OsStr with &str, which I thought was a new feature of rust 1.29, but running into errors https://play.rust-lang.org/?gist=77e3bf39974828720c78f27a09b816c3&version=stable&mode=debug&edition=2015
2018-09-28 17:47:10	<--	siddhart_ (siddharthar@moz-95vf3r.cn8a.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 17:47:41	stephaneyfx	jedahan: Your types are wrapped in Option
2018-09-28 17:48:35	sarnold	https://play.rust-lang.org/?gist=ec99f56416250eb8898fcb30d21f6962&version=stable&mode=debug&edition=2015
2018-09-28 17:48:57	stephaneyfx	jedahan: And PartialEq is only implemented for Option<T> and Option<U> where T and U are the same
2018-09-28 17:49:38	-->	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has joined #rust-beginners
2018-09-28 17:50:00	--	U007D_afk is now known as U007D
2018-09-28 17:50:42	jedahan	is that because a) its wrong to implement PartialEq for Option<T> and Option<U> if PartialEq is implemented between T & U, or b) because the compiler cannot do that, or c) no one has done the work yet?
2018-09-28 17:50:52	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 17:51:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 17:51:22	jedahan	sarnold: hmm I'd rather not add a panic, unless filter() swallows that unwrap()
2018-09-28 17:51:26	stephaneyfx	jedahan: Such an additional impl would overlap with the existing one
2018-09-28 17:51:45	stephaneyfx	jedahan: You can do this: https://play.rust-lang.org/?gist=47f03c6bb9c40ae9e9cf03d34203ce64&version=stable&mode=debug&edition=2015
2018-09-28 17:51:51	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 17:51:59	jedahan	stephaneyfx is this what people talk about with 'monomorphosomethingsomething'?
2018-09-28 17:52:06	-->	dark-knight (dark-knight@moz-067kkd.dynamic.surfer.at) has joined #rust-beginners
2018-09-28 17:52:09	jedahan	only having a single impl?
2018-09-28 17:52:21	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 17:52:28	<--	adoa (awachtel@moz-tls.v74.64.158.IP) has quit (Client exited)
2018-09-28 17:52:30	sarnold	jedahan: completely agreed, it's just to check that stephaneyfx's point was correct :)
2018-09-28 17:52:32	stephaneyfx	jedahan: I think it's more about overlapping impls and specialization
2018-09-28 17:52:38	-->	adoa (awachtel@moz-tls.v74.64.158.IP) has joined #rust-beginners
2018-09-28 17:52:38	-->	sparky8251 (quassel@moz-dqudgl.1jj3.dq59.00c6.2601.IP) has joined #rust-beginners
2018-09-28 17:52:48	jedahan	thanks sarnold stephaneyfx 
2018-09-28 17:53:07	jedahan	my original code had the OsStr::new, I was just hoping I could remove that in my code when reading through the 1.29 changelog
2018-09-28 17:53:13	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-28 17:53:24	sparky8251	can functions have an optional input. as in, it doesnt need to be supplied, but if it is the function acts differently?
2018-09-28 17:53:44	jedahan	every couple of months I reread my small bit of code and try refactoring to be more understable to see if rusts ergonomics have gotten better
2018-09-28 17:53:47	-->	siddhartharao17 (siddharthar@moz-95vf3r.cn8a.oelm.0420.2001.IP) has joined #rust-beginners
2018-09-28 17:54:25	sarnold	sparky8251: this is similar.. https://deterministic.space/elegant-apis-in-rust.html#intooption_
2018-09-28 17:54:35	stephaneyfx	jedahan: You can do this if you want to use the new comparison ;) https://play.rust-lang.org/?gist=3a5898a1d6599bbfbc8f7c04c85b4f31&version=stable&mode=debug&edition=2015
2018-09-28 17:55:02	stephaneyfx	jedahan: Actually, no, this last code is wrong
2018-09-28 17:55:10	sarnold	that still panics..
2018-09-28 17:55:22	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 17:55:24	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 17:55:40	stephaneyfx	sarnold: It panics because of the IO operation
2018-09-28 17:56:21	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 17:56:47	stephaneyfx	jedahan: This should work and makes use of the comparison between str and OsStr: https://play.rust-lang.org/?gist=60a10cfce4fa48bc79392fee18e4f406&version=stable&mode=debug&edition=2015
2018-09-28 17:56:59	<--	adoa (awachtel@moz-tls.v74.64.158.IP) has quit (Client exited)
2018-09-28 17:57:08	-->	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has joined #rust-beginners
2018-09-28 17:57:09	-->	adoa (awachtel@moz-tls.v74.64.158.IP) has joined #rust-beginners
2018-09-28 17:57:16	martin1	potentially not quick question.. what type[s] would you use for the nodes on a binary tree? I was trying with Option<Box<Node<T>>> but I'm wondering whether I should be using &mut references to that instead
2018-09-28 17:57:53	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 17:58:46	sparky8251	sarnold: thanks man! it kinda looks like what i want, so i'll have to see if it works the way i need it to
2018-09-28 17:59:04	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-28 17:59:28	sarnold	sparky8251: another option is to use a "builder" approach, to build your arguments gradually..
2018-09-28 17:59:53	sarnold	sparky8251: https://github.com/rust-unofficial/patterns/blob/master/patterns/builder.md
2018-09-28 18:00:47	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 18:01:14	sparky8251	sarnold: its about using a single function to identify the Dockerfile's location. Mandatory to provide the working dir, optional to provide a subfolder. not sure of a better way than just optional/multiple given that. then again... im def a programming newb
2018-09-28 18:01:54	sarnold	sparky8251: ah, yeah, for two arguments this is probably fine. At some point though you know you're in trouble when you have to count through three Nones to figure out what the fourth None does.. :)
2018-09-28 18:02:47	sparky8251	looked over the builder. yeah... dont think i'll need more than 2 params for this fn so i might just use option as shown in the first :) thanks!
2018-09-28 18:03:12	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 18:06:02	<--	ysz (ysz@moz-svn.ds2.161.95.IP) has quit (Quit: This computer has gone to sleep)
2018-09-28 18:06:09	-->	ysz (ysz@moz-svn.ds2.161.95.IP) has joined #rust-beginners
2018-09-28 18:07:41	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-28 18:08:48	--	U007D is now known as U007D_afk
2018-09-28 18:08:56	@mbrubeck	martin1: You probably want Box in most cases.  You could use references if the nodes are owned by some structure other than the tree itself (e.g. an arena).
2018-09-28 18:09:12	-->	Urania (textual@moz-83q96u.sph.umich.edu) has joined #rust-beginners
2018-09-28 18:09:23	-->	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-28 18:09:26	--	U007D_afk is now known as U007D
2018-09-28 18:09:44	@mbrubeck	martin1: This focuses on linked lists rather than trees but is a very good introduction to implementing graph-like data structures in Rust. http://cglab.ca/~abeinges/blah/too-many-lists/book/
2018-09-28 18:09:59	<--	xialvjun (xialvjun@moz-scf.h4a.119.123.IP) has quit (Quit: )
2018-09-28 18:10:55	<--	nullbit (nullbit@moz-dm4.tvc.59.182.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-28 18:11:51	martin1	awesome, I'll take a look at that! thanks
2018-09-28 18:13:38	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 18:14:04	<--	drivel (me@moz-iqulob.maltekraus.de) has quit (Quit: WeeChat 1.5)
2018-09-28 18:14:14	<--	ysz (ysz@moz-svn.ds2.161.95.IP) has quit (Quit: Leaving)
2018-09-28 18:14:41	-->	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-28 18:15:03	<--	eythian (quassel@moz-0av7cu.kallisti.net.nz) has quit (Quit: No Ping reply in 180 seconds.)
2018-09-28 18:15:05	-->	eyans (a@moz-4oqt2q.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-28 18:15:16	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 18:15:31	-->	drivel (me@moz-iqulob.maltekraus.de) has joined #rust-beginners
2018-09-28 18:15:41	-->	BearOfJade (Thunderbird@moz-8d08rm.wireless.uvic.ca) has joined #rust-beginners
2018-09-28 18:15:51	<--	arunkumar413 (arunkumar41@moz-pc4.r32.48.157.IP) has quit (Quit: Leaving)
2018-09-28 18:16:34	-->	eythian (quassel@moz-0av7cu.kallisti.net.nz) has joined #rust-beginners
2018-09-28 18:16:42	<--	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has quit (Ping timeout: 121 seconds)
2018-09-28 18:17:38	-->	insidious (insidious@moz-4hfvnn.resnet.scranton.edu) has joined #rust-beginners
2018-09-28 18:18:29	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 18:19:00	<--	jones (jonas@moz-jqo904.customer.lyse.net) has quit (Quit: bbl)
2018-09-28 18:19:28	<--	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has quit (Connection closed)
2018-09-28 18:19:44	-->	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-28 18:19:51	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-28 18:20:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 18:20:08	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 18:20:08	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-28 18:20:12	-->	jones (jones@moz-jqo904.customer.lyse.net) has joined #rust-beginners
2018-09-28 18:21:01	<--	jperras (jperras@moz-00e1fu.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-28 18:21:33	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 18:22:38	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 18:22:58	pickfire	Trying out beta, but I seem to fail to compile openssl v0.9.24.
2018-09-28 18:23:19	pickfire	While migrating one of my project with cargo +beta fix --edition --allow-dirty
2018-09-28 18:23:45	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-28 18:24:04	jones	pickfire: not sure if this will help but I had an issue with that and had to set PKG_CONFIG_PATH before running cargo build
2018-09-28 18:24:24	jones	pickfire: PKG_CONFIG_PATH=/usr/lib/openssl-1.0/pkgconfig cargo build
2018-09-28 18:24:47	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 18:24:52	pickfire	http://ix.io/1nM8
2018-09-28 18:24:53	-->	jperras (jperras@moz-00e1fu.dsl.bell.ca) has joined #rust-beginners
2018-09-28 18:25:49	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 18:25:57	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-28 18:26:15	pickfire	jones: How do you know what is openssl path?
2018-09-28 18:26:19	sarnold	pickfire: guessing, start in /home/ivan/src/pickfire/tt/target/debug/build/openssl-4e58283de2302e5e/ and look for build.rs -- what's that file look like?
2018-09-28 18:27:31	sarnold	does it look like https://github.com/sfackler/rust-openssl/blob/0.9.x/openssl/build.rs  ?
2018-09-28 18:27:39	sarnold	I wonder if you need to set DEP_OPENSSL_VERSION manually or not..
2018-09-28 18:27:45	-->	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has joined #rust-beginners
2018-09-28 18:28:18	pickfire	Huh? There are two binary in that directory and one plain text file.
2018-09-28 18:28:24	<--	jperras (jperras@moz-00e1fu.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-09-28 18:28:46	pickfire	sarnold: http://ix.io/1nM9
2018-09-28 18:28:57	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-28 18:30:44	pickfire	Oh, I think because I am using openssl 1.1.1
2018-09-28 18:31:01	pickfire	It only matches 101, 102, 110, there is no 111.
2018-09-28 18:31:49	<--	BearOfJade (Thunderbird@moz-8d08rm.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-09-28 18:31:49	sarnold	ah! that sounds likely. the 0.10.x branch has this .. https://github.com/sfackler/rust-openssl/commit/8d5a91c33484542e2ec17b711cf162937f3bc1b3
2018-09-28 18:31:50	-->	nineczar (nate@moz-3ntbua.bos.netblazr.com) has joined #rust-beginners
2018-09-28 18:32:18	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-28 18:33:01	-->	AtumT (IRC@moz-ieh6sm.gvt.net.br) has joined #rust-beginners
2018-09-28 18:33:43	pickfire	What can I do about this?
2018-09-28 18:35:01	sarnold	is there a reason why you're on 0.9.x rather than 0.10.x? moving to 0.10.x feels like it would be my next attempt
2018-09-28 18:35:11	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 18:35:17	pickfire	It's not a direct dependency.
2018-09-28 18:35:24	<--	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 18:36:34	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 18:37:06	sarnold	you could try to use cargo's [patch] to patch up the depency that brings in the older openssl: https://doc.rust-lang.org/cargo/reference/manifest.html#the-patch-section -- and submit fixes back to your dependency as you fix things?
2018-09-28 18:37:54	pickfire	As well, `cargo outdated` breaks too
2018-09-28 18:38:03	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 18:38:16	<--	pamaury (pamaury@moz-e1gk65.mpi-sws.org) has quit (Ping timeout: 121 seconds)
2018-09-28 18:39:14	pickfire	Oh, I think I fixed it by updating to reqwest 0.9
2018-09-28 18:39:22	pickfire	I didn't know there is a new release.
2018-09-28 18:39:42	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 18:39:59	sarnold	oh hooray :)
2018-09-28 18:40:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 18:41:10	pickfire	sarnold: How do you usually know when a dependency is updated upstream?
2018-09-28 18:41:20	sarnold	pickfire: I don't know :(
2018-09-28 18:41:27	pickfire	Wow T_T
2018-09-28 18:41:41	pickfire	I only know when `cargo outdated` show it.
2018-09-28 18:41:58	sarnold	yeah. there are parts of the rust cargo culture that concern me greatly.
2018-09-28 18:42:36	-->	ubuntourist (kjcole@moz-qd7ghc.gallaudet.edu) has joined #rust-beginners
2018-09-28 18:43:24	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-28 18:43:40	Fr0stBit	Hi guys, when specifying the generic parameters, do you put first the lifetimes or the generic types?
2018-09-28 18:43:42	Fr0stBit	\
2018-09-28 18:43:42	pickfire	But I think cargo is great though, just the external tools like `outdated` does not match.
2018-09-28 18:44:02	pickfire	Fr0stBit: I usually see lifetime first.
2018-09-28 18:44:18	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 18:44:36	<--	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has quit (Connection closed)
2018-09-28 18:44:46	<--	martin1 (martin@moz-c7v.9s6.64.190.IP) has quit (Quit: WeeChat 2.2)
2018-09-28 18:44:51	-->	martin1 (martin@moz-c7v.9s6.64.190.IP) has joined #rust-beginners
2018-09-28 18:45:11	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-28 18:45:48	Fr0stBit	also, i know that we usually narrow down a Generic using a trait using this syntax T: SomeTrait, but i've seen also a T: 'a syntax in generic parameters what is this exactly?
2018-09-28 18:46:27	--	U007D is now known as U007D_afk
2018-09-28 18:47:26	stephaneyfx	Fr0stBit: It means that if T contains references, they are valid for at least 'a
2018-09-28 18:47:30	<--	Dima (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 18:47:35	<--	vmx (vmx@moz-9ncght.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-09-28 18:47:56	Fr0stBit	Ah i see
2018-09-28 18:48:06	Fr0stBit	Is it in some part of the book that i missed?
2018-09-28 18:49:36	pickfire	Fr0stBit: Yes, it's in the book.
2018-09-28 18:50:10	<--	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-28 18:50:31	stephaneyfx	Fr0stBit: https://doc.rust-lang.org/book/second-edition/ch19-02-advanced-lifetimes.html#lifetime-bounds-on-references-to-generic-types
2018-09-28 18:50:48	Fr0stBit	Thank you
2018-09-28 18:51:03	<--	yk (yk@moz-mrt.tj5.67.95.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 18:51:05	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-28 18:52:49	<--	siddhartharao17 (siddharthar@moz-95vf3r.cn8a.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 18:53:19	-->	nunatak (nunatak@moz-0o9u0v.netcologne.de) has joined #rust-beginners
2018-09-28 18:53:37	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-28 18:53:48	--	U007D_afk is now known as U007D
2018-09-28 18:54:25	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-28 18:55:09	-->	albinou (albinou@moz-noarqr.abo.wanadoo.fr) has joined #rust-beginners
2018-09-28 18:55:34	U007D	What's the Rustic way to package up related `const`s to supply them to my type's constructor?   My initial thought was to use a struct with const fields, but... ;)
2018-09-28 18:55:58	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 18:56:13	<--	ericho (erich@moz-ok1.7m2.55.192.IP) has quit (Connection closed)
2018-09-28 18:56:30	stephaneyfx	U007D: Could you write a short example on the playground?
2018-09-28 18:56:30	<--	mkollaro (mkollaro@moz-6em5ra.imu.intel.com) has quit (Connection closed)
2018-09-28 18:56:46	U007D	stephaneyfx: yup--two secs
2018-09-28 18:57:13	sarnold	U007D: one of my favourite pages suggests a separate module for constants https://deterministic.space/elegant-apis-in-rust.html#a-module-full-of-constants
2018-09-28 18:57:47	stephaneyfx	U007D: (To me it sounds like you could just define another constructor invoking the other one with these constant values, but I may not be understanding your use case correctly)
2018-09-28 18:58:14	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-28 19:01:47	<--	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has quit (Ping timeout: 121 seconds)
2018-09-28 19:02:16	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 19:02:28	--	KiChjang_ is now known as KiChjang
2018-09-28 19:02:30	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-28 19:03:06	U007D	stephaneyfx: https://play.rust-lang.org/?gist=c2243b8af6fae390f006a61c26ae970d&version=stable&mode=debug&edition=2015
2018-09-28 19:03:43	-->	mkollaro (mkollaro@moz-6em5ra.imu.intel.com) has joined #rust-beginners
2018-09-28 19:04:10	<--	drivel (me@moz-iqulob.maltekraus.de) has quit (Quit: WeeChat 1.5)
2018-09-28 19:04:32	<--	Urania (textual@moz-83q96u.sph.umich.edu) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 19:04:39	stephaneyfx	U007D: Thanks. So you want to caller to always specify what the parameters are when constructing an ExplicitDependencies?
2018-09-28 19:04:45	stephaneyfx	*the caller
2018-09-28 19:04:55	U007D	stephaneyfx: yes.  basically I would like to constructor dependency inject a collection of related values which happen to be known at compile time
2018-09-28 19:05:08	-->	drivel (me@moz-iqulob.maltekraus.de) has joined #rust-beginners
2018-09-28 19:05:22	<--	ImageJPEG (ImageJPEG@moz-g9c.kgu.221.74.IP) has quit (Quit: Leaving)
2018-09-28 19:05:59	-->	ncoish (Mibbit@moz-ip0.qts.9.76.IP) has joined #rust-beginners
2018-09-28 19:06:20	U007D	Hey, sarnold! Long time no chat!  Thanks for the link--looking it over now
2018-09-28 19:07:04	-->	Urania (textual@moz-83q96u.sph.umich.edu) has joined #rust-beginners
2018-09-28 19:07:10	sarnold	U007D: *nod* it's good to see you again :)
2018-09-28 19:08:01	-->	jperras (jperras@moz-us5e1i.cable.rogers.com) has joined #rust-beginners
2018-09-28 19:08:09	U007D	sarnold: You too! :)
2018-09-28 19:09:00	U007D	stephaneyfx: I tried using a struct with associated consts in the impl section, but it seemed weird to have to instantiate it to pass it to the constructor.
2018-09-28 19:10:21	U007D	stephaneyfx: so then I thought maybe combining that with a generic constructor might be the answer, but wonder if I'm now off in the weeds.  Decided to come here and ask first
2018-09-28 19:10:23	<--	jonalmeida (jonalmeida@moz-afsk3d.20db.tl8k.19f0.2001.IP) has quit (ircservices.mozilla.org (Too many invalid passwords))
2018-09-28 19:10:25	Gilfoyle	So got a borrow checker issue, have a variable pass_the_state I'm trying to pass around in my shell function so as to move a Stdio pipe back and forth between scopes. However that fails obviously due to being of a type that doesn't implement Copy or Clone. https://paste.rs/s8P I then tried using expression orientation, having the troueblsome state passing mostly inside a let a = {}
2018-09-28 19:10:27	-->	jonalmeida (jonalmeida@moz-kml.1j0.77.45.IP) has joined #rust-beginners
2018-09-28 19:10:27	Gilfoyle	block, however that
2018-09-28 19:10:44	-->	dowwie (dowwie@moz-pi0.tg6.226.23.IP) has joined #rust-beginners
2018-09-28 19:10:46	Gilfoyle	that's failing as well. https://paste.rs/zjC Any thoughts on how to circumvent this issue?
2018-09-28 19:10:50	stephaneyfx	U007D: Is it what you're after? -- I haven't read your last message yet. https://play.rust-lang.org/?gist=a28344be3b530138a5a63e162876fcfb&version=stable&mode=debug&edition=2015
2018-09-28 19:13:11	-->	ericho (erich@moz-ktprjb.jf.intel.com) has joined #rust-beginners
2018-09-28 19:13:22	-->	bivalveoutlaw (igloo@moz-7h9.o76.225.161.IP) has joined #rust-beginners
2018-09-28 19:14:24	-->	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has joined #rust-beginners
2018-09-28 19:15:14	U007D	stephaneyfx: not quite--I'm trying to come up with a solution which 1) does not employ globals 2) packages related consts 3) does not duplicate the values and 4) can simultaneously instantiate more than one instance, with different params.  (Not sure if that helps or makes it worse ;))
2018-09-28 19:16:44	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-28 19:17:19	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 19:17:30	stephaneyfx	U007D: Are these constant values used only to construct an object of the type providing the foo method?
2018-09-28 19:17:42	-->	quartz55 (quartz@moz-fmd9js.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-28 19:17:48	-->	AtumT_ (IRC@moz-e0o.5vt.33.191.IP) has joined #rust-beginners
2018-09-28 19:18:47	U007D	stephaneyfx: yes
2018-09-28 19:19:11	stephaneyfx	U007D: Ok. Writing another example. Give me a few minutes...
2018-09-28 19:19:12	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-28 19:20:29	<--	AtumT (IRC@moz-ieh6sm.gvt.net.br) has quit (Ping timeout: 121 seconds)
2018-09-28 19:21:05	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 19:21:20	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 19:21:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 19:22:10	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-28 19:22:16	<--	kyrylo_ (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 19:22:37	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-28 19:22:42	stephaneyfx	U007D: Something like that? Note that the `frames` and `min_value` methods could be moved to a FooBuilder type if it does not make sense to change them after a Foo is constructed. https://play.rust-lang.org/?gist=5508f26b81102299148c3056a6029b85&version=stable&mode=debug&edition=2015
2018-09-28 19:22:43	-->	sebastiencs (sebastiencs@moz-tcq885.ip-51-255-51.eu) has joined #rust-beginners
2018-09-28 19:22:46	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 19:22:47	-->	CAMOKPYT (Mibbit@moz-ncc.fio.112.37.IP) has joined #rust-beginners
2018-09-28 19:23:06	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-28 19:23:17	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 19:23:18	sebastiencs	Hello, is there a way to get a &[&str] from a Vec<String> ?
2018-09-28 19:23:18	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-28 19:23:47	stephaneyfx	sebastiencs: You'd need to build a Vec<&str>>
2018-09-28 19:23:54	stephaneyfx	Vec<&str>
2018-09-28 19:23:58	sarnold	on a first thought it seems unlikely.. you'd need to allocate some storage for the array of pointers..
2018-09-28 19:24:03	sarnold	what are you trying to do?
2018-09-28 19:24:04	stephaneyfx	sebastiencs: Or you can use an Iterator
2018-09-28 19:24:35	-->	yk (yk@moz-mrt.tj5.67.95.IP) has joined #rust-beginners
2018-09-28 19:25:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 19:26:14	<--	bivalveoutlaw (igloo@moz-7h9.o76.225.161.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 19:26:19	sebastiencs	I see, I just wanted to make an accessor to my struct
2018-09-28 19:27:02	stephaneyfx	sebastiencs: You may be able to use a type implementing Iterator<Item = &str>
2018-09-28 19:28:52	CAMOKPYT	Sup! I'm just learning Rust. Is there a good guide how to publish projects with Docker? Currently I have a problem. Execution file works fine on my local machine (ubuntu), same for debian based image, but It doesn't work with alpine image.
2018-09-28 19:29:52	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-28 19:31:11	-->	AtumT (IRC@moz-ii8.sqb.95.179.IP) has joined #rust-beginners
2018-09-28 19:31:24	-->	charmander (Mibbit@moz-vqm.cne.206.185.IP) has joined #rust-beginners
2018-09-28 19:31:56	<--	AtumT_ (IRC@moz-e0o.5vt.33.191.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 19:31:57	@mbrubeck	CAMOKPYT: Rust has both glibc- and musl-based targets.  You'll need to use the musl targets to run on non-glibc systems like Alpine
2018-09-28 19:32:45	<--	charmander (Mibbit@moz-vqm.cne.206.185.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 19:33:09	@mbrubeck	CAMOKPYT: For some instructions, see https://github.com/japaric/rust-cross#how-do-i-compile-a-fully-statically-linked-rust-binaries
2018-09-28 19:33:20	U007D	stephaneyfx: not sure that's it either...   Here's the notion I have in mind (doesn't compile), and I'm wondering what's possible.  Note I don't store any instances of the consts in TheWholeEnchilada (aka Foo).  Do I need to?  https://play.rust-lang.org/?gist=5a1ad2b7025e51b20d70a98a6eea74fd&version=stable&mode=debug&edition=2015
2018-09-28 19:33:28	@mbrubeck	CAMOKPYT: Rust programs built with MUSL are fully statically linked, so they should run on any Linux system
2018-09-28 19:34:53	@mbrubeck	CAMOKPYT: You can build with MUSL instead of glibc on an Ubuntu or Debian host if you `apt install musl-tools` and then follow the directions above.
2018-09-28 19:35:12	U007D	stephaneyfx: can I exploit the fact that TheWholeEnchilada is monomorphized for FooParams to somehow access FooParams' associated constants?
2018-09-28 19:35:21	<--	user404d (quincycondu@moz-pap.qup.193.64.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 19:35:36	stephaneyfx	U007D: Yes. Modifying it now...
2018-09-28 19:35:40	<--	fsasm (fsasm@moz-5fd.qra.178.62.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 19:36:53	CAMOKPYT	mbrubeck: ty
2018-09-28 19:38:16	CAMOKPYT	What about a common way to develop and deploy Rust projects with docker? 
2018-09-28 19:39:05	stephaneyfx	U007D: Like this? https://play.rust-lang.org/?gist=4e216c3b2659d759b6b79097d67a80c7&version=stable&mode=debug&edition=2015
2018-09-28 19:41:00	U007D	wow, that's it exactly!  thank you!
2018-09-28 19:41:27	U007D	stephaneyfx: I don't know if I'm more amazed at the solution or the fact that you could comprehend my ask! ;)  (Definitely the latter)
2018-09-28 19:42:20	stephaneyfx	U007D: Haha, yeah, it was not clear to me what you wanted at first, but your last example definitely made it clear :)
2018-09-28 19:42:42	U007D	:D
2018-09-28 19:43:20	U007D	I was close!
2018-09-28 19:43:26	U007D	stephaneyfx: love it, thank you
2018-09-28 19:43:27	stephaneyfx	Yes, very
2018-09-28 19:43:30	-->	mib_2td8oa (Mibbit@moz-arn.gfg.149.169.IP) has joined #rust-beginners
2018-09-28 19:43:39	stephaneyfx	U007D: You're welcome
2018-09-28 19:43:50	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 19:44:47	sarnold	mm enchiladas :)
2018-09-28 19:45:03	U007D	LOL
2018-09-28 19:46:50	@mbrubeck	CAMOKPYT: If you've built a statically-linked Rust program, all you need to deploy it is to copy the binary to the target system/image
2018-09-28 19:46:57	@mbrubeck	CAMOKPYT: Looks like someone has an example at https://www.fpcomplete.com/blog/2018/07/deploying-rust-with-docker-and-kubernetes
2018-09-28 19:48:57	<--	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 19:49:16	<--	ncoish (Mibbit@moz-ip0.qts.9.76.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 19:49:38	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Ping timeout: 121 seconds)
2018-09-28 19:50:18	CAMOKPYT	mbrubeck thank you! 
2018-09-28 19:53:35	U007D	Hmm... Does anyone happen to know why "associated consts cannot be referenced in patterns".  Is it something fundamental, or just not something anyone's gotten around to implementing yet?
2018-09-28 19:54:11	stephaneyfx	U007D: I think it would interfere with exhaustiveness checking
2018-09-28 19:54:33	stephaneyfx	U007D: Or even checking if two patterns are the same
2018-09-28 19:56:01	U007D	stephaneyfx: I can use "regular" (ie. global) consts as a pattern--I can't see why AC's would be different for exhaustiveness?
2018-09-28 19:56:26	stephaneyfx	U007D: Because with regular global constants, rustc knows their values when compiling a match
2018-09-28 19:56:57	stephaneyfx	U007D: With associated constants, it doesn't as it depends on the type, including types not written yet that may implement the trait defining the constants
2018-09-28 19:57:31	stephaneyfx	U007D: I can write an example if it's still unclear
2018-09-28 19:57:55	U007D	stephaneyfx: I would have thought that in any given monomorphized function, all the information (the type and the value) would be known at compile time.  Yes, an example would be really helpful, thank you!
2018-09-28 19:58:24	@mbrubeck	U007D: But the impl might be in one crate and the match in another
2018-09-28 19:58:56	stephaneyfx	U007D: Yes, it is know at monomorphization time, but remember rust is not like C++ in this regard. It needs to know at the point the generic code is written, not when it's instantiated with specific types
2018-09-28 19:59:03	stephaneyfx	*known
2018-09-28 20:01:39	U007D	mbrubeck: ah, that makes sense.  In that case, full information isn't known until link time, correct?
2018-09-28 20:02:22	@mbrubeck	U007D: Well as you say it's known when the function is monorphized, but as stephaneyfx says, that's done after typechecking
2018-09-28 20:02:29	@mbrubeck	Rust type-checks the generic function, not specific instantiations
2018-09-28 20:03:12	@mbrubeck	So you can tell just from a function signature which types it accepts -- the body can't change this.
2018-09-28 20:03:16	<--	mib_2td8oa (Mibbit@moz-arn.gfg.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 20:04:36	U007D	mbrubeck: stephaneyfx: u guys are good! :)  makes sense, thank you!
2018-09-28 20:04:39	<--	ubuntourist (kjcole@moz-qd7ghc.gallaudet.edu) has quit (The TLS connection was non-properly terminated.)
2018-09-28 20:04:40	stephaneyfx	U007D: Consider this example: https://play.rust-lang.org/?gist=8fa2cfd77e5eec96ca02972f02e97e3d&version=stable&mode=debug&edition=2015
2018-09-28 20:05:02	stephaneyfx	U007D: rustc has no way of knowing if T::STATE is On or Off
2018-09-28 20:05:32	stephaneyfx	U007D: But the definition of f must be type-checked and make sense before it's instantiated with specific types
2018-09-28 20:06:36	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 20:06:43	U007D	stephaneyfx: wow.
2018-09-28 20:06:57	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 20:07:04	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 20:07:12	U007D	stephaneyfx: that's very clear--thanks for the terrific example
2018-09-28 20:07:17	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 20:07:34	stephaneyfx	U007D: You're welcome. I'm glad it helped :)
2018-09-28 20:08:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-28 20:08:08	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 20:08:58	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 20:10:00	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 20:10:40	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-28 20:11:07	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 20:12:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 20:12:35	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-28 20:13:00	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 20:14:28	<--	Qwfwq (Qwfwq@moz-90dba7.hfc.comcastbusiness.net) has quit (Connection closed)
2018-09-28 20:17:21	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 20:20:05	-->	nifker (Mozilla@moz-08eivv.dyn.telefonica.de) has joined #rust-beginners
2018-09-28 20:22:15	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-09-28 20:24:10	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 20:25:18	-->	BearOfJade (Thunderbird@moz-2bks7o.wireless.uvic.ca) has joined #rust-beginners
2018-09-28 20:25:47	-->	user404d (quincycondu@moz-9e72sf.carfax.net) has joined #rust-beginners
2018-09-28 20:26:01	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-28 20:26:16	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 20:26:52	user404d	hello~~
2018-09-28 20:26:59	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Connection closed)
2018-09-28 20:27:04	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 20:27:20	-->	cschneid (cschneid@moz-5nk2me.co.comcast.net) has joined #rust-beginners
2018-09-28 20:27:30	user404d	anyone have recommendations for reading material after working through `The Rust Programming Language` book?
2018-09-28 20:28:35	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 20:28:41	GreenJello	user404d, I found watching talks from the rust conferences to be helpful, in that they exposed me to various patterns and technologies
2018-09-28 20:28:44	user404d	I was looking into getting `Programming Rust`
2018-09-28 20:29:00	sarnold	user404d: I found this book a perfect transition between too-simple problems and too-complex problems http://cglab.ca/~abeinges/blah/too-many-lists/book/
2018-09-28 20:30:10	user404d	GreenJello: thanks
2018-09-28 20:30:11	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-28 20:30:12	user404d	sarnold: thanks
2018-09-28 20:31:34	<--	cschneid (cschneid@moz-5nk2me.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 20:32:07	<--	insidious (insidious@moz-4hfvnn.resnet.scranton.edu) has quit (Quit: WeeChat 2.2)
2018-09-28 20:33:02	--	U007D is now known as U007D_afk
2018-09-28 20:35:07	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-28 20:35:52	<--	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-09-28 20:36:42	<--	jperras (jperras@moz-us5e1i.cable.rogers.com) has quit (Quit: WeeChat 2.2)
2018-09-28 20:36:51	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 20:37:16	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-28 20:38:40	-->	feamcor (textual@moz-f3p.9kr.111.200.IP) has joined #rust-beginners
2018-09-28 20:40:23	-->	SomeDude (pascal@moz-u0cfrl.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 20:40:42	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-28 20:41:25	-->	niconii (nicole@moz-epcmnd.midco.net) has joined #rust-beginners
2018-09-28 20:41:25	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-28 20:42:54	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-28 20:43:07	<--	refold (refold@moz-0ig.vcg.98.88.IP) has quit (Quit: leaving)
2018-09-28 20:43:44	<--	CAMOKPYT (Mibbit@moz-ncc.fio.112.37.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 20:43:47	<--	feamcor (textual@moz-f3p.9kr.111.200.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-28 20:46:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-28 20:46:10	-->	feamcor (textual@moz-f3p.9kr.111.200.IP) has joined #rust-beginners
2018-09-28 20:46:10	-->	simonadameit (simonadamei@moz-v0ptf2.imgc.7mtj.0a61.2001.IP) has joined #rust-beginners
2018-09-28 20:47:27	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 20:48:35	<--	Urania (textual@moz-83q96u.sph.umich.edu) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 20:50:28	-->	jperras (jperras@moz-us5e1i.cable.rogers.com) has joined #rust-beginners
2018-09-28 20:50:55	-->	mohan43u (mohan43u@moz-32u.fsr.23.1.IP) has joined #rust-beginners
2018-09-28 20:51:08	-->	Binero (Binero@moz-rp278g.access.telenet.be) has joined #rust-beginners
2018-09-28 20:51:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 20:51:53	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 20:53:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 20:53:59	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 20:54:56	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 20:55:23	<--	feamcor (textual@moz-f3p.9kr.111.200.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-28 20:55:33	-->	feamcor (feamcor@moz-f3p.9kr.111.200.IP) has joined #rust-beginners
2018-09-28 20:55:49	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 20:56:18	<--	feamcor (feamcor@moz-f3p.9kr.111.200.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-28 20:57:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 20:57:22	<--	yk (yk@moz-mrt.tj5.67.95.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 20:58:32	<--	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has quit (Quit: Sorry, was AFK)
2018-09-28 20:58:39	-->	Mirconium (Mibbit@moz-12t.ege.220.128.IP) has joined #rust-beginners
2018-09-28 20:59:39	Mirconium	So I was looking through a backtrace recently and noticed that the file location it gives is /Users/travis/build/rust-lang/rust/src/libstd/rt.rs:74
2018-09-28 20:59:53	Mirconium	Now, there is not a user called travis on this computer
2018-09-28 21:00:05	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-28 21:00:07	Mirconium	And it seems to be some kind of a standard message that rust returns in a trace
2018-09-28 21:00:14	Mirconium	So what is that actually referring to?
2018-09-28 21:00:20	sarnold	it's the build directory of the pre-built portions
2018-09-28 21:00:37	Moongoodboy{K}	probably Travis CI
2018-09-28 21:00:52	Moongoodboy{K}	which presumably is used to build Rust
2018-09-28 21:00:56	Mirconium	Hmm
2018-09-28 21:01:00	Mirconium	Cool
2018-09-28 21:01:01	sarnold	even though it feel slike you recompile the entire world's source code when you build something :) you're getting standard library pre-built .. and it has those strings baked into it
2018-09-28 21:01:12	Moongoodboy{K}	^
2018-09-28 21:02:27	-->	meri (Mibbit@moz-3m6tj4.dsl.tropolys.de) has joined #rust-beginners
2018-09-28 21:02:54	meri	helloo, is there a postgres async rust crate that constructs queries safely during compilation? 
2018-09-28 21:03:05	meri	a bit like diesel
2018-09-28 21:03:56	sarnold	I think your quest falls apart on 'async'
2018-09-28 21:04:03	sarnold	I've got to run though, good luck ;)
2018-09-28 21:04:23	meri	funny how there are so many async web frameworks but nothing async on the database haha
2018-09-28 21:04:33	-->	benbrandt (Thunderbird@moz-qrf0qg.or.comcast.net) has joined #rust-beginners
2018-09-28 21:04:34	<--	benbrandt (Thunderbird@moz-qrf0qg.or.comcast.net) has quit (Client exited)
2018-09-28 21:04:55	sarnold	meri: oh, check out r2d2. the normal answer is connection pooling..
2018-09-28 21:05:19	meri	i think that is threaded though?
2018-09-28 21:05:42	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-28 21:05:46	sarnold	yeah, probably
2018-09-28 21:05:54	meri	r2d2 has a lot of dead traces and only mentions look on diesel but diesel does not really talk about it or i am too bad finding something
2018-09-28 21:06:26	meri	"dead traces" = i search for it and only find depreciated stuff
2018-09-28 21:08:57	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-28 21:10:16	-->	jsatk (jesseatkins@moz-ss97rg.ca.comcast.net) has joined #rust-beginners
2018-09-28 21:10:28	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 21:14:03	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-28 21:14:05	-->	decaf (decaf@moz-6tu.gg0.103.85.IP) has joined #rust-beginners
2018-09-28 21:14:49	-->	morton (Mibbit@moz-4hd.p25.12.94.IP) has joined #rust-beginners
2018-09-28 21:15:09	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 21:16:09	-->	mib_l6rx1d (Mibbit@moz-eo6.dp3.166.82.IP) has joined #rust-beginners
2018-09-28 21:20:08	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 21:20:35	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-28 21:21:59	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-28 21:23:10	<--	jedahan (textual@moz-61osfl.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 21:23:15	<--	Arnavion (Arnavion@moz-qhb.gim.209.104.IP) has quit (NickServ (RECOVER command used by Arnavion3))
2018-09-28 21:23:15	-->	Arnavion (Arnavion@moz-qhb.gim.209.104.IP) has joined #rust-beginners
2018-09-28 21:27:38	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Quit: Leaving.)
2018-09-28 21:28:02	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-28 21:29:56	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-28 21:30:39	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-28 21:32:20	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 21:33:18	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-28 21:34:34	<--	dalley (dalley@moz-sj3bja.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-09-28 21:35:46	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-28 21:36:44	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 21:37:29	-->	livingsilver94 (Mibbit@moz-9fvkmv.business.telecomitalia.it) has joined #rust-beginners
2018-09-28 21:37:59	<--	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-28 21:38:34	livingsilver94	Hello! I need to generate a random number in a range. Provided I already know how to do this: should the random generator be static or instance-specific?
2018-09-28 21:38:50	-->	jedahan (textual@moz-r2is2l.fios.verizon.net) has joined #rust-beginners
2018-09-28 21:40:12	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-28 21:40:21	-->	ubuntourist (kjcole@moz-qd7ghc.gallaudet.edu) has joined #rust-beginners
2018-09-28 21:41:02	-->	yk (yk@moz-mrt.tj5.67.95.IP) has joined #rust-beginners
2018-09-28 21:41:45	<--	mib_l6rx1d (Mibbit@moz-eo6.dp3.166.82.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 21:42:29	dowwie	livingsilver94:  see rand crate
2018-09-28 21:43:07	livingsilver94	I did but I didn't find answer to my question. I'll take a better look
2018-09-28 21:44:03	Lumpio-	The rand crate provides you with a thread local random number generator
2018-09-28 21:44:16	Lumpio-	I think in the common case if you just want random numbers there's no benefit in having more than one (per thread, at least)
2018-09-28 21:45:00	Lumpio-	Multiple RNGs can be useful if you need different distributions or whatever
2018-09-28 21:45:18	livingsilver94	one per thread? Meaning that, if I call rng_thread() in every struct constructor *in the same thread*, it will behave as a singleton?
2018-09-28 21:46:01	Lumpio-	thread_rng(), but yes, and in the common case you don't even need to store it
2018-09-28 21:46:05	Lumpio-	Just call thread_rng whenever you need it
2018-09-28 21:46:29	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 21:46:54	livingsilver94	aaah OK, understood. This is a different behavior from Java, IIRC
2018-09-28 21:47:38	Lumpio-	I think it's nicer not having to keep track of an RNG instance if all you want is a random number now and then.
2018-09-28 21:47:56	<--	SomeDude (pascal@moz-u0cfrl.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-28 21:48:59	livingsilver94	well "now and then" is not correct in my case. It's for a Markov Chain so I have to heavily rely on a random generator
2018-09-28 21:49:25	livingsilver94	btw yeah, I can avoid to keep an instance
2018-09-28 21:51:12	<--	arsnael (arsnael@moz-5vqeii.io) has quit (Quit: The Lounge - https://thelounge.chat)
2018-09-28 21:52:03	-->	arsnael (arsnael@moz-5vqeii.io) has joined #rust-beginners
2018-09-28 21:53:15	Lumpio-	If you need a *lot* of random numbers it may be more efficient to "cache" it in a variable
2018-09-28 21:53:19	Lumpio-	Not sure how significantly
2018-09-28 21:56:56	<--	BearOfJade (Thunderbird@moz-2bks7o.wireless.uvic.ca) has quit (Client exited)
2018-09-28 21:58:35	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 21:59:18	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 21:59:38	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-28 21:59:53	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 21:59:54	-->	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-28 22:00:59	livingsilver94	Lumpio-: I'll see what's best, al least now I have a rough idea on how to use it
2018-09-28 22:02:39	<--	yk (yk@moz-mrt.tj5.67.95.IP) has quit (Connection closed)
2018-09-28 22:02:52	-->	yk (yk@moz-mrt.tj5.67.95.IP) has joined #rust-beginners
2018-09-28 22:05:19	-->	jsatk_ (jesseatkins@moz-ss97rg.ca.comcast.net) has joined #rust-beginners
2018-09-28 22:05:50	-->	SomeDude (pascal@moz-u0cfrl.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 22:05:52	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 22:05:56	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 22:06:24	<--	jsatk (jesseatkins@moz-ss97rg.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 22:06:34	<--	GreenJello (GreenJello@moz-5ah.vnp.83.23.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 22:08:02	-->	mib_ikq13u (Mibbit@moz-kn4bm6.nat.spd-mgts.ru) has joined #rust-beginners
2018-09-28 22:10:50	-->	Guest4 (textual@moz-0on.1an.118.45.IP) has joined #rust-beginners
2018-09-28 22:13:10	-->	mib_n0encz (Mibbit@moz-bjpctj.ocn.ne.jp) has joined #rust-beginners
2018-09-28 22:13:32	<--	mib_n0encz (Mibbit@moz-bjpctj.ocn.ne.jp) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 22:14:24	-->	jsatk (jesseatkins@moz-ss97rg.ca.comcast.net) has joined #rust-beginners
2018-09-28 22:16:45	<--	jsatk_ (jesseatkins@moz-ss97rg.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 22:17:32	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-09-28 22:18:31	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-28 22:19:25	<--	livingsilver94 (Mibbit@moz-9fvkmv.business.telecomitalia.it) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 22:19:26	-->	jsatk_ (jesseatkins@moz-ss97rg.ca.comcast.net) has joined #rust-beginners
2018-09-28 22:19:42	<--	jsatk (jesseatkins@moz-ss97rg.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 22:22:56	<--	jperras (jperras@moz-us5e1i.cable.rogers.com) has quit (Quit: WeeChat 2.2)
2018-09-28 22:23:23	<--	eyans (a@moz-4oqt2q.878i.pbkb.2002.2001.IP) has quit (Connection closed)
2018-09-28 22:23:46	-->	eyans (a@moz-4oqt2q.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-28 22:26:17	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-28 22:28:05	-->	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has joined #rust-beginners
2018-09-28 22:30:21	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 22:30:40	-->	siddhart_ (siddharthar@moz-482.sr5.107.128.IP) has joined #rust-beginners
2018-09-28 22:30:41	<--	yk (yk@moz-mrt.tj5.67.95.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 22:30:55	<--	user404d (quincycondu@moz-9e72sf.carfax.net) has quit (Quit: leaving)
2018-09-28 22:31:20	<--	dark-knight (dark-knight@moz-067kkd.dynamic.surfer.at) has quit (Quit: Leaving.)
2018-09-28 22:31:49	<--	dorfsmay (dorfsmay@moz-0k0kng.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-28 22:33:41	<--	siddhartharao17 (siddharthar@moz-nhcu8n.79gu.6ej8.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 22:34:02	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-28 22:36:32	-->	taorg (textual@moz-891qka.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-28 22:36:49	<--	taorg (textual@moz-891qka.dynamicip.rima-tde.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-28 22:38:04	-->	yk (yk@moz-mrt.tj5.67.95.IP) has joined #rust-beginners
2018-09-28 22:38:24	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 22:39:01	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-28 22:40:20	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 22:40:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 22:40:36	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 22:40:40	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 22:41:24	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-28 22:43:21	-->	Dariost (Dariost@moz-q9p.o2l.20.151.IP) has joined #rust-beginners
2018-09-28 22:45:23	<--	yk (yk@moz-mrt.tj5.67.95.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 22:46:44	-->	omid (Mibbit@moz-ksm582.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-28 22:48:48	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (The TLS connection was non-properly terminated.)
2018-09-28 22:49:03	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-28 22:50:30	-->	insidious (insidious@moz-5gf.shg.198.134.IP) has joined #rust-beginners
2018-09-28 22:51:04	-->	dler (Mibbit@moz-5064ga.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-28 22:51:30	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-28 22:51:44	<--	meri (Mibbit@moz-3m6tj4.dsl.tropolys.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 22:51:56	dler	Hi!
2018-09-28 22:52:07	<--	omid (Mibbit@moz-ksm582.dynamic.kabel-deutschland.de) has left #rust-beginners
2018-09-28 22:52:48	dler	I've forgot the name of the crate you could use to derive `Clone` and other traits while providing information regarding generics.
2018-09-28 22:52:55	<--	eyans (a@moz-4oqt2q.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-28 22:53:16	dler	I want to derive `Clone` for a type generic of a type of a trait whose associated types are used.
2018-09-28 22:53:32	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-28 22:54:04	dler	:s/generic of a/generic over a/
2018-09-28 22:55:42	sarnold	dler: this maybe? https://docs.rs/newtype_derive/0.1.6/newtype_derive/
2018-09-28 22:57:32	dler	Nope.
2018-09-28 22:57:55	sarnold	dang
2018-09-28 22:58:20	dler	I've tried searching for it on crates.io, but I couldn't find it there either.
2018-09-28 22:58:50	dler	And searching forjust  `derive` just blasts you with a bunch of stuff that has nothing to do with the problem.
2018-09-28 22:58:57	dler	:s/forj/for j/
2018-09-28 22:58:58	dpc1	!crate newtype_Derive
2018-09-28 22:58:58	+rustbot	newtype_derive (0.1.6) - This crate provides macros for deriving common traits for newtype structures. -> https://crates.io/crates/newtype_derive <https://docs.rs/newtype_derive>
2018-09-28 22:59:03	dpc1	:P
2018-09-28 23:00:09	-->	omid (Mibbit@moz-ksm582.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-28 23:02:22	dler	Found it.
2018-09-28 23:02:28	sarnold	what is it? :D
2018-09-28 23:02:36	dler	!crate derivative
2018-09-28 23:02:37	+rustbot	derivative (1.0.0) - A set of alternative `derive` attributes for Rust -> https://crates.io/crates/derivative <https://docs.rs/derivative>
2018-09-28 23:02:43	-->	jcob (user@moz-881.6e5.7.152.IP) has joined #rust-beginners
2018-09-28 23:03:37	sarnold	looks neat, thanks
2018-09-28 23:03:41	sarnold	I hope it still works
2018-09-28 23:03:45	dler	Me too
2018-09-28 23:05:02	<--	starblue (juergen@moz-5dm4bq.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-28 23:05:28	<--	ubuntourist (kjcole@moz-qd7ghc.gallaudet.edu) has quit (The TLS connection was non-properly terminated.)
2018-09-28 23:06:07	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 23:07:04	<--	omid (Mibbit@moz-ksm582.dynamic.kabel-deutschland.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 23:09:25	-->	omid (omid@moz-cu74bn.ksk1.ubhl.8109.2a02.IP) has joined #rust-beginners
2018-09-28 23:09:28	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-28 23:10:10	dler	Still works.
2018-09-28 23:10:29	<--	omid (omid@moz-cu74bn.ksk1.ubhl.8109.2a02.IP) has quit (Client exited)
2018-09-28 23:10:35	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-28 23:10:39	sarnold	yay :)
2018-09-28 23:11:16	-->	omid (omid@moz-cu74bn.ksk1.ubhl.8109.2a02.IP) has joined #rust-beginners
2018-09-28 23:11:26	<--	omid (omid@moz-cu74bn.ksk1.ubhl.8109.2a02.IP) has quit (Client exited)
2018-09-28 23:13:38	--	U007D_afk is now known as U007D
2018-09-28 23:13:38	-->	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has joined #rust-beginners
2018-09-28 23:13:50	<--	nunatak (nunatak@moz-0o9u0v.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-28 23:14:08	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 23:14:43	<--	sparky8251 (quassel@moz-dqudgl.1jj3.dq59.00c6.2601.IP) has quit (Connection closed)
2018-09-28 23:16:25	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-28 23:18:36	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-28 23:19:16	--	miles is now known as miles-afk
2018-09-28 23:21:29	-->	sargas (sargas@moz-4lg1v6.slkc.qwest.net) has joined #rust-beginners
2018-09-28 23:22:25	-->	oms (oms@moz-m3pt1t.dyn.telefonica.de) has joined #rust-beginners
2018-09-28 23:22:44	<--	mib_ikq13u (Mibbit@moz-kn4bm6.nat.spd-mgts.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 23:22:50	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Quit: )
2018-09-28 23:22:59	sargas	If I have a crate that has two subcrates, and 1 depends on the 2. Does cargo do a network connection to resolve the dependency?
2018-09-28 23:23:17	sargas	Upon building, that is.
2018-09-28 23:23:50	sargas	Or it knows where to get those crates locally.
2018-09-28 23:23:50	--	U007D is now known as U007D_afk
2018-09-28 23:24:46	sarnold	I think once you've got all the dependencies cached locally cargo won't need a network connection to rebuild in the future..
2018-09-28 23:24:49	<--	nineczar (nate@moz-3ntbua.bos.netblazr.com) has quit (Ping timeout: 121 seconds)
2018-09-28 23:25:14	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-28 23:25:30	<--	jihi (jih@moz-d486ja.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-28 23:26:42	dpc1	i've seen some workspace suggest a path instead of pulling from crates.io
2018-09-28 23:26:51	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 23:27:53	-->	tdeficit (sid7471@moz-1vt7bj.irccloud.com) has joined #rust-beginners
2018-09-28 23:28:23	tdeficit	is there an offline friendly version of the rust programming language (the book, not the uhh programming language) available?
2018-09-28 23:28:32	--	U007D_afk is now known as U007D
2018-09-28 23:28:59	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-28 23:30:15	@mbrubeck	tdeficit: Yes.  If you have Rust installed, type `rustup doc --book` to open it.
2018-09-28 23:30:50	sarnold	iirc the git tree has instructions on how ot build the pdf in the README
2018-09-28 23:30:51	-->	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-28 23:31:22	wildermind	Hi! Why this signature with Box works `pub fn csv_to_graph()->Result<Vec<Vec<usize>>,Box<Error>>` but does not work without the Box? its std::error:Error 
2018-09-28 23:31:41	@mbrubeck	wildermind: `std::error::Error` is a trait, not a concrete type
2018-09-28 23:31:48	tdeficit	amazing, thankyou mbrubeck and sarnold
2018-09-28 23:32:04	@mbrubeck	wildermind: so there are many different types that implement it, with different sizes
2018-09-28 23:32:04	stephaneyfx	wildermind: std::error::Error is `dyn std::error::Error` which is not Sized
2018-09-28 23:32:14	wildermind	mbrubeck: ok so that means that the compiler does not know what will be the size of Error during run time and this is why a Box is required? 
2018-09-28 23:32:19	@mbrubeck	right
2018-09-28 23:32:25	wildermind	kewl 
2018-09-28 23:32:46	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-28 23:32:47	wildermind	and umm, so how does failure crate does not require boxes? or even a more noob question, dynamic vectors 
2018-09-28 23:33:57	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-28 23:34:15	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 23:34:44	stephaneyfx	wildermind: Being Sized means you know how much an instance of the type takes on the stack, not additional heap allocated memory it references
2018-09-28 23:35:01	wildermind	mbrubeck: but returning dynamic vector is obviously ok, is there some hidden "box" around vectors ? 
2018-09-28 23:35:17	stephaneyfx	wildermind: the size_of Vec<T> does not change when pushing items to it
2018-09-28 23:35:20	@mbrubeck	wildermind: Yes, `Vec` and `Box` both contain pointers to dynamic heap allocations.
2018-09-28 23:35:32	wildermind	ooohhhh
2018-09-28 23:35:36	wildermind	mbrubeck: tyvm ! 
2018-09-28 23:36:07	@mbrubeck	In very early versions of Rust, `Vec<T>` was knows as ~[T] and Box<T> was known as ~T
2018-09-28 23:36:10	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 23:36:20	@mbrubeck	because they are both "unique owning pointers"
2018-09-28 23:36:45	<--	SomeDude (pascal@moz-u0cfrl.dip0.t-ipconnect.de) has quit (The TLS connection was non-properly terminated.)
2018-09-28 23:37:53	sargas	\q
2018-09-28 23:38:01	<--	sargas (sargas@moz-4lg1v6.slkc.qwest.net) has left #rust-beginners ("WeeChat 2.2")
2018-09-28 23:38:10	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-28 23:39:17	<--	quartz55 (quartz@moz-fmd9js.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-28 23:40:16	<--	jsatk_ (jesseatkins@moz-ss97rg.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-28 23:41:21	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-28 23:41:51	<--	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has quit (Quit: Leaving)
2018-09-28 23:43:03	wildermind	mbrubeck: gotcha 
2018-09-28 23:43:18	-->	benbrandt (Thunderbird@moz-qrf0qg.or.comcast.net) has joined #rust-beginners
2018-09-28 23:43:34	<--	benbrandt (Thunderbird@moz-qrf0qg.or.comcast.net) has quit (Client exited)
2018-09-28 23:43:47	wildermind	Umm, what path should i specift for a file if I run the "read" function from inside /src and the file is in the same dir ? 
2018-09-28 23:44:09	wildermind	i tried "my_file.csv" and different variations but it keeps yelling at me Error parsing csv No such file or directory (os error 2)
2018-09-28 23:44:23	wildermind	specify*
2018-09-28 23:44:53	<--	luizdepra (luizdepra@moz-dd76bg.31up.eidl.1284.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-28 23:45:00	wildermind	oh I got it nvm 
2018-09-28 23:45:02	<--	stl (stl@moz-pusnkm.broadband.corbina.ru) has quit (Ping timeout: 121 seconds)
2018-09-28 23:45:03	sarnold	wildermind: are we talking about the build-time macro that reads a file into the current compilation unit? or ..
2018-09-28 23:45:08	<--	dler (Mibbit@moz-5064ga.dip0.t-ipconnect.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-28 23:45:24	wildermind	im using `let mut rdr = csv::Reader::from_path(path)?;` 
2018-09-28 23:45:32	wildermind	the crate that burnt_sushi wrote 
2018-09-28 23:46:09	sarnold	aha, then it will resolve the path at runtime, starting from the process's current working directory
2018-09-28 23:46:40	wildermind	ohh
2018-09-28 23:47:28	wildermind	another question, the number of elements in each row in the csv is un-equal. Im using `for result in rdr.records(){...` to iterate the records with the Reader on top. 
2018-09-28 23:47:37	wildermind	and it says `Error parsing csv CSV error: record 1 (line: 2, byte: 6): found record with 2 fields, but the previous record has 3 fields` 
2018-09-28 23:47:58	wildermind	but when I make an equal number of elements in each row it works 
2018-09-28 23:49:29	wildermind	do I need to have a  custom ReaderBuilder for that? 
2018-09-28 23:51:00	-->	stl (stl@moz-pusnkm.broadband.corbina.ru) has joined #rust-beginners
2018-09-28 23:51:45	<--	nifker (Mozilla@moz-08eivv.dyn.telefonica.de) has quit (The TLS connection was non-properly terminated.)
2018-09-28 23:51:51	@mbrubeck	wildermind: Yes, you need https://docs.rs/csv/1.0.0-beta.4/csv/struct.ReaderBuilder.html#method.flexible
2018-09-28 23:52:25	wildermind	oh ty! 
2018-09-28 23:52:30	sarnold	wildermind: this appears to describe how to handle some records 'missing' https://docs.rs/csv/1.0.2/csv/tutorial/index.html#delimiters-quotes-and-variable-length-records
2018-09-28 23:52:31	wildermind	mbrubeck: ^^ 
2018-09-28 23:53:16	sarnold	I think it just boils down to the "flexible" thing of the ReaderBuilder, that you already found :)
2018-09-28 23:53:27	wildermind	sarnold ty  :) 
2018-09-28 23:54:13	<--	siddhart_ (siddharthar@moz-482.sr5.107.128.IP) has quit (Quit: Leaving...)
2018-09-28 23:56:13	<--	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has quit (Quit: Leaving)
2018-09-28 23:56:27	-->	starblue (juergen@moz-qh2m7n.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-28 23:56:50	<--	Guest4 (textual@moz-0on.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-28 23:56:59	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-28 23:57:04	-->	siddhartharao17 (siddharthar@moz-u06k9a.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-28 23:58:30	-->	quartz55 (quartz@moz-p350no.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-28 23:59:23	-->	mellowmaroon (mellowmaroo@moz-qrk6dg.va.comcast.net) has joined #rust-beginners
2018-09-28 23:59:33	<--	oms (oms@moz-m3pt1t.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-29 00:01:44	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 00:02:16	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-29 00:08:16	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-29 00:09:05	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 00:09:15	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-29 00:09:51	<--	jedahan (textual@moz-r2is2l.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-29 00:10:16	wildermind	whats the idimatic rust way to get&&remove the last element in a Vector ? 
2018-09-29 00:10:31	--	U007D is now known as U007D_afk
2018-09-29 00:11:14	sarnold	pop()? https://doc.rust-lang.org/std/vec/struct.Vec.html#method.pop
2018-09-29 00:11:27	<--	siddhartharao17 (siddharthar@moz-u06k9a.79gu.6ej8.0420.2001.IP) has quit (Quit: Leaving...)
2018-09-29 00:12:23	wildermind	sarnold: mehh missed it thanks ! 
2018-09-29 00:13:13	-->	siddhartharao17 (siddharthar@moz-u06k9a.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-09-29 00:14:36	<--	Dariost (Dariost@moz-q9p.o2l.20.151.IP) has quit (Client exited)
2018-09-29 00:15:36	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-29 00:23:30	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Client exited)
2018-09-29 00:24:44	-->	amra (Mibbit@moz-3m6tj4.dsl.tropolys.de) has joined #rust-beginners
2018-09-29 00:26:01	--	U007D_afk is now known as U007D
2018-09-29 00:26:49	<--	liquidnight (marcus@moz-047aim.7rid.be47.0c23.2a01.IP) has quit (Connection closed)
2018-09-29 00:26:53	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 00:28:05	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-29 00:34:06	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 00:35:13	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-29 00:38:27	--	U007D is now known as U007D_afk
2018-09-29 00:40:08	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 00:40:21	--	U007D_afk is now known as U007D
2018-09-29 00:42:29	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 00:42:33	-->	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has joined #rust-beginners
2018-09-29 00:43:51	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 00:46:58	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 00:49:21	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 00:50:26	<--	zach_ (zach@moz-cbdjgs.raasta.org) has quit (Quit: leaving)
2018-09-29 00:50:37	devurandom	Hi!
2018-09-29 00:50:40	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-29 00:50:54	@mbrubeck	yo
2018-09-29 00:51:09	devurandom	I have the issue of a lifetime: ----- these two types are declared with different lifetimes...  ---- ^^^^^^^^^ ...but data from `path` flows into `watchers` here
2018-09-29 00:52:30	devurandom	path is a Path that I turn into a &str using to_str() and watchers is a Vec<&str>. path lives much shorter than watchers, so what I would like to do is just copy the str that to_str() returns and create a new object with a new lifetime. But even with clone() I cannot seem create such a copy...
2018-09-29 00:53:02	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-29 00:53:19	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-29 00:53:50	<--	mellowmaroon (mellowmaroo@moz-qrk6dg.va.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-29 00:54:35	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-29 00:55:22	@mbrubeck	devurandom: Since `watchers` just contains references, all the strings it refers to must be owned by things that outlive `watchers`
2018-09-29 00:55:37	@mbrubeck	if you don't want to keep separate owners around, you can use `String` or `Cow<str>` instead of `&str`
2018-09-29 00:55:46	devurandom	mbrubeck: So if I change watchers to contain actual strings, I don't have the issue anymore?
2018-09-29 00:55:51	-->	zach (zach@moz-cbdjgs.raasta.org) has joined #rust-beginners
2018-09-29 00:56:06	devurandom	k
2018-09-29 00:56:08	@mbrubeck	yeah, `Vec<String>` will not borrow anything so you won't need to worry about lifetimes
2018-09-29 00:57:47	<--	quartz55 (quartz@moz-p350no.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 00:58:54	Mirconium	Actually I never really understood how that worked, if you have a &str literal, who owns it when you create it?
2018-09-29 00:59:00	--	U007D is now known as U007D_afk
2018-09-29 00:59:07	-->	quartz55 (quartz@moz-p350no.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-29 00:59:29	Mirconium	like if I say let x = "whatever", x doesn't technically own the data inside the literal, right?
2018-09-29 00:59:32	--	U007D_afk is now known as U007D
2018-09-29 00:59:59	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 01:01:08	Sergio	Mirconium: No, the binary does.
2018-09-29 01:01:12	Sergio	And x is just borrowing it, immutably.
2018-09-29 01:01:43	Mirconium	The binary? Like it's located in the vtable?
2018-09-29 01:01:48	Mirconium	Or something?
2018-09-29 01:01:53	Mirconium	Or in the function object, I guesS?
2018-09-29 01:01:56	Mirconium	*guess
2018-09-29 01:02:23	Sergio	It's located in the binary's RO memory section, which the OS loads into memory when it loads the program's binary into memory.
2018-09-29 01:02:34	Mirconium	Hmm. 
2018-09-29 01:02:38	Mirconium	Cool, thank you
2018-09-29 01:07:30	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-29 01:07:37	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-29 01:07:46	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 01:08:39	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 01:08:45	Mirconium	By the way, is the rustonomicon getting a new version eventually?
2018-09-29 01:09:10	Mirconium	I'm not really a cool enough dude to use all the stuff in there, but it was neat to read. 
2018-09-29 01:09:32	--	U007D is now known as U007D_afk
2018-09-29 01:10:54	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-29 01:11:57	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 01:13:00	Moongoodboy{K}	isn't the Nomicon just updated as necessary?
2018-09-29 01:13:33	@mbrubeck	Yeah, whenever people bother to submit PRs
2018-09-29 01:13:48	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 01:16:13	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 01:16:53	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 01:17:04	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 01:23:15	-->	mib_7g4ymj (Mibbit@moz-vg5.vjr.195.187.IP) has joined #rust-beginners
2018-09-29 01:23:40	<--	mib_7g4ymj (Mibbit@moz-vg5.vjr.195.187.IP) has left #rust-beginners
2018-09-29 01:24:30	<--	ecstaticm0rse (ecstaticm0r@moz-lof.fhs.135.67.IP) has quit (Client exited)
2018-09-29 01:25:41	devurandom	Mirconium, Sergio, mbrubeck: Thanks!
2018-09-29 01:32:20	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 01:33:31	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-29 01:34:02	<--	siddhartharao17 (siddharthar@moz-u06k9a.79gu.6ej8.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-29 01:39:34	-->	qouwse (qouwse@moz-gqm.est.69.155.IP) has joined #rust-beginners
2018-09-29 01:40:43	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-29 01:44:56	<--	jcob (user@moz-881.6e5.7.152.IP) has quit (Connection closed)
2018-09-29 01:46:01	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-29 01:46:51	<--	decaf (decaf@moz-6tu.gg0.103.85.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-29 01:50:51	-->	seph (seph@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-29 01:51:00	-->	mib_ujdw2e (Mibbit@moz-lg29g0.fl.comcast.net) has joined #rust-beginners
2018-09-29 01:51:15	seph	Is there any way I could do this https://play.rust-lang.org/?gist=2e454a6ed920551331846eca4eb3d013&version=stable&mode=debug&edition=2015
2018-09-29 01:52:11	stephaneyfx	seph: If Items is not u16, how could foo call bar?
2018-09-29 01:52:12	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-29 01:52:18	<--	mib_ujdw2e (Mibbit@moz-lg29g0.fl.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 01:52:42	seph	Items is T which can be anything and anything can be u16?
2018-09-29 01:53:25	stephaneyfx	seph: If T is f32, it's not u16
2018-09-29 01:54:17	seph	Then if I call foo(bag) and Bag<Items = f32> then I expect a compilation error. If I cann foo(bag) and Bag<Items is u16> then I expect it to be okay?
2018-09-29 01:54:31	stephaneyfx	seph: bar could call foo, because u16 is a type and foo accepts any T
2018-09-29 01:55:20	stephaneyfx	This is not how generics work in rust. The definition must type-check before instantiating with specific types.
2018-09-29 01:55:24	seph	If there is a call site like that in bar() then I expect a compilation error
2018-09-29 01:55:42	seph	The only reason I thought this could work is because they work like that for Iterators
2018-09-29 01:56:15	stephaneyfx	What part of Iterator are you thinking of?
2018-09-29 01:56:16	seph	If I implement an Iterator and define type Item = u16 then I can call iter() on [1u16, 2u16] ..
2018-09-29 01:56:36	seph	typo
2018-09-29 01:56:36	-->	Dima (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-09-29 01:57:56	seph	If I implement an Iterator of type CusIter with Item = u16 and Iterator::cus_iter() returns my CusIter then I can [1u16].cus_iter()
2018-09-29 01:58:02	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 01:58:07	seph	but if I [1u8].cus_iter() then it fails
2018-09-29 01:58:49	<--	brucem (textual@moz-4ofqv3.4uq1.4q95.44c8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 01:58:56	<--	prg (prg@moz-ntdfvd.com) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-09-29 01:59:04	stephaneyfx	It fails because cus_iter expects Item=u16. cus_iter does not accept any Item type.
2018-09-29 02:00:25	stephaneyfx	If you attempt to write a function taking any Iterator regardless of their Item type, you will see you get the same error as in your playground, namely that you can't call cus_iter from it.
2018-09-29 02:00:26	-->	prg (prg@moz-ahctar.gm69.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-09-29 02:01:10	-->	dekokun_ (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 02:01:42	seph	I know I'm saying I want the same behavior. I want a fn to be generic over a type. I want other things to call that fn. If those things have generic types of their own thats fine. If those things get called with a specific type that does not coorespond exactly to the type of fn that the thing calls then compile error. If the type cooresponds then success
2018-09-29 02:02:29	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 02:02:36	seph	Its kind of hard to follow, I'm trying my best to understand simultaneously explain
2018-09-29 02:03:10	stephaneyfx	I'm not sure I understand. The types don't match in your playground (*any* type != u16), so it fails to compile. Isn't that what you want?
2018-09-29 02:03:37	seph	Can I try a better example on the playground?
2018-09-29 02:03:55	stephaneyfx	Basically, the way you defined foo, there are not constraints on T, so foo must be ready to handle any type, not just u16
2018-09-29 02:04:00	stephaneyfx	Of course, please do
2018-09-29 02:04:27	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 02:05:26	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 02:08:59	seph	one moment still writing 
2018-09-29 02:09:20	stephaneyfx	Take your time :)
2018-09-29 02:09:58	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 02:12:59	<--	starblue (juergen@moz-qh2m7n.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-29 02:13:18	<--	cow-orker (foobar@moz-b1ft62.net) has quit (Connection closed)
2018-09-29 02:13:23	-->	starblue (juergen@moz-ulbgii.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-29 02:16:10	seph	Almost done. Wrestling with a lifetime parameter :)
2018-09-29 02:16:17	<--	quartz55 (quartz@moz-p350no.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 02:16:35	<--	dekokun_ (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-29 02:20:56	seph	Done! https://play.rust-lang.org/?gist=16c09f1bb9cfe78d796e1a472118d820&version=stable&mode=debug&edition=2015
2018-09-29 02:21:10	emerentius	seph: the situation with traits is more like if you reversed the function calls
2018-09-29 02:21:11	seph	stephaneyfx I hope that makes sense..
2018-09-29 02:21:17	emerentius	the more specific calls the general one
2018-09-29 02:21:30	stephaneyfx	seph: Checking...
2018-09-29 02:22:12	emerentius	which works, because a function that can take every T can also take a specific one
2018-09-29 02:22:23	emerentius	but a function that can take every T cannot call something that can't
2018-09-29 02:22:28	seph	emerentius which in my case is foo?
2018-09-29 02:22:44	seph	it can take any generic so also a specific u16
2018-09-29 02:22:52	-->	bsotodo (bsotodo@moz-jet4du.tvr6.dhpt.0908.2a02.IP) has joined #rust-beginners
2018-09-29 02:22:58	emerentius	yes, bar can call foo
2018-09-29 02:23:02	emerentius	not the other way round
2018-09-29 02:23:32	seph	emerentius I think I kind of understand
2018-09-29 02:23:45	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 02:23:49	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 02:24:14	stephaneyfx	seph: So is it clear now?
2018-09-29 02:24:43	-->	refold (refold@moz-0ig.vcg.98.88.IP) has joined #rust-beginners
2018-09-29 02:25:30	seph	stephaneyfx Not 100% no. Is it absolutely forbidden to call a function that takes a specific type from a function who's same type it feeds into it is more general?
2018-09-29 02:26:19	stephaneyfx	Yes, it is. You can loosen constraints, not harden them.
2018-09-29 02:27:34	seph	I may actually have an exception to that which is what I pinned this attempt on. I'll paste it into the playground
2018-09-29 02:28:58	<--	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 02:30:42	<--	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has quit (Connection closed)
2018-09-29 02:30:54	-->	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has joined #rust-beginners
2018-09-29 02:31:33	seph	https://play.rust-lang.org/?gist=55f063bdeef1c6e1107e42d74a19a615&version=stable&mode=debug&edition=2015
2018-09-29 02:32:29	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Quit: ZNC - http://znc.in)
2018-09-29 02:32:36	<--	bsotodo (bsotodo@moz-jet4du.tvr6.dhpt.0908.2a02.IP) has quit (Client exited)
2018-09-29 02:33:54	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 02:33:58	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 02:34:03	-->	jazzpi (jazzpi@moz-i6l8pk.space) has joined #rust-beginners
2018-09-29 02:34:40	turbobob	I'm trying to use the new module import syntax in rust 2018 preview
2018-09-29 02:34:56	turbobob	Do I have to add #![feature(rust_2018_preview)] to every .rs file? it seems so
2018-09-29 02:36:14	emerentius	turbobob: it should suffice to put it at the top of your root lib.rs
2018-09-29 02:36:25	<--	weeji (jihi@moz-f1b2ou.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-29 02:36:33	turbobob	oh, I found it
2018-09-29 02:36:38	turbobob	I have to blow away the cargo cache
2018-09-29 02:37:01	turbobob	putting it in individual .rs files was having the side effect of invalidating the cache for that file
2018-09-29 02:37:11	turbobob	thanks emerentius 
2018-09-29 02:38:14	stephaneyfx	seph: I'm sorry, I don't quite get what your code is trying to show
2018-09-29 02:42:18	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 02:44:37	seph	stephaneyfx cus_iter() returns CusIter<Self> and Self is I in the impl which means it is generic. Yet it calls a specific function for when I::Item = u8 and I::Item = u16 getting back a very specific CusIter<I::Item = u8> or CusIter<I::Item = u16> (I know not correct syntax)
2018-09-29 02:45:26	seph	stephaneyfx Basically cus_iter()'s return signature is Self which is I: Iterator in the impl block. Yet calls specific functions cus_iter_specific() for u8 and u16...
2018-09-29 02:45:37	emerentius	Self isn't generic
2018-09-29 02:45:46	emerentius	it's a specific, but trait-dependent type
2018-09-29 02:46:13	emerentius	or rather trait-impl dependent type
2018-09-29 02:47:45	seph	So if have a fn that has a generic parameter fn foo<T> as long as that parameter is said to be a "trait impl dep type" then I can call specifcally typed functions from it who specify a specific type for that generic parameter?
2018-09-29 02:49:09	<--	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has quit (Ping timeout: 121 seconds)
2018-09-29 02:49:17	-->	weeji (jihi@moz-7uqlca.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-29 02:50:35	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 02:50:42	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-29 02:51:15	seph	Now you said Self is not generic, its a trait dependent type. Its the I parameter in the impl block. The way I see it the B parameter in the foo() function of my original example is exactly the same thing..
2018-09-29 02:51:21	<--	AtumT (IRC@moz-ii8.sqb.95.179.IP) has quit (Client exited)
2018-09-29 02:52:51	-->	swalladge (swalladge@moz-t4dn78.ade.aussiebb.net) has joined #rust-beginners
2018-09-29 02:53:06	seph	Self is I: Iterator<Item = SomeTrait> ||| is the same as foo<B: Bag<Items = T> ? or is it the Items = T that makes it not the same? Because the first latches on to a Trait and the second latches on to a Generic Param
2018-09-29 02:54:24	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-29 02:54:55	emerentius	hmm, any function that includes Self is nonsensical without a specific type to put in
2018-09-29 02:55:14	emerentius	they are specific to traits and are practically the same
2018-09-29 02:56:05	emerentius	there's also the difference that in your previous example you were calling a generic function
2018-09-29 02:56:08	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 02:56:14	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 02:56:15	emerentius	and here you are defining a trait and implementing it
2018-09-29 02:59:33	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 02:59:36	seph	Alright thank you. I still don't fully get it but I got some hints and I think just need to dwell on it for some time
2018-09-29 03:01:58	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-29 03:02:51	<--	seph (seph@moz-lg29g0.fl.comcast.net) has quit (Quit: leaving)
2018-09-29 03:04:00	-->	mib_a4sluh (Mibbit@moz-pop.kh4.211.118.IP) has joined #rust-beginners
2018-09-29 03:04:21	-->	martin2 (martin@moz-4k9vp1.anteldata.net.uy) has joined #rust-beginners
2018-09-29 03:04:25	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 03:05:36	<--	mib_a4sluh (Mibbit@moz-pop.kh4.211.118.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 03:05:56	martin2	\o , quick question.. are there any patterns on how to access databases? I've seen diesel and tql, but I'm not sure if I should follow some kind of singleton access pattern for it or how would I handle the connections and stuff like that
2018-09-29 03:06:57	sarnold	martin2: r2d2 seems popular
2018-09-29 03:08:42	martin2	ok, that's a start
2018-09-29 03:09:23	martin2	and how would you access the pool from other modules? I guess what I'm failing to understand is how dependency injection works in this context
2018-09-29 03:09:33	turbobob	I'm so, so excited about the path clarity and other module changes, it's so nice
2018-09-29 03:10:01	-->	neal (neal@moz-f46s84.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-29 03:10:03	turbobob	I followed that whole RFC for what felt like years, eventually lost track of it, but the final product is perfect
2018-09-29 03:10:16	martin2	I'm fairly familiar with the Go way of doing this, but I'm not sure if rust shares the same view in that context
2018-09-29 03:11:19	--	U007D_afk is now known as U007D
2018-09-29 03:11:44	-->	mib_ogrcx1 (Mibbit@moz-goegp7.irvnca.sbcglobal.net) has joined #rust-beginners
2018-09-29 03:11:57	turbobob	martin2, it depends. Diesel isn't just database access, it's also an ORM. You don't need, and might not even want, an ORM.
2018-09-29 03:12:58	<--	neal_ (neal@moz-8tj3o2.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-29 03:13:08	-->	gregg (greg@moz-00mjdg.gnumpf.tk) has joined #rust-beginners
2018-09-29 03:18:08	-->	quaddle (Mibbit@moz-b8l.fhi.183.61.IP) has joined #rust-beginners
2018-09-29 03:18:25	turbobob	martin2, usually, the drivers will expose a connection object, which you call methods on to access the database. You'd take care of establishing DB connections in one place in your program, and pass the connection object to the methods that actually want to access the DB
2018-09-29 03:18:35	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-29 03:18:37	turbobob	that's dependency injection, but it's a dependency injection framework
2018-09-29 03:18:43	turbobob	*it's not a framework
2018-09-29 03:19:58	<--	quaddle (Mibbit@moz-b8l.fhi.183.61.IP) has left #rust-beginners
2018-09-29 03:19:59	<--	refold (refold@moz-0ig.vcg.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 03:20:20	<--	blackgoat (blackgoat@moz-1oj.458.150.121.IP) has quit (Quit: WeeChat 2.2)
2018-09-29 03:20:25	<--	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-29 03:21:11	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 03:21:16	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 03:24:07	-->	cja (sid161498@moz-otbge9.ealing.irccloud.com) has joined #rust-beginners
2018-09-29 03:24:19	<--	amra (Mibbit@moz-3m6tj4.dsl.tropolys.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 03:25:26	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 03:29:54	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 03:30:00	<--	fireglow (fireglow@moz-c48epn.su) has quit (The TLS connection was non-properly terminated.)
2018-09-29 03:31:22	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 03:31:22	--	Raychen1 is now known as Raychen
2018-09-29 03:31:46	-->	simonada_ (simonadamei@moz-h28n0b.v5b0.659g.0a61.2001.IP) has joined #rust-beginners
2018-09-29 03:32:11	-->	samp (Mibbit@moz-11alpv.nts.wustl.edu) has joined #rust-beginners
2018-09-29 03:33:18	samp	is anyone on here who can help me
2018-09-29 03:34:21	samp	trying to make a 'locking' trait: https://play.rust-lang.org/?gist=9eb2caaf1fa6dce3bee122813ee58428&version=stable&mode=debug&edition=2015
2018-09-29 03:34:37	-->	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has joined #rust-beginners
2018-09-29 03:35:23	<--	simonadameit (simonadamei@moz-v0ptf2.imgc.7mtj.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 03:35:56	--	U007D is now known as U007D_afk
2018-09-29 03:36:07	-->	fireglow (fireglow@moz-c48epn.su) has joined #rust-beginners
2018-09-29 03:36:35	sarnold	samp: sorry, gotta run.. but want to suggest taking a look at the MutexGuard type in the standard library, it might have something you can steal
2018-09-29 03:37:19	samp	it does ish
2018-09-29 03:37:21	samp	but i need a trait
2018-09-29 03:40:41	-->	dragonfire (dragonfire@moz-8tb.c6p.184.47.IP) has joined #rust-beginners
2018-09-29 03:41:26	<--	mib_ogrcx1 (Mibbit@moz-goegp7.irvnca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 03:43:14	dragonfire	So, I'm trying to implement From<&u8> for an enum that I have. However, it is requiring a lifetime parameter for the &u8. I'm still new to the lifetime concept. Can someone explain where the lifetime parameter should go and why?
2018-09-29 03:44:54	turbobob	dragonfire, you almost surely want to implement From<u8>
2018-09-29 03:44:55	<--	mohan43u (mohan43u@moz-32u.fsr.23.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 03:45:53	turbobob	implementing From<&u8> means you can take any reference to a u8 (which is going to be 4 or 8 bytes long), and generate a new object that never outlives the reference to that u8
2018-09-29 03:47:08	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-09-29 03:49:19	dragonfire	Then is there a way to convert a &u8 to a u8? I'm getting an Option<&u8> from using Vec.get() and I'm trying to map it to an Option<OpCode> (my enum) using OpCode::from(), but I can't.
2018-09-29 03:50:09	turbobob	*my_ref
2018-09-29 03:51:08	turbobob	dragonfire, https://play.rust-lang.org/?gist=427019abe3ac0517328244089dab94af&version=stable&mode=debug&edition=2015
2018-09-29 03:51:55	dragonfire	Thanks, that worked
2018-09-29 03:51:59	dragonfire	What does the * do?
2018-09-29 03:52:07	turbobob	deferences the u8
2018-09-29 03:52:33	turbobob	u8 is Copy, so you can freely pass it around - assigning the value to another place doesn't move it
2018-09-29 03:52:41	turbobob	so you don't run into "move out of borrowed context" problems
2018-09-29 03:53:34	dragonfire	So dereferencing integers is allowed as long as you do it explicitly?
2018-09-29 03:53:43	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 03:54:13	turbobob	Well, dereferencing any reference is allowed
2018-09-29 03:54:34	turbobob	it's just that in most cases,  you don't have to, because invoking methods on references causes the compiler to automatically insert dereferences
2018-09-29 03:55:25	turbobob	The special thing with a u8 is that you can deference a borrowed u8 and then assign it to something 
2018-09-29 03:55:42	turbobob	also, btw, you can impl From for a reference to a u8: https://play.rust-lang.org/?gist=427019abe3ac0517328244089dab94af&version=stable&mode=debug&edition=2015
2018-09-29 03:57:30	-->	kimundi- (kimundi@moz-vco50e.versanet.de) has joined #rust-beginners
2018-09-29 03:58:15	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 03:59:04	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 03:59:17	turbobob	(whoops: https://play.rust-lang.org/?gist=427019abe3ac0517328244089dab94af&version=stable&mode=debug&edition=2015)
2018-09-29 03:59:19	<--	kimundi (kimundi@moz-fd6ajs.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-29 03:59:19	--	kimundi- is now known as kimundi
2018-09-29 04:00:02	<--	samp (Mibbit@moz-11alpv.nts.wustl.edu) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 04:00:08	dragonfire	I think that's the same thing
2018-09-29 04:00:32	turbobob	Eh, I will never figure out the shared link thing.
2018-09-29 04:00:33	turbobob	https://play.rust-lang.org/?gist=5856ac4e28c3e30142801217d1ea1792&version=stable&mode=debug&edition=2015
2018-09-29 04:01:23	dragonfire	Okay, that makes sense
2018-09-29 04:01:43	dragonfire	Also, what did you mean when you said that 'u8 is Copy'? Do you mean that dereferencing it makes a copy? Or that the reference itself is a copy? Or is Copy a trait?
2018-09-29 04:02:54	turbobob	Now that I've implemented it I realize you don't probably don't even need Copy
2018-09-29 04:03:04	turbobob	unless your enum wants to save the original u8 value inside of it
2018-09-29 04:03:22	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 04:03:42	turbobob	But the basic point is that there's really no reason, no reason at all, to mess around with &u8
2018-09-29 04:04:24	turbobob	A u8 is one byte. A &u8 is 8 bytes points to one byte. It's equally or more efficient to just Copy a u8 whenever you need to work with one
2018-09-29 04:04:30	turbobob	and way simpler
2018-09-29 04:05:37	<--	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 04:07:42	dragonfire	Okay
2018-09-29 04:08:35	turbobob	when I first got started with Rust, I really tore my hair out trying to be as efficient as possible, do everything by reference
2018-09-29 04:09:00	turbobob	it saved me a lot of aggravation when someone pointed out that there's no benefit to doing it for small types, usize and smaller
2018-09-29 04:09:12	turbobob	(sizeof(usize) and smaller)
2018-09-29 04:11:13	dragonfire	Yeah, I'm still trying to wrap my brain around when you use a reference and when you don't. I'm from a Java background where references aren't even needed.
2018-09-29 04:11:49	cja	A reference saves a copy, which doesn't really matter when the value it would be referencing is the size of a pointer or less
2018-09-29 04:11:50	Debaran	dragonfire: technically, java is reference types. so that means everything you do is using a reference theoretically
2018-09-29 04:12:02	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-29 04:12:13	cja	reference also lets you modify the object referenced, which has ownership implications
2018-09-29 04:12:17	dragonfire	Right, but it's all hidden from the programmer
2018-09-29 04:12:23	dragonfire	Debaran
2018-09-29 04:12:34	Debaran	dragonfire: that is true, yes
2018-09-29 04:14:24	dragonfire	Having to explicitly manage what is a reference with what is not, along with the concept of borrowing/moving can be confusing sometimes
2018-09-29 04:14:29	dragonfire	Not to complain or anything
2018-09-29 04:14:45	dragonfire	Also, is there a way to get the max number for an integer such as a u8 without explicitly writing it out?
2018-09-29 04:15:18	stephaneyfx	eval: u8::max_value()
2018-09-29 04:15:21	--	Notice(eval): 255
2018-09-29 04:16:33	cja	For a general rule, most of the numeric types can have their size deduced by bit count if you're interested in building that intuition
2018-09-29 04:16:35	Moongoodboy{K}	dragonfire: Java is arguably harder, because it tries to hide what's a reference and what isn't. Rust at least makes it explicitly.
2018-09-29 04:16:39	Moongoodboy{K}	explicit *
2018-09-29 04:17:07	Debaran	it took me quite a bit of working with it to get used to it, it's very much a completely new world of thinking in my opinion, but a rewarding one in the end
2018-09-29 04:17:20	Moongoodboy{K}	also, size isn't the only factor in whether it's more efficient to move or borrow
2018-09-29 04:17:49	Moongoodboy{K}	probably you should just do what makes more sense semantically, unless you're working with /significantly large/ types
2018-09-29 04:18:12	-->	poljar (poljar@moz-ulbuvq.net.t-com.hr) has joined #rust-beginners
2018-09-29 04:19:48	-->	iffy (Adium@moz-7nu.p3t.56.45.IP) has joined #rust-beginners
2018-09-29 04:20:10	<--	iffy (Adium@moz-7nu.p3t.56.45.IP) has quit (Quit: Leaving.)
2018-09-29 04:21:00	<--	poljar1 (poljar@moz-52nqhq.net.t-com.hr) has quit (Ping timeout: 121 seconds)
2018-09-29 04:23:01	<--	niconii (nicole@moz-epcmnd.midco.net) has quit (Quit: leaving)
2018-09-29 04:23:37	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-29 04:24:33	turbobob	(Btw: whenever Moongoodboy{K} says something that contradicts something that I said, assume he's right :D)
2018-09-29 04:25:10	<--	neersighted (sid5776@moz-1vt7bj.irccloud.com) has quit (Connection closed)
2018-09-29 04:25:12	-->	neersighted (sid5776@moz-1vtoql.brockwell.irccloud.com) has joined #rust-beginners
2018-09-29 04:25:15	Moongoodboy{K}	o.o
2018-09-29 04:25:18	 *	Moongoodboy{K} honored :'3
2018-09-29 04:26:04	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-29 04:26:58	Moongoodboy{K}	dragonfire: just to clarify, yes, Copy is a trait. Types that are Copy (i.e. implement Copy) are copied when they would otherwise be moved.
2018-09-29 04:30:14	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-29 04:32:51	dragonfire	Okay, thanks :)
2018-09-29 04:33:07	dragonfire	Thanks to everyone who has helped me tonight
2018-09-29 04:34:16	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 04:36:04	Moongoodboy{K}	Mmhmm ^///^
2018-09-29 04:36:13	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 04:37:09	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-29 04:37:15	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-29 04:37:18	<--	Guest61891 (nj0rd@moz-21qgnn.dsl.tropolys.de) has quit (Ping timeout: 121 seconds)
2018-09-29 04:37:22	ibrokemypie	anyone good at regex here?
2018-09-29 04:37:46	cja	Not bad, but I still end up typing everything into regex101.com
2018-09-29 04:38:00	ibrokemypie	\any chance you could give me a hand?
2018-09-29 04:38:37	ibrokemypie	not even sure regex is the best option here
2018-09-29 04:39:18	Moongoodboy{K}	if you're parsing and you're not sure about that, it's probably not :p
2018-09-29 04:39:29	Moongoodboy{K}	{!ask} though
2018-09-29 04:39:34	ibrokemypie	trying to get the line number of where the sources array begins in a pkgbuild, remove the whole source array, and then insert my own
2018-09-29 04:40:20	ibrokemypie	well, to be clearer, I want to replace some multi-line text in a file with my own
2018-09-29 04:40:55	cja	unfortunately I'm about to get on a plane, but I could try to help later if no one else has
2018-09-29 04:41:02	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 04:41:24	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 04:42:13	emerentius	ibrokemypie: if you can uniquely and reliably match on the array
2018-09-29 04:42:24	emerentius	there's a replace function in the regex crate
2018-09-29 04:42:44	emerentius	and you can activate multiline mode via a flag
2018-09-29 04:44:45	ibrokemypie	I can give you a couple examples
2018-09-29 04:44:48	ibrokemypie	https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=shadowsocks-rust
2018-09-29 04:44:52	ibrokemypie	https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=emercoin
2018-09-29 04:44:55	ibrokemypie	https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=dosbox-x-git
2018-09-29 04:45:44	ibrokemypie	the ultimate aim is to just replace the contents of SOURCE=() with my own, however I think it'd be easier to just remove all text on those lines and insert my own since I already have the current contents in an array
2018-09-29 04:47:51	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 04:48:44	emerentius	if it's always that regular, it should be simple with or without regex
2018-09-29 04:50:02	-->	Guest61891 (nj0rd@moz-1g8ln5.versanet.de) has joined #rust-beginners
2018-09-29 04:50:03	emerentius	with .lines() you can count until you're at one that .starts_with("source=(")
2018-09-29 04:50:39	emerentius	and then until you're at the next one (or same as starting line) that ends with ")"
2018-09-29 04:51:20	emerentius	more complicated if the sources can contain ()
2018-09-29 04:52:23	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 04:54:02	emerentius	gotta go
2018-09-29 04:54:55	ibrokemypie	aight, thanks!
2018-09-29 04:58:19	<--	emerentius (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-29 05:01:24	<--	dragonfire (dragonfire@moz-8tb.c6p.184.47.IP) has quit (Client exited)
2018-09-29 05:14:16	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-29 05:25:56	-->	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has joined #rust-beginners
2018-09-29 05:32:31	--	miles-afk is now known as miles
2018-09-29 05:36:07	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 05:38:10	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-29 05:40:15	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 05:41:58	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 05:42:30	-->	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has joined #rust-beginners
2018-09-29 05:46:30	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 05:47:31	-->	indy21 (indy21@moz-ehuvic.abo.bbox.fr) has joined #rust-beginners
2018-09-29 05:48:34	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 05:48:38	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 05:49:29	<--	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 05:50:35	-->	sainathvd (sainathvd@moz-4bf.abv.87.183.IP) has joined #rust-beginners
2018-09-29 05:56:42	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-29 05:57:39	<--	martin2 (martin@moz-4k9vp1.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-29 05:57:50	-->	martin2 (martin@moz-4k9vp1.anteldata.net.uy) has joined #rust-beginners
2018-09-29 06:05:56	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-29 06:06:13	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-29 06:08:54	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 06:08:58	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 06:12:27	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 06:13:00	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 06:13:04	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 06:13:22	-->	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-29 06:16:29	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 06:17:36	<--	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-29 06:18:01	-->	mib_ikwmre (Mibbit@moz-dii.eh0.172.113.IP) has joined #rust-beginners
2018-09-29 06:18:06	<--	mib_ikwmre (Mibbit@moz-dii.eh0.172.113.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 06:18:10	-->	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has joined #rust-beginners
2018-09-29 06:18:17	-->	Sgeo (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-29 06:19:53	<--	alx741 (alx741@moz-a07.9bn.15.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 06:21:33	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-29 06:21:52	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-29 06:22:19	<--	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 06:22:34	--	U007D_afk is now known as U007D
2018-09-29 06:25:40	-->	benbrandt (Thunderbird@moz-qrf0qg.or.comcast.net) has joined #rust-beginners
2018-09-29 06:25:41	<--	benbrandt (Thunderbird@moz-qrf0qg.or.comcast.net) has quit (Client exited)
2018-09-29 06:26:09	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-29 06:27:11	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has left #rust-beginners
2018-09-29 06:27:35	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-29 06:29:11	<--	indy21 (indy21@moz-ehuvic.abo.bbox.fr) has quit (Ping timeout: 121 seconds)
2018-09-29 06:30:35	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 06:32:28	-->	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-29 06:32:44	-->	indy21 (indy21@moz-ehuvic.abo.bbox.fr) has joined #rust-beginners
2018-09-29 06:34:11	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-29 06:34:35	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-29 06:35:00	-->	umurgdk (umurgdk@moz-aikjtj.ocn.ne.jp) has joined #rust-beginners
2018-09-29 06:36:05	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 06:36:20	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-29 06:36:43	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 06:36:51	-->	Enemies (Enemy@moz-4rd.ekp.83.80.IP) has joined #rust-beginners
2018-09-29 06:37:46	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 06:38:11	Enemies	hii
2018-09-29 06:39:23	-->	mib_2pv9ov (Mibbit@moz-ht1.54o.62.183.IP) has joined #rust-beginners
2018-09-29 06:39:25	<--	mib_2pv9ov (Mibbit@moz-ht1.54o.62.183.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 06:39:32	Enemies	heyy
2018-09-29 06:39:54	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-29 06:40:27	-->	Guest4 (textual@moz-egp.1an.118.45.IP) has joined #rust-beginners
2018-09-29 06:40:27	<--	Guest4 (textual@moz-egp.1an.118.45.IP) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-29 06:40:37	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 06:40:56	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 06:41:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 06:42:31	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 06:44:48	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 06:44:51	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 06:50:56	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-29 06:51:19	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 06:57:29	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 06:58:57	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 06:58:57	--	Raychen1 is now known as Raychen
2018-09-29 07:05:18	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 07:05:30	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-29 07:06:13	-->	Mateon2 (Thunderbird@moz-aeffu6.supernova.orange.pl) has joined #rust-beginners
2018-09-29 07:06:23	ibrokemypie	where should I ask for help getting CI working for my cargo package? sticking point is actually the building of an included c library
2018-09-29 07:06:36	ibrokemypie	https://travis-ci.org/ibrokemypie/makeppkg/builds
2018-09-29 07:07:02	<--	U007D (U007D@moz-c5t.9b9.245.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 07:07:11	ibrokemypie	specifically https://travis-ci.org/ibrokemypie/makeppkg/builds/434890282#L726
2018-09-29 07:07:17	-->	U007D (U007D@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-29 07:07:34	<--	Mateon1 (Thunderbird@moz-hv3i3k.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-29 07:07:36	--	Mateon2 is now known as Mateon1
2018-09-29 07:14:47	<--	cgull (cgull@moz-u3u.ol1.15.216.IP) has quit (Quit: WeeChat 2.1)
2018-09-29 07:15:01	-->	cgull (cgull@moz-u3u.ol1.15.216.IP) has joined #rust-beginners
2018-09-29 07:15:12	<--	cgull (cgull@moz-u3u.ol1.15.216.IP) has quit (Quit: WeeChat 2.2)
2018-09-29 07:16:27	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 07:17:02	-->	Guest4 (textual@moz-egp.1an.118.45.IP) has joined #rust-beginners
2018-09-29 07:17:16	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-29 07:20:41	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-29 07:24:13	-->	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has joined #rust-beginners
2018-09-29 07:28:22	<--	sp1ff_ (sp1ff@moz-ovk.23g.72.38.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 07:28:34	-->	liquidnight (marcus@moz-p5vojh.2fa1.6vf1.0c23.2a01.IP) has joined #rust-beginners
2018-09-29 07:29:48	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 07:30:12	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 07:32:08	-->	Africa-Bambata (Mibbit@moz-va6.h24.160.37.IP) has joined #rust-beginners
2018-09-29 07:32:35	-->	alsuren (uid221919@moz-4vb5l3.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-29 07:32:39	<--	insidious (insidious@moz-5gf.shg.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-29 07:32:46	<--	umurgdk (umurgdk@moz-aikjtj.ocn.ne.jp) has quit (Quit: Konversation terminated!)
2018-09-29 07:33:52	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 07:34:44	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 07:35:58	<--	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-29 07:36:44	--	U007D is now known as U007D_afk
2018-09-29 07:42:39	<--	Africa-Bambata (Mibbit@moz-va6.h24.160.37.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 07:45:31	-->	oms (oms@moz-dd4dur.dyn.telefonica.de) has joined #rust-beginners
2018-09-29 07:49:30	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 07:51:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 07:52:20	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 07:54:34	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 07:56:05	<--	indy21 (indy21@moz-ehuvic.abo.bbox.fr) has quit (Connection closed)
2018-09-29 07:56:20	-->	indy21 (indy21@moz-ehuvic.abo.bbox.fr) has joined #rust-beginners
2018-09-29 07:58:56	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 08:02:54	-->	exbios (ri@moz-dm117q.totalplay.net) has joined #rust-beginners
2018-09-29 08:03:09	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 08:04:07	<--	exbios (ri@moz-dm117q.totalplay.net) has quit (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
2018-09-29 08:04:23	-->	exbios (ri@moz-dm117q.totalplay.net) has joined #rust-beginners
2018-09-29 08:04:46	<--	exbios (ri@moz-dm117q.totalplay.net) has quit (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
2018-09-29 08:05:12	-->	exbios (ri@moz-dm117q.totalplay.net) has joined #rust-beginners
2018-09-29 08:07:11	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 08:08:47	-->	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has joined #rust-beginners
2018-09-29 08:10:49	<--	kyrylo (kyrylo@moz-1la.0tf.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 08:11:40	alatiera__	how do I spawn a steam into an Executor?
2018-09-29 08:12:13	alatiera__	futures::Executor::spawn wants a Future
2018-09-29 08:13:23	-->	yk (yk@moz-aon.5fk.169.109.IP) has joined #rust-beginners
2018-09-29 08:15:04	<--	liquidnight (marcus@moz-p5vojh.2fa1.6vf1.0c23.2a01.IP) has quit (Connection closed)
2018-09-29 08:15:12	-->	arunkumar413 (arunkumar41@moz-pc4.r32.48.157.IP) has joined #rust-beginners
2018-09-29 08:16:01	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-29 08:17:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 08:19:37	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-09-29 08:21:34	Arnavion	Depends on what you want the Executor to do with it
2018-09-29 08:21:53	Arnavion	If you want the executor to drive it to completion, give it a future that resolves when the stream completes, like the one from .for_each()
2018-09-29 08:23:08	-->	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has joined #rust-beginners
2018-09-29 08:24:19	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 08:25:34	-->	cgull (cgull@moz-u3u.ol1.15.216.IP) has joined #rust-beginners
2018-09-29 08:27:41	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Client exited)
2018-09-29 08:28:16	alatiera__	Arnavion, that's what I was looking for, thanks!
2018-09-29 08:28:51	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 08:29:06	<--	indy21 (indy21@moz-ehuvic.abo.bbox.fr) has quit (Ping timeout: 121 seconds)
2018-09-29 08:29:40	<--	yk (yk@moz-aon.5fk.169.109.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 08:30:39	ibrokemypie	why cant i do line.starts_with() when lopping over string.lines()?
2018-09-29 08:30:53	ibrokemypie	the trait `std::ops::FnMut<(char,)>` is not implemented for `std::string::String`
2018-09-29 08:30:58	ibrokemypie	What does this mean?
2018-09-29 08:34:02	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 08:34:04	-->	indy21 (indy21@moz-ehuvic.abo.bbox.fr) has joined #rust-beginners
2018-09-29 08:35:08	ibrokemypie	ah, apparently needed & before it
2018-09-29 08:36:21	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-29 08:38:07	ibrokemypie	how do you convert a usize to an isize?
2018-09-29 08:39:30	<--	Mirconium (Mibbit@moz-12t.ege.220.128.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 08:39:54	<--	bernte (Bernd@moz-uo0rvi.fams.de) has quit (Quit: Leaving)
2018-09-29 08:40:59	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 08:41:04	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 08:42:11	jones	ibrokemypie: if just want to cast the value you can use `as`  (let x = 1usize as isize)
2018-09-29 08:42:20	-->	muvlon (muvlon@moz-vm7g09.5utd.b4gt.a03f.2a02.IP) has joined #rust-beginners
2018-09-29 08:42:42	jones	ibrokemypie: but if you need to handle negative values or values that ar larger than isize::MAX then there is an issue 
2018-09-29 08:43:08	ibrokemypie	as is a thing?
2018-09-29 08:43:26	alatiera__	so if I have a stream, and I want a future at the end but have multiple steps
2018-09-29 08:43:27	jones	indeed it is. just try it:  println!("{}", 1usize as isize);
2018-09-29 08:43:42	jones	!eval 1usize as isize
2018-09-29 08:43:43	alatiera__	do I map/and_then and at the end use for_each?
2018-09-29 08:43:49	jones	oh eval wasn't a rustbot thing
2018-09-29 08:44:36	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2018-09-29 08:48:09	-->	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has joined #rust-beginners
2018-09-29 08:48:16	-->	mib_25ai50 (Mibbit@moz-0tlmr5.wa.comcast.net) has joined #rust-beginners
2018-09-29 08:48:31	mib_25ai50	hello everyone
2018-09-29 08:48:52	mib_25ai50	I am making a merge sort in rust and here is how it looks like: 
2018-09-29 08:48:54	<--	martin2 (martin@moz-4k9vp1.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-29 08:49:23	mib_25ai50	here is how it looks like: http://mibpaste.com/m8New4 
2018-09-29 08:49:38	mib_25ai50	http://mibpaste.com/UZmKzj 
2018-09-29 08:49:48	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Quit: Leaving)
2018-09-29 08:49:52	Minoru	both say "Invalid link!", mib_25ai50 
2018-09-29 08:49:55	mib_25ai50	Sorry those are invalid for some reason
2018-09-29 08:50:08	muvlon	try pasting it into play.rust-lang.org
2018-09-29 08:50:20	muvlon	and send the link to that
2018-09-29 08:50:42	jones	and use the share button, or the link will be miles long ;)
2018-09-29 08:52:19	mib_25ai50	https://hastebin.com/wezadihapa.cs
2018-09-29 08:52:25	mib_25ai50	here this should work
2018-09-29 08:52:37	mib_25ai50	and I am not getting sorted numbers
2018-09-29 08:54:08	mib_25ai50	Ok here is a new one with the main function: https://hastebin.com/wixubedego.cpp
2018-09-29 08:55:53	-->	gallatin (gallatin@moz-ko4nr2.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-29 08:56:08	ibrokemypie	how can i remove a range of lines from a string by line number?
2018-09-29 08:57:39	mib_25ai50	Ok here is the one with the rust playground https://play.rust-lang.org/?gist=1ef71288e3f5e1a322ad3ed21b7e67c8&version=stable&mode=debug&edition=2015
2018-09-29 08:58:36	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-29 08:59:09	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 08:59:36	mib_25ai50	I refactored it a little, here is a better one: https://play.rust-lang.org/?gist=a87619dc59725e1523c5975aab1bdd8b&version=stable&mode=debug&edition=2015
2018-09-29 09:00:29	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-29 09:00:57	<--	mib_25ai50 (Mibbit@moz-0tlmr5.wa.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 09:01:56	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 09:02:07	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-29 09:02:08	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 09:02:13	-->	sockmister (Mibbit@moz-cef8jm.cable.virginm.net) has joined #rust-beginners
2018-09-29 09:02:14	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 09:02:46	<--	sockmister (Mibbit@moz-cef8jm.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 09:06:32	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-09-29 09:07:28	ibrokemypie	can i remove a range from a vec?
2018-09-29 09:08:34	jones	ibrokemypie: maybe drain?
2018-09-29 09:08:43	-->	muvlon_ (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has joined #rust-beginners
2018-09-29 09:08:52	jones	ibrokemypie: my_vec.drain(4..6)
2018-09-29 09:09:02	ibrokemypie	thanks!
2018-09-29 09:09:29	ibrokemypie	can I combine a vector of strings (which are actually just lines from the original string) back into a single multiline string?
2018-09-29 09:09:47	jones	ibrokemypie: use join
2018-09-29 09:10:46	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 09:11:29	<--	recesfulu (recesfulu@moz-k4acsh.pool6.digikabel.hu) has quit (Ping timeout: 121 seconds)
2018-09-29 09:12:38	ibrokemypie	\n doesnt seem to work as a newline, how do I use a newline as a seperator?
2018-09-29 09:14:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 09:14:38	jones	ibrokemypie: is this kind of what you want to do: https://play.rust-lang.org/?gist=1f836f846233d1f81fe84c0c19557adb&version=stable&mode=debug&edition=2015
2018-09-29 09:16:00	ibrokemypie	ah, I was using {:?} rather than {} which just printed "\n" rather than a newline
2018-09-29 09:16:57	jones	I've done that a few times. I have a vim abbreviation that outputs println!("{:#?}", ) so I've tripped up on that one a few times
2018-09-29 09:18:28	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 09:19:06	<--	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-29 09:21:18	<--	arunkumar413 (arunkumar41@moz-pc4.r32.48.157.IP) has quit (Connection closed)
2018-09-29 09:23:00	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 09:23:24	devurandom	Hi!
2018-09-29 09:23:53	devurandom	Given two instances of std::path::Path, is there a function to give me a relative path from one to the other?
2018-09-29 09:24:31	-->	recesfulu (recesfulu@moz-1lhkgi.pool6.digikabel.hu) has joined #rust-beginners
2018-09-29 09:25:33	-->	facemoosh (Mibbit@moz-sm6.dlg.59.143.IP) has joined #rust-beginners
2018-09-29 09:25:57	Minoru	devurandom: something like https://doc.rust-lang.org/std/path/struct.Path.html#method.strip_prefix ?
2018-09-29 09:26:07	devurandom	Minoru: thx!
2018-09-29 09:27:07	facemoosh	What type does T have given, `fn zzz<T>(_: T) {}` and `let y : &mut Vec<u8> = &mut x; zzz(y);`
2018-09-29 09:27:19	-->	PudiPudi (pudipudi@moz-609.77g.133.145.IP) has joined #rust-beginners
2018-09-29 09:27:27	<--	qouwse (qouwse@moz-gqm.est.69.155.IP) has quit (Quit: quit)
2018-09-29 09:28:06	<--	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has quit (Quit: Leaving)
2018-09-29 09:31:09	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 09:32:30	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 09:32:30	--	Raychen1 is now known as Raychen
2018-09-29 09:34:18	devurandom	When I try to declare the result of my function as ->Result<&Path>, I get the error: "expected struct `errors::Error`, found struct `std::path::StripPrefixError`", but when I declare it as ->Result<&Path,StripPrefixError>, I get "wrong number of type arguments: expected 1, found 2". How do I help the compiler?
2018-09-29 09:35:15	devurandom	In https://doc.rust-lang.org/std/path/struct.Path.html#method.strip_prefix the result is written exactly like this...
2018-09-29 09:36:21	-->	mr_sticky (Mibbit@moz-vpcoch.ca.comcast.net) has joined #rust-beginners
2018-09-29 09:37:44	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-29 09:40:32	-->	eyans (a@moz-l83ps6.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-29 09:41:40	<--	alsuren (uid221919@moz-4vb5l3.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-29 09:42:01	-->	mib_98ufwg (Mibbit@moz-eb8ou3.elisa-mobile.fi) has joined #rust-beginners
2018-09-29 09:43:05	Minoru	devurandom: modules often re-define Result to default the second argument (error type) to a module-specific type. Apparently, your code uses that specialized Result rather than the standard one. You need to sort out your imports I guess. If you share the code on play.rust-last.org, we can take a look
2018-09-29 09:43:57	Minoru	mib_98ufwg: excuse me, are you the same as mib_25ai50 who asked about merge sort earlier?
2018-09-29 09:44:23	devurandom	Minoru: I tried to write a function that just wraps strip_prefix(): fn relative(pwd, path) -> ??? {path.strip_prefix(pwd)}
2018-09-29 09:44:51	ibrokemypie	oh great, turns out the library I was using doesnt work with multi-line strings
2018-09-29 09:45:42	devurandom	First thing was that I had to get the lifetimes correct, i.e. relative<'a>(pwd: &Path, path: &'a Path) -> Result<&'a Path, ???>, but then I still had the issue of figuring out what ??? was.
2018-09-29 09:46:08	Minoru	devurandom: yeah, I gathered as much, but I need to see the code to find out what exactly causes the problem
2018-09-29 09:46:41	devurandom	I moved on, since I figured out that there is not much to add to strip_prefix in my code, so I could just use it directly.
2018-09-29 09:46:48	Minoru	it's not something that I ran into myself, so I can't just type out a solution - I simply don't know it yet. But I'm confident I can help you if I see the code that produces the error :)
2018-09-29 09:46:49	devurandom	But in principle the question was interesting.
2018-09-29 09:47:45	devurandom	Well, you should be able to repro with the snippet I gave. I did not have more than that in the function.
2018-09-29 09:47:50	Minoru	you can copy your `fn relative` to the playground, copy all the imports you have in your actual code, and write a barebones main() to feed it some arguments, and make sure it fails with the same error. That'd be enough for me to figure it out
2018-09-29 09:48:01	Minoru	yes, but I need the imports too
2018-09-29 09:51:47	<--	mr_sticky (Mibbit@moz-vpcoch.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 09:53:14	devurandom	Ah, that was use std::path::{Path, PathBuf, StripPrefixError};
2018-09-29 09:53:44	devurandom	But I think in Rust uses for one namespace can influence / hot patch other namespaces, too?
2018-09-29 09:53:56	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 09:54:18	devurandom	So I'd just drop it, until I get to a similar situation again.
2018-09-29 09:55:47	<--	Guest4 (textual@moz-egp.1an.118.45.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 09:56:10	Minoru	hmm, I couldn't make it fail to compile with the error you got, no matter how I tried: https://play.rust-lang.org/?gist=73e09ef568fd0300d8f458a44f8a7841&version=stable&mode=debug&edition=2015 =\
2018-09-29 09:56:21	Minoru	but I'm glad you resolved the issue anyway ;)
2018-09-29 09:57:07	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 09:57:44	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Client exited)
2018-09-29 09:57:58	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 10:01:08	ibrokemypie	"supposedly" my package should be fucntional now to some extent, though I cant actually test it as I am away from my arch install
2018-09-29 10:01:23	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 10:02:02	ibrokemypie	anyone running arch willing to give it a test for me? it is still missing some functionality and I just found that I may have to rewrite a library that it relies on, but at the moment it should work at a basic level
2018-09-29 10:02:45	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 10:02:45	--	Raychen1 is now known as Raychen
2018-09-29 10:03:07	devurandom	Minoru: Thanks a lot for having a look!
2018-09-29 10:04:17	ibrokemypie	also wow --release is less than half the size of --debug and runs almost 25% faster
2018-09-29 10:06:21	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-29 10:10:01	<--	mib_98ufwg (Mibbit@moz-eb8ou3.elisa-mobile.fi) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 10:10:14	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-29 10:11:20	<--	PudiPudi (pudipudi@moz-609.77g.133.145.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-29 10:12:35	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 10:14:36	<--	simonada_ (simonadamei@moz-h28n0b.v5b0.659g.0a61.2001.IP) has quit (Connection closed)
2018-09-29 10:14:53	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-29 10:16:13	<--	prospector (prospector@moz-tl2.cn0.76.45.IP) has quit (Quit: Prospecting gems of CS)
2018-09-29 10:16:59	-->	prospector (prospector@moz-tl2.cn0.76.45.IP) has joined #rust-beginners
2018-09-29 10:17:07	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 10:19:02	-->	simonadameit (simonadamei@moz-flp2nt.v5b0.659g.0a61.2001.IP) has joined #rust-beginners
2018-09-29 10:20:58	-->	Gachuk (gachuk@moz-v298o1.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-29 10:23:43	-->	sprt (sprt@moz-4na.0s8.86.91.IP) has joined #rust-beginners
2018-09-29 10:25:25	<--	sprt (sprt@moz-4na.0s8.86.91.IP) has quit (Client exited)
2018-09-29 10:25:42	-->	quartz55 (quartz@moz-8achpf.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-29 10:27:19	-->	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-29 10:30:41	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-29 10:31:34	<--	sainathvd (sainathvd@moz-4bf.abv.87.183.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-29 10:32:08	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-29 10:32:20	<--	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (Ping timeout: 121 seconds)
2018-09-29 10:33:25	<--	prospector (prospector@moz-tl2.cn0.76.45.IP) has quit (Quit: Prospecting gems of CS)
2018-09-29 10:34:06	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-29 10:40:04	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-29 10:42:17	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-29 10:46:12	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-09-29 10:48:13	-->	prospector (prospector@moz-scd.iqd.179.95.IP) has joined #rust-beginners
2018-09-29 10:48:20	-->	brucem (textual@moz-pmb.gms.232.182.IP) has joined #rust-beginners
2018-09-29 10:49:16	<--	prospector (prospector@moz-scd.iqd.179.95.IP) has quit (Quit: Prospecting gems of CS)
2018-09-29 10:49:29	-->	prospector (prospector@moz-scd.iqd.179.95.IP) has joined #rust-beginners
2018-09-29 10:50:16	-->	pamaury (pamaury@moz-vk4.qc3.235.46.IP) has joined #rust-beginners
2018-09-29 10:53:24	pickfire	Is there any alternatives to iter.map(|c| Struct { c.name.replace("-", " "), ..c }) just to modify an item in c of type Struct?
2018-09-29 10:53:40	pickfire	I did clippy but it shows nothing about the block.
2018-09-29 10:55:41	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-29 10:57:31	-->	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-29 10:58:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 10:59:14	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-29 11:01:22	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-29 11:01:53	<--	Enemies (Enemy@moz-4rd.ekp.83.80.IP) has quit (Quit: )
2018-09-29 11:02:12	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-29 11:02:12	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-29 11:03:12	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-29 11:04:40	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-29 11:05:05	-->	ysz (ysz@moz-240.1m0.76.80.IP) has joined #rust-beginners
2018-09-29 11:05:26	<--	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-29 11:06:42	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 11:08:11	<--	simonadameit (simonadamei@moz-flp2nt.v5b0.659g.0a61.2001.IP) has quit (Connection closed)
2018-09-29 11:09:00	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-29 11:09:24	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-29 11:11:14	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 11:12:19	-->	simonadameit (simonadamei@moz-g9krnj.v5b0.659g.0a61.2001.IP) has joined #rust-beginners
2018-09-29 11:19:19	<--	ysz (ysz@moz-240.1m0.76.80.IP) has quit (Quit: This computer has gone to sleep)
2018-09-29 11:19:35	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 11:19:43	-->	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-29 11:20:23	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-29 11:21:49	-->	alx741 (alx741@moz-a07.9bn.15.190.IP) has joined #rust-beginners
2018-09-29 11:22:51	-->	ysz (ysz@moz-240.1m0.76.80.IP) has joined #rust-beginners
2018-09-29 11:23:57	<--	ysz (ysz@moz-240.1m0.76.80.IP) has quit (Quit: This computer has gone to sleep)
2018-09-29 11:25:48	-->	calatalee (Mibbit@moz-c83.ldl.251.213.IP) has joined #rust-beginners
2018-09-29 11:26:27	calatalee	How can I use struct (member) function with and_then?
2018-09-29 11:28:25	-->	quartz555 (quartz@moz-5o604o.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-29 11:29:00	drager	calatalee: How do you mean? Do you want to do YourStuct.field.and_then?
2018-09-29 11:30:26	calatalee	I really want to use this effectively: https://docs.rs/vulkano/0.10.0/vulkano/command_buffer/struct.AutoCommandBufferBuilder.html
2018-09-29 11:30:40	calatalee	I don't want my code to panic, so I don't use unwrap
2018-09-29 11:31:41	<--	quartz55 (quartz@moz-8achpf.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 11:32:35	drager	calatalee: So, the new function returns a Result. You can map over the result if you want to or if you want to return a another result in you can use and_then yeah
2018-09-29 11:32:52	drager	-in
2018-09-29 11:33:07	calatalee	I figured I'd do something like this: https://gist.github.com/rust-play/4fce8ff307b9befd09ab2bef4fccf74c but the errors are of different type
2018-09-29 11:33:32	calatalee	I think I want to box them, how could I do that
2018-09-29 11:33:45	calatalee	(this is kind of next step)
2018-09-29 11:35:49	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-29 11:36:30	drager	So, I guess the copy_buffer function or build function returns a Result with a different type from the new so then and_then wont be happy
2018-09-29 11:36:54	drager	Do you have a playground up?
2018-09-29 11:37:49	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 11:39:24	calatalee	I use this volcano crate, can I also use it in playground?
2018-09-29 11:39:59	calatalee	https://play.rust-lang.org/?gist=f90bc6494bea7a2174e38b74be8ba826&version=stable&mode=debug&edition=2015
2018-09-29 11:40:15	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 11:40:17	drager	I think the playground has some crates but not all
2018-09-29 11:40:20	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 11:40:27	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-29 11:42:33	drager	calatalee: I can try it locally
2018-09-29 11:42:54	calatalee	Great
2018-09-29 11:43:23	calatalee	https://play.rust-lang.org/?gist=154ddaaf94858c5253474bd0630d6b7a&version=stable&mode=debug&edition=2015
2018-09-29 11:43:34	calatalee	Added cargo.toml content
2018-09-29 11:44:08	dpc1	calatalee: what's the issue?
2018-09-29 11:44:40	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 11:44:49	calatalee	dpc1: https://gist.github.com/rust-play/4fce8ff307b9befd09ab2bef4fccf74c
2018-09-29 11:46:20	drager	calatalee: So, you can create your own Error type and use `map_err` to make the Error type's match.
2018-09-29 11:48:19	drager	calatalee: https://play.rust-lang.org/?gist=14e4401a52f7384835431ca9cdb989a9&version=stable&mode=debug&edition=2015
2018-09-29 11:48:28	facemoosh	Does `match thing.x {...}` always just take a shared reference to thing.x for the lifetime of that inner scope?
2018-09-29 11:48:43	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 11:49:15	drager	calatalee: Maybe not so good solution but that makes it compile
2018-09-29 11:50:28	calatalee	drager: I see, is there a way to apply the same map_err to every and_then call? For example, if I really want to just box an error there?
2018-09-29 11:50:38	facemoosh	I'm trying to say, is there some difference between `match thing.x {...}` and `match &thing.x {...}`?
2018-09-29 11:52:21	drager	calatalee: Hmm, I don't think so
2018-09-29 11:54:26	calatalee	drager: got it; now I have difficulties with boxing the error
2018-09-29 11:54:44	drager	calatalee: Here's another solution; https://play.rust-lang.org/?gist=3cfb4e9ef61414bdf01779706bf83b2f&version=stable&mode=debug&edition=2015
2018-09-29 11:54:47	calatalee	drager:  I tried `.map_err(|e| Box::new(e))`
2018-09-29 11:55:39	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-29 11:55:55	calatalee	drager: you example assings the result of `build` to the same var that hold builder, and those are diffrent types
2018-09-29 11:56:17	drager	Yeah, called shadowing
2018-09-29 11:57:38	drager	calatalee: https://doc.rust-lang.org/book/second-edition/ch03-01-variables-and-mutability.html#shadowing
2018-09-29 11:58:25	calatalee	drager: wow, that's new
2018-09-29 11:59:43	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 11:59:54	drager	"Shadowing thus spares us from having to come up with different names, such as spaces_str and spaces_num"
2018-09-29 12:00:49	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 12:01:12	calatalee	drager: cool, thanks. I was just trying to see how can I structure the code, and the naive idea was to use builder with chained calls; seems like just reassigning the value waorks better for this particular case, but my concern with that was actually that builder will have to have it's own name
2018-09-29 12:01:50	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 12:02:25	calatalee	drager: this shadowing thing looks scary at first, but then it solved the real problem, so I'll take it
2018-09-29 12:02:31	calatalee	Thanks a lot
2018-09-29 12:02:34	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 12:02:35	-->	arunkumar413 (arunkumar41@moz-pc4.r32.48.157.IP) has joined #rust-beginners
2018-09-29 12:02:46	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-29 12:03:07	drager	calatalee: No problem! Good luck
2018-09-29 12:05:21	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 12:06:16	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-29 12:07:11	<--	brucem (textual@moz-pmb.gms.232.182.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 12:08:34	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-29 12:08:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 12:09:29	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 12:09:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 12:12:59	-->	Dariost (Dariost@moz-imi.plf.48.151.IP) has joined #rust-beginners
2018-09-29 12:15:47	jones	would 1u8 as u64 occupy 8 bytes or 1 byte?
2018-09-29 12:18:15	kimundi	define occupy where?
2018-09-29 12:18:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 12:18:48	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 12:19:05	jones	ah right, that was poorly formulated of me. given this: let x = 1u8; let y = 1u64; if x as u64 > y {}  
2018-09-29 12:19:10	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-29 12:19:25	-->	ysz (ysz@moz-nra.006.3.81.IP) has joined #rust-beginners
2018-09-29 12:20:32	jones	Would the if statement convert x to a u64 ?
2018-09-29 12:21:18	dpc1	eval: let x = 1u8; let y = 2u64; if x as u64 > y { println!(
2018-09-29 12:21:20	--	Notice(eval): error: incorrect close delimiter: `}`
2018-09-29 12:21:23	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=e4a4d4e2fa2d6a75889f0ea4219351c6&version=stable&mode=debug
2018-09-29 12:21:25	kimundi	`as` is a cast, so yes - x as u64 results in a value of type u64. The variable x itself should not be affected by it, unless you remove the u8 typehint
2018-09-29 12:21:31	dpc1	eval: let x = 1u8; let y = 2u64; if x as u64 > y { println!("haha") }
2018-09-29 12:21:34	--	Notice(eval): ()
2018-09-29 12:21:44	dpc1	eval: let x = 2u8; let y = 1u64; if x as u64 > y { println!("haha") }
2018-09-29 12:21:46	<--	ysz (ysz@moz-nra.006.3.81.IP) has quit (Quit: Leaving)
2018-09-29 12:21:47	--	Notice(eval): haha
2018-09-29 12:21:47	--	Notice(eval): ()
2018-09-29 12:21:59	kimundi	eval: let x = 2; let y = 1u64; if x as u64 > y { println!("haha") }
2018-09-29 12:22:02	--	Notice(eval): haha
2018-09-29 12:22:02	--	Notice(eval): ()
2018-09-29 12:22:30	dpc1	eval: let x = 2u8; let y = 1u64; if x > y { println!("haha") }
2018-09-29 12:22:33	kimundi	eval: let x = 2; let y = 1u64; if x as u64 > y { println!("haha") } (::std::mem::sizeof_val(&x), ::std::mem::sizeof_val(&y))
2018-09-29 12:22:33	--	Notice(eval): error[E0308]: mismatched types
2018-09-29 12:22:35	--	Notice(eval): error[E0425]: cannot find function `sizeof_val` in module `std::mem`
2018-09-29 12:22:36	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=5fcd5162521ec242391b3d265e6bdf3f&version=stable&mode=debug
2018-09-29 12:22:38	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=229141b2591179dbf34000dcefe33231&version=stable&mode=debug
2018-09-29 12:23:00	kimundi	eval: let x = 2; let y = 1u64; if x as u64 > y { println!("haha") } (::std::mem::size_of_val(&x), ::std::mem::size_of_val(&y))
2018-09-29 12:23:03	--	Notice(eval): haha
2018-09-29 12:23:03	--	Notice(eval): (4, 8)
2018-09-29 12:23:08	kimundi	eval: let x = 2u8; let y = 1u64; if x as u64 > y { println!("haha") } (::std::mem::size_of_val(&x), ::std::mem::size_of_val(&y))
2018-09-29 12:23:11	--	Notice(eval): haha
2018-09-29 12:23:11	--	Notice(eval): (1, 8)
2018-09-29 12:23:22	-->	AtumT (IRC@moz-ii8.sqb.95.179.IP) has joined #rust-beginners
2018-09-29 12:23:26	kimundi	interesting that it defaults to a i32, huh...
2018-09-29 12:23:27	-->	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-29 12:23:36	jones	waaa
2018-09-29 12:23:40	jones	now I'm even more confused :D
2018-09-29 12:23:43	kimundi	guess as cast are not type-inferring there
2018-09-29 12:24:30	kimundi	jones: Eh, its simple. A integer literal without type suffix (so 2 instead of 2u8) is generic, and need to be inferred to the right type by the compiler. If there is no known target type, it defaults to i32
2018-09-29 12:24:43	jones	oh righ
2018-09-29 12:25:40	jones	I understand that the type of x doesn't change, but during the statement would x as 64 occupy 8 bytes
2018-09-29 12:26:24	jones	The reason I'm asking is because I'm storing a value as a u8, but I'm always going to compare it to a usize, so wonder if it's pointless to store it as a u8 in the first place if casting it is going to consume 8 bytes anyway
2018-09-29 12:26:45	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-29 12:27:06	kimundi	jones: Due to how a compilers code generation actually makes, "during the if statement" does not make much sense
2018-09-29 12:27:59	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 12:28:58	jones	I can see I'm not thinking about this correctly
2018-09-29 12:29:01	kimundi	jones: Storing it as an u8 does not amek a difference. neither would storing it as a usize or u64, for that matter
2018-09-29 12:29:38	kimundi	Like, if you assume x86_64 as a platform, then its 64 bit registers for both involed values to begin with
2018-09-29 12:29:48	jones	really?! 
2018-09-29 12:30:01	jones	So they would take up the same amount of space?
2018-09-29 12:30:18	jones	I thought you could store eight u8 for one u64 D:
2018-09-29 12:30:19	facemoosh	If the u8 value is stored on an 8 byte aligned address, it can do a cmp from the memory location.
2018-09-29 12:30:28	kimundi	optimizing for storage size of variables is generally only needed for explicit data structures in memory, like deciding between Vec<u8> or Vec<u64> for example
2018-09-29 12:30:49	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 12:30:54	kimundi	jones: Regsiters are not the same as memory locations
2018-09-29 12:31:16	facemoosh	Both values don't need to be in a register, just one of them.
2018-09-29 12:31:32	kimundi	And once the optimizer is done with your code, a lot will have changed anyway
2018-09-29 12:31:47	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-29 12:33:02	facemoosh	jones: Why not look at the disassembly?
2018-09-29 12:33:14	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-29 12:33:22	jones	facemoosh: because I don't understand it
2018-09-29 12:34:19	jones	I have tried to look at the assembly output on the playground but it's above me at this point
2018-09-29 12:34:27	jones	above my understanding I mean
2018-09-29 12:34:42	kimundi	jones: Try godbolt: https://godbolt.org/z/q6PKx_
2018-09-29 12:34:43	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 12:35:17	kimundi	In this example I linked, the assembly resulted in a constant being returned for example
2018-09-29 12:35:28	jones	ah right
2018-09-29 12:35:46	kimundi	And here with actual code: https://godbolt.org/z/rPLYAT
2018-09-29 12:36:55	jones	okay so `mov eax, 42` means move 42 into a registry?
2018-09-29 12:37:14	kimundi	register
2018-09-29 12:37:17	kimundi	and yes :)
2018-09-29 12:37:34	jones	cmp would be compare I guess
2018-09-29 12:37:42	kimundi	the x84_64 calling convention uses registers for passing in arguments and returning them
2018-09-29 12:37:52	kimundi	eax is generally the first argument, and the return value
2018-09-29 12:39:04	kimundi	https://wiki.osdev.org/Calling_Conventions - see the "System V X86_64" entry for how it works under linux on x64_64
2018-09-29 12:39:42	jones	I feel like I was just kicked down to level 1 again :p
2018-09-29 12:40:02	kimundi	jones: Here is a example with two versions, u8 and u64: https://godbolt.org/z/PnCBiO
2018-09-29 12:40:35	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-09-29 12:40:47	kimundi	The onle significant difference is that the u8 gets zero-extended to a 64 bit value in the register first, but there is no additional space used
2018-09-29 12:41:13	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 12:41:20	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-29 12:41:42	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 12:43:00	kimundi	jones: Eh, this stuff is complicated, and not really needed to know for making the right decisions for cases like your question, but its neat to look at and get a feeling for :)
2018-09-29 12:44:41	jones	I am not trying to decide if I should spend some time learning more about this ;)
2018-09-29 12:44:47	jones	Well I should
2018-09-29 12:45:38	jones	I am reading a bunch of data over a network so u8 makes sense, but I got curious about storing the value
2018-09-29 12:46:23	jones	I guess I chould store it as a u64 if it doesn't really matter since I have to compare it to a u64 in the end
2018-09-29 12:47:36	kimundi	jones: This sounds mainly like a readability decision
2018-09-29 12:47:46	kimundi	"is the code more clear with the variable being a u8 or a u64"
2018-09-29 12:48:21	jones	that's a good point, and a u8 is absolutely more clear as the value should never exceed 127 (I'm using one bit of that for something else)
2018-09-29 12:48:38	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 12:49:34	jones	I think it's a slight fear of writing something that is horribly unoptimised 
2018-09-29 12:50:24	jones	It's all probably rather silly and I should go and lecture my self about premature optimisation 
2018-09-29 12:50:37	dpc1	xD
2018-09-29 12:51:19	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-29 12:51:41	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 12:53:03	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 12:53:21	jones	I had to admit that the more I think of it the more I've thought of memory as byte buffers 
2018-09-29 12:54:56	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 12:55:43	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 12:59:28	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 13:03:06	jones	Thanks kimundi and dpc1. I'm now reading about x86 assembly
2018-09-29 13:03:11	dpc1	:)
2018-09-29 13:03:49	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (The TLS connection was non-properly terminated.)
2018-09-29 13:05:44	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-29 13:06:51	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Connection closed)
2018-09-29 13:07:09	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-29 13:08:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 13:10:19	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 13:10:50	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 13:11:34	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 13:12:11	-->	mib_obr9bq (Mibbit@moz-h8tgs8.natpool.mwn.de) has joined #rust-beginners
2018-09-29 13:15:00	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-29 13:15:13	-->	BroodFromBelow (BroodFromBe@moz-49ekok.uberspace.de) has joined #rust-beginners
2018-09-29 13:15:36	BroodFromBelow	hey can someone help me with this playground? https://play.rust-lang.org/?gist=20a70ca42add6268fc6a355d8e832228&version=stable&mode=debug&edition=2015
2018-09-29 13:15:53	BroodFromBelow	I just can't figure out how to access z or rather fix the borrow issue with *y
2018-09-29 13:16:50	<--	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has quit (The TLS connection was non-properly terminated.)
2018-09-29 13:16:57	<--	muvlon_ (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has quit (Connection closed)
2018-09-29 13:17:22	-->	muvlon_ (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has joined #rust-beginners
2018-09-29 13:17:45	-->	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has joined #rust-beginners
2018-09-29 13:17:46	-->	umurgdk (umurgdk@moz-v13kg6.dti.ne.jp) has joined #rust-beginners
2018-09-29 13:19:06	Moongoodboy{K}	BroodFromBelow: you can /use/ `y` (and its inner Object); you just can't mutate or move it
2018-09-29 13:19:15	Moongoodboy{K}	also you probably wanna use `if let` or match instead of map()
2018-09-29 13:19:39	Moongoodboy{K}	and possibly early returns instead of rightward-drifting `if let`s or `match`es
2018-09-29 13:21:25	BroodFromBelow	match would be executed on *y right?
2018-09-29 13:21:39	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-29 13:22:06	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-09-29 13:22:40	Moongoodboy{K}	match reference.try_read() { Ok(guard) => { /* stuff */ }, Err(error) => { /* handle it */ } }
2018-09-29 13:22:57	<--	fritschy (fritschy@moz-hb97a0.de) has quit (Quit: leaving)
2018-09-29 13:23:06	-->	fritschy (fritschy@moz-hb97a0.de) has joined #rust-beginners
2018-09-29 13:24:03	-->	dekokun_ (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 13:24:33	Moongoodboy{K}	you can also chain Result and Option to have one block that's executed if the locking succeeds /and/ the thing was Some, and another executed otherwise
2018-09-29 13:24:55	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Connection closed)
2018-09-29 13:24:55	Moongoodboy{K}	and if you post a more real example, we can advise you better :3
2018-09-29 13:25:16	Moongoodboy{K}	(there are a /lot/ of ways to use Option and Result, and a few idioms)
2018-09-29 13:25:33	BroodFromBelow	yeah... it is a bit of a mess i think and isolating the problem is a bit tricky for me I think
2018-09-29 13:25:45	BroodFromBelow	can I kinda... deep match Guard(Option())
2018-09-29 13:26:13	<--	dekokun_ (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-29 13:26:24	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 13:26:26	Moongoodboy{K}	No, because the structure of the guard is private. It only derefs to the inner type (Option<Object> in this case).
2018-09-29 13:26:40	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-29 13:27:02	Moongoodboy{K}	You can go `Ok(guard) => match *guard` directly, though (or, as I mentioned, use chaining)
2018-09-29 13:27:10	-->	rmekarni (rmekarni@moz-k1u4vc.rev.numericable.fr) has joined #rust-beginners
2018-09-29 13:27:40	<--	pschichtel (pschichtel@moz-c4c50h.cubyte.net) has quit (Ping timeout: 121 seconds)
2018-09-29 13:29:55	<--	gallatin (gallatin@moz-ko4nr2.pools.vodafone-ip.de) has quit (Connection closed)
2018-09-29 13:30:12	-->	gridikgrik (Mibbit@moz-oii.4fl.166.125.IP) has joined #rust-beginners
2018-09-29 13:31:56	-->	pschichtel (pschichtel@moz-5dlcn1.fra1.cubyte.org) has joined #rust-beginners
2018-09-29 13:32:35	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-29 13:33:11	BroodFromBelow	I think I run more or less into the same issue Moongoodboy{K}
2018-09-29 13:33:47	BroodFromBelow	I tried rewriting it into match reference.try_read() {
2018-09-29 13:33:47	BroodFromBelow	                Ok(y) => match *y {
2018-09-29 13:33:47	BroodFromBelow	                    Some(z) => println!("{:?}", z),
2018-09-29 13:33:47	BroodFromBelow	                    _ => (),
2018-09-29 13:33:47	BroodFromBelow	                },
2018-09-29 13:33:47	BroodFromBelow	                _ => (),
2018-09-29 13:33:47	BroodFromBelow	            }
2018-09-29 13:34:06	BroodFromBelow	but that results into y not being able to move out of borrow once again
2018-09-29 13:34:51	Moongoodboy{K}	`&*y` should work
2018-09-29 13:34:58	Moongoodboy{K}	oh, wait, it's an Option, so you need...
2018-09-29 13:35:07	Moongoodboy{K}	y.as_ref()
2018-09-29 13:35:41	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 13:35:52	BroodFromBelow	so y.as_ref() instead of &*y?
2018-09-29 13:35:58	Moongoodboy{K}	yeah
2018-09-29 13:36:01	<--	pschichtel (pschichtel@moz-5dlcn1.fra1.cubyte.org) has quit (Ping timeout: 121 seconds)
2018-09-29 13:36:23	-->	orium (fulano@moz-cjq57u.cable.virginm.net) has joined #rust-beginners
2018-09-29 13:36:28	BroodFromBelow	thank you my god that was the issue
2018-09-29 13:37:07	Moongoodboy{K}	and yeah, if you're just gonna do `_ => ()` twice like that, instead go `if let Some(string) = lock.try_read().ok().and_then(|o| o) { println!("{:?}", string"); }`
2018-09-29 13:37:10	BroodFromBelow	but shouldn't &*y do the same?
2018-09-29 13:37:23	BroodFromBelow	oOo
2018-09-29 13:37:25	Moongoodboy{K}	`&*y` gives you an &Option<Object>
2018-09-29 13:37:30	Moongoodboy{K}	as_ref() gives you an Option<&Object>
2018-09-29 13:37:30	BroodFromBelow	there is so many different ways XD
2018-09-29 13:37:33	BroodFromBelow	phew
2018-09-29 13:37:36	Moongoodboy{K}	uh-huh! :3
2018-09-29 13:37:42	<--	gridikgrik (Mibbit@moz-oii.4fl.166.125.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 13:37:49	Moongoodboy{K}	this eliminates one level of nesting and a couple of `_ => {}`
2018-09-29 13:37:50	BroodFromBelow	I am not fit enough yet to do that short hand version stuff
2018-09-29 13:38:00	BroodFromBelow	but I will check it out
2018-09-29 13:38:19	BroodFromBelow	okay that &*y and as_ref part is brilliant
2018-09-29 13:38:23	BroodFromBelow	that helped me so much
2018-09-29 13:38:43	<--	rmekarni (rmekarni@moz-k1u4vc.rev.numericable.fr) has quit (Connection closed)
2018-09-29 13:38:48	<--	umurgdk (umurgdk@moz-v13kg6.dti.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 13:39:31	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 13:39:39	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-29 13:39:48	Moongoodboy{K}	...wait...you can't use the and_then() trick, because you still can't match within the guard XD
2018-09-29 13:39:55	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 13:40:19	Moongoodboy{K}	and also you need the guard to be in scope so that you can borrow from it.
2018-09-29 13:40:30	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 13:40:47	BroodFromBelow	on your short hand version?
2018-09-29 13:40:51	Moongoodboy{K}	so that would give you a /temporary value doesn't live long enough/ even if it typechecked
2018-09-29 13:40:51	Moongoodboy{K}	yeah
2018-09-29 13:40:58	BroodFromBelow	yeah I used ok before
2018-09-29 13:41:07	Moongoodboy{K}	so you do unfortunately need to uh
2018-09-29 13:41:21	Moongoodboy{K}	either early return, or nest `if let`s, depending on stuff
2018-09-29 13:41:53	BroodFromBelow	I think that I will be able to figure out
2018-09-29 13:42:03	BroodFromBelow	the thing that was really blocking me was as_ref
2018-09-29 13:42:03	-->	pschichtel (pschichtel@moz-5dlcn1.fra1.cubyte.org) has joined #rust-beginners
2018-09-29 13:42:05	BroodFromBelow	I think
2018-09-29 13:42:29	 *	Moongoodboy{K} nods. :)
2018-09-29 13:42:40	BroodFromBelow	XD
2018-09-29 13:44:10	-->	umurgdk (umurgdk@moz-v13kg6.dti.ne.jp) has joined #rust-beginners
2018-09-29 13:44:16	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-29 13:45:04	-->	dark-knight (dark-knight@moz-067kkd.dynamic.surfer.at) has joined #rust-beginners
2018-09-29 13:47:45	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-29 13:48:29	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 13:49:03	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 13:50:02	-->	AtEx (Mibbit@moz-s5fqul.dynamicip.rima-tde.net) has joined #rust-beginners
2018-09-29 13:50:23	<--	AtEx (Mibbit@moz-s5fqul.dynamicip.rima-tde.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 13:53:35	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 13:55:27	<--	facemoosh (Mibbit@moz-sm6.dlg.59.143.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 14:00:58	<--	alx741 (alx741@moz-a07.9bn.15.190.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 14:04:09	<--	dark-knight (dark-knight@moz-067kkd.dynamic.surfer.at) has quit (Quit: Leaving.)
2018-09-29 14:04:48	<--	Dima (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 14:09:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 14:10:26	<--	muvlon (muvlon@moz-vm7g09.5utd.b4gt.a03f.2a02.IP) has quit (Connection closed)
2018-09-29 14:11:21	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-29 14:11:27	-->	jony_ (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 14:11:43	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 14:12:47	-->	emerentius (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-29 14:13:10	--	emerentius is now known as emerent
2018-09-29 14:13:17	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-29 14:13:57	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 14:14:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 14:15:32	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-29 14:15:45	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 14:16:19	<--	jony_ (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 14:17:09	-->	Eragon47 (Eragon@moz-earppj.abo.wanadoo.fr) has joined #rust-beginners
2018-09-29 14:18:29	<--	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-29 14:20:31	-->	cp (cp@moz-4f5h05.asahi-net.or.jp) has joined #rust-beginners
2018-09-29 14:21:28	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 14:22:14	--	U007D_afk is now known as U007D
2018-09-29 14:22:38	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-29 14:23:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 14:25:41	--	dustinm` is now known as ivan
2018-09-29 14:27:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 14:31:47	<--	pamaury (pamaury@moz-vk4.qc3.235.46.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 14:33:16	<--	s_e (s_e@moz-5s84hu.plus.com) has quit (Connection closed)
2018-09-29 14:37:57	-->	mib_nva1t7 (Mibbit@moz-idr.tar.53.201.IP) has joined #rust-beginners
2018-09-29 14:38:24	mib_nva1t7	How do I compare a [u8] with a &[u8; 3]? code[0..3] == b"Set"
2018-09-29 14:39:00	-->	mib_lrg5q4 (Mibbit@moz-qcv.0cr.149.169.IP) has joined #rust-beginners
2018-09-29 14:39:01	Moongoodboy{K}	in this case, with starts_with() :)
2018-09-29 14:39:32	Moongoodboy{K}	in the general case, I think you're just missing an & in front of the left side. Slicing…
2018-09-29 14:40:49	devurandom	Is https://github.com/alexcrichton/futures-await still a thing, or has it been integrated into the language or other crates already?
2018-09-29 14:40:51	-->	s_e (s_e@moz-5s84hu.plus.com) has joined #rust-beginners
2018-09-29 14:41:43	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 14:41:55	Moongoodboy{K}	eval: fn test(foo: &[u8]) -> &[u8] { foo[0..3] } test(b"it's a bytestring!")
2018-09-29 14:41:57	--	Notice(eval): error[E0308]: mismatched types
2018-09-29 14:41:59	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=334a18aa94225b31ceedb769ea9941f1&version=stable&mode=debug
2018-09-29 14:42:21	-->	mib_f9h40b (Mibbit@moz-mskqd3.abo.wanadoo.fr) has joined #rust-beginners
2018-09-29 14:42:32	<--	mib_f9h40b (Mibbit@moz-mskqd3.abo.wanadoo.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 14:43:12	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 14:43:54	<--	s_e (s_e@moz-5s84hu.plus.com) has quit (Quit: Leaving)
2018-09-29 14:44:30	<--	nicoulaj (nicoulaj@moz-0b5h75.net) has quit (Quit: ZNC - https://znc.in)
2018-09-29 14:45:13	drager	devurandom: I think it's coming to the language
2018-09-29 14:45:29	drager	Maybe in the 2018 edition?
2018-09-29 14:45:58	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 14:47:44	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 14:48:21	<--	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-29 14:49:04	-->	nicoulaj (nicoulaj@moz-0b5h75.net) has joined #rust-beginners
2018-09-29 14:52:13	-->	s_e (s_e@moz-5s84hu.plus.com) has joined #rust-beginners
2018-09-29 14:55:56	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 14:58:33	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-29 14:59:13	<--	umurgdk (umurgdk@moz-v13kg6.dti.ne.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 15:01:00	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-29 15:01:09	mib_nva1t7	got it
2018-09-29 15:01:59	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-29 15:03:34	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:03:42	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 15:04:17	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 15:05:27	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-29 15:05:28	-->	jihi (jih@moz-rcvvnr.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-29 15:06:06	dwigton	I am looking for deeper info on Error handling. I am using diesel's QueryResult in places I should probably have my own result type. Is there a trait or something I can put on my type to automatically convert a QueryResult to MyResult.
2018-09-29 15:06:33	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-29 15:07:43	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:07:47	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 15:08:19	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 15:08:21	dwigton	So I can still use .get_result(connection)?; in a function that returns MyResult<()>
2018-09-29 15:13:06	drager	dwigton: You can create your own Error type which implements From
2018-09-29 15:13:29	<--	gregg (greg@moz-00mjdg.gnumpf.tk) has quit (Connection closed)
2018-09-29 15:13:46	drager	dwigton: Here's a good blog post; https://blog.burntsushi.net/rust-error-handling/
2018-09-29 15:14:05	-->	Dima (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-09-29 15:14:49	dwigton	Ah cool thanks. So the magic happens at the Error type level and not the ResultType?
2018-09-29 15:15:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 15:16:13	drager	Yeah, because the Error type implements From which makes it possbile to use ?
2018-09-29 15:17:14	-->	Xinayder (alex@moz-36b.21s.213.186.IP) has joined #rust-beginners
2018-09-29 15:18:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 15:18:48	dwigton	So do I need to reimplement From for diesel Error type in order to get it to come out correctly? using ? on diesel call as well as throwing my own errors in different match branches.
2018-09-29 15:19:20	<--	RockyTV (alex@moz-rdbnla.gvt.net.br) has quit (Ping timeout: 121 seconds)
2018-09-29 15:20:43	drager	dwigton: https://blog.burntsushi.net/rust-error-handling/#code-io-basic-error-custom-from-2
2018-09-29 15:22:40	mib_nva1t7	How do I pattern match against [u8] using ascii strings as the pattern? I.e., `match bytes { b"foo" => ... }` doesn't work because `b"foo"` is a slice, not a [u8]
2018-09-29 15:22:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:23:04	kimundi	try &b"asas"
2018-09-29 15:23:12	mib_nva1t7	never mind, I could have just &bytes instead
2018-09-29 15:23:15	mib_nva1t7	kimundi: oh ok
2018-09-29 15:23:16	kimundi	or that
2018-09-29 15:23:32	kimundi	I might be wrong with my suggestion though
2018-09-29 15:24:56	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Connection closed)
2018-09-29 15:25:10	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-29 15:28:18	<--	mib_lrg5q4 (Mibbit@moz-qcv.0cr.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 15:29:55	-->	huddler (Mibbit@moz-s3n7ld.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-29 15:29:58	-->	pamaury (pamaury@moz-a1u2i2.mpi-sws.org) has joined #rust-beginners
2018-09-29 15:30:05	-->	mib_huhv1p (Mibbit@moz-va6.h24.160.37.IP) has joined #rust-beginners
2018-09-29 15:32:11	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Client exited)
2018-09-29 15:35:06	<--	mib_huhv1p (Mibbit@moz-va6.h24.160.37.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 15:36:32	huddler	is there a way to make an Option<&mut T> into Option<& T> ?
2018-09-29 15:36:44	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 15:37:19	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 15:40:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:41:26	-->	esc (Eric@moz-d25h75.mssnks.sbcglobal.net) has joined #rust-beginners
2018-09-29 15:41:31	-->	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has joined #rust-beginners
2018-09-29 15:41:51	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:42:54	kimundi	huddler: sure, with map() thats not an issue
2018-09-29 15:43:09	devurandom	Is it possible for a struct to contain a reference to something implementing a certain trait, without knowing which implementation it is?
2018-09-29 15:44:02	devurandom	I tried just writing `field &MyTrait`, but I get errors about the impossibility of making an object out of that trait, and stuff regarding its size.
2018-09-29 15:44:12	kimundi	devurandom: Thats what trait objects are for
2018-09-29 15:44:18	kimundi	the trait needs to support that though
2018-09-29 15:45:39	devurandom	thx
2018-09-29 15:45:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 15:47:16	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-09-29 15:48:04	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:48:09	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 15:50:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:51:19	<--	U007D (U007D@moz-jc56tv.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 15:51:34	-->	U007D (U007D@moz-a36.9b9.245.162.IP) has joined #rust-beginners
2018-09-29 15:52:10	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:52:15	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 15:54:06	<--	dethos (dethos@moz-joj.gtm.138.213.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 15:54:25	huddler	Does using the '.' operator move a value?
2018-09-29 15:54:44	huddler	I read it somewhere, but I actually haven't seen it in the rust book.
2018-09-29 15:55:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 15:55:34	esc	I need a HashMap which allows for expiration of entries. I'd like to proactively delete entries from the cache once they reach their expiration time to save memory. In C, I'd wire up the expiration bit with intrusive pointers into a tree. Having a hard time figuring out the rust way to do this. Ideas?
2018-09-29 15:55:44	WindowsBunny	huddler: the . operator allows you to access methods and fields of something
2018-09-29 15:55:46	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-29 15:55:54	WindowsBunny	huddler: Depending on what you do, that *may* move the value
2018-09-29 15:56:27	WindowsBunny	huddler: If you call a method that takes self by value, that it would move and consume the thing
2018-09-29 15:57:06	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 15:58:31	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 16:01:44	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-29 16:01:51	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 16:02:33	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 16:03:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 16:04:50	<--	arunkumar413 (arunkumar41@moz-pc4.r32.48.157.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:04:59	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 16:07:35	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 16:07:52	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:08:57	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 16:09:51	-->	LazyAlon (lazyalon@moz-9r1.fhb.244.188.IP) has joined #rust-beginners
2018-09-29 16:11:20	-->	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-29 16:13:18	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 16:13:42	-->	justsomequestions (gumble@moz-7v3us6.wlan.uni-bonn.de) has joined #rust-beginners
2018-09-29 16:14:09	justsomequestions	pub struct MainState<T: Scene<C>> when I do this, rust complains that it doesn't know C
2018-09-29 16:14:21	justsomequestions	pub struct MainState<C, T: Scene<C>> when I do this, rust complains that C is never used
2018-09-29 16:14:40	justsomequestions	what can I do here?
2018-09-29 16:15:52	panicbit	justsomequestions: You can add a PhantomData field to MainState
2018-09-29 16:16:08	panicbit	`_c: PhantomData<C>`
2018-09-29 16:17:08	<--	Dima (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 16:17:21	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:18:31	dpc1	panicbit: o/
2018-09-29 16:18:44	panicbit	dpc1: hey :)
2018-09-29 16:19:03	<--	exbios (ri@moz-dm117q.totalplay.net) has quit (Ping timeout: 121 seconds)
2018-09-29 16:19:37	justsomequestions	panicbit: thanks :)
2018-09-29 16:20:01	huddler	I'm trying to learn about interior mutability, but I find the rust books example pretty convoluted (The one about testing and mock objects) are there any other resources for learning about interior mutability?
2018-09-29 16:20:24	<--	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-29 16:22:14	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 16:23:48	-->	syncplicity (sync@moz-j1t6cm.biz.rr.com) has joined #rust-beginners
2018-09-29 16:24:07	syncplicity	hey guys, a bit of a noob question
2018-09-29 16:24:26	syncplicity	I'm trying to access a tuple via the . notation using a variable
2018-09-29 16:24:32	syncplicity	for example; 
2018-09-29 16:24:39	syncplicity	let my_num = 0;
2018-09-29 16:25:11	syncplicity	let mut tup: (String, String) ... etc
2018-09-29 16:25:13	dpc1	!paste
2018-09-29 16:25:13	+rustbot	Paste code at https://play.rust-lang.org/ and click "Share" or paste large text at https://paste.rs/
2018-09-29 16:25:14	Lumpio-	I don't think you can use a variable for that
2018-09-29 16:25:18	Lumpio-	Use an array instead
2018-09-29 16:25:21	syncplicity	Ah ok, thanks. 
2018-09-29 16:25:30	syncplicity	Is there a reason why?
2018-09-29 16:25:57	kimundi	syncplicity: tuples are like structs: the fields can have different types
2018-09-29 16:25:57	Lumpio-	Well for one tuples are mixed type
2018-09-29 16:25:58	<--	pamaury (pamaury@moz-a1u2i2.mpi-sws.org) has quit (Ping timeout: 121 seconds)
2018-09-29 16:26:07	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-29 16:26:16	Lumpio-	So it'd have to do type checks at runtime or whatever... which is nasty
2018-09-29 16:26:31	Lumpio-	And second arrays already seem to cover your usecase
2018-09-29 16:26:35	syncplicity	oh ok, thanks for the clarification.
2018-09-29 16:26:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:26:59	syncplicity	yeah, an array would work fine. I was just messing around so I used the first multi I could find
2018-09-29 16:27:07	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 16:27:18	syncplicity	But good information to know. I'll keep it in mind. 
2018-09-29 16:30:09	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:30:17	Moongoodboy{K}	huddler(, WindowsBunny): also, `foo.bar` will move, but `&foo.bar` will only borrow
2018-09-29 16:31:23	WindowsBunny	huddler: the key thing is that given a &T, which is clearly immutable, if it provides interior mutability you can mutate the value inside despite only having a &T
2018-09-29 16:31:26	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 16:31:57	<--	calatalee (Mibbit@moz-c83.ldl.251.213.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 16:32:05	WindowsBunny	Cell RefCell Mutex RwLock and Atomics are all ways of achieving interior mutability with different tradeoffs
2018-09-29 16:33:56	-->	TheBiggerGuy (Mibbit@moz-3h44se.as43234.net) has joined #rust-beginners
2018-09-29 16:34:27	-->	dethos (dethos@moz-9s2.c36.138.213.IP) has joined #rust-beginners
2018-09-29 16:35:42	-->	mandeep (mandeep@moz-l08i6u.us.northamericancoax.com) has joined #rust-beginners
2018-09-29 16:35:47	<--	justsomequestions (gumble@moz-7v3us6.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-29 16:35:58	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:38:00	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 16:38:42	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:39:36	<--	U007D (U007D@moz-a36.9b9.245.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:39:51	-->	U007D (U007D@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-29 16:40:06	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 16:40:36	huddler	so you can't have cycles with Rc correct?
2018-09-29 16:40:53	huddler	why is that?
2018-09-29 16:41:29	WindowsBunny	Well, you can
2018-09-29 16:41:33	sgift	you can and you have to make sure you don't
2018-09-29 16:41:55	WindowsBunny	it's just that your cycle will never get deallocated when you're done with it
2018-09-29 16:42:06	WindowsBunny	and will float in the realm of leaked memory forever*
2018-09-29 16:42:12	WindowsBunny	*until your process ends
2018-09-29 16:42:45	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-29 16:43:39	-->	arunkumar413 (arunkumar41@moz-ehn.sl0.48.157.IP) has joined #rust-beginners
2018-09-29 16:44:11	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:45:42	<--	artfwo (artfwo@moz-0q2h0e.novotelecom.ru) has quit (Ping timeout: 121 seconds)
2018-09-29 16:48:42	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-29 16:49:42	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 16:52:40	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 16:53:45	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 16:54:18	-->	Evildropbear (Mibbit@moz-8hn.q01.244.46.IP) has joined #rust-beginners
2018-09-29 16:54:29	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 16:55:49	<--	mib_nva1t7 (Mibbit@moz-idr.tar.53.201.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 16:55:58	panicbit	Here's an example of a cycle https://play.rust-lang.org/?gist=3102e93e1388fc1d0d2b2b1c957caa07&version=stable&mode=debug&edition=2015
2018-09-29 16:56:42	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 16:56:59	<--	huddler (Mibbit@moz-s3n7ld.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 16:57:09	<--	mandeep (mandeep@moz-l08i6u.us.northamericancoax.com) has quit (Ping timeout: 121 seconds)
2018-09-29 16:58:15	Evildropbear	Hello, does anyone have experience with the image crate?
2018-09-29 16:58:27	panicbit	Evildropbear: What's your issue with it?
2018-09-29 16:58:37	Evildropbear	I am just trying to get an image dimension
2018-09-29 16:58:38	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 16:58:52	panicbit	How did you create your image?
2018-09-29 16:58:52	Evildropbear	  let img = image::open(r#"D:\Downloads\myfile.png"#).unwrap();     let (width, height) = img.dimensions();
2018-09-29 16:58:59	panicbit	ok
2018-09-29 16:59:01	Evildropbear	no method named `dimensions` found for type `image::DynamicImage` in the current scope  help: items from traits can only be used if the trait is in scope
2018-09-29 16:59:19	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-29 16:59:33	panicbit	Evildropbear: You need to import the trait that the compiler mentions
2018-09-29 16:59:41	panicbit	i.e. GenericImageView
2018-09-29 17:00:00	Evildropbear	i have use image::{GenericImage, ImageBuffer};
2018-09-29 17:00:02	panicbit	`use image::GenericImageView;` should do the job
2018-09-29 17:00:19	Evildropbear	ah
2018-09-29 17:00:19	Evildropbear	thanks
2018-09-29 17:00:20	panicbit	:)
2018-09-29 17:02:45	Evildropbear	The compiler does not mention the trait through right?
2018-09-29 17:02:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 17:02:58	panicbit	It usually does
2018-09-29 17:03:33	-->	asyncsec (asyncsec@moz-kt5lb2.dyn6.twc.com) has joined #rust-beginners
2018-09-29 17:05:37	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-29 17:07:21	panicbit	Evildropbear: https://i.imgur.com/C5C5I9x.png
2018-09-29 17:07:22	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 17:07:28	panicbit	see the `help` text
2018-09-29 17:08:33	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-29 17:10:51	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-29 17:11:11	Evildropbear	help: items from traits can only be used if the trait is in scope
2018-09-29 17:11:15	Evildropbear	maybe special case
2018-09-29 17:11:30	<--	dethos (dethos@moz-9s2.c36.138.213.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 17:11:41	Evildropbear	i meant it doesnt mention which trait specifically should be imported
2018-09-29 17:12:18	--	U007D is now known as U007D_afk
2018-09-29 17:12:36	-->	mandeep (mandeep@moz-lirqek.dyn.columbia.edu) has joined #rust-beginners
2018-09-29 17:14:31	--	U007D_afk is now known as U007D
2018-09-29 17:15:26	-->	orph (orph@moz-08dr52.cable.mindspring.com) has joined #rust-beginners
2018-09-29 17:15:30	panicbit	It saiys right there
2018-09-29 17:15:33	panicbit	below that help
2018-09-29 17:15:49	panicbit	Sometimes there's more than one possible traits
2018-09-29 17:16:07	Evildropbear	im using vscode and dont see any more info
2018-09-29 17:16:11	panicbit	Welp
2018-09-29 17:16:23	panicbit	The joy of using editors/ides
2018-09-29 17:16:30	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 17:16:42	<--	arunkumar413 (arunkumar41@moz-ehn.sl0.48.157.IP) has quit (Quit: Leaving)
2018-09-29 17:16:51	Evildropbear	^^ i think i will try to figure out how to build using command line instead
2018-09-29 17:17:00	panicbit	Maybe the json output of th ecompiler needs more documentation
2018-09-29 17:17:10	panicbit	It's not really clear how to interpret all of the span info
2018-09-29 17:18:05	panicbit	My vscode addon also doesn't show the trait suggestions properly
2018-09-29 17:18:26	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-29 17:18:53	panicbit	Evildropbear: It's not really difficult :D. All you need to do is `cargo build`
2018-09-29 17:19:22	panicbit	And you can install tools like cargo-watch, which lets you rebuild on code changes
2018-09-29 17:19:30	<--	orph (orph@moz-08dr52.cable.mindspring.com) has quit (Ping timeout: 121 seconds)
2018-09-29 17:19:49	Evildropbear	ty :)
2018-09-29 17:20:35	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 17:21:49	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-29 17:21:50	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 17:21:56	<--	Binero (Binero@moz-rp278g.access.telenet.be) has quit (Connection closed)
2018-09-29 17:22:05	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-29 17:22:17	-->	Binero (Binero@moz-b68v5a.access.telenet.be) has joined #rust-beginners
2018-09-29 17:22:18	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-29 17:23:42	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 17:24:09	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 17:24:46	--	U007D is now known as U007D_afk
2018-09-29 17:25:33	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 17:26:10	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-29 17:26:13	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 17:27:38	<--	eyans (a@moz-l83ps6.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-29 17:28:59	Evildropbear	ok one last question, if i want to create a grayscale 8 bit image from imagebuffer
2018-09-29 17:29:02	Evildropbear	    let mut img2: image::ImageBuffer<image::Rgba<u8>, _> = ImageBuffer::new(1, 1);
2018-09-29 17:29:14	Evildropbear	would be incorrect because now a pixel is 4x8 pixels i think
2018-09-29 17:29:24	Evildropbear	*bytes i mean
2018-09-29 17:29:29	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Quit: WeeChat 2.2)
2018-09-29 17:29:33	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-29 17:30:00	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-29 17:30:05	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 17:32:34	Evildropbear	nvm i think i got it
2018-09-29 17:32:34	Evildropbear	    let mut img3: image::ImageBuffer<Luma<u8>, Vec<u8>> = ImageBuffer::new(512, 512);
2018-09-29 17:32:38	<--	lihram (lihrammatr@moz-522p1u.matrix.org) has left #rust-beginners ("User left")
2018-09-29 17:35:02	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 17:37:33	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-29 17:39:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 17:39:43	<--	TheBiggerGuy (Mibbit@moz-3h44se.as43234.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 17:40:34	<--	ryfbhkuh (hzdeppax@moz-8itauu.1uqv.7nqa.0642.2601.IP) has quit (Quit: experimentum periculosum)
2018-09-29 17:40:35	<--	wolf2k_huh (wolfman2000@moz-rltqss.ga.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 17:40:39	<--	Evildropbear (Mibbit@moz-8hn.q01.244.46.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 17:40:59	-->	wkiefer (wkiefer@moz-ieahqh.wa.comcast.net) has joined #rust-beginners
2018-09-29 17:43:19	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-29 17:44:12	<--	wkiefer (wkiefer@moz-ieahqh.wa.comcast.net) has quit (Quit: )
2018-09-29 17:44:41	<--	dherman (sid7996@moz-8qssdp.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-09-29 17:44:52	<--	gjnoonan (sid95422@moz-8qssdp.irccloud.com) has quit (Connection closed)
2018-09-29 17:45:01	-->	gjnoonan (sid95422@moz-8cuj58.charlton.irccloud.com) has joined #rust-beginners
2018-09-29 17:45:16	<--	mrsolo (sid27905@moz-8qssdp.irccloud.com) has quit (Connection closed)
2018-09-29 17:45:17	-->	mrsolo (sid27905@moz-1nrm2r.charlton.irccloud.com) has joined #rust-beginners
2018-09-29 17:45:21	-->	dherman (sid7996@moz-ium1vr.charlton.irccloud.com) has joined #rust-beginners
2018-09-29 17:50:45	-->	Eyeofpythonmr_sticky (Mibbit@moz-276tn9.dyn.telefonica.de) has joined #rust-beginners
2018-09-29 17:51:31	<--	Eyeofpythonmr_sticky (Mibbit@moz-276tn9.dyn.telefonica.de) has left #rust-beginners
2018-09-29 17:52:30	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 17:52:34	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-29 17:55:10	<--	mib_obr9bq (Mibbit@moz-h8tgs8.natpool.mwn.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 17:57:08	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-09-29 17:58:27	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 17:59:43	-->	sproing (Mibbit@moz-ii5mri.cable.virginm.net) has joined #rust-beginners
2018-09-29 18:00:21	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-29 18:01:30	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-29 18:03:40	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-29 18:04:23	<--	Houm (Houm@moz-838.l3c.51.5.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-29 18:05:12	<--	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has quit (Quit: Konversation terminated!)
2018-09-29 18:05:32	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-29 18:06:39	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 18:09:41	-->	mib_3svumj (Mibbit@moz-ub9.2ru.202.91.IP) has joined #rust-beginners
2018-09-29 18:09:47	<--	mib_3svumj (Mibbit@moz-ub9.2ru.202.91.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 18:10:44	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 18:11:02	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-29 18:12:26	-->	Houm (Houm@moz-838.l3c.51.5.IP) has joined #rust-beginners
2018-09-29 18:15:04	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-29 18:19:03	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-29 18:19:40	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 18:20:13	<--	Houm (Houm@moz-838.l3c.51.5.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 18:20:39	<--	mandeep (mandeep@moz-lirqek.dyn.columbia.edu) has quit (Ping timeout: 121 seconds)
2018-09-29 18:20:42	-->	Houm (Houm@moz-838.l3c.51.5.IP) has joined #rust-beginners
2018-09-29 18:20:54	-->	mandeep (mandeep@moz-1qukms.us.northamericancoax.com) has joined #rust-beginners
2018-09-29 18:21:05	--	Eragon47 is now known as Eragon
2018-09-29 18:24:05	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-29 18:24:07	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-29 18:24:12	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 18:26:01	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-29 18:26:30	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-29 18:26:36	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-29 18:27:06	-->	wolfman2000 (wolfman2000@moz-rltqss.ga.comcast.net) has joined #rust-beginners
2018-09-29 18:27:50	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-29 18:28:08	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-29 18:28:48	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-29 18:38:23	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-29 18:40:52	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 18:42:40	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 18:44:54	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 18:46:01	-->	dpc1 (dpc@moz-j2d.ale.206.106.IP) has joined #rust-beginners
2018-09-29 18:46:40	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Connection closed)
2018-09-29 18:46:51	-->	Aaronepowerr (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-29 18:49:49	<--	dpc1 (dpc@moz-j2d.ale.206.106.IP) has quit (Connection closed)
2018-09-29 18:51:03	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 18:51:16	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-29 18:51:39	-->	Kilobyte (stephan@moz-6tr2k0.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-29 18:51:50	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-29 18:51:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 18:53:14	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-29 18:54:02	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-29 18:54:05	-->	Karrq (Karrq@moz-q35.srp.147.88.IP) has joined #rust-beginners
2018-09-29 18:54:07	Karrq	hey all
2018-09-29 18:54:12	dpc1	hi
2018-09-29 18:54:43	Karrq	question: I'm parsing a file and I've got an iterator over the lines in its contents.
2018-09-29 18:55:43	Karrq	I'm going thru the lines in a for loop until I find a certain line, at that point I break out of the loop. I then do some stuff and lastly I want to go over the lines again but Rust tells me the lines iterator was moved in the first loop
2018-09-29 18:55:51	-->	GrimSleepless (GrimSleeple@moz-ap2a4e.dsl.bell.ca) has joined #rust-beginners
2018-09-29 18:56:04	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 18:56:25	stephaneyfx	Karrq: Do you want to go over the lines from the beginning of the file, or just resume where you stopped?
2018-09-29 18:56:29	adoa	Karrq: do you `for line in iterator` or `for line in &iterator`?
2018-09-29 18:56:36	Karrq	resume where I stopped
2018-09-29 18:56:48	devurandom	Could someone please explain to me why I get error "expected struct `std::path::Path`, found type parameter" for "self.watches.insert(&path, recursive_mode)," in following code? https://play.rust-lang.org/?gist=fc64a83376d3ef7bde10621e0fe4a2dc&version=stable&mode=debug&edition=2015
2018-09-29 18:56:56	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-29 18:57:00	Karrq	for line in iterator (since rust complains that &iterator doesn't satisfy some trait bounds)
2018-09-29 18:57:01	stephaneyfx	Karrq: So `for line in &mut line_iter {...}` should do
2018-09-29 18:57:17	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-09-29 18:57:21	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-29 18:57:23	Karrq	that worked
2018-09-29 18:57:25	blueberry_cheesecake	hello folks, I was wondering how args declared this way:  let args: Vec<String> = env::args().collect();
2018-09-29 18:57:37	blueberry_cheesecake	err... mishit enter
2018-09-29 18:57:40	blueberry_cheesecake	the rest is here:
2018-09-29 18:57:41	devurandom	path is std::path::Path and the "type parameter" is P is AsRef<Path>, so I would think that the two are the same...
2018-09-29 18:57:44	dpc1	!play
2018-09-29 18:57:44	+rustbot	https://play.rust-lang.org
2018-09-29 18:58:12	blueberry_cheesecake	I was thinking it's short enough to do in one line but it appears I failed at that. I'll go to 'play' then
2018-09-29 18:58:37	stephaneyfx	devurandom: You may need to do `path.as_ref()` where you need a &Path
2018-09-29 18:58:53	devurandom	The two are not the same?
2018-09-29 18:58:55	Karrq	is there somewhere that documents how "for line in iterator" desugars ?
2018-09-29 18:59:34	<--	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 18:59:46	stephaneyfx	devurandom: P could be any type implementing AsRef<Path>. If the function you're calling expects &Path, you need to do path.as_ref()
2018-09-29 19:00:26	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-29 19:00:26	devurandom	And &Path is not just a reference to Path?
2018-09-29 19:00:38	stephaneyfx	devurandom: It is
2018-09-29 19:00:58	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 19:01:19	<--	Aaronepowerr (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Quit: Time for bed/work.)
2018-09-29 19:01:21	-->	a80f5a12 (Adium@moz-jlapa3.us.northamericancoax.com) has joined #rust-beginners
2018-09-29 19:01:29	<--	a80f5a12 (Adium@moz-jlapa3.us.northamericancoax.com) has left #rust-beginners
2018-09-29 19:02:08	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 19:02:18	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-29 19:02:56	blueberry_cheesecake	https://play.rust-lang.org/?gist=e7c89deeac732129401a3ad2af06ee78&version=stable&mode=debug&edition=2015 <- how is the Vec<String> accepted for the function which is declared to accept &[String]?
2018-09-29 19:03:24	-->	mib_x6lwxk (Mibbit@moz-44q.feq.149.169.IP) has joined #rust-beginners
2018-09-29 19:03:40	mib_x6lwxk	https://github.com/sn99/grachical-tic-tac-toe
2018-09-29 19:04:30	stephaneyfx	Karrq: https://doc.rust-lang.org/stable/reference/expressions/loop-expr.html#iterator-loops mentions the relation with IntoIterator
2018-09-29 19:04:35	adoa	blueberry_cheesecake: that is a normal deref coercion. you can read more about it here: https://doc.rust-lang.org/book/second-edition/ch15-02-deref.html
2018-09-29 19:05:09	blueberry_cheesecake	thanks adoa!
2018-09-29 19:05:45	adoa	you're welcome, blueberry_cheesecake!
2018-09-29 19:05:47	blueberry_cheesecake	I'm going through that book and am in chapter 12 at the moment (from where this code is taken)
2018-09-29 19:06:30	stephaneyfx	Karrq: There's also https://doc.rust-lang.org/book/first-edition/loops.html#for
2018-09-29 19:07:33	<--	asyncsec (asyncsec@moz-kt5lb2.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 19:07:37	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 19:08:47	Fr0stBit	Can i make a raw string literal that ignores leading whitespace?
2018-09-29 19:09:27	-->	tasansga (ansgar@moz-oucppq.connect.netcom.no) has joined #rust-beginners
2018-09-29 19:09:39	<--	tasansga (ansgar@moz-oucppq.connect.netcom.no) has left #rust-beginners
2018-09-29 19:10:34	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-29 19:10:53	-->	tasansga (ansgar@moz-oucppq.connect.netcom.no) has joined #rust-beginners
2018-09-29 19:11:50	<--	Proximyst (Proximyst@moz-udr.qmt.15.51.IP) has quit (Quit: Nomming on cookies)
2018-09-29 19:12:12	esc	Fr0stBit: a trailing backslash will ignore leading whitespace on the following line, not sure if that's exactly what you're looking for
2018-09-29 19:13:06	stephaneyfx	Fr0stBit: If it's a string literal, aren't you the one typing it?
2018-09-29 19:13:27	adoa	Fr0stBit: does your string literal spans several lines? Then try the suggestion of esc, otherwise please explain more details about your problem. Maybe give an example for such a string literal.
2018-09-29 19:13:33	-->	Proximyst (proximyst@moz-udr.qmt.15.51.IP) has joined #rust-beginners
2018-09-29 19:13:47	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 19:14:05	-->	bdax (tom@moz-lkpv2s.von7.ni86.0c7f.2a02.IP) has joined #rust-beginners
2018-09-29 19:14:20	--	Guest19041 is now known as bstrie
2018-09-29 19:14:38	Fr0stBit	I'm implementing a custom gl generator for gl_generator library. I noticed that this kind of code: https://github.com/brendanzab/gl-rs/blob/master/gl_generator/generators/global_gen.rs#L46
2018-09-29 19:14:56	Fr0stBit	Writes the block indented but, i do not want that
2018-09-29 19:15:26	Fr0stBit	So i wonder if i can make raw string literals like that ignore leading whitespace
2018-09-29 19:15:45	stephaneyfx	Fr0stBit: But you still want to keep the newlines?
2018-09-29 19:15:58	Fr0stBit	stephaneyfx: Yep
2018-09-29 19:16:29	stephaneyfx	Fr0stBit: The only way I know of is for you to write it aligned to the left in your source file
2018-09-29 19:17:42	yath	or have a wrapper that strips the number of spaces that precede the first line from all following
2018-09-29 19:18:13	bdax	Does anyone know an easy way to move/copy a directory? I can't see it in the std library
2018-09-29 19:18:19	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 19:18:26	bdax	fs::rename doesn't work across partitions
2018-09-29 19:18:29	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 19:18:47	sebk	:s
2018-09-29 19:19:06	 *	sebk suspects there is a crate for that
2018-09-29 19:19:10	sebk	!crate shutils
2018-09-29 19:19:10	+rustbot	Crate 'shutils' does not exist.
2018-09-29 19:20:06	-->	mib_ckhond (Mibbit@moz-4mtv4b.ca.comcast.net) has joined #rust-beginners
2018-09-29 19:20:37	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-29 19:20:47	<--	mib_ckhond (Mibbit@moz-4mtv4b.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 19:20:49	bdax	hmm, I'm seeing 'copy_dir' which might doit, I expected a canonical way but that'll do
2018-09-29 19:21:00	sebk	!crate core-utils
2018-09-29 19:21:00	+rustbot	core-utils (0.1.2) - A reimplementation of the GNU core utils in the Rust programming language -> https://crates.io/crates/core-utils <https://docs.rs/core-utils>
2018-09-29 19:21:05	sebk	!crate fs-utils
2018-09-29 19:21:05	+rustbot	fs-utils (1.1.0) - Utilities to help working with the filesytem -> https://crates.io/crates/fs-utils <https://docs.rs/fs-utils>
2018-09-29 19:21:07	Fr0stBit	yath: I like this idea? Is there something ready?
2018-09-29 19:21:19	-->	dr_bibble (Mibbit@moz-4mtv4b.ca.comcast.net) has joined #rust-beginners
2018-09-29 19:21:23	bdax	ah thanks sebk 
2018-09-29 19:21:45	<--	dr_bibble (Mibbit@moz-4mtv4b.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 19:24:54	yath	Fr0stBit: no clue, I'm just learning rust, but that's how I'd do it. :) maybe rust can do that with macros, but frankly, no idea, sorry
2018-09-29 19:25:39	<--	mandeep (mandeep@moz-1qukms.us.northamericancoax.com) has quit (Ping timeout: 121 seconds)
2018-09-29 19:25:41	yath	Fr0stBit: https://docs.rs/textwrap/0.9.0/textwrap/fn.dedent.html
2018-09-29 19:25:54	 *	yath just remembered the name of the Python module
2018-09-29 19:27:08	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-29 19:27:20	<--	wagle (wagle@moz-i52kd0.wagle.io) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2018-09-29 19:27:37	-->	wagle (wagle@moz-i52kd0.wagle.io) has joined #rust-beginners
2018-09-29 19:27:55	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 19:27:57	sebk	not really
2018-09-29 19:27:58	Fr0stBit	yath: Seems good bud, but i'll try and write something smaller to avoid dependencies, thanks anyway
2018-09-29 19:28:08	sebk	you can however use concat!("foo", "bar")
2018-09-29 19:32:40	<--	Albori (Albori@moz-nr1v0b.fidnet.com) has quit (Client exited)
2018-09-29 19:32:55	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-29 19:33:55	<--	bdax (tom@moz-lkpv2s.von7.ni86.0c7f.2a02.IP) has quit (Client exited)
2018-09-29 19:35:04	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 19:36:49	<--	tasansga (ansgar@moz-oucppq.connect.netcom.no) has quit (Quit: Leaving.)
2018-09-29 19:38:36	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-29 19:38:40	<--	Proximyst (proximyst@moz-udr.qmt.15.51.IP) has quit (Quit: robbing cookies)
2018-09-29 19:38:56	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-29 19:39:06	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 19:39:21	-->	Proximyst (proximyst@moz-udr.qmt.15.51.IP) has joined #rust-beginners
2018-09-29 19:41:11	-->	mandeep (mandeep@moz-lirqek.dyn.columbia.edu) has joined #rust-beginners
2018-09-29 19:53:01	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 19:57:03	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-29 19:57:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 20:00:11	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-29 20:01:32	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 20:02:35	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 20:07:54	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 20:09:04	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-29 20:12:20	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-29 20:12:26	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 20:12:54	-->	grdn (garden@moz-hre5bs.bb.dnainternet.fi) has joined #rust-beginners
2018-09-29 20:13:07	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-29 20:14:27	-->	Albori (Albori@moz-nr1v0b.fidnet.com) has joined #rust-beginners
2018-09-29 20:16:38	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 20:17:03	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-29 20:19:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 20:19:41	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-29 20:19:58	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 20:20:58	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 20:21:39	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-29 20:22:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 20:23:10	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-29 20:23:17	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-29 20:25:10	<--	mib_x6lwxk (Mibbit@moz-44q.feq.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 20:26:59	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-29 20:29:08	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 20:29:25	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 20:29:53	<--	Calinou (quassel@moz-hqi.bap.49.154.IP) has quit (Quit: http://quassel-irc.org - Discuter simplement. Partout.)
2018-09-29 20:30:01	-->	Calinou (quassel@moz-hqi.bap.49.154.IP) has joined #rust-beginners
2018-09-29 20:31:03	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 20:31:42	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 20:33:10	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 20:34:08	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 20:38:41	<--	quartz555 (quartz@moz-5o604o.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 20:39:06	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-29 20:39:23	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-29 20:39:43	-->	gretchen (Mibbit@moz-5d4.igf.157.47.IP) has joined #rust-beginners
2018-09-29 20:39:50	<--	gretchen (Mibbit@moz-5d4.igf.157.47.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 20:42:49	-->	siddhartharao17 (siddharthar@moz-1u8kq8.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-09-29 20:45:48	-->	bobthebuilder (Mibbit@moz-bgb61i.cpe.pppoe.ca) has joined #rust-beginners
2018-09-29 20:46:12	-->	niconii (nicole@moz-q3ggvo.midco.net) has joined #rust-beginners
2018-09-29 20:46:12	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-29 20:47:26	-->	xmltree (xmltree@moz-q9ucc8.qb9s.3f3j.6000.2605.IP) has joined #rust-beginners
2018-09-29 20:48:50	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 20:49:22	<--	Binero (Binero@moz-b68v5a.access.telenet.be) has quit (Client exited)
2018-09-29 20:51:00	-->	mib_oyl9k9 (Mibbit@moz-8pu.q1r.53.92.IP) has joined #rust-beginners
2018-09-29 20:51:05	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-29 20:51:10	<--	mib_oyl9k9 (Mibbit@moz-8pu.q1r.53.92.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 20:51:17	bobthebuilder	is there an IDE similar to C# or VB.NET for Rust that allows for GUI creation?
2018-09-29 20:51:52	dpc1	bobthebuilder: don't think so
2018-09-29 20:52:05	-->	mortisha (Mibbit@moz-fbhbs0.dsl.scarlet.be) has joined #rust-beginners
2018-09-29 20:52:30	<--	mortisha (Mibbit@moz-fbhbs0.dsl.scarlet.be) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 20:53:09	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 20:54:13	kimundi	bobthebuilder: there are solutions like GTk's GUI editor, which generates a config file that rust gtk code can load at astartup
2018-09-29 20:56:05	bobthebuilder	@kimundi I'll have to look that up
2018-09-29 20:56:18	xmltree	how many users in here?
2018-09-29 20:57:18	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 20:57:49	dpc1	xmltree: enough to answer your question :)
2018-09-29 20:58:02	kimundi	1085
2018-09-29 20:59:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 20:59:24	-->	dragonfire (dragonfire@moz-8tb.c6p.184.47.IP) has joined #rust-beginners
2018-09-29 20:59:35	bobthebuilder	kidmundi is that only for linux?
2018-09-29 21:00:41	<--	syncplicity (sync@moz-j1t6cm.biz.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 21:02:03	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 21:02:04	dragonfire	Is there a proper way to change an Option<&f64> to an Option<f64>? I currently have to do opt.map(|val| val) and this feels like a hack.
2018-09-29 21:02:08	-->	liquidnight (marcus@moz-p5vojh.2fa1.6vf1.0c23.2a01.IP) has joined #rust-beginners
2018-09-29 21:02:23	kimundi	bobthebuilder: not familair enough with it, sorry
2018-09-29 21:04:20	dpc1	dragonfire: i think that's the easiest way to do it
2018-09-29 21:04:41	stephaneyfx	dragonfire: o.cloned()
2018-09-29 21:05:02	-->	Aaronepowerr (Aaronepower@moz-502.gps.129.212.IP) has joined #rust-beginners
2018-09-29 21:06:30	-->	hypothete (Mibbit@moz-kpgq53.or.comcast.net) has joined #rust-beginners
2018-09-29 21:06:35	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 21:07:51	dpc1	i should just take a break i guess xD
2018-09-29 21:08:14	<--	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 21:09:27	hypothete	has anyone in here worked with hyper 0.12 and hyper-tls before? I'm trying to make a GET to an https endpoint and I've tried just about every example I can find online. client.get(uri) returns a ResponseFuture, but all the example have like .map() or .and_then() coming off of the output, which the type does't support.
2018-09-29 21:10:01	<--	Aaronepowerr (Aaronepower@moz-502.gps.129.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 21:10:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 21:10:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 21:10:38	-->	kemmisc (kemmis@moz-g6hulm.ca.charter.com) has joined #rust-beginners
2018-09-29 21:10:56	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 21:11:36	stephaneyfx	dpc1: I think Option::cloned is a recent addition ;)
2018-09-29 21:12:02	dpc1	likely
2018-09-29 21:12:17	dpc1	but i didn't even doubt it despite using cloned in non-option cases xD
2018-09-29 21:16:05	-->	enterprisey (enterprisey@moz-6f13ma.cit.cornell.edu) has joined #rust-beginners
2018-09-29 21:18:39	<--	siddhartharao17 (siddharthar@moz-1u8kq8.oqtm.17gi.0647.2601.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-29 21:21:48	<--	bobthebuilder (Mibbit@moz-bgb61i.cpe.pppoe.ca) has left #rust-beginners
2018-09-29 21:22:05	-->	orph (orph@moz-e34p1s.smvl.4c7r.100c.2600.IP) has joined #rust-beginners
2018-09-29 21:22:13	stephaneyfx	dpc1: Regardless, it's no reason to take a break. I'm sure your help is very much appreciated :)
2018-09-29 21:22:18	-->	DaQue (Mutter@moz-lqermv.5gl9.o266.0001.2600.IP) has joined #rust-beginners
2018-09-29 21:22:43	--	U007D_afk is now known as U007D
2018-09-29 21:23:40	<--	kemmisc (kemmis@moz-g6hulm.ca.charter.com) has quit (Quit: Leaving)
2018-09-29 21:23:49	dpc1	stephaneyfx: i know :) wasn't too serious xD
2018-09-29 21:23:52	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 21:24:31	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Connection closed)
2018-09-29 21:24:53	<--	DaQue (Mutter@moz-lqermv.5gl9.o266.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-29 21:27:45	-->	quartz55 (quartz@moz-kcbjlm.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-29 21:28:05	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-29 21:28:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 21:29:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 21:29:57	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 21:31:00	-->	DaQue (Mutter@moz-lqermv.5gl9.o266.0001.2600.IP) has joined #rust-beginners
2018-09-29 21:32:35	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-29 21:32:40	<--	hypothete (Mibbit@moz-kpgq53.or.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-29 21:32:43	--	U007D is now known as U007D_afk
2018-09-29 21:33:46	<--	DaQue (Mutter@moz-lqermv.5gl9.o266.0001.2600.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-29 21:34:31	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 21:34:31	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-29 21:34:36	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 21:35:55	<--	dragonfire (dragonfire@moz-8tb.c6p.184.47.IP) has quit (Client exited)
2018-09-29 21:36:39	<--	orph (orph@moz-e34p1s.smvl.4c7r.100c.2600.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 21:40:22	-->	g0w (uid26336@moz-jgqv5l.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-29 21:43:21	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-29 21:44:16	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-29 21:48:42	-->	justsomequestions (gumble@moz-ars3kv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-29 21:49:16	-->	vmeson (rmacleod@moz-653vsq.cable.teksavvy.com) has joined #rust-beginners
2018-09-29 21:50:00	g0w	Is it okay to `read` and then `write` to the same `TcpStream`?
2018-09-29 21:50:25	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-29 21:56:10	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 21:57:43	-->	TeeVee (TeeVee@moz-e28ajl.chf-qkr.eircom.net) has joined #rust-beginners
2018-09-29 21:58:46	<--	dinfuehr (dinfuehr@moz-gms8op.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-09-29 21:58:48	Karrq	g0w: i wouldn't see why you shouldn't
2018-09-29 21:59:53	xmltree	I think rust's features are really neat, though strict, as opposed to cpp which does not include a package manager with the language
2018-09-29 21:59:54	-->	zanadar (zanadar@moz-35gqmg.i2gt.qoll.a880.2604.IP) has joined #rust-beginners
2018-09-29 22:00:42	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 22:01:00	jony	hey guys, which target to install to compile from mac to linux x86_64?
2018-09-29 22:01:07	-->	dinfuehr (dinfuehr@moz-1k723d.highway.telekom.at) has joined #rust-beginners
2018-09-29 22:01:24	jony	rustup is swearing on both x86_64-unknown-linux
2018-09-29 22:01:37	jony	error: no candidate toolchains found
2018-09-29 22:01:47	dpc1	xmltree: yeah. i'm a pro-feature-gate-guy xD and hoping more crates adopt features because it helps in a lot of ways :)
2018-09-29 22:02:57	Karrq	jony: rustup target list
2018-09-29 22:03:16	Karrq	shows targets available from your host
2018-09-29 22:03:21	jony	Karrq: those two are from that list...
2018-09-29 22:03:50	Karrq	You see two, I see 3
2018-09-29 22:04:00	Karrq	So you need to specify what they are if you could
2018-09-29 22:04:44	jony	x86_64-unknown-linux-gnux32 gives same result
2018-09-29 22:04:49	<--	justsomequestions (gumble@moz-ars3kv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-29 22:05:43	Karrq	What command are you using to add a target ?
2018-09-29 22:06:15	-->	gagbo (gagbo@moz-a9bf5n.abo.bbox.fr) has joined #rust-beginners
2018-09-29 22:06:35	jony	wrong one
2018-09-29 22:06:35	Karrq	Also I wanted you to list the targets you are able to see for x86_64 linux
2018-09-29 22:06:44	jony	this worked I guess: rustup toolchain install stable-x86_64-unknown-linux-gnu
2018-09-29 22:06:49	Karrq	What do you mean with "wrong one" ?
2018-09-29 22:07:21	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-29 22:07:28	Karrq	I see what the problem was. You were doing "rustup target add [target]", correct ?
2018-09-29 22:08:11	Karrq	If that's so, then that target wasn't available on your current rust compiler (nightly?)
2018-09-29 22:09:23	-->	eyans (a@moz-1i7f8m.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-29 22:09:49	jony	yes, but on stable
2018-09-29 22:10:12	-->	zipkr (zipkr@moz-8ochun.ca.comcast.net) has joined #rust-beginners
2018-09-29 22:10:24	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 22:11:12	Karrq	fair
2018-09-29 22:11:12	jony	but now getting linker errors :(
2018-09-29 22:11:24	Karrq	maybe missing some libraries
2018-09-29 22:11:58	<--	ivan (dustinm@moz-29sbsu.ip-149-56-14.net) has quit (Quit: Leaving)
2018-09-29 22:13:35	jony	all the dependancies are compiling ok
2018-09-29 22:13:50	xmltree	redox is probs my favorite rust pack fo sho
2018-09-29 22:14:01	<--	eyans (a@moz-1i7f8m.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-29 22:17:15	<--	zanadar (zanadar@moz-35gqmg.i2gt.qoll.a880.2604.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-29 22:17:26	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 22:18:12	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-29 22:20:08	-->	dustinm` (dustinm@moz-29sbsu.ip-149-56-14.net) has joined #rust-beginners
2018-09-29 22:21:01	-->	orph (orph@moz-hrgu22.smvl.4c7r.100c.2600.IP) has joined #rust-beginners
2018-09-29 22:21:28	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 22:23:27	-->	Urania (textual@moz-83q96u.sph.umich.edu) has joined #rust-beginners
2018-09-29 22:24:33	<--	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-29 22:25:03	<--	orph (orph@moz-hrgu22.smvl.4c7r.100c.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 22:25:27	<--	Urania (textual@moz-83q96u.sph.umich.edu) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 22:27:13	<--	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-29 22:30:00	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 22:30:11	<--	enterprisey (enterprisey@moz-6f13ma.cit.cornell.edu) has quit (Connection closed)
2018-09-29 22:32:18	-->	asyncsec (asyncsec@moz-db3omd.dyn6.twc.com) has joined #rust-beginners
2018-09-29 22:32:53	-->	zanadar (zanadar@moz-76b.tt2.236.104.IP) has joined #rust-beginners
2018-09-29 22:32:56	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 22:33:36	-->	orph (orph@moz-2mb7j5.smvl.4c7r.100c.2600.IP) has joined #rust-beginners
2018-09-29 22:33:37	<--	orph (orph@moz-2mb7j5.smvl.4c7r.100c.2600.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 22:33:53	-->	orph (orph@moz-2mb7j5.smvl.4c7r.100c.2600.IP) has joined #rust-beginners
2018-09-29 22:35:27	<--	zanadar (zanadar@moz-76b.tt2.236.104.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-09-29 22:35:45	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-29 22:37:27	<--	Karrq (Karrq@moz-q35.srp.147.88.IP) has quit (Quit: Leaving)
2018-09-29 22:38:18	-->	justsomequestions (gumble@moz-ars3kv.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-29 22:39:17	cja	If I need to deal with platform specific code (like say I use winapi on Windows, and a debug stub on osx) is there a general way to handle it? In C I'd typically either have the makefile choose source files by platform, or I'd use ifdefs based on platform.
2018-09-29 22:39:38	<--	asyncsec (asyncsec@moz-db3omd.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 22:39:49	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 22:39:53	Moongoodboy{K}	You can #[cfg(os())] items, including entire modules
2018-09-29 22:40:35	Moongoodboy{K}	crate std seems to have different modules for different OSes, and then reexports into common public modules
2018-09-29 22:42:01	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-09-29 22:43:54	<--	justsomequestions (gumble@moz-ars3kv.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-29 22:44:04	cja	ah, thanks
2018-09-29 22:44:06	<--	orph (orph@moz-2mb7j5.smvl.4c7r.100c.2600.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 22:44:51	Moongoodboy{K}	yeah, you can look at std or rand for inspiration; rand does it too
2018-09-29 22:45:34	cja	makes sense, the rng sources would vary per platform quite a bit
2018-09-29 22:48:21	cja	odd, my nightly darwin toolchain can't add rls-preview
2018-09-29 22:48:25	cja	or rls
2018-09-29 22:48:29	cja	Is there something I forgot?
2018-09-29 22:48:52	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 22:48:57	<--	zipkr (zipkr@moz-8ochun.ca.comcast.net) has quit (Quit: Lost terminal)
2018-09-29 22:49:45	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-09-29 22:50:00	Alexendoo	cja: sometimes it's missing from nightlies
2018-09-29 22:50:11	cja	That seems problematic?
2018-09-29 22:50:17	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 22:50:35	cja	If I want to use edition = 2018, I need nightly, correct?
2018-09-29 22:52:22	Alexendoo	I think the latest beta has that too, but yeah problems in nightly goes with the territory
2018-09-29 22:52:50	cja	I only know of stable and nightly toolchains, is there a beta option I can use instead?
2018-09-29 22:54:49	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 22:55:29	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-29 22:55:33	Alexendoo	Yeah it works the same as those, you would e.g. rustup install beta
2018-09-29 22:55:53	cja	thank you
2018-09-29 22:56:03	cja	That sounds more like what I'm looking for
2018-09-29 22:57:32	-->	Karrq (Karrq@moz-q35.srp.147.88.IP) has joined #rust-beginners
2018-09-29 22:57:36	Karrq	Heya all
2018-09-29 22:57:54	Karrq	I remember there being a syntax sugar in rust to copy the fields from one struct to another, right?
2018-09-29 22:58:17	cja	derive PartialEq?
2018-09-29 22:58:27	cja	and Copy?
2018-09-29 22:58:32	Karrq	Not that
2018-09-29 22:58:58	Moongoodboy{K}	yep! `another_struct = Foo { a_field: bar, another_field: baz, ..one_struct };`
2018-09-29 22:59:31	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-29 22:59:31	Karrq	<3
2018-09-29 23:00:02	Moongoodboy{K}	the fields taken from one_struct follow the usual rules for moving vs copying
2018-09-29 23:00:44	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-29 23:00:46	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-29 23:00:52	Karrq	well I don't mind that
2018-09-29 23:01:09	Karrq	I'm using a builder pattern to build a HttpResponse 
2018-09-29 23:01:29	Karrq	I'm basically doing Chapter 20 the Book
2018-09-29 23:01:43	Karrq	but putting it on steroids so I can deploy it on my own computer
2018-09-29 23:01:53	Karrq	I figured it would be the best occasion to do so
2018-09-29 23:01:54	Moongoodboy{K}	:)
2018-09-29 23:01:57	Karrq	without using external crates
2018-09-29 23:02:00	-->	panicbit2 (panicbit@moz-7vq7dg.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-29 23:02:54	<--	panicbit (panicbit@moz-mlk22v.dip0.t-ipconnect.de) has quit (NickServ (RECOVER command used by panicbit2))
2018-09-29 23:02:54	--	panicbit2 is now known as panicbit
2018-09-29 23:03:22	cja	bugger, now vscode's rls support is confused
2018-09-29 23:04:48	Karrq	wdym?
2018-09-29 23:06:28	<--	Kilobyte (stephan@moz-6tr2k0.dip0.t-ipconnect.de) has quit (Quit: WeeChat 2.2)
2018-09-29 23:06:41	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-29 23:08:17	<--	TeeVee (TeeVee@moz-e28ajl.chf-qkr.eircom.net) has quit (Connection closed)
2018-09-29 23:09:04	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-29 23:09:10	cja	If I restart vscode now it always asks to reinstall rls because it can't find it.
2018-09-29 23:09:16	cja	I've tried with both rls and rls-preview in the config
2018-09-29 23:09:26	cja	and I installed rls-preview with rustup after swapping to the beta toolchain
2018-09-29 23:11:30	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-29 23:13:05	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-29 23:13:32	-->	TeeVee (TeeVee@moz-e28ajl.chf-qkr.eircom.net) has joined #rust-beginners
2018-09-29 23:14:03	<--	jihi (jih@moz-rcvvnr.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-29 23:15:32	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-29 23:17:00	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 23:20:12	Karrq	Moongoodboy{K}, here's the remote repo if you want to take a look. I know it can be done differently and probably even better but this is my way to try implementing something for the first time in Rust. https://bitbucket.org/LandKingdom/rustws
2018-09-29 23:20:48	Karrq	cja, I'm not having that problem but I did on Arch when I didn't specify the executable
2018-09-29 23:20:54	 *	Moongoodboy{K} will pass on the overall review for now. Is pretty lazy at the moment. >3>
2018-09-29 23:21:40	Karrq	That's why I said it can be done differently, I'm not looking for a review
2018-09-29 23:21:50	Karrq	I'm just sharing if somebody wants to see how somebody else does things
2018-09-29 23:22:45	-->	Arcaelyx (Arcaelyx@moz-nl3jbs.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-09-29 23:29:33	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-09-29 23:31:27	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 23:32:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-29 23:35:32	Karrq	I don't understand why I can't Box<[u8]>
2018-09-29 23:35:56	Karrq	I know [u8] is ?Sized but Box can handle ?Sized... can't it?
2018-09-29 23:36:09	Moongoodboy{K}	You /can/; it's just not very useful compared to Vec<u8>
2018-09-29 23:36:17	-->	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has joined #rust-beginners
2018-09-29 23:37:05	Moongoodboy{K}	Karrq: yes, but you can't Box::new(), because function arguments still have to be Sized
2018-09-29 23:37:31	Moongoodboy{K}	there's a Vec::into_boxed_slice(), but in most cases you're better off just keeping the Vec
2018-09-29 23:37:32	Karrq	so, what gives? How can I do that ? :(
2018-09-29 23:37:44	Moongoodboy{K}	as mentioned, boxed slices aren't very useful compared to Vec
2018-09-29 23:38:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 23:38:33	Karrq	Yeah ok
2018-09-29 23:39:04	<--	muvlon_ (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has quit (Connection closed)
2018-09-29 23:39:22	-->	muvlon_ (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has joined #rust-beginners
2018-09-29 23:39:27	Karrq	I can't push a slice to the vec, right?
2018-09-29 23:40:53	Moongoodboy{K}	Are you looking for `extend()`?
2018-09-29 23:42:08	Karrq	actually yes
2018-09-29 23:42:24	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 23:42:27	Moongoodboy{K}	c:
2018-09-29 23:42:31	Karrq	a "from_slice()" would be useful I guess
2018-09-29 23:42:47	Moongoodboy{K}	extend() is specialized
2018-09-29 23:43:12	Moongoodboy{K}	it also optimizes down to a memcpy() when appropriate, I'm pretty sure
2018-09-29 23:43:36	Karrq	there's extend_from_slice()
2018-09-29 23:43:37	Moongoodboy{K}	and extending a Vec<u8> with a &[u8] is definitely appropriate
2018-09-29 23:43:50	Moongoodboy{K}	yeah but that's deprecated; just use extend() :p
2018-09-29 23:44:22	Karrq	no it's not : https://doc.rust-lang.org/std/vec/struct.Vec.html#method.extend_from_slice
2018-09-29 23:44:24	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-29 23:44:33	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-29 23:45:16	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Ping timeout: 121 seconds)
2018-09-29 23:45:39	Moongoodboy{K}	huh, it's not deprecated yet
2018-09-29 23:45:49	Moongoodboy{K}	even though there definitely is specialization going on under the hood
2018-09-29 23:45:51	Karrq	well, I'll use extend if you say it's better
2018-09-29 23:46:00	Karrq	PR for rust docs ?
2018-09-29 23:47:44	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-29 23:48:06	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 23:48:56	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 23:49:07	Moongoodboy{K}	possibly. extend_from_slice() literally just forwards to the specialized extend()
2018-09-29 23:49:31	Moongoodboy{K}	honestly it should probably be deprecated several versions ago
2018-09-29 23:51:50	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 23:52:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 23:52:40	<--	jeramyRR (jeramyRR@moz-0q4mmb.wa.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-29 23:52:41	<--	quartz55 (quartz@moz-kcbjlm.jd6d.8n59.08a0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-29 23:56:48	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-09-29 23:56:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-29 23:56:56	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-29 23:57:06	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-29 23:57:55	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-09-29 23:59:06	-->	quartz55 (quartz@moz-9e01gu.dsl.telepac.pt) has joined #rust-beginners
2018-09-29 23:59:20	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-29 23:59:39	-->	chrisdotcode (quassel@moz-utcp2t.jv55.dlrr.fcc8.2607.IP) has joined #rust-beginners
2018-09-29 23:59:47	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-29 23:59:53	-->	Stormer (clement@moz-2nn140.ip-91-134-141.eu) has joined #rust-beginners
2018-09-29 23:59:59	<--	Stormer (clement@moz-2nn140.ip-91-134-141.eu) has left #rust-beginners
2018-09-30 00:00:03	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-30 00:00:08	-->	syncplicity (sync@moz-m86iq7.dyn.optonline.net) has joined #rust-beginners
2018-09-30 00:00:34	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 00:01:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 00:02:23	-->	curious (s34n@moz-p45.d19.76.208.IP) has joined #rust-beginners
2018-09-30 00:02:39	<--	Karrq (Karrq@moz-q35.srp.147.88.IP) has quit (Quit: Leaving)
2018-09-30 00:03:12	<--	Arcaelyx (Arcaelyx@moz-nl3jbs.77ht.vv5c.2000.2604.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-30 00:04:27	-->	dark-knight (dark-knight@moz-067kkd.dynamic.surfer.at) has joined #rust-beginners
2018-09-30 00:05:36	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 00:05:52	<--	xmltree (xmltree@moz-q9ucc8.qb9s.3f3j.6000.2605.IP) has quit (Quit: )
2018-09-30 00:05:54	-->	mib_s5lpso (Mibbit@moz-s5dau6.versanet.de) has joined #rust-beginners
2018-09-30 00:05:55	<--	mib_s5lpso (Mibbit@moz-s5dau6.versanet.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 00:06:06	-->	amiras (Mibbit@moz-s5dau6.versanet.de) has joined #rust-beginners
2018-09-30 00:06:50	amiras	hello, is there a way to get the size of a value? https://doc.rust-lang.org/std/mem/fn.size_of_val.html does not really change, does not matter what i change about the value (it has a string, even if the string is large, no change)
2018-09-30 00:07:13	<--	indy21 (indy21@moz-ehuvic.abo.bbox.fr) has quit (Quit: Leaving)
2018-09-30 00:07:27	stephaneyfx	amiras: size_of gives you the size on the stack
2018-09-30 00:07:44	stephaneyfx	amiras: String allocates on the heap to store the text
2018-09-30 00:08:21	amiras	oh, yea, i see, hm, there is nothing to find out? i just wanted to see how big one value can become in production
2018-09-30 00:08:47	stephaneyfx	amiras: your_string.len()
2018-09-30 00:08:56	amiras	yes, but there is way more to this type
2018-09-30 00:09:18	amiras	it's a chat-message, with timestamps and other bits of information
2018-09-30 00:09:38	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 00:09:38	amiras	i will probably have to sum the values?
2018-09-30 00:09:58	stephaneyfx	size_of::<Message>() + text.len() or something like that
2018-09-30 00:10:15	<--	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 00:10:19	stephaneyfx	Depending on whether the other fields allocate on the heap
2018-09-30 00:10:40	amiras	yea, there are Vecs too, that are also allocated on the heap 
2018-09-30 00:10:47	amiras	aaaa, this is bothersome, too bad : D
2018-09-30 00:11:20	amiras	thanks tho : )
2018-09-30 00:12:46	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-30 00:14:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 00:19:11	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 00:20:30	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 00:21:19	-->	asyncsec (asyncsec@moz-jt4sen.dyn6.twc.com) has joined #rust-beginners
2018-09-30 00:23:06	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 00:23:12	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 00:24:31	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 00:26:46	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 00:31:05	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 00:31:16	-->	enterprisey (enterprisey@moz-s13db7.cit.cornell.edu) has joined #rust-beginners
2018-09-30 00:33:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 00:36:37	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 00:37:28	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 00:38:31	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 00:39:06	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2018-09-30 00:39:23	<--	asyncsec (asyncsec@moz-jt4sen.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 00:41:05	-->	taisa (Mibbit@moz-ql8goo.iij4u.or.jp) has joined #rust-beginners
2018-09-30 00:41:39	<--	taisa (Mibbit@moz-ql8goo.iij4u.or.jp) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 00:43:03	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 00:43:22	<--	TeeVee (TeeVee@moz-e28ajl.chf-qkr.eircom.net) has quit (Connection closed)
2018-09-30 00:44:43	<--	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has quit (Quit: Sorry, was AFK)
2018-09-30 00:49:20	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 00:51:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 00:52:41	<--	oms (oms@moz-dd4dur.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-30 00:55:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 00:56:59	-->	Aceeri_ (uid202865@moz-gar7q8.ealing.irccloud.com) has joined #rust-beginners
2018-09-30 00:59:26	<--	gmacon (gmacon@moz-t62ti6.kj4jzy.org) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2018-09-30 00:59:54	<--	g0w (uid26336@moz-jgqv5l.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-30 00:59:58	-->	gmacon (gmacon@moz-t62ti6.kj4jzy.org) has joined #rust-beginners
2018-09-30 01:00:44	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 01:04:05	-->	asyncsec (asyncsec@moz-qcd1jc.dyn6.twc.com) has joined #rust-beginners
2018-09-30 01:04:27	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-09-30 01:04:35	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-09-30 01:04:37	cja	fwiw uninstalling vscode rust, then immediately reinstalled it fixed my rls problem so, gremlins
2018-09-30 01:04:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:04:56	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-30 01:05:09	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 01:05:30	<--	asyncsec (asyncsec@moz-qcd1jc.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 01:05:34	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:05:38	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 01:09:11	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 01:09:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 01:11:59	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-09-30 01:12:31	-->	e^ipi (e^ipi@moz-aen.bqi.89.159.IP) has joined #rust-beginners
2018-09-30 01:13:06	<--	gagbo (gagbo@moz-a9bf5n.abo.bbox.fr) has quit (Ping timeout: 121 seconds)
2018-09-30 01:14:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:18:19	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 01:19:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 01:19:46	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:19:52	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-09-30 01:19:55	--	Raychen1 is now known as Raychen
2018-09-30 01:23:06	-->	ubuntourist (kjcole@moz-i3t4v8.pools.spcsdns.net) has joined #rust-beginners
2018-09-30 01:23:16	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:28:11	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 01:30:42	<--	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has quit (Quit: Leaving)
2018-09-30 01:32:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:32:38	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 01:33:11	<--	quartz55 (quartz@moz-9e01gu.dsl.telepac.pt) has quit (Ping timeout: 121 seconds)
2018-09-30 01:35:05	<--	AtumT (IRC@moz-ii8.sqb.95.179.IP) has quit (Client exited)
2018-09-30 01:37:10	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:37:17	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 01:40:04	<--	syncplicity (sync@moz-m86iq7.dyn.optonline.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 01:40:12	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 01:40:32	-->	sp1ff_ (sp1ff@moz-aac03k.ca.comcast.net) has joined #rust-beginners
2018-09-30 01:41:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:41:39	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:41:39	--	Raychen1 is now known as Raychen
2018-09-30 01:43:16	-->	user1101 (user1101@moz-6s0.o81.158.220.IP) has joined #rust-beginners
2018-09-30 01:45:47	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 01:46:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 01:46:29	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 01:46:33	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-09-30 01:50:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 01:54:12	<--	sproing (Mibbit@moz-ii5mri.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 01:54:42	<--	adrianbrink (sid204313@moz-7l35ei.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-30 01:55:29	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 01:55:53	<--	user1101 (user1101@moz-6s0.o81.158.220.IP) has quit (Client exited)
2018-09-30 01:56:01	-->	mlitsey (Mibbit@moz-6ph.50u.98.172.IP) has joined #rust-beginners
2018-09-30 01:59:30	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-30 01:59:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:01:01	-->	zhaozhao (Mibbit@moz-dni.nll.84.117.IP) has joined #rust-beginners
2018-09-30 02:01:43	<--	mlitsey (Mibbit@moz-6ph.50u.98.172.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 02:04:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 02:07:04	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-30 02:07:26	<--	Dariost (Dariost@moz-imi.plf.48.151.IP) has quit (Client exited)
2018-09-30 02:08:37	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:09:40	<--	zhaozhao (Mibbit@moz-dni.nll.84.117.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 02:11:00	-->	starblue1 (juergen@moz-sfde4o.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-30 02:11:32	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:11:56	<--	starblue (juergen@moz-ulbgii.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-30 02:12:10	<--	sp1ff_ (sp1ff@moz-aac03k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 02:13:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 02:13:50	<--	dmm (dmm@moz-m95.rod.166.104.IP) has quit (Connection closed)
2018-09-30 02:13:53	<--	amiras (Mibbit@moz-s5dau6.versanet.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 02:14:07	-->	dmm (dmm@moz-m95.rod.166.104.IP) has joined #rust-beginners
2018-09-30 02:16:50	<--	dark-knight (dark-knight@moz-067kkd.dynamic.surfer.at) has quit (The TLS connection was non-properly terminated.)
2018-09-30 02:17:52	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:18:13	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-30 02:20:44	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:20:49	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 02:22:01	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 02:22:26	-->	insidious (insidious@moz-5gf.shg.198.134.IP) has joined #rust-beginners
2018-09-30 02:22:47	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 02:24:52	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:25:03	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 02:26:03	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 02:26:47	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 02:26:49	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:27:40	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 02:31:19	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:31:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 02:32:28	<--	jazzpi (jazzpi@moz-i6l8pk.space) has quit (Quit: ZNC - http://znc.in)
2018-09-30 02:33:11	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 02:34:03	-->	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has joined #rust-beginners
2018-09-30 02:34:35	-->	ryfbhkuh (hzdeppax@moz-os1f51.1uqv.7nqa.0642.2601.IP) has joined #rust-beginners
2018-09-30 02:35:38	<--	weeji (jihi@moz-7uqlca.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-30 02:36:04	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:37:35	-->	livepo (Mibbit@moz-2rptdl.ca.comcast.net) has joined #rust-beginners
2018-09-30 02:37:40	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 02:38:18	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 02:38:41	-->	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-30 02:39:16	<--	enterprisey (enterprisey@moz-s13db7.cit.cornell.edu) has quit (Connection closed)
2018-09-30 02:41:28	-->	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-09-30 02:42:43	<--	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:48:10	-->	enterprisey (enterprisey@moz-oumkdr.cit.cornell.edu) has joined #rust-beginners
2018-09-30 02:48:31	-->	weeji (jihi@moz-dhhp3e.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-30 02:48:55	<--	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has quit (Connection closed)
2018-09-30 02:48:58	-->	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-09-30 02:49:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 02:53:27	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 02:54:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:55:44	<--	alercah (alercah@moz-10s6ib.bc.googleusercontent.com) has quit (Quit: leaving)
2018-09-30 02:55:58	<--	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has quit (Connection closed)
2018-09-30 02:56:01	-->	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-09-30 02:56:38	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 02:56:41	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 02:57:29	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 02:58:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 03:00:43	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:00:46	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 03:03:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:03:31	<--	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has quit (Connection closed)
2018-09-30 03:03:38	-->	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-09-30 03:06:42	-->	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-30 03:07:21	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 03:09:59	-->	neal_ (neal@moz-f066es.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-30 03:10:40	<--	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has quit (Connection closed)
2018-09-30 03:11:02	-->	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-09-30 03:11:33	<--	livepo (Mibbit@moz-2rptdl.ca.comcast.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 03:12:23	<--	KiChjang (KiChjang@moz-0jpanf.urm1.6cdi.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:12:39	<--	insidious (insidious@moz-5gf.shg.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-30 03:12:54	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 03:12:55	<--	neal (neal@moz-f46s84.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-30 03:13:29	-->	gregg (greg@moz-00mjdg.gnumpf.tk) has joined #rust-beginners
2018-09-30 03:16:34	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 03:16:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 03:18:30	<--	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has quit (Connection closed)
2018-09-30 03:18:33	-->	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-09-30 03:18:36	<--	a_chou (Thunderbird@moz-osacef.ri7p.2kuh.0182.2601.IP) has quit (Client exited)
2018-09-30 03:20:54	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 03:21:18	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:22:58	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:23:01	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 03:24:17	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 03:24:32	GrimSleepless	Hey guys, I have a question for you! I am currently using racer with nvim. Is there any more supported IDE or Text Editor?
2018-09-30 03:24:38	GrimSleepless	Just wondering :)
2018-09-30 03:25:26	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:26:12	GreenJello	GrimSleepless, the reference implementation for the Rust Language Server is for vscode
2018-09-30 03:26:15	Moongoodboy{K}	The Rust Language Server is a thing, and AIUI it has support for a few different editors
2018-09-30 03:27:20	GrimSleepless	Rust is pretty much editor agnostic,  isn't it?
2018-09-30 03:27:22	GreenJello	GrimSleepless, I'd assume the quality of an implementation depends on how an editor handles language servers in general
2018-09-30 03:27:40	Moongoodboy{K}	The language itself…yeah; rustc doesn't care what editor you wrote the .rs files with
2018-09-30 03:27:45	Moongoodboy{K}	(most languages don't!)
2018-09-30 03:28:07	blackbeard420	vscode has much better completion compared to my vim/racer setup
2018-09-30 03:28:11	Moongoodboy{K}	But the “best supported” editor is probably one of the ones with full RLS support
2018-09-30 03:28:20	GrimSleepless	gotcha
2018-09-30 03:28:39	GrimSleepless	thank you  guys
2018-09-30 03:28:44	 *	Moongoodboy{K} personally just uses vim and is happy though :)
2018-09-30 03:28:50	Moongoodboy{K}	no problem ^.^
2018-09-30 03:29:11	GreenJello	if your editor highlights rust code correctly, you're 80% of the way there :-)
2018-09-30 03:29:29	blackbeard420	Moongoodboy{K}: which plugins do you use with vim for rust?
2018-09-30 03:29:34	-->	insidious (insidious@moz-5gf.shg.198.134.IP) has joined #rust-beginners
2018-09-30 03:29:39	Moongoodboy{K}	none :O
2018-09-30 03:29:43	blackbeard420	nice!
2018-09-30 03:29:50	Moongoodboy{K}	just vanilla vim
2018-09-30 03:30:46	<--	liquidnight (marcus@moz-p5vojh.2fa1.6vf1.0c23.2a01.IP) has quit (Connection closed)
2018-09-30 03:30:47	-->	simonada_ (simonadamei@moz-hoigbl.ani6.lgpb.0a61.2001.IP) has joined #rust-beginners
2018-09-30 03:31:24	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:31:28	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 03:33:26	<--	simonadameit (simonadamei@moz-g9krnj.v5b0.659g.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:34:57	GrimSleepless	Those plugins give you a hand :P
2018-09-30 03:35:08	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 03:35:11	-->	KiChjang (KiChjang@moz-mau66b.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-30 03:35:13	GrimSleepless	I have been using racer for a while, it works well but it isn't perfect
2018-09-30 03:35:19	GrimSleepless	I will try with RLS
2018-09-30 03:35:31	-->	c4rc4s (c4rc4s@moz-kc6p5d.packetize.me) has joined #rust-beginners
2018-09-30 03:37:31	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:37:34	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 03:39:13	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:43:18	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-30 03:47:43	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-09-30 03:47:43	<--	muvlon_ (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has quit (Connection closed)
2018-09-30 03:47:49	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-09-30 03:48:13	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 03:48:22	-->	muvlon_ (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has joined #rust-beginners
2018-09-30 03:49:40	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:49:40	--	Raychen1 is now known as Raychen
2018-09-30 03:53:02	-->	Dima (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-09-30 03:53:14	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 03:55:08	-->	kimundi- (kimundi@moz-iqgf7p.versanet.de) has joined #rust-beginners
2018-09-30 03:56:40	<--	kimundi (kimundi@moz-vco50e.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-30 03:56:40	--	kimundi- is now known as kimundi
2018-09-30 03:57:22	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:57:41	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 03:57:48	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 03:58:00	--	stephaneyfx_ is now known as stephaneyfx
2018-09-30 04:02:22	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-30 04:03:00	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 04:04:35	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-09-30 04:05:10	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 04:07:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 04:07:39	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 04:12:06	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 04:15:01	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 04:16:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 04:17:25	-->	poljar1 (poljar@moz-3djcdt.net.t-com.hr) has joined #rust-beginners
2018-09-30 04:19:33	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 04:20:12	<--	poljar (poljar@moz-ulbuvq.net.t-com.hr) has quit (Ping timeout: 121 seconds)
2018-09-30 04:21:12	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 04:22:11	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 04:22:48	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 04:25:14	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 04:26:40	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 04:29:18	<--	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 04:30:17	<--	alatiera__ (alatiera@moz-2c2fho.access.hol.gr) has quit (The TLS connection was non-properly terminated.)
2018-09-30 04:30:18	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 04:30:56	<--	insidious (insidious@moz-5gf.shg.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-30 04:34:14	-->	bugweiser (Mibbit@moz-d82.u7k.176.73.IP) has joined #rust-beginners
2018-09-30 04:34:20	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 04:34:29	bugweiser	how can i get this to work? is it possible to divide the value of one variable with multiple chars by another like that? https://pastebin.com/gAhQyqrb
2018-09-30 04:35:49	-->	syncplicity (sync@moz-m86iq7.dyn.optonline.net) has joined #rust-beginners
2018-09-30 04:36:03	<--	Guest61891 (nj0rd@moz-1g8ln5.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-30 04:37:23	-->	alexbrown (alexbrown@moz-seijk2.tx.comcast.net) has joined #rust-beginners
2018-09-30 04:38:58	Arnavion	I don't even know where to begin
2018-09-30 04:39:24	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 04:39:47	Arnavion	Just because a variable name has more than one character in it doesn't mean you have to enclose it in quotes
2018-09-30 04:40:04	stephaneyfx	Arnavion: It's already handled in #rust fyi
2018-09-30 04:40:10	Arnavion	Oh
2018-09-30 04:40:42	bugweiser	sorry ill only post on one channel now :(
2018-09-30 04:41:47	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 04:42:51	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-30 04:43:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 04:46:24	-->	keb (kebe@moz-gn3irk.res.rr.com) has joined #rust-beginners
2018-09-30 04:46:38	<--	keb (kebe@moz-gn3irk.res.rr.com) has quit (Quit: Leaving)
2018-09-30 04:46:55	-->	keb (kebe@moz-gn3irk.res.rr.com) has joined #rust-beginners
2018-09-30 04:47:36	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 04:47:52	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 04:48:47	-->	Guest61891 (nj0rd@moz-c420mr.versanet.de) has joined #rust-beginners
2018-09-30 04:53:38	-->	frogaincia (Mibbit@moz-igahdq.sntcca.sbcglobal.net) has joined #rust-beginners
2018-09-30 04:53:56	<--	frogaincia (Mibbit@moz-igahdq.sntcca.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 04:56:23	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Connection closed)
2018-09-30 04:56:28	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 04:56:45	<--	chrisdotcode (quassel@moz-utcp2t.jv55.dlrr.fcc8.2607.IP) has quit (The TLS connection was non-properly terminated.)
2018-09-30 04:57:36	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 05:01:26	<--	neverfox_ (neverfox@moz-325q8o.res.rr.com) has quit (Connection closed)
2018-09-30 05:01:38	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:02:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 05:04:20	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-09-30 05:04:32	-->	mib_nhdty4 (Mibbit@moz-iup.16l.34.125.IP) has joined #rust-beginners
2018-09-30 05:04:40	bugweiser	how would i fix the error shown here? https://play.rust-lang.org/?gist=3fc3248b10c3a4f3d75dca79e858608d&version=stable&mode=debug&edition=2015
2018-09-30 05:04:48	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:05:06	bugweiser	if you run that code
2018-09-30 05:06:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 05:06:33	<--	Mateon1 (Thunderbird@moz-aeffu6.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-09-30 05:06:59	-->	Mateon1 (Thunderbird@moz-oou526.supernova.orange.pl) has joined #rust-beginners
2018-09-30 05:08:12	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-30 05:08:23	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-30 05:09:08	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 05:09:23	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 05:09:40	--	fatpointer1 is now known as fatpointer
2018-09-30 05:10:08	Moongoodboy{K}	bugweiser: a and b don't exist in main(), only in input() . You probably want to return one or both of them. You may also want to read The Book if you haven't already.
2018-09-30 05:10:18	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-30 05:10:31	<--	mib_nhdty4 (Mibbit@moz-iup.16l.34.125.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 05:10:35	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:10:57	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:11:12	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-30 05:11:28	bugweiser	thank you Moongoodboy{K} . I sorta figured that, but wasn't sure. I have tried to read the book, but get very lost in the later segments.
2018-09-30 05:12:34	Moongoodboy{K}	rustc didn't point out that the variables were declared in a different scope, but the /does not exist in this scope/ got you most of the way there
2018-09-30 05:13:40	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:13:42	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 05:14:26	<--	KiChjang (KiChjang@moz-mau66b.urm1.6cdi.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:15:22	bugweiser	thanks. should i just put 'let mut a = 0' in, before 'fn input' is called? or is there a better way to do it?
2018-09-30 05:16:22	<--	niconii (nicole@moz-q3ggvo.midco.net) has quit (Quit: leaving)
2018-09-30 05:18:02	bugweiser	ah that doesnt work
2018-09-30 05:19:20	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-30 05:19:41	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 05:19:44	<--	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has quit (Ping timeout: 121 seconds)
2018-09-30 05:23:16	<--	ubuntourist (kjcole@moz-i3t4v8.pools.spcsdns.net) has quit (Connection closed)
2018-09-30 05:23:18	Moongoodboy{K}	bugweiser: this may seem like an odd question, but is Rust your first language?
2018-09-30 05:23:56	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 05:24:14	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 05:26:36	bugweiser	Moongoodboy{K}: yes haha
2018-09-30 05:26:49	bugweiser	i bet that explains the issues
2018-09-30 05:28:25	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:28:46	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 05:29:01	Moongoodboy{K}	not quite; the mistakes you're making suggested that you might be coming from shell to Rust, which is why I asked :)
2018-09-30 05:29:27	Moongoodboy{K}	anyway, https://doc.rust-lang.org/book/2018-edition/ch03-03-how-functions-work.html kind of illustrates how to use functions with arguments and return values, and it's got examples and stuff which should help ^.^
2018-09-30 05:29:49	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 05:33:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 05:35:07	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 05:36:27	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 05:37:53	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:38:19	-->	exbios (ri@moz-dm117q.totalplay.net) has joined #rust-beginners
2018-09-30 05:38:20	<--	exbios (ri@moz-dm117q.totalplay.net) has quit (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
2018-09-30 05:38:55	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-30 05:39:51	bugweiser	Moongoodboy{K}:  thank you. ive been glancing that over while we were talking before
2018-09-30 05:40:44	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 05:41:19	 *	Moongoodboy{K} nods.
2018-09-30 05:42:46	-->	koutron (Mibbit@moz-mp4v3k.fios.verizon.net) has joined #rust-beginners
2018-09-30 05:43:06	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 05:43:14	koutron	jony what is UP MY MAN!?
2018-09-30 05:43:27	koutron	jk - goodluck rusting!
2018-09-30 05:43:51	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 05:44:10	koutron	omg gnzlbg what is UP BRO HOW U DOIN MAN!?
2018-09-30 05:44:27	koutron	bah
2018-09-30 05:45:20	<--	koutron (Mibbit@moz-mp4v3k.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 05:46:42	<--	keb (kebe@moz-gn3irk.res.rr.com) has quit (Quit: Leaving)
2018-09-30 05:47:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:49:02	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 05:51:06	bugweiser	Moongoodboy{K}: im still confused xD 
2018-09-30 05:51:24	-->	relchar (Mibbit@moz-qit.8in.211.162.IP) has joined #rust-beginners
2018-09-30 05:53:02	Moongoodboy{K}	bugweiser: I take it you just read section 3.3 of the Book and are looking at your code again? Which part are you confused about? :)
2018-09-30 05:53:03	<--	relchar (Mibbit@moz-qit.8in.211.162.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 05:54:59	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:55:04	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 05:56:04	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-30 05:56:39	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-30 05:59:06	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 05:59:10	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 05:59:11	bugweiser	i did. so, since the variables are never actually assigned a value (since it is given via input) and they are mutatable. sorry i am having a hard time on this specific part for some reason
2018-09-30 05:59:57	bugweiser	i cant figure out how i would declare it without changing the value that is typed in
2018-09-30 06:00:16	-->	Puddles (Mibbit@moz-cpfmga.cable.rogers.com) has joined #rust-beginners
2018-09-30 06:00:31	akhiros	bugweiser: The variable `a` in input() exists from line 35 to line 39, and is not available in main(). To pull the value of `a` out of input(), you need to return it (see "Functions with Return Values" for examples).
2018-09-30 06:00:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 06:01:24	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-30 06:01:32	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-30 06:01:35	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 06:02:51	<--	Puddles (Mibbit@moz-cpfmga.cable.rogers.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 06:03:15	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 06:03:41	<--	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has quit (Client exited)
2018-09-30 06:04:52	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-30 06:04:52	bugweiser	so like "let a = input();"? 
2018-09-30 06:05:00	akhiros	Yep! :)
2018-09-30 06:05:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 06:06:06	bugweiser	hm. since i determine two variables in "fn input", i should break fn input into two different functions?
2018-09-30 06:06:58	akhiros	You don't have to. You can use tuples like: (a, b)
2018-09-30 06:07:40	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 06:07:44	akhiros	https://play.rust-lang.org/?gist=bdc9678c321a4df809abbdba3006ac8c&version=stable&mode=debug&edition=2015
2018-09-30 06:07:47	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 06:11:37	bugweiser	https://play.rust-lang.org/?gist=bdc9678c321a4df809abbdba3006ac8c&version=stable&mode=debug&edition=2015
2018-09-30 06:11:53	bugweiser	i fixed the other part, now this is the only error
2018-09-30 06:12:20	bugweiser	oops thats the wrong link
2018-09-30 06:13:08	<--	adray (aray@moz-mjh.tl0.65.159.IP) has quit (Quit: WeeChat 2.2)
2018-09-30 06:13:16	bugweiser	https://play.rust-lang.org/?gist=1d641414558d0c32a93d0f04a490e5fe&version=stable&mode=debug&edition=2015
2018-09-30 06:13:20	bugweiser	that one
2018-09-30 06:13:32	-->	adray (aray@moz-mjh.tl0.65.159.IP) has joined #rust-beginners
2018-09-30 06:14:29	Moongoodboy{K}	bugweiser: you want the function to return (i32, i32), but it actually returns nothing (written as `()`). You probably meant to write `(a, b)` at the end of the function, to return it.
2018-09-30 06:15:12	dmc	pregunta uno para español
2018-09-30 06:17:31	bugweiser	https://play.rust-lang.org/?gist=f09c02ae1d3de9fed48bb6e230ce03e7&version=stable&mode=debug&edition=2015. i should change the i32 to something else?
2018-09-30 06:18:34	akhiros	The issue is that the user could type anything... they could choose to type "mary had a little lamb" instead of 123
2018-09-30 06:18:50	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 06:19:34	-->	ruito (Mibbit@moz-dtu.vqf.65.111.IP) has joined #rust-beginners
2018-09-30 06:19:45	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 06:19:46	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 06:20:23	bugweiser	is there a way to read a line and pass it to a variable only as an integer then? the way i learned isnt the most efficient
2018-09-30 06:22:26	dmc	oh, wrong channel
2018-09-30 06:22:45	akhiros	bugweiser: To find out how to do that, I googled for "rust convert string to integer" the first link contains this answer: https://stackoverflow.com/a/27683271
2018-09-30 06:23:01	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 06:23:31	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 06:24:43	akhiros	The complexity in that answer (having to specify i32 and having to unwrap) exist because there are many things you might want to convert a string to, and because some programs want to be able to handle situations where the user doesn't type an integer
2018-09-30 06:25:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 06:27:33	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 06:28:04	bugweiser	ah. this works. but panics on putting in decimals, what does rust call a non-integer number? is it f32 or is that something else?
2018-09-30 06:28:15	akhiros	Yep, f32
2018-09-30 06:28:36	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 06:28:58	<--	ruito (Mibbit@moz-dtu.vqf.65.111.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 06:29:42	akhiros	You'll have to also update the type your function returns from i32 to f32
2018-09-30 06:30:01	bugweiser	sweeeet! everything is working now! 
2018-09-30 06:30:08	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 06:30:10	bugweiser	thank you so much!
2018-09-30 06:30:30	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 06:30:39	akhiros	No problem! :)
2018-09-30 06:32:38	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 06:34:10	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 06:36:42	akhiros	BTW, earlier, I got the sense that you're expecting the value returned to be determined by matching up variable names... Rather, it's the very last line of the function that determines what is returned... hopefully this example will make sense: https://play.rust-lang.org/?gist=1d641414558d0c32a93d0f04a490e5fe&version=stable&mode=debug&edition=2015
2018-09-30 06:36:59	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-30 06:37:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 06:38:52	akhiros	gah, whoops, wrong link
2018-09-30 06:39:16	bugweiser	akhiros: haha the linking is a bit goofy sometimes with the playground
2018-09-30 06:39:34	bugweiser	its happened to me several times
2018-09-30 06:39:59	akhiros	https://play.rust-lang.org/?gist=055d7c7b85a001d7a6a009e4ef709d6b&version=stable&mode=debug&edition=2015
2018-09-30 06:41:45	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 06:41:46	akhiros	Even though lines 2 and 7 both have variables named `a`, they're unrelated. The `a` on line 2 gets set to whatever line 9 is.
2018-09-30 06:42:02	akhiros	(which happens to be `b`
2018-09-30 06:43:06	bugweiser	hmm, this is rather interesting
2018-09-30 06:43:36	bugweiser	ill keep that in mind, you just saved me from a headache in the future
2018-09-30 06:46:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 06:50:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 06:54:28	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-09-30 06:54:29	<--	enterprisey (enterprisey@moz-oumkdr.cit.cornell.edu) has quit (Connection closed)
2018-09-30 06:55:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 06:56:07	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 06:57:17	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-09-30 06:57:21	-->	ruito (Mibbit@moz-dtu.vqf.65.111.IP) has joined #rust-beginners
2018-09-30 06:57:22	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 06:57:28	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 06:58:26	-->	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-30 07:00:02	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:01:54	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:01:56	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-09-30 07:03:17	<--	bugweiser (Mibbit@moz-d82.u7k.176.73.IP) has left #rust-beginners
2018-09-30 07:05:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 07:05:53	-->	asyncsec (asyncsec@moz-gim40n.dyn6.twc.com) has joined #rust-beginners
2018-09-30 07:06:04	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 07:06:25	<--	asyncsec (asyncsec@moz-gim40n.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 07:07:02	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-30 07:07:05	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-09-30 07:09:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:09:05	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 07:12:35	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2018-09-30 07:14:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 07:18:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:18:13	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 07:18:27	-->	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-09-30 07:19:41	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:19:41	--	Raychen1 is now known as Raychen
2018-09-30 07:22:08	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-30 07:22:12	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Connection closed)
2018-09-30 07:22:29	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 07:22:29	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 07:23:13	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 07:26:31	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 07:27:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:32:12	<--	ruito (Mibbit@moz-dtu.vqf.65.111.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 07:32:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 07:32:34	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:32:38	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 07:36:21	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:36:56	<--	emerent (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-09-30 07:37:18	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 07:38:57	-->	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has joined #rust-beginners
2018-09-30 07:39:13	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-09-30 07:39:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 07:39:57	<--	tsal (tsal@moz-va54kv.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-30 07:41:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 07:42:20	-->	tsal (tsal@moz-cp1hkt.versanet.de) has joined #rust-beginners
2018-09-30 07:44:23	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-09-30 07:44:43	-->	Aaronepower (Aaronepower@moz-502.gps.129.212.IP) has joined #rust-beginners
2018-09-30 07:44:44	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 07:45:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:46:09	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 07:46:12	<--	himi (sjjf@moz-ussp41.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:46:30	-->	himi (sjjf@moz-r3ta53.internode.on.net) has joined #rust-beginners
2018-09-30 07:48:46	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 07:48:51	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:48:55	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 07:50:16	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 07:50:28	-->	jm9k (email@moz-ckj4do.aflg.tku2.0204.2601.IP) has joined #rust-beginners
2018-09-30 07:50:31	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 07:51:29	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 07:52:58	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:53:01	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 07:54:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:55:37	-->	ruito (Mibbit@moz-06jah7.singnet.com.sg) has joined #rust-beginners
2018-09-30 07:55:45	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 07:55:57	jm9k	What would be the proper syntax for doing this? myfunction(&id as u64)
2018-09-30 07:56:01	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 07:56:04	jm9k	id is a i64
2018-09-30 07:57:52	-->	oms (oms@moz-1lh7j4.dyn.telefonica.de) has joined #rust-beginners
2018-09-30 08:00:05	GreenJello	jm9k, you specifically need it to be a reference?
2018-09-30 08:00:32	jm9k	Yes, it's actually a library I'm using that and requires a ref.
2018-09-30 08:00:56	GreenJello	foo(&(x as u64));
2018-09-30 08:01:35	jm9k	Ah, ok thanks. I knew there had to be a better way than `let id = id as u64`.
2018-09-30 08:01:36	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-09-30 08:01:43	italic	would `foo(&x as &u64)` not be equivalent?
2018-09-30 08:02:14	Havvy	italic: Nope. That'd be recasting the reference, but not the data it points at.
2018-09-30 08:02:20	italic	ah
2018-09-30 08:06:45	jm9k	It seems like a bunch of libs like to use i64 instead of u64. Is there a reason for what?
2018-09-30 08:06:48	jm9k	that?
2018-09-30 08:08:01	<--	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 08:08:01	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 08:08:23	-->	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-30 08:08:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 08:10:28	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-09-30 08:10:43	Lumpio-	jm9k: Negative numbers?
2018-09-30 08:11:37	jm9k	Well yeah, but why? For example, Utc::now().timestamp() returns a i64.
2018-09-30 08:11:53	<--	muvlon_ (muvlon@moz-99isd5.5utd.b4gt.a03f.2a02.IP) has quit (Quit: Leaving)
2018-09-30 08:11:58	Lil_Dropchk	why does it compile without error when i cast an enum to usize that doesn't have a `#[repr(..)]` of some int type?
2018-09-30 08:12:08	Lil_Dropchk	shouldn't it be required?
2018-09-30 08:12:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 08:12:21	-->	Evildropbear (Mibbit@moz-8hn.q01.244.46.IP) has joined #rust-beginners
2018-09-30 08:12:21	Lil_Dropchk	isnt it UB if it doesn't have an explicit int repr?
2018-09-30 08:12:35	Lil_Dropchk	because the underlying repr could change in a future compiler version
2018-09-30 08:12:45	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:13:13	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:13:17	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 08:13:50	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 08:15:07	Evildropbear	hello, i am fighting the borrow checker as was wondering if I call clone on an imagebuffer, will it actually clone the whole buffer or only the referece?
2018-09-30 08:16:26	Evildropbear	http://mibpaste.com/XQaLsU 
2018-09-30 08:16:43	Evildropbear	aw invalid link
2018-09-30 08:16:46	Evildropbear	    let rawInput = img.into_raw();
2018-09-30 08:17:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 08:18:17	Havvy	Lil_Dropchk: Source?
2018-09-30 08:18:36	Havvy	Actually, nvmd.
2018-09-30 08:18:59	<--	ruito (Mibbit@moz-06jah7.singnet.com.sg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 08:19:35	Havvy	Evildropbear: Usually .clone() clones all underlying data unless the type says otherwise (e.g. Rc and Arc)
2018-09-30 08:19:41	-->	arunkumar413 (arunkumar41@moz-avj.f62.48.157.IP) has joined #rust-beginners
2018-09-30 08:19:59	Havvy	It's because for enums without fields, each variant has an associated number, so no matter what the representation actually is, it's possible to translate to a numeric type.
2018-09-30 08:21:31	Evildropbear	Would anyone mind helping me with the borrow checker: https://pastebin.com/AYQHysBD
2018-09-30 08:21:37	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 08:21:37	Evildropbear	The last line is borrow error
2018-09-30 08:21:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:23:10	Havvy	Having the full error message is crucial.
2018-09-30 08:23:20	Evildropbear	   |                    ^^^ cannot move out of borrowed content
2018-09-30 08:23:23	Evildropbear	for img variable
2018-09-30 08:23:23	Lil_Dropchk	Havvy: so i only HAVE to write #[repr] when passing instances of this enum by value or pointer to C via ffi?
2018-09-30 08:23:37	Lil_Dropchk	not when casting to int in rust
2018-09-30 08:23:42	Lil_Dropchk	?
2018-09-30 08:23:50	Havvy	Lil_Dropchk: Sounds about right.
2018-09-30 08:24:06	Lil_Dropchk	"about"? or what's the exact rule?
2018-09-30 08:24:24	Havvy	I cannot think of a case where you'd care about the `repr` while using it in Rust.
2018-09-30 08:24:31	Lil_Dropchk	ok
2018-09-30 08:24:52	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 08:25:03	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 08:25:37	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 08:26:29	<--	xnor (alex@moz-0rdqvu.silverninja.net) has quit (Ping timeout: 121 seconds)
2018-09-30 08:26:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 08:27:34	-->	xnor (alex@moz-0rdqvu.silverninja.net) has joined #rust-beginners
2018-09-30 08:27:39	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 08:27:39	Havvy	Evildropbear: Can you use .to_luma8()?
2018-09-30 08:28:53	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-30 08:28:54	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 08:29:05	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 08:30:03	-->	himi-cat (sjjf@moz-vdfhkl.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-09-30 08:30:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:31:24	Evildropbear	ah to_luma() seems to work
2018-09-30 08:31:34	Evildropbear	i was afraid it would do a conversion or copy on the bytes
2018-09-30 08:33:12	<--	himi (sjjf@moz-r3ta53.internode.on.net) has quit (Ping timeout: 121 seconds)
2018-09-30 08:33:36	Havvy	It might actually do the conversion, but you can only .into_raw() on owned data. But given that there's `as_luma8()`, it's probably cheap.
2018-09-30 08:34:24	Evildropbear	the problem is the image i want to eventually read is going to be gigabytes in size haha
2018-09-30 08:34:30	Evildropbear	so im just trying to pay attentino
2018-09-30 08:34:55	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:34:58	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 08:35:32	Havvy	I've got no useful advice there.
2018-09-30 08:35:42	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-09-30 08:35:46	Evildropbear	no worries ty for your help
2018-09-30 08:36:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 08:36:45	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Quit: Leaving)
2018-09-30 08:37:40	--	prikk_ is now known as prikk
2018-09-30 08:38:01	-->	meain (plank@moz-crb.4hn.207.49.IP) has joined #rust-beginners
2018-09-30 08:39:50	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 08:39:51	<--	meain (plank@moz-crb.4hn.207.49.IP) has quit (Connection closed)
2018-09-30 08:40:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:40:39	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-09-30 08:43:25	-->	hamsteri_ (hamsteri@moz-hs7.fvt.60.194.IP) has joined #rust-beginners
2018-09-30 08:44:02	-->	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 08:45:18	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:45:38	<--	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:45:38	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 08:45:52	-->	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has joined #rust-beginners
2018-09-30 08:48:04	<--	Raychen1 (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:48:07	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 08:50:10	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:52:31	<--	Aaronepower (Aaronepower@moz-502.gps.129.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:53:01	<--	jm9k (email@moz-ckj4do.aflg.tku2.0204.2601.IP) has quit (Quit: )
2018-09-30 08:53:01	<--	curious (s34n@moz-p45.d19.76.208.IP) has quit (Quit: Leaving)
2018-09-30 08:54:02	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 08:54:10	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 08:54:14	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 08:54:43	-->	ruito (Mibbit@moz-06jah7.singnet.com.sg) has joined #rust-beginners
2018-09-30 08:54:55	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 08:58:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 09:00:08	<--	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 09:00:10	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 09:01:56	ruito	hi
2018-09-30 09:01:59	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 09:05:53	-->	gallatin (gallatin@moz-ko4nr2.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-30 09:06:05	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-09-30 09:07:46	-->	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-30 09:07:58	ruito	hi
2018-09-30 09:08:01	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 09:08:47	-->	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has joined #rust-beginners
2018-09-30 09:16:56	-->	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has joined #rust-beginners
2018-09-30 09:18:56	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Client exited)
2018-09-30 09:19:15	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 09:20:50	-->	yann-kaelig (yann-kaelig@moz-63h1op.dynamic.chello.pl) has joined #rust-beginners
2018-09-30 09:21:11	<--	arunkumar413 (arunkumar41@moz-avj.f62.48.157.IP) has quit (Quit: Leaving)
2018-09-30 09:22:26	<--	Evildropbear (Mibbit@moz-8hn.q01.244.46.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 09:22:59	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-30 09:23:17	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 09:28:20	-->	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-30 09:30:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 09:31:07	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 09:31:15	wildermind	If I have strcut A with lifetime 'a and I want to own A inside another struct B withlife time 'b, do I have to specify the lifetime 'a of A inside B ? 
2018-09-30 09:32:12	wildermind	forget about 'b it's irelevant. Basically I have a struct A with a lifetime 'a. Now in B I want to own A (not borrowing). Do I have to specify the lifetime because A has inside of it ? 
2018-09-30 09:32:44	Minoru	no, because A's lifetime is now equal to B's lifetime
2018-09-30 09:33:38	-->	jec_ (jec@moz-pboa8b.ks.cox.net) has joined #rust-beginners
2018-09-30 09:33:45	<--	jec_ (jec@moz-pboa8b.ks.cox.net) has left #rust-beginners
2018-09-30 09:34:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 09:36:09	-->	quartz55 (quartz@moz-rpjlqo.jd6d.8n59.08a0.2001.IP) has joined #rust-beginners
2018-09-30 09:37:42	-->	mib_e6cf3u (Mibbit@moz-nm4.m9k.166.82.IP) has joined #rust-beginners
2018-09-30 09:38:04	<--	mib_e6cf3u (Mibbit@moz-nm4.m9k.166.82.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 09:38:13	<--	quartz55 (quartz@moz-rpjlqo.jd6d.8n59.08a0.2001.IP) has quit (Quit: Leaving)
2018-09-30 09:39:41	wildermind	Umm 
2018-09-30 09:39:46	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 09:40:24	wildermind	I am trying to own this Policy struct inside Optimizer struct, tried to hack something with the lifetimes but i am not sure im doing this correct and still getting an error in line #15 
2018-09-30 09:40:25	wildermind	https://play.rust-lang.org/?gist=138543e8d0da0a314c0c11399644b26b&version=stable&mode=debug&edition=2015 
2018-09-30 09:44:09	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-09-30 09:44:17	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 09:45:20	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-30 09:45:30	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 09:46:08	ruito	i am trying cross compile to andoidabi target. I got this error. /usr/local/android-ndk-r15b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin/ld: error: cannot find -lglib-2.0 collect2: error: ld returned 1 exit status Error while executing gcc
2018-09-30 09:48:04	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 09:48:33	Minoru	wildermind: here you go https://play.rust-lang.org/?gist=91f284ae25693dd611706aae081075f4&version=stable&mode=debug&edition=2015
2018-09-30 09:49:03	Minoru	wildermind: Optimizer indeed owns Policy, but you still need a lifetime parameter because Policy needs a lifetime parameter
2018-09-30 09:49:32	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 09:49:35	Minoru	if Policy owned that Vec in dns_nodes, Policy wouldn't require a lifetime parameter, and you won't need to pass 'b into Optimizer
2018-09-30 09:49:41	Minoru	does that make sense?
2018-09-30 09:52:04	Minoru	ruito: we've seen your question, but apparently no-one knows an answer off-hand. Please be patient, maybe someone will show up and figure it out. I'm of no help since I never cross-compiled. It seems like you need libglib-2.0.so or libglib-2.0.a, but I'm not sure what the context is and how and where you should install the library
2018-09-30 09:52:16	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 09:52:37	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-09-30 09:53:37	wildermind	Minoru: gotcha! thanks a lot! 
2018-09-30 09:53:44	ruito	thanks for ur time.
2018-09-30 09:54:20	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 09:54:33	ruito	i am trying gstreamerrs on android
2018-09-30 09:54:38	ruito	cargo apk
2018-09-30 09:56:04	-->	reedlepee (Mibbit@moz-5u9.shp.168.188.IP) has joined #rust-beginners
2018-09-30 09:58:35	-->	Aqo (Aqo@moz-25cu4v.inter.net.il) has joined #rust-beginners
2018-09-30 10:00:26	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 10:00:39	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 10:00:43	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 10:03:15	<--	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2018-09-30 10:04:04	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Client exited)
2018-09-30 10:08:57	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 10:11:58	<--	reedlepee (Mibbit@moz-5u9.shp.168.188.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 10:12:15	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 10:13:08	ibrokemypie	how much better is it to use buffered reading and writing for a single file anywhere between 10 to 1000 lines long?
2018-09-30 10:15:38	<--	xet7 (xet7@moz-to86fv.rev.dnainternet.fi) has quit (Quit: Leaving)
2018-09-30 10:16:32	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-09-30 10:18:18	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 10:19:23	ibrokemypie	oh, it was .001s faster according to time
2018-09-30 10:19:30	<--	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 10:20:53	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 10:20:57	-->	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has joined #rust-beginners
2018-09-30 10:23:46	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust-beginners
2018-09-30 10:25:35	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 10:29:37	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 10:31:02	<--	ithinuel (ithinuel@moz-ro6cjb.cable.virginm.net) has quit (Quit: WeeChat 2.1)
2018-09-30 10:31:13	-->	cmyr (cmyr@moz-7tugri.cpe.teksavvy.com) has joined #rust-beginners
2018-09-30 10:33:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 10:33:53	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 10:34:13	-->	eyans (a@moz-bfg4el.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-30 10:35:09	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-30 10:37:01	Moongoodboy{K}	ibrokemypie: if you're making small reads or writes, you probably wanna use a buffer
2018-09-30 10:37:12	Moongoodboy{K}	the trick is defining /small/
2018-09-30 10:37:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 10:38:25	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 10:38:39	-->	pamaury (pamaury@moz-e9u.qc3.235.46.IP) has joined #rust-beginners
2018-09-30 10:40:29	<--	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2018-09-30 10:41:31	-->	gagbo (gagbo@moz-a9bf5n.abo.bbox.fr) has joined #rust-beginners
2018-09-30 10:41:31	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Quit: Leaving)
2018-09-30 10:41:50	Lil_Dropchk	is there something like to_string() for Debug instead of format!("{:?}", p) ?
2018-09-30 10:42:15	kimundi	there isn't
2018-09-30 10:42:42	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 10:42:43	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 10:42:47	Lil_Dropchk	:(
2018-09-30 10:42:51	-->	tasansga (ansgar@moz-oucppq.connect.netcom.no) has joined #rust-beginners
2018-09-30 10:42:59	 *	Moongoodboy{K} isn't a big fan of ToString >.>
2018-09-30 10:43:20	Havvy	fn debug<T: Debug)(t: T) -> String { format!("{:?}", t) }
2018-09-30 10:44:56	Havvy	Or define `trait DebugExt { fn to_debug_string(&self) -> String; } impl<T> DebugExt for T where T: Debug { fn to_debug_string(&self) -> String { format!("{:?}", self) } }
2018-09-30 10:44:57	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 10:45:05	Lil_Dropchk	Moongoodboy{K}: why not
2018-09-30 10:47:15	-->	arunkumar413 (arunkumar41@moz-avj.f62.48.157.IP) has joined #rust-beginners
2018-09-30 10:48:59	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 10:49:16	gagbo	Hello, I'd like to try make a Conway's game of life as a first non-basic-algorithm rust project. What's the preferred way to create GUIs in Rust right now ? SDL bindings ?
2018-09-30 10:49:43	Moongoodboy{K}	I'm not too sure
2018-09-30 10:49:57	Moongoodboy{K}	maybe it's because it's used for &str -> String operations a lot
2018-09-30 10:50:20	Moongoodboy{K}	maybe because I think it's too useless and we should all just use format!() instead
2018-09-30 10:50:30	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-30 10:50:32	Moongoodboy{K}	maybe it's because I don't like that Display was given special treatment that way
2018-09-30 10:50:39	Moongoodboy{K}	maybe it just reminds me of Java too much :P
2018-09-30 10:52:01	-->	liquidnight (marcus@moz-0689gr.7bgo.ug7g.0c23.2a01.IP) has joined #rust-beginners
2018-09-30 10:52:13	<--	Raychen (Thunderbird@moz-pbj.voc.173.107.IP) has quit (Client exited)
2018-09-30 10:52:46	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-30 10:53:24	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust-beginners
2018-09-30 10:53:48	Lil_Dropchk	if i define a lazy_static in a local scope it won't cause more overhead/inefficiency than in global scope?
2018-09-30 10:53:59	Lil_Dropchk	right?
2018-09-30 10:54:35	<--	dozn (dozn@moz-3pudru.vs.shawcable.net) has quit (Connection closed)
2018-09-30 10:54:36	kimundi	righjt
2018-09-30 10:54:42	Lil_Dropchk	gagbo: the recommended 2018 way is to use wasm with {!crate yew} and then post it on reddit
2018-09-30 10:54:42	+rustbot	yew (0.4.0) - A framework for making client-side single-page apps -> https://crates.io/crates/yew <https://docs.rs/yew>
2018-09-30 10:55:00	Havvy	A static defined in local scope is still globally static, but only accessible in the local scope it is defined in.
2018-09-30 10:55:04	Lil_Dropchk	ok
2018-09-30 10:56:19	Havvy	gagbo: There's no good answer to that question, since GUIs in Rust are an underdeveloped area of the language.
2018-09-30 10:57:33	<--	ruito (Mibbit@moz-06jah7.singnet.com.sg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 10:57:45	gagbo	fair enough
2018-09-30 10:59:02	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-30 10:59:59	Moongoodboy{K}	/webapps/ :(
2018-09-30 11:00:09	Moongoodboy{K}	//single-page// webapps >:(
2018-09-30 11:00:26	-->	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-09-30 11:02:20	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-30 11:02:20	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-30 11:04:07	-->	justsomequestions (gumble@moz-grhuut.pptp.stw-bonn.de) has joined #rust-beginners
2018-09-30 11:04:13	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-09-30 11:04:43	ibrokemypie	aight, my makepkg wrapper prpject should theoretically be feature complete now
2018-09-30 11:05:00	ibrokemypie	i just hacve no way to test if it actually works at all for another week :P
2018-09-30 11:05:29	ibrokemypie	it produces the expected output, just dont have arch to test whether that output is indeed correct
2018-09-30 11:06:02	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 11:06:04	sebk	!show
2018-09-30 11:06:09	sebk	oh.
2018-09-30 11:06:14	 *	sebk deleted it
2018-09-30 11:06:33	ibrokemypie	what is !show?
2018-09-30 11:06:59	 *	sebk wrote small crate to display pixel images
2018-09-30 11:07:23	sebk	just a wrapper around another crate (name forgotten)
2018-09-30 11:08:24	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-30 11:09:45	Havvy	!crate show
2018-09-30 11:09:45	+rustbot	show (0.1.1) - A `show!` debugging macro to print expressions with the Show formatting trait, without writing out `"{}", ` in the `println!` macro.  -> https://crates.io/crates/show <https://docs.rs/show>
2018-09-30 11:10:09	Havvy	Well, it's not that.
2018-09-30 11:10:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 11:10:46	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-09-30 11:13:33	-->	dethos (dethos@moz-joj.gtm.138.213.IP) has joined #rust-beginners
2018-09-30 11:15:03	Moongoodboy{K}	:/
2018-09-30 11:15:05	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 11:15:16	Moongoodboy{K}	c'mon, guys, we don't need /another/ ToString
2018-09-30 11:17:23	-->	mrfreakguy (Mibbit@moz-2po.rpu.238.160.IP) has joined #rust-beginners
2018-09-30 11:17:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 11:19:07	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 11:20:24	 *	Havvy gives Moongoodboy{K} a ToString generator.
2018-09-30 11:20:53	 *	Moongoodboy{K} tries to at least repurpose it to make yarn.
2018-09-30 11:20:55	Lil_Dropchk	with sublime enhanced, how can i only run cargo check on ctrl-B, NOT on file save?
2018-09-30 11:21:31	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-30 11:21:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 11:23:17	<--	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2018-09-30 11:25:16	-->	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-30 11:27:02	-->	Dariost (Dariost@moz-imi.plf.48.151.IP) has joined #rust-beginners
2018-09-30 11:27:36	-->	raingloom (raingloom@moz-3kouvt.pool.telekom.hu) has joined #rust-beginners
2018-09-30 11:28:00	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 11:28:57	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-30 11:31:36	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust-beginners
2018-09-30 11:32:22	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-09-30 11:32:32	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 11:36:11	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-30 11:36:44	-->	Aaronepower (Aaronepower@moz-jqc.96c.97.79.IP) has joined #rust-beginners
2018-09-30 11:37:51	<--	jwatt (roslea@jwatt.irc.users.mozilla.org) has quit (Ping timeout: 121 seconds)
2018-09-30 11:38:59	<--	starblue1 (juergen@moz-sfde4o.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-30 11:39:53	-->	Iphytech (Mibbit@moz-ha6.1lf.190.41.IP) has joined #rust-beginners
2018-09-30 11:43:59	-->	virog (Mibbit@moz-npqqgu.dhcp.inet.fi) has joined #rust-beginners
2018-09-30 11:44:29	<--	virog (Mibbit@moz-npqqgu.dhcp.inet.fi) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 11:47:35	-->	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-30 11:48:54	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 11:49:51	<--	liquidnight (marcus@moz-0689gr.7bgo.ug7g.0c23.2a01.IP) has quit (Connection closed)
2018-09-30 11:50:40	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-09-30 11:51:16	<--	justsomequestions (gumble@moz-grhuut.pptp.stw-bonn.de) has quit (Quit: Konversation terminated!)
2018-09-30 11:52:39	<--	blueberry_cheesecake (blueberry_c@moz-gk1j15.upc-a.chello.nl) has left #rust-beginners ("Leaving")
2018-09-30 11:53:43	wildermind	does * on some val has the same meaning as C ? 
2018-09-30 11:54:15	Moongoodboy{K}	* is the dereference and multiplication operator, yes
2018-09-30 11:55:18	wildermind	cool (forgot about multiplication :P) ty 
2018-09-30 11:56:08	wildermind	Also, if I want to use println! macro for output, what trait do I have to implement? It's a lil confusing, I know there's Debug and theres Fmt ? 
2018-09-30 11:56:12	-->	starblue (juergen@moz-sfde4o.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-30 11:56:26	wildermind	Meaning, I want to print it in some custom way  when using println! 
2018-09-30 11:57:34	-->	ksqsf_ (ksqsf@moz-dv99lg.h0dd.vs72.0da8.2001.IP) has joined #rust-beginners
2018-09-30 11:58:03	-->	bletch (Mibbit@moz-14m.gfg.149.169.IP) has joined #rust-beginners
2018-09-30 11:58:10	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-09-30 11:58:14	wildermind	nvm found it, fmt::Display
2018-09-30 11:58:42	Moongoodboy{K}	Display is probably the one you want, yeah
2018-09-30 11:58:48	Moongoodboy{K}	Debug should just be derived in most cases
2018-09-30 11:59:01	wildermind	Moongoodboy{K}: ty 
2018-09-30 11:59:19	Moongoodboy{K}	c:
2018-09-30 11:59:35	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-09-30 12:02:57	wildermind	Any idea why the compiler yelling? im not sure https://play.rust-lang.org/?gist=17bf368824905105b99ae93d773b30ad&version=stable&mode=debug&edition=2015 
2018-09-30 12:03:14	wildermind	I want to print Graph type in my own way (Vec<Vec<usize>>)
2018-09-30 12:03:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-30 12:03:59	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 12:03:59	<--	Iphytech (Mibbit@moz-ha6.1lf.190.41.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 12:04:29	<--	HeN (sid173181@moz-rp9ic4.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-30 12:05:11	-->	justsomequestions (gumble@moz-grhuut.pptp.stw-bonn.de) has joined #rust-beginners
2018-09-30 12:05:52	<--	ksqsf_ (ksqsf@moz-dv99lg.h0dd.vs72.0da8.2001.IP) has quit (Client exited)
2018-09-30 12:06:00	-->	ksqsf_ (ksqsf@moz-2bk.lqt.214.114.IP) has joined #rust-beginners
2018-09-30 12:06:54	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-09-30 12:06:56	wildermind	or... in case this is X->Y problem, I need to print  Vec<Vec<usize>> in my own way when using println! macro.  
2018-09-30 12:08:32	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 12:09:11	sebk	wildermind: see std::fmt docs
2018-09-30 12:09:13	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 12:09:16	kimundi	wildermind: The issue is that you have not defined a custom type graph, but an alias for the type vec<Vec>
2018-09-30 12:09:43	kimundi	wildermind: do struct Graph { data: Vec<vec<usize>> } or so
2018-09-30 12:09:49	<--	cody (cody@moz-l7p0b2.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-30 12:09:49	-->	cody1 (cody@moz-t8t5u8.2urf.4i6p.810d.2a02.IP) has joined #rust-beginners
2018-09-30 12:10:02	wildermind	kimundi: I see, cant i override then Vec<Vec<usize>>? 
2018-09-30 12:10:27	kimundi	No, you can not override existing trait implementations
2018-09-30 12:11:04	wildermind	ok make sense 
2018-09-30 12:11:04	wildermind	ty 
2018-09-30 12:11:18	wildermind	kimundi: ^^
2018-09-30 12:13:07	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-30 12:13:15	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 12:14:10	<--	pamaury (pamaury@moz-e9u.qc3.235.46.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 12:15:56	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-30 12:19:19	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 12:22:07	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 12:24:18	<--	bletch (Mibbit@moz-14m.gfg.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 12:26:39	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 12:27:29	-->	bletch (Mibbit@moz-havuji.versanet.de) has joined #rust-beginners
2018-09-30 12:28:31	bletch	hello, can somehow tell me how stable async/await on nightly are? i was considering building a server for production, rust 2018 and async/await are quite interesting for that, but using nightly for production is also a bit scary, i probably should not
2018-09-30 12:29:52	-->	mad_hatter (mad_hatter@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-09-30 12:32:00	Minoru	if it were stable it'd be in stable ;) It really depends on the level of production, and how much time you can devote to fighting the resulting fires. If you never used any of those features, I strongly suggest to try them in some pet project first. Build a prototype of your production application, maybe?
2018-09-30 12:34:11	-->	simonadameit (simonadamei@moz-toj6a3.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-30 12:34:46	Lil_Dropchk	with sublime enhanced, how can i only run cargo check on ctrl-B, NOT on file save?
2018-09-30 12:36:02	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-30 12:37:16	-->	newfans (Mibbit@moz-gjb.vnp.217.180.IP) has joined #rust-beginners
2018-09-30 12:37:31	newfans	Nice to see you all !
2018-09-30 12:37:50	<--	simonada_ (simonadamei@moz-hoigbl.ani6.lgpb.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 12:39:31	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-09-30 12:40:05	<--	newfans (Mibbit@moz-gjb.vnp.217.180.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 12:40:13	<--	simonadameit (simonadamei@moz-toj6a3.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-30 12:43:27	-->	simonadameit (simonadamei@moz-4j4plu.kajf.lo5a.0a61.2001.IP) has joined #rust-beginners
2018-09-30 12:43:37	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-09-30 12:44:54	-->	xet7 (xet7@moz-hhhnog.bb.dnainternet.fi) has joined #rust-beginners
2018-09-30 12:45:56	<--	tasansga (ansgar@moz-oucppq.connect.netcom.no) has quit (Quit: Leaving.)
2018-09-30 12:46:26	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 12:48:50	-->	simonada_ (simonadamei@moz-gkkof0.kajf.lo5a.0a61.2001.IP) has joined #rust-beginners
2018-09-30 12:49:57	<--	Dima (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 12:50:30	-->	liquidnight (marcus@moz-0689gr.7bgo.ug7g.0c23.2a01.IP) has joined #rust-beginners
2018-09-30 12:50:55	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 12:52:29	<--	simonadameit (simonadamei@moz-4j4plu.kajf.lo5a.0a61.2001.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 12:53:38	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 12:55:25	<--	morton (Mibbit@moz-4hd.p25.12.94.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 13:01:33	<--	hrld (hrld@moz-4f847a.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-30 13:03:23	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-30 13:04:22	-->	mredlek (mredlek@moz-8np.03s.132.145.IP) has joined #rust-beginners
2018-09-30 13:07:09	<--	Dariost (Dariost@moz-imi.plf.48.151.IP) has quit (Connection closed)
2018-09-30 13:07:18	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 13:07:39	-->	Dariost (Dariost@moz-imi.plf.48.151.IP) has joined #rust-beginners
2018-09-30 13:13:53	wildermind	Im returning this "Err(From::from("violating node")" how can i get the message string incase of an actual error during match {...} ?  
2018-09-30 13:14:20	wildermind	the error is std::error:Error 
2018-09-30 13:15:24	<--	xet7 (xet7@moz-hhhnog.bb.dnainternet.fi) has quit (The TLS connection was non-properly terminated.)
2018-09-30 13:15:41	<--	gallatin (gallatin@moz-ko4nr2.pools.vodafone-ip.de) has quit (Connection closed)
2018-09-30 13:16:06	-->	hrld (hrld@moz-4f847a.abo.wanadoo.fr) has joined #rust-beginners
2018-09-30 13:16:14	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 13:17:02	<--	mrfreakguy (Mibbit@moz-2po.rpu.238.160.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 13:19:55	dpc1	wildermind: Err(e) => ... and e might contain the mesage
2018-09-30 13:20:46	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 13:21:22	wildermind	ty
2018-09-30 13:21:52	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-09-30 13:21:55	<--	ksqsf_ (ksqsf@moz-2bk.lqt.214.114.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 13:23:49	Aankhen``	Is there a recommended crate for scraping HTML? `html5ever` seems to be more of a low-level thing for Servo.
2018-09-30 13:25:03	Aankhen``	Bleh, I wish crates.io would just serve up the HTML it renders on the client side anyway.
2018-09-30 13:25:24	Moongoodboy{K}	https://crates.io/ kind of needs to go die in a fire :/
2018-09-30 13:25:34	Aankhen``	Why’s that?
2018-09-30 13:25:35	Moongoodboy{K}	what is this bullshrimp about requiring JavaScript
2018-09-30 13:25:47	Moongoodboy{K}	largely the same reason you're talking about :0
2018-09-30 13:25:48	Aankhen``	Ye, I am firmly in the anti–requiring JavaScript camp too.
2018-09-30 13:25:49	Moongoodboy{K}	:P *
2018-09-30 13:26:11	Moongoodboy{K}	that website is, like, the /last/ thing that would require scripting
2018-09-30 13:26:22	 *	Aankhen`` nods.
2018-09-30 13:26:38	Moongoodboy{K}	it's a bunch of text, some images, and a tiny bit of login stuff
2018-09-30 13:27:08	Aankhen``	But I remember the conversation about the rebuilt Rustdoc made it clear that the official Rust web stuff is going to move further in that direction rather than away from it. *sighs*
2018-09-30 13:27:40	Aankhen``	s/the rebuilt/rewriting/
2018-09-30 13:27:51	<--	Dariost (Dariost@moz-imi.plf.48.151.IP) has quit (Client exited)
2018-09-30 13:28:33	-->	WebDrake (Mibbit@moz-rca3fh.range81-153.btcentralplus.com) has joined #rust-beginners
2018-09-30 13:29:48	-->	Dariost (Dariost@moz-imi.plf.48.151.IP) has joined #rust-beginners
2018-09-30 13:30:53	<--	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 13:30:58	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 13:31:37	--	Moongoodboy{K} is now known as Moongoodnull{K}
2018-09-30 13:31:59	Moongoodnull{K}	Aankhen``: augh D:
2018-09-30 13:32:05	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-30 13:32:07	Moongoodnull{K}	/why/ though
2018-09-30 13:34:50	Aankhen``	Hmm… this was the thread: https://internals.rust-lang.org/t/the-rustdoc-redux/5542
2018-09-30 13:34:54	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-30 13:35:03	Aankhen``	But the linked repository now points to <https://github.com/steveklabnik/doxidize>, which doesn’t seem to be JS-based!
2018-09-30 13:36:02	Aankhen``	Scratch that, the navigation fails without JavaScript.
2018-09-30 13:37:23	Aankhen``	I don’t know whether the end goal is to depend on JS or not. 🤷‍♂️🤷‍
2018-09-30 13:37:28	Aankhen``	Whoops. That was a fun typo.
2018-09-30 13:37:51	WebDrake	Hello folks -- novice user here -- I wonder if someone would be happy to answer some very naive questions about Vec ... ?
2018-09-30 13:38:18	WebDrake	Question 1 being -- is there a simple one-liner way to assign a specific value to all elements of a (pre-existing, mutable) Vec ... ?
2018-09-30 13:38:21	Aankhen``	WebDrake: Hiya. Go ahead and ask—people may not respond right away, but as soon as someone is active and able to answer, they will. :-)
2018-09-30 13:38:52	WebDrake	& question 2 being -- is there an idiomatic way to iterate over (mutable) elements of a Vec and also get the index as part of the iteration?
2018-09-30 13:39:13	Moongoodnull{K}	vec.iter_mut().enumerate()
2018-09-30 13:39:36	WebDrake	I tried doing: `for (i, element) in my_array.iter_mut.enumerate()` but that ran into some issues when I tried to _set_ element values
2018-09-30 13:39:45	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-30 13:39:55	Moongoodnull{K}	Hmm. Let's have a look at those issues?
2018-09-30 13:40:43	<--	justsomequestions (gumble@moz-grhuut.pptp.stw-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-30 13:41:10	-->	SenasOzys (SenasOzys@moz-njp.ke9.47.194.IP) has joined #rust-beginners
2018-09-30 13:42:04	WebDrake	@Moongoodnull{K} so consider this loop:
2018-09-30 13:42:14	Aankhen``	Use play.rust-lang.org
2018-09-30 13:42:32	<--	raingloom (raingloom@moz-3kouvt.pool.telekom.hu) has quit (Quit: WeeChat 2.2)
2018-09-30 13:43:48	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 13:45:06	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 13:45:21	<--	grillon (grillon@moz-tnh86i.0n16.8dab.cb1d.2a01.IP) has quit (Quit: WeeChat 1.6)
2018-09-30 13:45:45	WebDrake	Here's an example of the problem I'm having: https://play.rust-lang.org/?gist=a72a8776d490be6e87ea1d2016d28442&version=stable&mode=debug&edition=2015
2018-09-30 13:47:01	Aankhen``	WebDrake: `element` is a reference, so you need to dereference it: *element /= a;
2018-09-30 13:47:02	WebDrake	Hah, wait, I just debugged my own problem -- it's the missing `*` dereference on the `element` variable
2018-09-30 13:47:08	-->	Raychen (Thunderbird@moz-ope.c43.181.60.IP) has joined #rust-beginners
2018-09-30 13:47:12	Aankhen``	Indeed!
2018-09-30 13:47:23	WebDrake	Snap ;-)  I only asked the problem because I was sure I'd tried that earlier and had it fail
2018-09-30 13:47:33	Aankhen``	Hah. No worries.
2018-09-30 13:47:41	WebDrake	I'm still getting used to navigating the compiler error messages
2018-09-30 13:48:06	WebDrake	Anyway -- my other question -- easy way to assign all elements of a Vec to a single value?
2018-09-30 13:48:19	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 13:48:27	Rembane	Like, zero all values of a vector?
2018-09-30 13:48:52	WebDrake	@Aankhen`` I suspect what I got wrong with my original attempt was that I was trying something like `for (i, &mut element) in arr.iter_mut().enumerate()`
2018-09-30 13:48:54	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 13:48:56	WebDrake	@Rembane yup, exactly
2018-09-30 13:49:08	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-30 13:49:10	Aankhen``	WebDrake: Yeah, seems likely.
2018-09-30 13:49:18	kimundi	for e in &mut vec { *e = ...; } would do
2018-09-30 13:49:47	-->	justsomequestions (gumble@moz-grhuut.pptp.stw-bonn.de) has joined #rust-beginners
2018-09-30 13:49:53	WebDrake	@kimundi that's indeed my existing solution, I was wondering if there was a simpler solution, akin to e.g. in D where one can do `arr[] = x;`
2018-09-30 13:50:25	kimundi	I'm not currently aware of one
2018-09-30 13:50:56	WebDrake	OK, good to know I haven't overlooked anything in the docs (they are very rigorous and comprehensive, but therefore sometimes easy to miss something in ;-) )
2018-09-30 13:51:35	<--	Raychen (Thunderbird@moz-ope.c43.181.60.IP) has quit (Client exited)
2018-09-30 13:51:51	-->	oem (oem@moz-3i9.n39.148.147.IP) has joined #rust-beginners
2018-09-30 13:52:22	Moongoodnull{K}	WebDrake: you can alternately use clear() and then resize()
2018-09-30 13:52:34	Moongoodnull{K}	(assuming the element type is Clone)
2018-09-30 13:52:39	WebDrake	I guess one could do `arr = vec![0.0, arr.len()];` but I presume that would allocate a new vector rather than overwriting in place
2018-09-30 13:52:53	Moongoodnull{K}	indeed
2018-09-30 13:53:01	Moongoodnull{K}	clear+resize reuses the allocation
2018-09-30 13:53:25	Moongoodnull{K}	(assignment in a loop does too)
2018-09-30 13:53:26	WebDrake	@Moongoodnull{K} interesting thought, I'll consider that
2018-09-30 13:53:50	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 13:54:32	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-09-30 13:55:10	WebDrake	It feels like a slightly curious omission not to have a simple non-loop-y non-resize-y mechanism to set all elements of a vector, but I'm getting the feeling this might be a deliberate, motivated omission
2018-09-30 13:55:28	WebDrake	e.g. to ensure that code is very explicit about such in-place rewrites
2018-09-30 13:56:03	WebDrake	Anyway, thanks everyone for the helpful advice!
2018-09-30 13:57:28	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 13:58:44	-->	AtumT (IRC@moz-ii8.sqb.95.179.IP) has joined #rust-beginners
2018-09-30 13:59:39	-->	montezuma (Mibbit@moz-17t.5t1.149.169.IP) has joined #rust-beginners
2018-09-30 14:01:30	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 14:02:25	<--	poljar1 (poljar@moz-3djcdt.net.t-com.hr) has quit (Ping timeout: 121 seconds)
2018-09-30 14:02:58	montezuma	How should I start on making an android apk in rust ?
2018-09-30 14:03:42	-->	emerent (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-30 14:04:31	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-30 14:05:31	mredlek	montezuma: I would start with a java-app and replace the computation-expensive functions with rust-functions.
2018-09-30 14:06:13	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 14:08:30	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-30 14:09:53	Moongoodnull{K}	WebDrake: well, that operation is inherently loopy
2018-09-30 14:10:22	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 14:10:38	Moongoodnull{K}	I mean, `vec.clone_from(vec![new_element; count])` doesn't feel loopy but also wastes an allocation
2018-09-30 14:12:19	<--	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 14:14:00	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-30 14:14:00	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-09-30 14:14:20	WebDrake	@Moongoodnull{K} indeed, but some languages implement nice syntax sugar around it -- this is why I assume the lack of it is deliberate
2018-09-30 14:14:54	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 14:15:04	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-30 14:15:08	WebDrake	@Moongoodnull{K} e.g. in D one has stuff like `arr[] = x`
2018-09-30 14:15:11	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 14:15:21	WebDrake	@Moongoodnull{K} e.g. in D one has stuff like `arr[] = x` which assigns all elements of `arr` to `x`
2018-09-30 14:15:22	Moongoodnull{K}	hmm. Besides D, what languages have sugar for this? I can't think of any. :o
2018-09-30 14:15:30	Moongoodnull{K}	yeah, I got that much xD
2018-09-30 14:16:09	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-09-30 14:16:21	<--	montezuma (Mibbit@moz-17t.5t1.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 14:18:45	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-30 14:18:55	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-30 14:20:22	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-30 14:21:39	WebDrake	@Moongoodnull{K} e.g. C++ vector `assign` ... ?  (This mixes resizing and setting element values but is similar in practice)
2018-09-30 14:22:28	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 14:22:42	WebDrake	Anyway, not a big deal -- I just assumed I must have missed something in the docs, and since I haven't, all good ;-)
2018-09-30 14:23:34	-->	Dima (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-09-30 14:23:54	Moongoodnull{K}	huh, I guess.
2018-09-30 14:24:12	-->	xet7 (xet7@moz-8udsjv.rev.dnainternet.fi) has joined #rust-beginners
2018-09-30 14:24:17	Moongoodnull{K}	I didn't know that was a thing X3
2018-09-30 14:24:30	WebDrake	No complaints about rust, if that isn't clear -- just wanted to make sure that I was not missing some idiomatic usage
2018-09-30 14:31:25	<--	bletch (Mibbit@moz-havuji.versanet.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 14:35:00	Aankhen``	WebDrake: Heh, don’t worry, dissent is allowed, either way. We just make a note of your IP address for later re-education. ;-)
2018-09-30 14:36:35	<--	syncplicity (sync@moz-m86iq7.dyn.optonline.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-30 14:38:20	WebDrake	@Aankhen`` Ah, so the rumours are true! ;-)
2018-09-30 14:38:40	WebDrake	Anyway, thanks again all, catch you again some time I hope :-)
2018-09-30 14:38:51	<--	WebDrake (Mibbit@moz-rca3fh.range81-153.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 14:40:20	<--	justsomequestions (gumble@moz-grhuut.pptp.stw-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-30 14:42:40	<--	eyans (a@moz-bfg4el.878i.pbkb.2002.2001.IP) has quit (Connection closed)
2018-09-30 14:42:47	-->	slovenia (slovenia@moz-vdi.3db.156.183.IP) has joined #rust-beginners
2018-09-30 14:42:54	-->	eyans (a@moz-bfg4el.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-30 14:43:52	<--	slovenia (slovenia@moz-vdi.3db.156.183.IP) has quit (Connection closed)
2018-09-30 14:44:32	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 14:45:08	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 14:45:43	<--	SWW13 (SWW13@moz-4fok16.brn.li) has quit (Quit: You know you're gonna miss me when I'm gone.)
2018-09-30 14:46:17	-->	slovenia (slovenia@moz-60g963.compute.amazonaws.com) has joined #rust-beginners
2018-09-30 14:46:25	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-09-30 14:47:27	-->	artfwo (artfwo@moz-1bo.rrn.120.37.IP) has joined #rust-beginners
2018-09-30 14:47:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-30 14:49:06	-->	SWW13 (SWW13@moz-4fok16.brn.li) has joined #rust-beginners
2018-09-30 14:49:07	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-09-30 14:49:10	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 14:50:49	-->	cmmcolin11 (Mibbit@moz-9bshhl.kbronet.com.tw) has joined #rust-beginners
2018-09-30 14:50:50	--	U007D_afk is now known as U007D
2018-09-30 14:51:48	-->	mib_b9qbqr (Mibbit@moz-raq.s8n.85.111.IP) has joined #rust-beginners
2018-09-30 14:52:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 14:53:07	-->	justsomequestions (gumble@moz-6bm00s.wlan.uni-bonn.de) has joined #rust-beginners
2018-09-30 14:53:23	<--	oem (oem@moz-3i9.n39.148.147.IP) has quit (Connection closed)
2018-09-30 14:53:52	-->	nbro (nbro@moz-onsle6.s4ui.8gaq.aa13.2a02.IP) has joined #rust-beginners
2018-09-30 14:56:05	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 14:56:20	<--	liquidnight (marcus@moz-0689gr.7bgo.ug7g.0c23.2a01.IP) has quit (Connection closed)
2018-09-30 14:56:21	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Connection closed)
2018-09-30 14:56:45	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-09-30 14:56:52	<--	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 14:57:40	-->	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has joined #rust-beginners
2018-09-30 14:57:48	<--	mib_b9qbqr (Mibbit@moz-raq.s8n.85.111.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 14:58:13	-->	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has joined #rust-beginners
2018-09-30 15:00:00	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 15:04:31	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 15:05:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-30 15:06:03	<--	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-30 15:09:03	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 15:10:10	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-30 15:10:26	-->	xinpeng (Mibbit@moz-mhc7qp.mobile.att.net) has joined #rust-beginners
2018-09-30 15:12:08	<--	xinpeng (Mibbit@moz-mhc7qp.mobile.att.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 15:12:15	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 15:13:50	<--	gregg (greg@moz-00mjdg.gnumpf.tk) has quit (Connection closed)
2018-09-30 15:16:40	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 15:17:56	-->	jihi (jih@moz-dc0lej.dip0.t-ipconnect.de) has joined #rust-beginners
2018-09-30 15:18:18	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 15:19:22	-->	romshark (Mibbit@moz-3riimb.hsi13.unitymediagroup.de) has joined #rust-beginners
2018-09-30 15:19:27	-->	skyclad (skyclad@moz-mbcq3f.wa.comcast.net) has joined #rust-beginners
2018-09-30 15:20:51	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-30 15:21:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 15:22:09	-->	ubuntourist (kjcole@moz-7v9dfd.gallaudet.edu) has joined #rust-beginners
2018-09-30 15:22:58	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-30 15:23:22	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-30 15:24:59	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Client exited)
2018-09-30 15:26:12	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 15:28:45	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 15:33:35	<--	nbro (nbro@moz-onsle6.s4ui.8gaq.aa13.2a02.IP) has quit (Quit: Leaving...)
2018-09-30 15:33:58	-->	tinaun (tinaun@moz-ps3nsb.ma.comcast.net) has joined #rust-beginners
2018-09-30 15:34:57	-->	thenighttrain (thenighttra@moz-3pqe20.rev.numericable.fr) has joined #rust-beginners
2018-09-30 15:35:09	thenighttrain	what does rust as to do with compiling firefox 60.0.1?
2018-09-30 15:35:20	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 15:35:56	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 15:36:13	kimundi	firefox does now contain some code written in Rust
2018-09-30 15:36:42	thenighttrain	so it didn't back then with 60.0.1?
2018-09-30 15:37:13	kimundi	Sorry, I don't have enoug context to know what the question about that specific version number is about
2018-09-30 15:37:26	thenighttrain	building firefox 60.0.1
2018-09-30 15:37:38	thenighttrain	how is that not enough context
2018-09-30 15:37:45	thenighttrain	windows 7 x64
2018-09-30 15:38:17	kimundi	the "back then" implied more context to me :P
2018-09-30 15:39:07	thenighttrain	https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Windows_Prerequisites$revision/1380671 (May 12, 2018)
2018-09-30 15:39:22	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-30 15:39:22	thenighttrain	is clearly stating that rust is required
2018-09-30 15:39:45	thenighttrain	firefox 60.0.1 was released on May 16, 2018
2018-09-30 15:39:52	thenighttrain	so again
2018-09-30 15:39:54	<--	romshark (Mibbit@moz-3riimb.hsi13.unitymediagroup.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 15:39:57	adoa	thenighttrain: firefox contains considerable amounts of rust code at least since version 57 (Quantum)
2018-09-30 15:39:58	thenighttrain	what does rust as to do with compiling firefox 60.0.1?
2018-09-30 15:40:13	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 15:40:28	kimundi	thenighttrain: Sorry, I'm confused what there is to be confused about after my answer
2018-09-30 15:40:33	kimundi	firefox contains rust code
2018-09-30 15:40:42	kimundi	building firefox therefore requires building rust code
2018-09-30 15:40:48	kimundi	which requires the rust compiler
2018-09-30 15:40:49	adoa	thenighttrain: are you interested as to which parts of rust are written in rust?
2018-09-30 15:40:57	thenighttrain	more or less
2018-09-30 15:41:02	<--	heftig (heftig@soyuz.archlinux.org) has quit (Client exited)
2018-09-30 15:41:08	adoa	i meant: which parts of firefox are written in rust
2018-09-30 15:41:09	thenighttrain	i'm trying to find out why i can't build so i need some history :p
2018-09-30 15:41:18	dpc1	thenighttrain: https://github.com/mozilla/gecko
2018-09-30 15:41:25	<--	SenasOzys (SenasOzys@moz-njp.ke9.47.194.IP) has quit (Connection closed)
2018-09-30 15:41:41	adoa	thenighttrain: some more prose on that topic: https://en.wikipedia.org/wiki/Quantum_(Mozilla)
2018-09-30 15:41:50	thenighttrain	what if i want to download rust prior to may 16, 2018
2018-09-30 15:42:04	-->	heftig (heftig@soyuz.archlinux.org) has joined #rust-beginners
2018-09-30 15:42:06	thenighttrain	wikipedia, *sigh*
2018-09-30 15:42:06	dpc1	thenighttrain: you can do it with rustup pick any version you like
2018-09-30 15:42:09	-->	SenasOzys (SenasOzys@moz-njp.ke9.47.194.IP) has joined #rust-beginners
2018-09-30 15:42:17	thenighttrain	rustup pick mm
2018-09-30 15:42:17	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-30 15:42:21	dpc1	*me shrugs
2018-09-30 15:42:24	dpc1	damn
2018-09-30 15:42:34	thenighttrain	nice 
2018-09-30 15:42:53	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-09-30 15:43:06	dpc1	you can build it with the latest stable too i don't see much of a problem
2018-09-30 15:43:09	thenighttrain	what are the big particularities of rust language?
2018-09-30 15:44:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 15:44:49	<--	heftig (heftig@soyuz.archlinux.org) has quit (Client exited)
2018-09-30 15:45:04	kimundi	thenighttrain: Its basically a language with as much control and performance as C++, but based on a semantic that makes it memroy safe per default
2018-09-30 15:45:26	kimundi	That is, you can not get use-after-free, memory overflows, double-free, dangling pointer, race conditions, etc
2018-09-30 15:45:28	adoa	rust is compiled and very fast, achieves a high degree of memory safety, and has concurrency and thread safety in mind
2018-09-30 15:45:38	<--	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has quit (Connection closed)
2018-09-30 15:45:44	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 15:45:46	-->	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-09-30 15:46:02	kimundi	Rust actuall started as a project from mozilla because they needed a safer alternative to C++ for firefox
2018-09-30 15:46:32	adoa	thenighttrain, do you consider learing rust or do you only want to compile firefox?
2018-09-30 15:46:38	kimundi	Years of trying to write high-perfroamnce complex C++ code showed them that the language is fundamentally error prone in lots of ways
2018-09-30 15:47:22	thenighttrain	does rust has to do with the user interface semantic of firefox?
2018-09-30 15:48:14	kimundi	Not sure what you mean exactly
2018-09-30 15:48:16	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-09-30 15:48:31	kimundi	But the choice of programming language does usually not influnce stuff like that
2018-09-30 15:48:39	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 15:48:54	thenighttrain	what i meant is what does rust has achieve so far for firefox
2018-09-30 15:49:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 15:49:20	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-30 15:49:45	<--	cmmcolin11 (Mibbit@moz-9bshhl.kbronet.com.tw) has left #rust-beginners
2018-09-30 15:50:19	-->	heftig (heftig@soyuz.archlinux.org) has joined #rust-beginners
2018-09-30 15:50:21	bjorn3	thenighttrain: stylo (css parser and styler) and mp4 metadata parser are used atm if i remember correctly
2018-09-30 15:50:40	kimundi	firefox is slowly replacing code mouldes with Rust implementations (though there is no explicit goal to rewrite it entirely in Rust)
2018-09-30 15:50:56	thenighttrain	so that's what stylo is..
2018-09-30 15:50:57	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 15:50:58	kimundi	Afaik stuff like the png and url parser, and afaik since recently webrender?
2018-09-30 15:51:39	<--	Bakkot (Bakkot@moz-6slr16.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 15:51:56	kimundi	The "big" porjects like webrender and stylo are also design from the ground-up to take advantage from multithreading
2018-09-30 15:52:02	adoa	kimundi: if I am not mistaken, webrender is not yet activated by default in stable firefox
2018-09-30 15:52:18	kimundi	adoa: But afaik its in nightly now?
2018-09-30 15:52:26	ilmari	https://wiki.mozilla.org/Quantum
2018-09-30 15:52:40	adoa	kimundi: that is very well possible, I am not fully aware of the nightly features …
2018-09-30 15:52:48	U007D	Given a Result<T, E>, how can I map a specific E variant to a T variant?  Specifically, I would like map an Err(Error::NoneError) -> Ok(0).  .map() and .map_err() don't let me remap return types
2018-09-30 15:53:12	kimundi	Yeah, that webiste explains it all very well I think
2018-09-30 15:53:21	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 15:54:06	kimundi	U007D: or_else might be a starting point
2018-09-30 15:54:21	kimundi	apart from that though, maybe just write a match or if-let
2018-09-30 15:54:36	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 15:55:03	U007D	kimundi: thank you.  that's what I was looking for
2018-09-30 15:55:04	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 15:55:12	U007D	(or_else will do it)
2018-09-30 15:55:19	-->	brucem (textual@moz-8fjb40.ivsr.hm43.9800.2405.IP) has joined #rust-beginners
2018-09-30 15:56:06	adoa	U007D: maybe unwrap_or() ?
2018-09-30 15:56:25	adoa	or unwrap_or_else()?
2018-09-30 15:56:31	-->	KiChjang (KiChjang@moz-mau66b.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-09-30 15:57:30	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 15:57:55	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 15:58:25	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 15:58:29	-->	asyncsec (asyncsec@moz-bh7kbn.dyn6.twc.com) has joined #rust-beginners
2018-09-30 15:58:37	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 15:59:13	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 16:01:33	<--	slovenia (slovenia@moz-60g963.compute.amazonaws.com) has quit (Quit: Leaving)
2018-09-30 16:02:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:03:09	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:03:13	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 16:04:09	<--	KiChjang (KiChjang@moz-mau66b.urm1.6cdi.0646.2601.IP) has quit (Quit: Leaving)
2018-09-30 16:05:24	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 16:09:07	<--	GrimSleepless (GrimSleeple@moz-ap2a4e.dsl.bell.ca) has quit (Client exited)
2018-09-30 16:09:17	-->	GrimSleepless (GrimSleeple@moz-ap2a4e.dsl.bell.ca) has joined #rust-beginners
2018-09-30 16:09:27	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 16:09:31	<--	GrimSleepless (GrimSleeple@moz-ap2a4e.dsl.bell.ca) has quit (Connection closed)
2018-09-30 16:09:39	-->	GrimSleepless (GrimSleeple@moz-ap2a4e.dsl.bell.ca) has joined #rust-beginners
2018-09-30 16:11:04	<--	ubuntourist (kjcole@moz-7v9dfd.gallaudet.edu) has quit (Ping timeout: 121 seconds)
2018-09-30 16:11:25	<--	thenighttrain (thenighttra@moz-3pqe20.rev.numericable.fr) has quit (Ping timeout: 121 seconds)
2018-09-30 16:11:30	<--	brucem (textual@moz-8fjb40.ivsr.hm43.9800.2405.IP) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2018-09-30 16:11:33	-->	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has joined #rust-beginners
2018-09-30 16:12:59	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 16:13:00	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 16:13:01	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 16:14:36	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-30 16:14:52	-->	ubuntourist (kjcole@moz-0gdhgp.gallaudet.edu) has joined #rust-beginners
2018-09-30 16:15:18	<--	arunkumar413 (arunkumar41@moz-avj.f62.48.157.IP) has quit (Quit: Leaving)
2018-09-30 16:16:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 16:18:11	-->	raingloom (raingloom@moz-3kouvt.pool.telekom.hu) has joined #rust-beginners
2018-09-30 16:18:51	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 16:19:16	-->	martin2 (martin@moz-b8adah.anteldata.net.uy) has joined #rust-beginners
2018-09-30 16:20:05	<--	Dima (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 16:20:26	martin2	hey all! I'm creating a web app and I'm wondering.. does it make sense in rust to have services? currently I have something like user/model.rs, user/controller.rs, user/mod.rs .. should I include a user/service.rs ?
2018-09-30 16:20:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:20:49	-->	rush-on (Mibbit@moz-23clt1.dyn.telefonica.de) has joined #rust-beginners
2018-09-30 16:21:08	martin2	or should I just implement the methods that I would include on my UserService on my User struct
2018-09-30 16:22:09	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-30 16:23:12	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 16:23:28	<--	rush-on (Mibbit@moz-23clt1.dyn.telefonica.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 16:25:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 16:25:41	-->	mib_zmpimy (Mibbit@moz-s3n7ld.hfc.comcastbusiness.net) has joined #rust-beginners
2018-09-30 16:25:55	mib_zmpimy	can I re assign an Rc to point to something else?
2018-09-30 16:26:20	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:26:22	alexbrown	martin2: can you give more detail on what your web app is doing?
2018-09-30 16:26:35	adoa	mib_zmpimy: is re-assigning the variable to a new Rc value not enough?
2018-09-30 16:26:50	mib_zmpimy	well I have a linked list.
2018-09-30 16:26:52	<--	pedrocr (pedrocr@moz-m5qnd5.corujas.net) has quit (Quit: leaving)
2018-09-30 16:26:55	-->	pedrocr (pedrocr@moz-m5qnd5.corujas.net) has joined #rust-beginners
2018-09-30 16:26:56	mib_zmpimy	I want to mutate the list
2018-09-30 16:27:20	martin2	alexbrown: it's pretty much a classic REST API
2018-09-30 16:28:30	adoa	mib_zmpimy: then you may want to work with RefCell inside the Rc
2018-09-30 16:28:31	alexbrown	martin2: what does the api do
2018-09-30 16:29:13	martin2	I'm not exactly allowed to share those details, but I fail to see how that is relevant to the question anyways
2018-09-30 16:29:27	alexbrown	martin2: fair enough
2018-09-30 16:29:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:29:52	svartalf	martin2: so, what is a "service" in your context?
2018-09-30 16:30:25	martin2	svartalf: business logic
2018-09-30 16:30:31	Moongoodnull{K}	You can potentially change the thing inside the Rc—those changes will be observable through all the other handles of that Rc. You can also change a binding of type Rc (e.g. a field or local variable) to be a different Rc—you'll decrement the counter of the first Rc and that change won't be observable through the first Rc.
2018-09-30 16:30:35	Moongoodnull{K}	If that makes sense.
2018-09-30 16:31:00	drager	martin2: I guess what they are after: Will your web api communicate with a database or such?
2018-09-30 16:31:22	martin2	drager: it will, definitely
2018-09-30 16:32:31	svartalf	martin2: well, it might be good to separate technical things from business logic (easier code reading, testing and etc), but it is mostly your choice at this point :) 
2018-09-30 16:32:46	alexbrown	martin2: if the API is only returning a few things from one place than a 'service' will only query that one place for whatever is being requested of it
2018-09-30 16:33:38	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 16:33:49	alexbrown	and you could have a few of these services that all get their requests from one API gateway that is exposed publicly
2018-09-30 16:34:09	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 16:35:47	drager	martin2: I tend to think like this; I have a service or such that my User struct implements. That service will communicate with the database and therefore I like to have it seperated from the struct itself. Other functions that does'nt communicate with the database and just to things related to the User struct, they I implement on the struct "directly".
2018-09-30 16:35:58	--	alexbrown is now known as dvorak_mech
2018-09-30 16:36:47	martin2	drager: oh ok, but you do implement the service on the user.. like `impl UserService on User` ?
2018-09-30 16:38:09	<--	dvorak_mech (alexbrown@moz-seijk2.tx.comcast.net) has quit (Quit: leaving)
2018-09-30 16:38:11	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-30 16:38:12	martin2	for*
2018-09-30 16:38:13	drager	martin2: Yeah, something like that
2018-09-30 16:38:55	martin2	interesting.. I was about to either create another struct for UserService or create module level functions, but that does seem like a better approach
2018-09-30 16:39:28	<--	edcragg (edcragg@moz-sjrvib.co.uk) has quit (Quit: ZNC - http://znc.in)
2018-09-30 16:39:56	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 16:40:18	dpc1	martin2: i would do that especially for large projects. it depends though hard to say without knowing your achitecture and how you have structured the rest of the codebase.
2018-09-30 16:40:34	-->	edcragg (edcragg@moz-sjrvib.co.uk) has joined #rust-beginners
2018-09-30 16:41:05	martin2	it's pretty much a newborn project, so I guess anything goes at this point
2018-09-30 16:41:33	drager	Best guess is to try it out and see how it feels :)
2018-09-30 16:42:19	martin2	I was just trying to find the recommended approaches for this.. I've gone from rails-like applications to Go applications to now rust .. and although the rails structure doesn't fit Go well it does seem to fit rust a little better
2018-09-30 16:42:47	martin2	but yeah, I'll just try it out :) thanks all!
2018-09-30 16:43:06	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-09-30 16:43:15	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 16:43:23	drager	Do it, good luck!
2018-09-30 16:43:47	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-30 16:43:58	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 16:45:27	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 16:46:25	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-30 16:46:53	-->	Dima (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-09-30 16:47:03	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 16:47:16	-->	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has joined #rust-beginners
2018-09-30 16:47:46	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:48:24	<--	Dima (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 16:49:29	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 16:51:05	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 16:51:24	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Connection closed)
2018-09-30 16:51:52	<--	SenasOzys (SenasOzys@moz-njp.ke9.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:52:44	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 16:52:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 16:53:38	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 16:56:05	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-09-30 16:56:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:57:16	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 16:58:00	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-09-30 16:58:53	-->	mib_57yjab (Mibbit@moz-6mi.9n0.149.169.IP) has joined #rust-beginners
2018-09-30 17:01:16	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-09-30 17:01:57	--	U007D is now known as U007D_afk
2018-09-30 17:02:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 17:02:14	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-09-30 17:04:28	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 17:06:16	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 17:06:51	<--	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has quit (Quit: ZNC - http://znc.in)
2018-09-30 17:06:55	-->	Cardoe (Cardoe@moz-vifdtm.brhmal.sbcglobal.net) has joined #rust-beginners
2018-09-30 17:07:42	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-09-30 17:17:31	mib_zmpimy	If you borrow a collection mutably are you allowed to have mutable references to it's data?
2018-09-30 17:18:10	Arnavion	Depends on the collection
2018-09-30 17:18:17	emerent	in principle, yes
2018-09-30 17:18:25	Arnavion	A mut Vec<T> gives you mut access to the T
2018-09-30 17:18:27	mib_zmpimy	It seems the answer is yes. I'm confused about "only being able to have a mutable references to one piece of data at a time "
2018-09-30 17:18:31	emerent	but you need a way to keep the references unique
2018-09-30 17:18:37	Arnavion	A mut HashMap<K, V> gives mut V but not mut K
2018-09-30 17:19:04	Arnavion	The function that gives you a mut ref to the value also borrows the collection mutably
2018-09-30 17:19:17	emerent	mib_zmpimy: for example, if you index into a vector
2018-09-30 17:19:35	emerent	the type system can't make sure that your second indexing doesn't go to the same location
2018-09-30 17:19:38	emerent	so it forbids everything
2018-09-30 17:19:49	emerent	but if you use vec.iter_mut()
2018-09-30 17:19:56	emerent	you can get a reference to every element at the same time
2018-09-30 17:20:20	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 17:20:21	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 17:20:24	<--	oms (oms@moz-1lh7j4.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-09-30 17:20:43	-->	enterprisey (enterprisey@moz-pnc2iu.cit.cornell.edu) has joined #rust-beginners
2018-09-30 17:21:02	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-09-30 17:21:15	mib_zmpimy	Once a collection is borrowed in one of it's methods that borrowed references mutable or not is freed right?
2018-09-30 17:21:39	mib_zmpimy	That's what I think would happen but when I use iter() it isn't the case
2018-09-30 17:21:49	Arnavion	If the method returned a &mut, then that &mut needs to be dropped, yes
2018-09-30 17:21:49	emerent	freed?
2018-09-30 17:21:57	mib_zmpimy	dropped*
2018-09-30 17:22:14	Arnavion	iter_mut() cheats because it can internally guarantee that it doesn't give you two &mut that overlap
2018-09-30 17:22:47	emerent	mib_zmpimy: dropping the borrowing reference doesn't end the borrow
2018-09-30 17:22:50	emerent	it lasts until the end of scope
2018-09-30 17:22:55	emerent	this will very soon change
2018-09-30 17:22:59	<--	enterprisey (enterprisey@moz-pnc2iu.cit.cornell.edu) has quit (Quit: Leaving)
2018-09-30 17:23:34	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-30 17:23:41	-->	brucem (textual@moz-8fjb40.ivsr.hm43.9800.2405.IP) has joined #rust-beginners
2018-09-30 17:24:26	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 17:25:25	mib_zmpimy	That is pretty confusing
2018-09-30 17:25:25	<--	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has quit (Connection closed)
2018-09-30 17:26:09	mib_zmpimy	I think most beginners would think that a borrowed value being dropped would mean that that borrow is finished
2018-09-30 17:26:22	mib_zmpimy	me being one. I thought that.
2018-09-30 17:26:23	Arnavion	That's what happens
2018-09-30 17:26:38	-->	sparky8251 (quassel@moz-dqudgl.1jj3.dq59.00c6.2601.IP) has joined #rust-beginners
2018-09-30 17:26:44	Arnavion	What emerent is talking about is specifically that std::mem::drop() does not do that. It's based on scope
2018-09-30 17:27:33	mib_zmpimy	Oh ok nvm
2018-09-30 17:27:55	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Ping timeout: 121 seconds)
2018-09-30 17:28:09	mib_zmpimy	Yeah so the borrow is over when the references goes out of scope and not when it is dropped
2018-09-30 17:28:22	Arnavion	The reference is dropped when it goes out of scope
2018-09-30 17:28:23	kimundi	yep
2018-09-30 17:29:12	-->	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has joined #rust-beginners
2018-09-30 17:29:13	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-30 17:29:15	mib_zmpimy	yeah but the borrow is over when the references goes out of scope right? You could drop the value without it going out of scope correct?
2018-09-30 17:29:30	kimundi	yes
2018-09-30 17:29:51	Arnavion	If we absolutely want to restrict the meaning of "drop" to "std::mem::drop()", yes
2018-09-30 17:30:19	emerent	drop() is not the only way to do so
2018-09-30 17:30:24	emerent	and it's not a special function in any way
2018-09-30 17:30:39	emerent	simply consuming an &mut reference would do the same thing
2018-09-30 17:30:39	Arnavion	That's my point
2018-09-30 17:30:41	-->	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has joined #rust-beginners
2018-09-30 17:31:20	kimundi	I think "drop" is just meant as the point where a destructor would run here
2018-09-30 17:31:29	kimundi	(if the value has one)
2018-09-30 17:32:23	emerent	let mut vec = vec![1, 2, 3]; let iter = vec.iter_mut(); vec[0]
2018-09-30 17:32:26	emerent	eval: let mut vec = vec![1, 2, 3]; let iter = vec.iter_mut(); vec[0]
2018-09-30 17:32:29	--	Notice(eval): warning: unused variable: `iter`
2018-09-30 17:32:31	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=367577fe2f593970e049e008f85cfc67&version=stable&mode=debug
2018-09-30 17:32:36	emerent	eval: let mut vec = vec![1, 2, 3]; let iter = vec.iter_mut(); iter; vec[0]
2018-09-30 17:32:39	--	Notice(eval): error[E0502]: cannot borrow `vec` as immutable because it is also borrowed as mutable
2018-09-30 17:32:40	<--	artfwo (artfwo@moz-1bo.rrn.120.37.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 17:32:41	--	Notice(eval): ~~~ Full output: https://play.rust-lang.org/?gist=859a2e6b171c3cd70aac9af81107b249&version=stable&mode=debug
2018-09-30 17:33:43	-->	Jesin (Jesin@moz-9k068h.56hm.o37b.0152.2601.IP) has joined #rust-beginners
2018-09-30 17:34:05	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 17:35:25	<--	starblue (juergen@moz-sfde4o.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-09-30 17:35:45	mib_57yjab	How do I delete dublicate element from a vector ? Is there a method already for it ?
2018-09-30 17:37:14	<--	moriarty (moriarty@moz-se2dgk.net) has quit (Client exited)
2018-09-30 17:37:18	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-30 17:38:07	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 17:38:31	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 17:39:11	-->	starblue (juergen@moz-7958sa.pools.vodafone-ip.de) has joined #rust-beginners
2018-09-30 17:41:12	wildermind	what is the idiomatic rust way to add to Vector A the contents of Vector B ? 
2018-09-30 17:41:20	wildermind	is it `let concatenated = [&first[..], &second[..]].concat();` ? 
2018-09-30 17:42:02	wildermind	nvm found `fn append(&mut self, other: &mut Vec<T>)` in Vec 
2018-09-30 17:42:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 17:42:37	wildermind	oh sorry, append will delete all the elements on `other`, so the first option if I dont want to delete them? 
2018-09-30 17:42:48	-->	liquidnight (marcus@moz-0689gr.7bgo.ug7g.0c23.2a01.IP) has joined #rust-beginners
2018-09-30 17:43:42	mib_zmpimy	emerent "simply consuming an &mut reference would do the same thing" I'm not sure I completely understand here. So std::mem::drop doesn't end a borrow when it's called if I understand that correctly. How does consuming (consuming how? I thought references where for sharing?) end a borrow? I didn't really get anything from the examples.
2018-09-30 17:43:47	Arnavion	b.extend(a.iter().cloned())
2018-09-30 17:44:29	Arnavion	(No point to cloning a first and append()ing that because the allocation can't be reused anyway, so you might as well use an iterator)
2018-09-30 17:45:35	emerent	mib_zmpimy: if you borrow something and store the borrow 
2018-09-30 17:45:45	bjorn3	!mib
2018-09-30 17:45:45	+rustbot	Hello, Mibbit user with a “mib_<random>” nickname. Please change your nickname to something less confusing by saying `/nick NEW_NAME_HERE`. Welcome to IRC. :)
2018-09-30 17:45:47	emerent	store something that borrows I mean
2018-09-30 17:46:01	emerent	then the borrow will last until the end of the scope regardless of what you do with the reference
2018-09-30 17:46:38	emerent	and the consumption referred to the consumption of the reference
2018-09-30 17:46:51	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 17:47:10	mib_zmpimy	consumption meaning storing in this context right?
2018-09-30 17:47:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 17:47:37	-->	artfwo (artfwo@moz-1bo.rrn.120.37.IP) has joined #rust-beginners
2018-09-30 17:48:05	emerent	no, dropping it or giving it away where it will be dropped
2018-09-30 17:48:15	wildermind	Arnavion: ty 
2018-09-30 17:48:46	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 17:49:17	emerent	let mut vec = vec![]; let iter = vec.iter_mut(); <-- IterMut borrows from vec so vec is borrowed
2018-09-30 17:49:31	emerent	iter; <-- this drops the iter
2018-09-30 17:49:46	emerent	vec[0] <-- this tries to borrow again which fails although iter is gone
2018-09-30 17:50:10	emerent	consumption could have also be done by giving `iter` to a function: takes_iter(iter)
2018-09-30 17:50:11	emerent	same thing
2018-09-30 17:50:45	emerent	but if you wrap all that in a scope: let mut vec = vec![1]; { let iter = vec.iter_mut(); iter; } v[0]
2018-09-30 17:50:53	emerent	that works, because the borrow has ended with the scope
2018-09-30 17:51:13	emerent	in 2 rust versions we'll get non-lexical lifetimes and borrows will end with their last use
2018-09-30 17:51:23	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 17:51:33	bochecha	I love lurking in here, without even asking questions, I learn lots of stuff :)
2018-09-30 17:51:39	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 17:51:49	bochecha	thanks emerent, I didn't know borrowing in a block like this would end with the block
2018-09-30 17:51:49	adoa	bochecha: me too :-)
2018-09-30 17:52:49	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-30 17:53:21	mib_zmpimy	that makes sense except how does `iter;` drop the iter in the first case? aren't they all in the same scope?
2018-09-30 17:54:58	emerent	it's using iter as an expression and `;` on an expression throws the result away
2018-09-30 17:55:45	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-30 17:56:01	emerent	IterMut isn't a copy type so any use of it will move it
2018-09-30 17:56:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 17:57:40	mib_zmpimy	ok that clears things up.
2018-09-30 17:58:30	-->	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-09-30 17:58:42	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-30 18:00:34	wildermind	why is using into_iter().enumerate() always takes ownership inside the loop? :/ whats happening there? 
2018-09-30 18:00:39	<--	bjorn3 (bjorn3@moz-fbl7or.dynamic.ziggo.nl) has quit (Quit: )
2018-09-30 18:00:45	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 18:01:07	stephaneyfx	wildermind: into_iter() takes ownership
2018-09-30 18:01:07	adoa	mib_57yjab: in order to get a vector with unique elements, you might have a look at the methods `Vec::dedup()`, `Vec::dedup_by()`, or `Vec::dedup_by_key()`
2018-09-30 18:01:33	stephaneyfx	wildermind: You may want to replace it with iter() if you don't want that
2018-09-30 18:01:50	adoa	wildermind: .iter() and .iter_mut() would be working with (mutable) references, if that is possible in your case.
2018-09-30 18:02:11	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-30 18:02:20	wildermind	oh makes sense ok thanks ! 
2018-09-30 18:02:24	wildermind	stephaneyfx: ^^ 
2018-09-30 18:02:25	wildermind	adoa: ^^
2018-09-30 18:05:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 18:08:17	<--	adoa (awachtel@moz-tls.v74.64.158.IP) has quit (Client exited)
2018-09-30 18:09:06	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-09-30 18:09:27	<--	kimundi (kimundi@moz-iqgf7p.versanet.de) has quit (Ping timeout: 121 seconds)
2018-09-30 18:09:30	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 18:09:40	<--	raingloom (raingloom@moz-3kouvt.pool.telekom.hu) has quit (Quit: WeeChat 2.2)
2018-09-30 18:09:51	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 18:12:07	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Connection closed)
2018-09-30 18:12:39	<--	mredlek (mredlek@moz-8np.03s.132.145.IP) has quit (Quit: Bye)
2018-09-30 18:13:52	-->	netrino (netrino@moz-mb8.hu7.69.83.IP) has joined #rust-beginners
2018-09-30 18:14:35	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 18:17:09	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 18:18:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 18:19:22	Lil_Dropchk	i need to lookup array_set.contains(k) very fast. array_set has constant 16 members in the range 0..128. what's the fastest way to do the lookup? is binary_search inferior to linear search here, because of cache trashing? would it be the fastest to construct a [bool; 128] and do a lookup in that?
2018-09-30 18:24:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 18:24:22	sebk	just look at all items
2018-09-30 18:24:28	sebk	preferably without branches
2018-09-30 18:24:29	mib_zmpimy	I'm looking at this code and I'm confused how can &self.sent_messages.push(..) be possible. I thought that &'s are read only?  https://play.rust-lang.org/?gist=13f1e643f7ccaa23f5bf0d3474a43834&version=stable&mode=debug&edition=2015
2018-09-30 18:24:50	mib_zmpimy	this is actually from the section of the rust book about interior mutability
2018-09-30 18:25:04	sebk	Lil_Dropchk: so a[0] == x || a[1] == x || a[2] == x …
2018-09-30 18:25:28	sebk	constant members?
2018-09-30 18:25:42	Lil_Dropchk	sebk: yes. static set
2018-09-30 18:25:45	sebk	then a u128 will work!
2018-09-30 18:25:55	mib_zmpimy	whoops
2018-09-30 18:25:56	sebk	and just test for the bit in question
2018-09-30 18:25:59	Lil_Dropchk	but is it fast?
2018-09-30 18:26:04	sebk	yes.
2018-09-30 18:26:13	mib_zmpimy	It looks like it can't actually I just copied something over wrong in my text editor
2018-09-30 18:26:14	sebk	(x >> n) != 0
2018-09-30 18:26:21	Lil_Dropchk	is there a u128 backed bitvec ?
2018-09-30 18:26:31	sebk	u128 is a primitive type
2018-09-30 18:26:36	Lil_Dropchk	sebk: & 1
2018-09-30 18:26:49	sebk	woops
2018-09-30 18:27:00	Lil_Dropchk	thats why
2018-09-30 18:27:04	Lil_Dropchk	is there a bitvec?
2018-09-30 18:27:08	sebk	but yea, it should be only a few instructions
2018-09-30 18:27:11	sebk	there is
2018-09-30 18:27:16	sebk	!crate bitvec
2018-09-30 18:27:16	+rustbot	bitvec (0.5.0) - A crate for manipulating memory, bit by bit -> https://crates.io/crates/bitvec <https://docs.rs/bitvec>
2018-09-30 18:27:35	Lil_Dropchk	it doesnt support u128
2018-09-30 18:27:50	sebk	..?
2018-09-30 18:27:58	Lil_Dropchk	only u64
2018-09-30 18:28:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 18:28:17	sebk	eval: (0b101010010010u128 >> 7) & 1 != 0
2018-09-30 18:28:20	--	Notice(eval): true
2018-09-30 18:28:34	Lil_Dropchk	i guess i'll write my own then..
2018-09-30 18:28:35	<--	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-09-30 18:29:01	Lil_Dropchk	sebk: ok but without this solution, which of the 3 i suggested would be fastest?
2018-09-30 18:29:36	sebk	I suppose checking all members
2018-09-30 18:29:41	sebk	no branches to miss
2018-09-30 18:29:51	Lil_Dropchk	sebk: you mean in a match?
2018-09-30 18:30:00	sebk	!crate bit-array
2018-09-30 18:30:00	+rustbot	bit-array (0.4.4) - A compile time sized array of bits -> https://crates.io/crates/bit-array <https://docs.rs/bit-array>
2018-09-30 18:30:01	Lil_Dropchk	but llvm has this bug that causes such match{}s to be slow af
2018-09-30 18:30:05	sebk	no
2018-09-30 18:30:16	sebk	a[0] == x || a[1] == x || a[2] == x …
2018-09-30 18:30:20	-->	Xanorax (Xanorax@moz-qemh21.cust.swisscom.ch) has joined #rust-beginners
2018-09-30 18:30:33	Lil_Dropchk	how will this be faster than match?
2018-09-30 18:30:39	Xanorax	hey guys
2018-09-30 18:30:52	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-30 18:31:10	<--	Dariost (Dariost@moz-imi.plf.48.151.IP) has quit (Client exited)
2018-09-30 18:31:19	sebk	no branch misses
2018-09-30 18:31:36	sebk	linear execution
2018-09-30 18:31:44	Xanorax	hey sebk, I tried to continue with my example but I think I missed something. Do you have a bit of time so we can take a look at it together?
2018-09-30 18:31:54	sebk	with a simd instruction it can actually work in one or two
2018-09-30 18:32:00	-->	alx741 (alx741@moz-613.gq3.196.181.IP) has joined #rust-beginners
2018-09-30 18:32:07	Lil_Dropchk	sebk: is the compiler smart enough to use simd here?
2018-09-30 18:32:19	sebk	maybe
2018-09-30 18:32:31	sebk	if it is a [u8; 16]
2018-09-30 18:32:36	sebk	(fixed, known size)
2018-09-30 18:32:44	Lil_Dropchk	the match{} bug is still open. still slow https://github.com/rust-lang/rust/issues/36283
2018-09-30 18:33:07	sebk	Xanorax: I do not remember the name, can you show me it?
2018-09-30 18:33:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 18:33:25	Xanorax	sebk, yup, give me a sec
2018-09-30 18:33:53	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 18:33:57	-->	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-30 18:34:30	-->	jperras (jperras@moz-9m7vhr.ln67.g62t.1970.2001.IP) has joined #rust-beginners
2018-09-30 18:35:26	Lil_Dropchk	sebk: shouldnt a match also be optimized to the same code as the || chain?
2018-09-30 18:36:14	sebk	Lil_Dropchk: thats pretty much up to llvm…
2018-09-30 18:36:26	<--	martin2 (martin@moz-b8adah.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-30 18:36:34	Lil_Dropchk	but do you think the || chain or u128 will be faster?
2018-09-30 18:36:40	Lil_Dropchk	|| is linear search
2018-09-30 18:37:07	sebk	definitly u128
2018-09-30 18:37:09	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 18:37:18	sebk	thats just one bittest
2018-09-30 18:37:28	Lil_Dropchk	sebk: even if it uses one simd instruction for the || chain?
2018-09-30 18:37:34	Xanorax	sebk, https://play.rust-lang.org/?gist=6005dd8b60860353fac4d17bba6d7f72&version=stable&mode=debug&edition=2015
2018-09-30 18:37:38	Lil_Dropchk	the u128 requires 3 ops. shift, & and !=
2018-09-30 18:37:38	Xanorax	sebk, hope you remember now =)
2018-09-30 18:37:49	-->	mib_a77ki2 (Mibbit@moz-ueb.npg.11.47.IP) has joined #rust-beginners
2018-09-30 18:38:29	sebk	simd uses u8 as smallest units
2018-09-30 18:38:38	sebk	and you can use … 32 of them in parallel?
2018-09-30 18:38:46	sebk	so still 4 tests
2018-09-30 18:38:48	-->	oms (oms@moz-1lh7j4.dyn.telefonica.de) has joined #rust-beginners
2018-09-30 18:39:11	sebk	Xanorax: yes
2018-09-30 18:39:27	Lil_Dropchk	ok, i'll use u128 then
2018-09-30 18:39:51	sebk	(or you could use two u64)
2018-09-30 18:39:53	Xanorax	sebk, ok
2018-09-30 18:39:54	Lil_Dropchk	btw, up to what len is linear search faster than binary?
2018-09-30 18:40:10	Lil_Dropchk	on haswell
2018-09-30 18:40:11	sebk	there is a benchmark for that … somewhere
2018-09-30 18:40:23	sebk	but I think it was around 32
2018-09-30 18:40:30	Lil_Dropchk	ok
2018-09-30 18:40:58	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 18:41:03	Xanorax	sebk, https://play.rust-lang.org/?gist=55e2417b3cc57e1d510d24d2854b4743&version=stable&mode=debug&edition=2015 this is the latest version
2018-09-30 18:41:11	Xanorax	sebk, not sure if this goes anywhere :D
2018-09-30 18:41:13	Lil_Dropchk	sebk: https://stackoverflow.com/a/1276115
2018-09-30 18:41:23	Lil_Dropchk	but that bench was done on a pentium 4 in 2009
2018-09-30 18:41:33	Lil_Dropchk	it says at n=150
2018-09-30 18:41:52	Lil_Dropchk	oh but he didn't even use -O3
2018-09-30 18:42:13	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 18:42:39	Lil_Dropchk	https://i2.wp.com/www.complang.tuwien.ac.at/schani/blog/corei7.png
2018-09-30 18:43:48	sebk	Lil_Dropchk: there is a blog post about binary search with cmoves
2018-09-30 18:43:52	sebk	it is quite fast
2018-09-30 18:44:04	Lil_Dropchk	sebk: this one? https://schani.wordpress.com/2010/04/30/linear-vs-binary-search/
2018-09-30 18:44:11	Lil_Dropchk	it arrives at n=64 as cutoff point
2018-09-30 18:44:43	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 18:45:05	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-30 18:45:30	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 18:45:45	<--	mib_57yjab (Mibbit@moz-6mi.9n0.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 18:46:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 18:46:50	<--	mib_a77ki2 (Mibbit@moz-ueb.npg.11.47.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 18:47:01	-->	insidious (insidious@moz-ccm.hfr.198.134.IP) has joined #rust-beginners
2018-09-30 18:47:57	sebk	not sure
2018-09-30 18:48:01	Lil_Dropchk	which rust code would result in cmoves?
2018-09-30 18:48:23	sebk	depends on many things…
2018-09-30 18:48:24	<--	justsomequestions (gumble@moz-6bm00s.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-09-30 18:48:38	sebk	if in doubt … asm!("cmove")
2018-09-30 18:48:40	sebk	:D
2018-09-30 18:48:55	Lil_Dropchk	linus had a contrarian opinion on cmovs https://yarchive.net/comp/linux/cmov.html
2018-09-30 18:49:02	Lil_Dropchk	but that was in 2007
2018-09-30 18:49:49	sebk	Xanorax: (self.func)(*req, res) 
2018-09-30 18:49:53	sebk	*req does not work
2018-09-30 18:49:59	wildermind	I am trying to write to a csv file a Vec<usize> and im getting bunch of errors using this function https://docs.rs/csv/1.0.0/csv/struct.Writer.html#method.write_record 
2018-09-30 18:50:08	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-09-30 18:50:13	<--	sparky8251 (quassel@moz-dqudgl.1jj3.dq59.00c6.2601.IP) has quit (Client exited)
2018-09-30 18:50:15	wildermind	could anyone hint how to correctly write Vec<usize> ? 
2018-09-30 18:50:16	Xanorax	sebk, okay
2018-09-30 18:50:17	sebk	you can only use &mut Request, as passed in
2018-09-30 18:50:35	stephaneyfx	wildermind: What do you mean by "write"?
2018-09-30 18:50:51	wildermind	let line = some Vec<usize>
2018-09-30 18:50:53	wildermind	then wtr.write_record(&line[..]).unwrap(); 
2018-09-30 18:51:13	wildermind	https://www.irccloud.com/pastebin/KfxS9EiC/
2018-09-30 18:51:13	<--	eyans (a@moz-bfg4el.878i.pbkb.2002.2001.IP) has quit (Connection closed)
2018-09-30 18:51:18	sebk	why usize?
2018-09-30 18:51:19	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 18:51:22	wildermind	stephaneyfx: the error ^^
2018-09-30 18:51:30	wildermind	umm just array of sizes 
2018-09-30 18:51:34	wildermind	sebk: ^^
2018-09-30 18:51:44	Xanorax	sebk, but it isn't (&mut req, ...) either. if I get a &mut Request and want to forward that
2018-09-30 18:51:54	-->	eyans (a@moz-bfg4el.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-09-30 18:51:56	sebk	just req
2018-09-30 18:51:58	mib_zmpimy	So that same borrowing rules apply for RefCell<T> as & and &mut correct? Does that mean that a .borrow or .borrow_mut calls borrow ends when that thing that borrowed it goes out of scope?
2018-09-30 18:52:05	sebk	it is already &mut Request
2018-09-30 18:52:16	Xanorax	ah, just req then
2018-09-30 18:52:37	wildermind	and wtr is `let mut wtr = csv::WriterBuilder::new().flexible(true).from_path(path).unwrap();` 
2018-09-30 18:52:50	sebk	wildermind: you mean you want to encode each usize as decimal string and write that?
2018-09-30 18:52:53	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-09-30 18:53:04	wildermind	sebk: i didnt know that, i need to encode each usize? 
2018-09-30 18:53:07	wildermind	this is the problem ? 
2018-09-30 18:53:19	sebk	i have no idea
2018-09-30 18:53:22	Xanorax	sebk, now it says about 'req':  expected struct `nickel::Request`, found mutable reference
2018-09-30 18:53:42	wildermind	sebk: i need to implement the trait `std::convert::AsRef<[u8]>` is not implemented for `usize` or convert the usize ? 
2018-09-30 18:53:44	sebk	Xanorax: yea. the trait bound needs fixing
2018-09-30 18:53:57	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-09-30 18:54:04	sebk	> This method accepts something that can be turned into an iterator that yields elements that can be represented by a &[u8].
2018-09-30 18:54:07	sebk	usize can't
2018-09-30 18:54:15	Xanorax	but the note of the compiler is following:
2018-09-30 18:54:16	wildermind	ohh 
2018-09-30 18:54:17	Xanorax	  = note: expected type `nickel::Request<'_, '_>`
2018-09-30 18:54:17	Xanorax	              found type `&mut nickel::Request<'mw, 'conn, D>`
2018-09-30 18:54:29	Xanorax	so I was thinking that maybe it doesnt expect a &mut at all?
2018-09-30 18:55:09	wildermind	whats the idimatic rust way to cast `usize` into str/String ? 
2018-09-30 18:55:16	wildermind	idiomatic*
2018-09-30 18:55:17	stephaneyfx	wildermind: Maybe something like that: w.write_record(your_usize_vec.iter().map(|n| n.to_string()))
2018-09-30 18:55:24	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 18:55:28	sebk	wildermind: look at the serialize function
2018-09-30 18:55:29	wildermind	stephaneyfx: will try tyvm 
2018-09-30 18:56:04	-->	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has joined #rust-beginners
2018-09-30 18:56:30	wildermind	stephaneyfx: it worked ty! 
2018-09-30 18:56:55	sebk	all the allocations!
2018-09-30 18:57:07	stephaneyfx	sebk: Right
2018-09-30 18:58:13	-->	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has joined #rust-beginners
2018-09-30 18:59:24	stephaneyfx	wildermind: Does `w.serialize(your_usize_vec)` work?
2018-09-30 18:59:53	wildermind	stephaneyfx: i tried `w.write_record(your_usize_vec.iter().map(|n| n.to_string()))` and it worked :) 
2018-09-30 19:00:05	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 19:00:18	stephaneyfx	wildermind: Sure, but as sebk said, that allocates one String per usize
2018-09-30 19:00:37	stephaneyfx	wildermind: If it works, the serialize approach may be more efficient
2018-09-30 19:00:38	<--	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has quit (Connection closed)
2018-09-30 19:00:39	Xanorax	sebk, should I first try another example and write an adapter for something else before I continue here? I feel like I dont understand a shit
2018-09-30 19:00:39	wildermind	oh it terms of efficiency its bad, right? 
2018-09-30 19:00:51	wildermind	gotcha
2018-09-30 19:00:56	wildermind	ok  will look into serialize ty! 
2018-09-30 19:01:02	wildermind	sebk: <3 
2018-09-30 19:01:10	-->	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has joined #rust-beginners
2018-09-30 19:01:33	sebk	Xanorax: starting with something you understand is a good idea
2018-09-30 19:02:02	Xanorax	maybe my own function and then I try to create an adapter for that function with traits or sth like that
2018-09-30 19:02:10	Xanorax	now I'm a bit confused by that nickel stuff
2018-09-30 19:02:15	sebk	but generally you have to match the two sides
2018-09-30 19:02:25	Xanorax	yeah, it should be straight simple 
2018-09-30 19:02:33	sebk	your Fn(…) and the fn invoke
2018-09-30 19:03:04	Xanorax	how can I unwrap the mutability? it looks like it wants a plain nickel object and not a mut or so
2018-09-30 19:03:38	mib_zmpimy	You can't re-assign a Rc right?
2018-09-30 19:03:41	sebk	    fn invoke<'mw, 'conn>(&self, req: &mut Request<'mw, 'conn, D>, res: Response<'mw, D>) -> MiddlewareResult<'mw, D> { 
2018-09-30 19:03:50	sebk	mib_zmpimy: the inner? no
2018-09-30 19:04:03	mib_zmpimy	what do you mean `the inner`
2018-09-30 19:04:05	sebk	you can change the local Rc to another one
2018-09-30 19:04:14	sebk	let mut outer = Rc::new(inner);
2018-09-30 19:04:20	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:04:21	sebk	outer = Rc::new(other)
2018-09-30 19:04:36	sebk	but *outer = new_inner; does not work
2018-09-30 19:05:02	sebk	(can't change what is behind it – unless you use a RefCell)
2018-09-30 19:05:02	GreenJello	mib_zmpimy, also you can have an Rc<RefCell<T>> which lets you borrow the contents as mutable
2018-09-30 19:05:28	sebk	Xanorax: the function above is given by nickel
2018-09-30 19:05:31	-->	mib_9lqwnk (Mibbit@moz-928i7f.broadband9.iol.cz) has joined #rust-beginners
2018-09-30 19:05:32	sebk	so you can't change it
2018-09-30 19:05:35	mib_zmpimy	I'm interested in just moving the pointer somewhere else. I think that outer = Rc::new(other) will do the trick
2018-09-30 19:05:46	<--	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has quit (Client exited)
2018-09-30 19:05:49	sebk	the only thing you can is to adapt your trait bound to match it
2018-09-30 19:06:00	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-30 19:06:03	Xanorax	sebk, I have that but it just does not want the 'D' part in the MiddlewareResult and I doubt that is right to have a MiddlewareResult because usually Nickel wants some sort of "ActionResult"
2018-09-30 19:06:10	Xanorax	I might be wrong, let me look in the docs
2018-09-30 19:06:10	GreenJello	mib_zmpimy, this will only change the 'outer' variable, it doesn't impact any copies of the Rc
2018-09-30 19:06:55	-->	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has joined #rust-beginners
2018-09-30 19:07:10	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-09-30 19:07:36	Xanorax	sebk, when you look here (json response) https://docs.rs/nickel/0.10.1/nickel/trait.JsonBody.html then its not a MiddlewareResult
2018-09-30 19:07:49	mib_zmpimy	GreenJello I'm working with a linked list that I made and I want to change the head so I think that will suffice. The old Rc that outer pointed to gets decremented at the end of the scope correct?
2018-09-30 19:07:51	<--	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-30 19:08:03	<--	netrino (netrino@moz-mb8.hu7.69.83.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:08:07	GreenJello	mib_zmpimy, let mut x = Rc::new(1); let y = Rc::clone(x); x = Rc::new(2); <-- 'y' still contains `1`
2018-09-30 19:08:17	sebk	Xanorax: thats is another trait?
2018-09-30 19:08:37	Xanorax	sebk, shit, you were right :D here it is for example: https://docs.rs/nickel/0.10.1/nickel/struct.Response.html
2018-09-30 19:08:44	mib_zmpimy	GreenJello Ok. Makes Sense.
2018-09-30 19:09:21	sebk	yea. you have to create one
2018-09-30 19:09:27	mib_zmpimy	GreenJello at what point in you example does the Rc get decremented?
2018-09-30 19:09:36	Xanorax	sebk, but the signature is across the board: fn handler<'a, D>(_: &mut Request<D>, res: Response<'a, D>) -> MiddlewareResult<'a, D>   - and we have 3 annotatio parameters... isnt that wrong?
2018-09-30 19:09:47	sebk	actually. you are given a response as part of the call
2018-09-30 19:10:15	sebk	'a is an internal lifetime
2018-09-30 19:10:22	sebk	D is an internal type
2018-09-30 19:10:38	sebk	F is your callback/closure
2018-09-30 19:10:57	<--	jperras (jperras@moz-9m7vhr.ln67.g62t.1970.2001.IP) has quit (Quit: WeeChat 2.2)
2018-09-30 19:12:29	GreenJello	mib_zmpimy, I'm not completely sure when drops happen, maybe sebk can answer that
2018-09-30 19:12:54	Xanorax	sebk, okay, even the response is wrong:
2018-09-30 19:12:55	Xanorax	   = note: expected type `nickel::Response<'_, (), _>`
2018-09-30 19:12:55	Xanorax	              found type `nickel::Response<'mw, D, _>`
2018-09-30 19:13:50	sebk	GreenJello: in your example, not within the code
2018-09-30 19:14:02	sebk	(it happens when y is dropped)
2018-09-30 19:14:14	-->	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has joined #rust-beginners
2018-09-30 19:14:40	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-09-30 19:14:51	sebk	Xanorax: hah. the Fn needs those bounds too … fun
2018-09-30 19:15:44	sebk	unless... you don't use the response
2018-09-30 19:15:44	-->	Bakkot (Bakkot@moz-6slr16.ca.comcast.net) has joined #rust-beginners
2018-09-30 19:15:47	Xanorax	sebk, "needs those bounds" - can you clarify? Are we talking about the annotations or what? =)
2018-09-30 19:16:56	Xanorax	sebk, ah ok found an answer
2018-09-30 19:17:08	sebk	where F: for <'mw, 'conn> Fn(&mut Request<'mw, 'conn>, Response<'mw, D>)
2018-09-30 19:17:10	sebk	I think…
2018-09-30 19:17:19	 *	sebk hopes that was the syntax
2018-09-30 19:17:48	sebk	but it should be easier if you don't pass response to the closure
2018-09-30 19:17:57	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 19:18:01	sebk	(not sure if that still gives a usable closure)
2018-09-30 19:18:20	sebk	actually, it may not be easir
2018-09-30 19:18:44	Xanorax	well, all I want is to actually call Config::handler 
2018-09-30 19:19:34	sebk	then you need them
2018-09-30 19:20:18	mib_zmpimy	So what is the difference between using Rc<RefCell<T>> and Rc::get_mut ?
2018-09-30 19:20:33	sebk	get_mut takes &mut self
2018-09-30 19:20:43	mib_zmpimy	Oh
2018-09-30 19:20:47	sebk	which ensures there is only one user
2018-09-30 19:21:31	-->	martin2 (martin@moz-b8adah.anteldata.net.uy) has joined #rust-beginners
2018-09-30 19:21:54	Xanorax	sebk, yeah I try a simpler example maybe, a "hand crafted" where I want to achieve the same but without the framework. I feel like this is going nowhere in terms of learn effect(s) =)
2018-09-30 19:21:59	Xanorax	thank you for your help so far
2018-09-30 19:22:08	sebk	:s
2018-09-30 19:22:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:22:20	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 19:22:33	sebk	I guess a bit too complex
2018-09-30 19:23:02	Xanorax	the thing is that these bounds and so forth confuse me a lot and that's the problem, and I also should rtfm about closures I guess
2018-09-30 19:23:09	Xanorax	once I have that knowledge I can try this example again
2018-09-30 19:26:22	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 19:26:33	-->	poljar (poljar@moz-us8nu6.net.t-com.hr) has joined #rust-beginners
2018-09-30 19:27:34	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 19:29:30	Xanorax	sebk, what else should I learn to solve these kind of issues?
2018-09-30 19:30:24	sebk	you read the book?
2018-09-30 19:30:36	 *	sebk does not remember too much
2018-09-30 19:31:21	sebk	well. you need lifetimes, mutability
2018-09-30 19:31:28	-->	AtumT_ (IRC@moz-jf3s7k.gvt.net.br) has joined #rust-beginners
2018-09-30 19:31:36	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:31:38	sebk	closures… traits…
2018-09-30 19:32:04	Xanorax	sebk, ok thank you
2018-09-30 19:32:47	simonada_	Hey
2018-09-30 19:32:53	simonada_	How can I solve this error: std::fmt::Write is not implemented for std::io::Stdout ?
2018-09-30 19:32:58	simonada_	I want to get a writer for stdout
2018-09-30 19:33:42	sebk	there is a lock method that should  impl it
2018-09-30 19:33:50	sebk	(rather what you get out of it)
2018-09-30 19:34:12	<--	AtumT (IRC@moz-ii8.sqb.95.179.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:34:53	sebk	!docs
2018-09-30 19:34:56	sebk	dang
2018-09-30 19:35:05	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 19:35:36	sebk	simonada_: https://doc.rust-lang.org/std/io/struct.StdoutLock.html
2018-09-30 19:35:56	<--	yann-kaelig (yann-kaelig@moz-63h1op.dynamic.chello.pl) has quit (Client exited)
2018-09-30 19:36:17	sebk	which is io::Write…
2018-09-30 19:36:32	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-30 19:36:46	sebk	> This trait should generally not be implemented by consumers of the standard library. The write! macro accepts an instance of io::Write, and the io::Write trait is favored over implementing this trait.
2018-09-30 19:36:49	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 19:36:52	sebk	(^ fmt::Write)
2018-09-30 19:37:09	<--	mandeep (mandeep@moz-lirqek.dyn.columbia.edu) has quit (Ping timeout: 121 seconds)
2018-09-30 19:37:30	simonada_	sebk: Thanks for the hint, unfortunately I think the library that I wanted to use is using the wrong trait: fmt::Write
2018-09-30 19:37:48	sebk	…
2018-09-30 19:37:57	sebk	then you have to fix the library
2018-09-30 19:39:31	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-09-30 19:39:37	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:40:19	<--	mib_zmpimy (Mibbit@moz-s3n7ld.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 19:40:22	simonada_	sebk: I guess so :)
2018-09-30 19:40:33	-->	mr_fribble (Mibbit@moz-gpq6s9.rev.numericable.fr) has joined #rust-beginners
2018-09-30 19:40:37	mr_fribble	Hello
2018-09-30 19:40:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:41:15	mr_fribble	Is it possible to have a struct with a field that is public for a specific trait regardless of module? looking at the doc it doesn't seem that way
2018-09-30 19:41:37	sebk	simonada_: I suppose you could write a wrapper that gives an io::Write fmt::Write
2018-09-30 19:42:07	mr_fribble	I am looking at having a SnapShot struct that has some internal state (currently an u32)  I want for the trait to be able to create and restore from a snapshot but without the user to be able to see the internal state of the SnapShot
2018-09-30 19:42:40	sebk	no
2018-09-30 19:42:43	<--	asyncsec (asyncsec@moz-bh7kbn.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 19:42:52	-->	backnforth (backnforth@moz-kelecd.m818.qlh4.fea8.2607.IP) has joined #rust-beginners
2018-09-30 19:43:21	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-09-30 19:43:42	mr_fribble	sorry sebk that is to me?
2018-09-30 19:43:59	sebk	mr_fribble: yes, that is a no to you
2018-09-30 19:44:04	mr_fribble	I see
2018-09-30 19:44:16	mr_fribble	is there an alternative way to do that? 
2018-09-30 19:44:30	sebk	sounds like an associated type to me
2018-09-30 19:44:41	-->	AtumT (IRC@moz-hdt.j1m.95.179.IP) has joined #rust-beginners
2018-09-30 19:44:57	sebk	you only have to specify the trait
2018-09-30 19:45:16	sebk	the user doesn't have to see the actual typ used
2018-09-30 19:45:21	<--	deanedridge (sid306704@moz-qpjerr.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-30 19:45:21	sebk	just what it can do
2018-09-30 19:45:29	<--	AtumT_ (IRC@moz-jf3s7k.gvt.net.br) has quit (Ping timeout: 121 seconds)
2018-09-30 19:45:45	mr_fribble	I see, thank you, I am reading about associated types right now
2018-09-30 19:45:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 19:46:11	mr_fribble	sound like it's  a bit less automatic than I hoped, but it should work into hiding the actual implementation
2018-09-30 19:46:58	mr_fribble	I have forgotten the name since it's been years since I've done Ocaml but I recall in Ocaml you could inside your module have a type that is anything say directly an u32, and declare an alias for outside the module that way people aren't aware what it is when they use your library
2018-09-30 19:47:18	-->	mandeep (mandeep@moz-lirqek.dyn.columbia.edu) has joined #rust-beginners
2018-09-30 19:47:46	-->	asyncsec (asyncsec@moz-ipvvtu.dyn6.twc.com) has joined #rust-beginners
2018-09-30 19:47:50	GreenJello	mr_fribble, you can have private traits, but I don't know if that'd be useful here
2018-09-30 19:48:34	dpc1	mr_fribble: you can "alias" the type with another type or wrap it in a unit struct and don't make the inner member public.
2018-09-30 19:49:35	mr_fribble	sorry dpc1 what is a unit struct? I am new to rust, I don't quite get it
2018-09-30 19:49:50	mr_fribble	a struct with no members?
2018-09-30 19:49:57	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:50:16	dpc1	uhmm i'm not sure its called a unit struct (or its the other one) but i was pointing towards struct Foo(u32);
2018-09-30 19:50:21	dpc1	i guess tuple struct is a better word
2018-09-30 19:50:32	simonada_	sebk: adjusting the library seemed easy enough, though there's the next problem: the trait `std::io::Write` is not implemented for `std::string::String` how do I get that to work?
2018-09-30 19:50:54	mr_fribble	but if you don't make it public, it can't be used for a trait impl?
2018-09-30 19:50:56	simonada_	I think that's why it was fmt::Write in the first place, because it's supposed to produce a String
2018-09-30 19:51:47	<--	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 19:52:04	dpc1	mr_fribble: the struct is public, the member isn't. so a person can access the struct but can't do foo.0 (since you want to hide the type). 
2018-09-30 19:52:20	-->	deja_vu (deja_vu@moz-rlo.e8e.112.62.IP) has joined #rust-beginners
2018-09-30 19:52:44	-->	leaper (Mibbit@moz-iune4r.fios.verizon.net) has joined #rust-beginners
2018-09-30 19:53:14	mr_fribble	dpc1: but I also want the struct internal data to be accessible for specific trait impl, any trait impl even "third party" ones
2018-09-30 19:53:49	dpc1	mr_fribble: fair. but then why do you want to hide it in the first place?
2018-09-30 19:54:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 19:54:43	-->	yk (yk@moz-9t1.klp.169.109.IP) has joined #rust-beginners
2018-09-30 19:55:53	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (Connection closed)
2018-09-30 19:56:26	mr_fribble	I am having issues making associated types work :(
2018-09-30 19:56:37	dpc1	what's the issue?
2018-09-30 19:56:42	mr_fribble	dpc1: I want something like this a trait tht has say snapshot() -> Snapshot; and restore (s:Snapshot)
2018-09-30 19:57:05	-->	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has joined #rust-beginners
2018-09-30 19:58:32	dpc1	and what is snapshot?
2018-09-30 19:58:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 19:59:21	mr_fribble	it is a structure I don't want to expose to the user but that is known to the trait
2018-09-30 20:00:31	-->	Sean (Sean@moz-2nc088.eu52.pm7k.fea8.2607.IP) has joined #rust-beginners
2018-09-30 20:00:53	<--	Sean (Sean@moz-2nc088.eu52.pm7k.fea8.2607.IP) has quit (Client exited)
2018-09-30 20:02:18	-->	stpyramids (sid76109@moz-0ktob1.brockwell.irccloud.com) has joined #rust-beginners
2018-09-30 20:02:31	mr_fribble	I don't understand why this doesn't work https://play.rust-lang.org/?gist=6e9f2a37ea94a95af428fdc4b09b57c6&version=stable&mode=debug&edition=2015 it seems similar to the one in the docs?
2018-09-30 20:02:40	-->	IronMann (Mibbit@moz-vjh.u59.116.45.IP) has joined #rust-beginners
2018-09-30 20:02:55	<--	IronMann (Mibbit@moz-vjh.u59.116.45.IP) has left #rust-beginners
2018-09-30 20:03:28	dpc1	it works if you change it to Stream::Snapshot
2018-09-30 20:03:42	dpc1	oh wait it doesn't
2018-09-30 20:04:13	svartalf	Try `Self` instead of `self` in the trait function decl
2018-09-30 20:04:36	dpc1	ah uhmm
2018-09-30 20:05:38	martin2	is this a decent way to set up handlers ? fn get_user_handler(conn: diesel::Connection) -> impl iron::Handler {} .. basically, injecting the db connection and returning an actual handler
2018-09-30 20:06:21	martin2	or should I make them methods on a struct that owns the connection instead?
2018-09-30 20:06:23	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 20:07:02	<--	asyncsec (asyncsec@moz-ipvvtu.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 20:07:34	<--	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has quit (Client exited)
2018-09-30 20:07:39	<--	dethos (dethos@moz-joj.gtm.138.213.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 20:08:00	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-09-30 20:08:40	-->	asyncsec (asyncsec@moz-c7b8ki.dyn6.twc.com) has joined #rust-beginners
2018-09-30 20:09:19	-->	Dariost (Dariost@moz-imi.plf.48.151.IP) has joined #rust-beginners
2018-09-30 20:10:40	mr_fribble	I am back to square one :( https://play.rust-lang.org/?gist=4ff8cfd7489806ff89a5aa76bc36ded2&version=stable&mode=debug&edition=2015
2018-09-30 20:10:55	mr_fribble	It seems you cannot leak a private type, you can't return a private struct
2018-09-30 20:11:02	dpc1	yes of course
2018-09-30 20:11:18	dpc1	not sure why you want to hide it though
2018-09-30 20:11:51	mr_fribble	so people don't create random invalid Snapshots with any pos, so they can only be created via snapshot()
2018-09-30 20:12:24	dpc1	snapshot is a struct i assume?
2018-09-30 20:12:33	mr_fribble	yes
2018-09-30 20:12:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 20:12:43	dpc1	then make the members (properties) as private
2018-09-30 20:13:06	durka42	as long as the field is private, outside the module people can only use the constructors you provide
2018-09-30 20:13:08	mr_fribble	the issue is I want them to be public to trait impls
2018-09-30 20:13:17	dpc1	the properties?
2018-09-30 20:13:21	mr_fribble	what if someone wants to do a impl for my trait?
2018-09-30 20:13:31	mr_fribble	yes
2018-09-30 20:13:33	durka42	I think you're mixing up traits and structs...
2018-09-30 20:13:47	dpc1	durka42: i assume he meant structs there in the last message and typed it as traits by mistake
2018-09-30 20:13:48	durka42	if someone implements your trait then they have their own struct
2018-09-30 20:14:15	durka42	or you mean implement some other trait on your snapshot struct?
2018-09-30 20:14:22	-->	sparky8251 (quassel@moz-sifnmb.ga.comcast.net) has joined #rust-beginners
2018-09-30 20:14:32	dpc1	i think he meant that
2018-09-30 20:14:52	mr_fribble	well I guess they can use their own structure, but in most cases I think it will be the same structure for my particular use case
2018-09-30 20:14:55	stpyramids	if you want all properties to be public but still prevent creating them w/ a literal, couldn't you add a dummy private property for that purpose?
2018-09-30 20:15:18	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-09-30 20:15:35	mr_fribble	I just want something like how are they called, companion types in C++?
2018-09-30 20:16:19	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-30 20:16:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 20:18:16	durka42	"friend" I think
2018-09-30 20:18:47	durka42	rust doesn't have that
2018-09-30 20:19:06	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-09-30 20:19:29	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-09-30 20:20:08	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-09-30 20:20:14	mr_fribble	rust has no friends :(
2018-09-30 20:20:22	mr_fribble	that's rough man
2018-09-30 20:22:50	<--	Guest61891 (nj0rd@moz-c420mr.versanet.de) has quit (Quit: WeeChat 2.2)
2018-09-30 20:22:55	stpyramids	how about this: https://play.rust-lang.org/?gist=08f13c74ebe948856f9b781a48e144da&version=stable&mode=debug&edition=2015 
2018-09-30 20:23:40	<--	mib_9lqwnk (Mibbit@moz-928i7f.broadband9.iol.cz) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 20:23:41	mr_fribble	anyway thanks a lot for your help guys, I'll see what I can do with this,. perhaps use associated types
2018-09-30 20:24:10	<--	simonada_ (simonadamei@moz-gkkof0.kajf.lo5a.0a61.2001.IP) has quit (Quit: )
2018-09-30 20:24:15	-->	nj0rd (nj0rd@moz-nhh406.dip.versatel-1u1.de) has joined #rust-beginners
2018-09-30 20:24:21	panicbit	mr_fribble: If I'm understanding correctly that would be associated types in Rust jargon
2018-09-30 20:24:29	panicbit	Which currently are only available for trait impls
2018-09-30 20:24:33	panicbit	not for inherent impls
2018-09-30 20:24:37	--	nj0rd is now known as Guest26628
2018-09-30 20:24:48	panicbit	At least not yet
2018-09-30 20:25:18	mr_fribble	the way I see it, you can't use associated types to hide a type?
2018-09-30 20:25:55	panicbit	Not yet
2018-09-30 20:26:12	-->	nj0rd (nj0rd@moz-c420mr.versanet.de) has joined #rust-beginners
2018-09-30 20:26:14	panicbit	Well, in a generic context, the concrete type would be hidden
2018-09-30 20:26:32	panicbit	If T is generic, then T::Foo is basically opaque
2018-09-30 20:27:09	panicbit	But if you have say SomeConcreteType, then SomeConcreteType::Foo is also concrete
2018-09-30 20:27:22	mr_fribble	I actually found the docs I was talking about earlier related to Ocaml https://caml.inria.fr/pub/docs/manual-ocaml/moduleexamples.html#sec22
2018-09-30 20:27:23	panicbit	mr_fribble: Does that make any sense?
2018-09-30 20:28:10	mr_fribble	I think it does
2018-09-30 20:29:11	panicbit	I'm not familiar enough with OCaml to understand the issues it is facing and solving
2018-09-30 20:29:12	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 20:29:17	<--	Guest26628 (nj0rd@moz-nhh406.dip.versatel-1u1.de) has quit (Ping timeout: 121 seconds)
2018-09-30 20:29:21	panicbit	And how they would apply to Rust
2018-09-30 20:30:32	<--	asyncsec (asyncsec@moz-c7b8ki.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 20:32:00	mr_fribble	well if you read the chapter on Ocaml, inside a module you can use a concrete type, and alias it externally to be an opaque type.  also you can use it to "tag" the type, so that means even if all modules accept a certain aliased type, you can't pass it between modules since it's associated with that module
2018-09-30 20:32:30	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 20:33:03	mr_fribble	it's like in rust saying, type SnapshotId = u32,  then a function snapshot() -> SnapshowId for a trait, and you have two traits impls but the type systems behaves as if both of these trait impls give completely different SnapshotIds 
2018-09-30 20:33:05	mr_fribble	if that makes sense
2018-09-30 20:33:05	<--	spacekookie (ThinkCat@moz-br9ofq.f29c.jhn5.c207.2a02.IP) has quit (Quit: No Ping reply in 60 seconds.)
2018-09-30 20:33:44	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 20:33:55	<--	liquidnight (marcus@moz-0689gr.7bgo.ug7g.0c23.2a01.IP) has quit (Quit: Leaving.)
2018-09-30 20:34:07	-->	liquidnight (marcus@moz-0689gr.7bgo.ug7g.0c23.2a01.IP) has joined #rust-beginners
2018-09-30 20:34:23	-->	spacekookie (ThinkCat@moz-bsfnsc.contaboserver.net) has joined #rust-beginners
2018-09-30 20:35:17	panicbit	Yeah
2018-09-30 20:35:22	panicbit	mr_fribble: It's more like newtype in C
2018-09-30 20:35:25	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-30 20:35:40	panicbit	er
2018-09-30 20:35:42	panicbit	Haskell?
2018-09-30 20:35:44	panicbit	whatever
2018-09-30 20:35:48	<--	yk (yk@moz-9t1.klp.169.109.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 20:35:54	panicbit	It's opaque instead of transparent
2018-09-30 20:36:18	-->	asyncsec (asyncsec@moz-gt7ob0.dyn6.twc.com) has joined #rust-beginners
2018-09-30 20:36:21	mr_fribble	unfortunately I'm not familiar at all with haskell :(
2018-09-30 20:37:13	dpc1	uhmm
2018-09-30 20:37:19	Gachuk	If you want to have an optional result, the idiomatic way would be Option<Result<String, Error>> for example?
2018-09-30 20:37:48	mr_fribble	it seems stragne to have an optional result tho? 
2018-09-30 20:38:02	mr_fribble	I see it more logical to have REsult Optional String actually
2018-09-30 20:38:05	jeromegn	do I need to do anything special to free a `vec.into_boxed_slice()`'d where vec is a `Vec<u8>` and I pass the `Box<[u8]>` to a C function? I think there's a memory leak there.
2018-09-30 20:38:10	mr_fribble	either you have an Optional<String> or an error
2018-09-30 20:38:38	mr_fribble	jeromegn: when you're done on the rust side you do Vec from raw ptr or how is it called
2018-09-30 20:38:44	Gachuk	ye but it's possible you might have either something, nothing, or an error
2018-09-30 20:38:47	Gachuk	3 outcomes
2018-09-30 20:39:10	mr_fribble	but you always have a result, that result is either an Option<String> or an error, the way I see it
2018-09-30 20:39:17	Gachuk	hmm
2018-09-30 20:39:54	mr_fribble	jeromegn: https://doc.rust-lang.org/std/vec/struct.Vec.html#method.from_raw_parts if I understand correctly you might want that
2018-09-30 20:40:08	panicbit	Gachuk: It's a bit unusual
2018-09-30 20:40:20	panicbit	Result<Option<T>, Error> is probably more common
2018-09-30 20:40:23	panicbit	(albeat also rare)
2018-09-30 20:40:25	dpc1	^
2018-09-30 20:40:42	mr_fribble	I;d personally do a mem forget jeromegn then vec,as_ptr myself
2018-09-30 20:40:42	panicbit	Also more ergonomic to consume probably
2018-09-30 20:40:44	jeromegn	mr_fribble: I'm doing Box::into_raw() to send it as a *mut u8 to C and then that's the end of it
2018-09-30 20:41:11	mr_fribble	jeromegn: well if it's the end of it, then it leaks? you will have to eventually free it on the C side, and that means calling back into rust to free it properly
2018-09-30 20:41:14	jeromegn	ah, I just saw the docs on that, I should get back the memory or free it from c
2018-09-30 20:41:22	jeromegn	right
2018-09-30 20:41:29	mr_fribble	you should free it from C by calling back into rust, not by calling free in C
2018-09-30 20:41:30	panicbit	jeromegn: You can't free it from C
2018-09-30 20:41:34	mr_fribble	cause it has been allocated in rust
2018-09-30 20:41:36	jeromegn	right
2018-09-30 20:41:38	panicbit	yeah, what mr_fribble said
2018-09-30 20:41:40	jeromegn	makes sense
2018-09-30 20:41:41	-->	jwatt (roslea@jwatt.irc.users.mozilla.org) has joined #rust-beginners
2018-09-30 20:41:51	mr_fribble	if you free it in c strange things might happen lol
2018-09-30 20:41:52	<--	backnforth (backnforth@moz-kelecd.m818.qlh4.fea8.2607.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 20:41:54	panicbit	(the allocators may be different)
2018-09-30 20:42:00	<--	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has quit (The TLS connection was non-properly terminated.)
2018-09-30 20:42:03	Gachuk	well I'm writing a parser and I have 3 possible states, I need to ignore the None as it doesnt mean anything, i.e. parsing something and going "uh dont care", hence optional
2018-09-30 20:42:27	dpc1	you could create your own enum then
2018-09-30 20:42:40	dpc1	would make the code more readable
2018-09-30 20:42:43	Gachuk	ye but that doesn't feel right either, the lexicon doesnt have a "DoNothing"
2018-09-30 20:43:00	dpc1	uhmm you said you have 3 states right?
2018-09-30 20:43:03	-->	enterprisey (enterprisey@moz-pnc2iu.cit.cornell.edu) has joined #rust-beginners
2018-09-30 20:43:14	<--	enterprisey (enterprisey@moz-pnc2iu.cit.cornell.edu) has quit (Quit: Leaving)
2018-09-30 20:43:22	Gachuk	ye so "Got something" "Got nothing, i.e. dont care" "Got an error"
2018-09-30 20:43:25	cja	I have some simple config crate questions
2018-09-30 20:43:40	mr_fribble	well AFAIK both C and rust allocators have internal state panicbit , so you can't free stuff just like that 
2018-09-30 20:43:46	<--	ubuntourist (kjcole@moz-0gdhgp.gallaudet.edu) has quit (The TLS connection was non-properly terminated.)
2018-09-30 20:44:01	panicbit	yeah
2018-09-30 20:44:21	panicbit	well, the Rust allocator MAY be the same as the C one
2018-09-30 20:44:25	cja	The Debug trait it has makes it very unclear what the final structure looks like. What's the best path here? Try to try_into the config into something else and walk that? I want to verify that sections are split out, but I can't really eyeball it with {:?}
2018-09-30 20:44:30	panicbit	In which case you MAY not run into issues
2018-09-30 20:44:35	mr_fribble	I find an enum with 3 of those states way clearer than Result<Option<String>, Error> and Option<Reslt... the least clear of off
2018-09-30 20:44:41	-->	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-09-30 20:44:45	panicbit	However, there's some bookkeeping the types might do
2018-09-30 20:44:54	panicbit	E.g. Arc::into_raw does some magic
2018-09-30 20:44:57	dpc1	agree
2018-09-30 20:45:13	panicbit	and doesn't give you a pointer that points to the start of the allocated data
2018-09-30 20:45:15	panicbit	(IIRC)
2018-09-30 20:45:27	mr_fribble	well last time I did some C FFI from rust, I would allocate 4 bytes more to store the size, and give to C ptr + 1, and in rust ptr - 1 
2018-09-30 20:45:33	mr_fribble	I mean .offset in rust, but you get the idea
2018-09-30 20:45:44	mr_fribble	you can make a convention for yourself to store the vec size
2018-09-30 20:45:51	panicbit	yeah
2018-09-30 20:45:58	panicbit	that's all fine
2018-09-30 20:46:07	mr_fribble	or since I assume on the C side you must know the size anyway to use it in C, you can give it back to rust to free it
2018-09-30 20:46:11	panicbit	But you still gotta give the pointer back to Vec eventually
2018-09-30 20:46:21	mr_fribble	yeah if you want to free it 
2018-09-30 20:46:25	panicbit	yup
2018-09-30 20:46:27	mr_fribble	also don't forget to do mem::forget
2018-09-30 20:46:30	panicbit	no
2018-09-30 20:46:33	mr_fribble	before givign it to C
2018-09-30 20:46:52	panicbit	Don't use mem::forget if there's into_raw or similar D:
2018-09-30 20:47:01	panicbit	and appropriate from_raw methods
2018-09-30 20:47:03	jeromegn	I'm not sure I even need to box my thing... mmm
2018-09-30 20:47:16	mr_fribble	I never used the Box api so you must be right
2018-09-30 20:47:20	jeromegn	the C bit takes control of that memory I'm sending it
2018-09-30 20:47:21	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 20:47:22	mr_fribble	I used directly the vec as_ptr
2018-09-30 20:47:32	jeromegn	well, it copies it
2018-09-30 20:47:35	mr_fribble	rather forget then as_ptr
2018-09-30 20:47:38	panicbit	relying on Vec::as_ptr and mem::forget is a bit dangerous
2018-09-30 20:47:44	mr_fribble	it is?
2018-09-30 20:47:48	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-09-30 20:47:51	panicbit	I'd say so
2018-09-30 20:47:53	mr_fribble	because the Vec cna be stack allocated?
2018-09-30 20:48:07	panicbit	actually nvm
2018-09-30 20:48:38	panicbit	Vec has a from_raw_parts method and an example is given that uses the mem::forget pattern
2018-09-30 20:49:05	panicbit	mr_fribble: I'd just be careful because you could accidentally leak data
2018-09-30 20:49:32	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-09-30 20:49:35	panicbit	(imagine there would be other allocations beside the data ptr)
2018-09-30 20:49:59	panicbit	But it's fine for Vec
2018-09-30 20:50:08	mr_fribble	but it's not more dangerous than the box apis or anything, it's the same danger?
2018-09-30 20:50:18	panicbit	The danger is leaking
2018-09-30 20:50:38	panicbit	Which, according to official Rust propaganda, is "safe"
2018-09-30 20:50:51	panicbit	:P
2018-09-30 20:51:50	mr_fribble	lol
2018-09-30 20:51:53	mr_fribble	propaganda
2018-09-30 20:52:00	dpc1	xD
2018-09-30 20:52:02	mr_fribble	man I am struggling so much with rust, :(
2018-09-30 20:52:10	dpc1	why
2018-09-30 20:52:13	mr_fribble	I recently read a blog post about other people struggling
2018-09-30 20:52:23	dpc1	it takes a bit of learning bh
2018-09-30 20:52:31	mr_fribble	I just think of doing things a certain way and when I try to do them in rust it seems not to work well that way
2018-09-30 20:52:34	mr_fribble	but I still want to use rust
2018-09-30 20:52:52	dpc1	yah that happens
2018-09-30 20:53:43	cja	Don't beat yourself up much, I have decade of industry work and I still squint frustratedly at rust error cascading and composition
2018-09-30 20:54:18	dpc1	try to reason out why the compiler is crying
2018-09-30 20:54:56	jeromegn	panicbit & mr_fribble: that fixed it! I used Box::from_raw and it frees the memory. no more tears!
2018-09-30 20:55:07	mr_fribble	well it also seems rust is missing some things I might need
2018-09-30 20:55:15	mr_fribble	jeromegn: yay !
2018-09-30 20:58:16	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-30 20:59:11	jeromegn	I'll eventually refactor to get rid of the Box, I don't think it's useful
2018-09-30 20:59:54	<--	insidious (insidious@moz-ccm.hfr.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-30 20:59:55	<--	asyncsec (asyncsec@moz-gt7ob0.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 21:00:23	-->	insidious (insidious@moz-ccm.hfr.198.134.IP) has joined #rust-beginners
2018-09-30 21:02:29	mr_fribble	without the box it's mem::forget() follow by as_ptr, then from_ptr but you need to give the length
2018-09-30 21:03:32	Gachuk	um additionally, with rust you have to explicitly add comparison ops for enums
2018-09-30 21:03:35	Gachuk	?
2018-09-30 21:06:10	mr_fribble	comparison? like equal? or > < ?
2018-09-30 21:06:57	Gachuk	ye
2018-09-30 21:06:59	Gachuk	equality
2018-09-30 21:07:05	-->	moriarty (moriarty@moz-se2dgk.net) has joined #rust-beginners
2018-09-30 21:07:33	<--	martin2 (martin@moz-b8adah.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-09-30 21:07:35	mr_fribble	I think it works automatically for enums
2018-09-30 21:07:39	 *	mr_fribble shurgs
2018-09-30 21:07:43	mr_fribble	but you can pattern match enums 
2018-09-30 21:08:17	Gachuk	I'm finding it really hard to reason around having to do "something" with everything, what if I really don't care about a result...
2018-09-30 21:08:42	Gachuk	also thanks
2018-09-30 21:09:02	mr_fribble	what do you mean?
2018-09-30 21:09:09	mr_fribble	in pattern matching?
2018-09-30 21:09:19	mr_fribble	you can use _ -> for the rest
2018-09-30 21:09:25	mr_fribble	like to match anythign else and do nothing with it
2018-09-30 21:09:27	-->	backnforth (backnforth@moz-vnt.vv6.166.142.IP) has joined #rust-beginners
2018-09-30 21:09:28	mr_fribble	if possible
2018-09-30 21:09:40	dpc1	don't care about the result?
2018-09-30 21:10:34	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 21:11:50	Gachuk	I guess this is still my previous question about optional results, if I have a func, it's going to expect a result one way or another, because no such thing as Null
2018-09-30 21:12:02	Gachuk	hence optional result but I do agree thats weird too
2018-09-30 21:12:21	Gachuk	I should put together an example, I feel like im just approaching this the wrong way
2018-09-30 21:12:27	dpc1	ya probably
2018-09-30 21:12:29	mr_fribble	option is the way to represent something nullable
2018-09-30 21:12:46	mr_fribble	but why not have an enum with None, Something, Error instead?
2018-09-30 21:13:21	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 21:14:28	Gachuk	right but then I need to just handle in the caller to parse the result and look for "None" I guess, gah im tired, thanks though, I think at least I know I need to look at this differently
2018-09-30 21:14:37	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 21:15:53	dpc1	:)
2018-09-30 21:16:20	mr_fribble	man I got myself discouraged as well
2018-09-30 21:16:35	dpc1	it has happened to me in the past
2018-09-30 21:16:38	mr_fribble	didnt manage to do anything yet, just thinking how to do it and discovering I can't do it the way I envisioned
2018-09-30 21:16:46	dpc1	sometimes i just sit and delete everything and start from a different perspective xD
2018-09-30 21:16:58	-->	Sgeo_ (Sgeo@moz-dnqgov.dyn.optonline.net) has joined #rust-beginners
2018-09-30 21:17:05	mr_fribble	I am forcing myself not to abandon rust and do it in another language :(
2018-09-30 21:17:19	<--	turbobob (turbobob@moz-c9l133.e7e9.m2ej.0647.2601.IP) has quit (Connection closed)
2018-09-30 21:17:39	Gachuk	Rust is certainly "different", even for an experienced coder, but then that's a good thing too, more languages and more ways of looking at things makes you a better coder I think
2018-09-30 21:18:13	<--	Sgeo (Sgeo@moz-dnqgov.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-09-30 21:18:32	dpc1	yeah
2018-09-30 21:18:46	Gachuk	but yes it is frustrsting too
2018-09-30 21:18:50	dpc1	also whenever the compiler has stopped me from doing something I realised later i was using a faulty way of getting it done
2018-09-30 21:18:52	<--	leaper (Mibbit@moz-iune4r.fios.verizon.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 21:19:04	Gachuk	when you're like, shit I could have done this and more hours ago
2018-09-30 21:19:08	-->	fulara (Mibbit@moz-6v84r2.dynamic.chello.pl) has joined #rust-beginners
2018-09-30 21:19:10	Gachuk	in another language you're more familar with
2018-09-30 21:19:14	dpc1	yes definitel
2018-09-30 21:19:20	--	U007D_afk is now known as U007D
2018-09-30 21:19:20	dpc1	but then you have lesser runtime worries
2018-09-30 21:19:24	-->	yk (yk@moz-9t1.klp.169.109.IP) has joined #rust-beginners
2018-09-30 21:19:56	-->	mermi (Mibbit@moz-puh36u.dynamic.sonic.net) has joined #rust-beginners
2018-09-30 21:20:16	mermi	https://play.rust-lang.org/?gist=7583e0f3bf02d1b0da254f4122451812&version=stable&mode=debug&edition=2015 
2018-09-30 21:20:26	mermi	can someone please explain why this doesn't work?
2018-09-30 21:20:26	mr_fribble	my main issue with rust is that it seems to not fit a particular paradigm. It's not sufficiently functional to do things like I'd do in a functional way, neither OO or anything really
2018-09-30 21:20:30	<--	Xanorax (Xanorax@moz-qemh21.cust.swisscom.ch) has quit (Connection closed)
2018-09-30 21:20:35	mr_fribble	rust feels a lot like a jack of all trades to me
2018-09-30 21:21:27	Gachuk	ye I do see your point with that, might be true, I'm not familiar enought to say yet, but yes it's not quite functional although borrows (no pun intended) a lot of concepts from functional languages but not quite all the way
2018-09-30 21:21:34	mermi	I'm not understanding why the temp. value doesn't live long enough?
2018-09-30 21:22:07	mr_fribble	well that's what's frustrating me the most with rust currently
2018-09-30 21:23:21	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 21:23:43	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-30 21:23:51	durka42	the more charitable term is "multi-paradigm" :)
2018-09-30 21:23:56	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Quit: Windmills do not work that way! Good night!)
2018-09-30 21:24:26	Gachuk	ye but plenty of languages are multi-paradigm, in fact probably the majority
2018-09-30 21:24:36	durka42	mermi: the code you pasted has a different error
2018-09-30 21:25:04	fulara	Hello, how to add bound of serde::Deserialize to trait, so that it does its lifetime does not infect depending types? i would be fine with having 'de being 'static ( if thats possible ). basically make this compile: https://play.rust-lang.org/?gist=9b8da79b5c7b41541a708e782a783107&version=stable&mode=debug&edition=2015
2018-09-30 21:25:37	mermi	https://play.rust-lang.org/?gist=f1801462306f8f242d034d0035097ff8&version=stable&mode=debug&edition=2015
2018-09-30 21:25:39	mermi	whoops
2018-09-30 21:25:41	mermi	there it is
2018-09-30 21:25:42	-->	deifacted (deifacted@moz-9qqck6.c504.nbab.0646.2601.IP) has joined #rust-beginners
2018-09-30 21:25:48	deifacted	https://play.rust-lang.org/?gist=b0bc6c2fbdd2cb688a32f57b50992609&version=stable&mode=debug&edition=2015 how do I make this work?
2018-09-30 21:25:57	<--	U007D (U007D@moz-jc56tv.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 21:25:58	mr_fribble	yeah but like Ocaml is multiparadigm the whole way 
2018-09-30 21:26:08	-->	U007D (U007D@moz-3ai.9b9.245.162.IP) has joined #rust-beginners
2018-09-30 21:26:29	emerent	mermi: .borrow() returns a struct that decrements the counter again when it's dropped
2018-09-30 21:26:37	fulara	Okay, i got it. :) nevermind here: https://play.rust-lang.org/?gist=8d3b4895dd7a40fc9eac978f9aa17c1e&version=stable&mode=debug&edition=2015
2018-09-30 21:26:45	emerent	you can't deref it to get the contained reference and then let it go out of scope again
2018-09-30 21:26:57	durka42	mermi: you're trying to return a reference to the inside of a RefCell, but that can't be allowed because RefCell needs to track how long the borrow lasts
2018-09-30 21:27:33	deifacted	i have a Vec<&'a FnMut()> that I want to iterate over and call
2018-09-30 21:27:35	emerent	is the Rc<RefCell<_>> choice deliberate?
2018-09-30 21:27:38	stpyramids	mr_fribble: I'm still not clear on what you're trying to do beyond ensuring that nothing outside your module can do Snapshot{ ... } to create those structs
2018-09-30 21:27:41	emerent	a singly linked list only needs Box
2018-09-30 21:27:53	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 21:27:58	deifacted	aha, i needed Vec<&'a mut FnMut()>
2018-09-30 21:28:00	mermi	I'm trying to learn about RefCell currently
2018-09-30 21:28:07	mermi	I had Box then did Rc 
2018-09-30 21:28:11	-->	niconii (nicole@moz-ujf4sp.midco.net) has joined #rust-beginners
2018-09-30 21:28:11	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-09-30 21:28:15	mermi	now Rc<RefCell>
2018-09-30 21:28:57	mr_fribble	stpyramids: I was thinking of hiding internal state  but still making it usable on the outside
2018-09-30 21:29:31	dpc1	mr_fribble: just try keeping it non-public and see what are the painpoints you face later
2018-09-30 21:29:56	mermi	durka42 is there any way I can return a reference to the link?
2018-09-30 21:30:06	mermi	durka42 *T
2018-09-30 21:30:44	<--	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-09-30 21:31:13	stpyramids	I'm looking at https://play.rust-lang.org/?gist=4ff8cfd7489806ff89a5aa76bc36ded2&version=stable&mode=debug&edition=2015 -- do you want code outside this module to be able to access ActualSnapshot's pos member?
2018-09-30 21:31:36	mr_fribble	I think I will just try to do it differently altogether or just let it be public and worry about it later dpc1 
2018-09-30 21:32:07	durka42	mermi: with this design... I don't see an easy way
2018-09-30 21:32:12	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-30 21:32:21	durka42	mermi: you should know that linked lists are one of the hardest possible "beginner" projects to take on in rust
2018-09-30 21:32:25	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-09-30 21:32:39	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-09-30 21:32:43	durka42	in fact there's a whole tutorial about them http://cglab.ca/~abeinges/blah/too-many-lists/book/
2018-09-30 21:33:24	<--	deifacted (deifacted@moz-9qqck6.c504.nbab.0646.2601.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-09-30 21:33:25	mermi	durka42 I've actually been reading that
2018-09-30 21:33:43	dpc1	mr_fribble: yeah exactly :)
2018-09-30 21:33:53	mermi	durka42 it's a good read, but I don't actually learn things that well until I do them myself
2018-09-30 21:34:25	Lil_Dropchk	which crate provides an .avg() iterator?
2018-09-30 21:34:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 21:35:30	-->	jm9k (email@moz-ckj4do.aflg.tku2.0204.2601.IP) has joined #rust-beginners
2018-09-30 21:39:21	<--	backnforth (backnforth@moz-vnt.vv6.166.142.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 21:39:21	dpc1	mermi: fair enough but linked list as one of the first projects is going to be really tough
2018-09-30 21:39:21	<--	mr_fribble (Mibbit@moz-gpq6s9.rev.numericable.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 21:39:21	@mbrubeck	Lil_Dropchk: https://crates.io/crates/streaming-stats has https://docs.rs/streaming-stats/0.2.2/stats/fn.mean.html
2018-09-30 21:39:21	Lil_Dropchk	thanks!
2018-09-30 21:39:21	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 21:39:21	@mbrubeck	looks like it only operates on f64 (or things that can be converted to f64)
2018-09-30 21:39:22	--	irc: disconnected from server
2018-09-30 21:39:34	-->	Kirjava (cake@moz-7e0sq4.ip-51-254-223.eu) has joined #rust-beginners
2018-09-30 21:39:34	--	Topic for #rust-beginners is "Beginner's Rust discussion, unlogged. Ask away, but please allow some time for people to respond! | Book  https://doc.rust-lang.org/book/ | Playground  https://play.rust-lang.org | Forum  https://users.rust-lang.org | Conduct  https://www.rust-lang.org/conduct.html"
2018-09-30 21:39:34	--	Topic set by niconii (nicole@moz-fg53dj.midco.net) on Thu, 26 May 2016 11:19:40
2018-09-30 21:39:34	--	Channel #rust-beginners: 1087 nicks (3 ops, 0 halfops, 1 voice, 1083 normals)
2018-09-30 21:39:34	-->	kimundi (kimundi@moz-bv4.4n9.116.92.IP) has joined #rust-beginners
2018-09-30 21:39:40	--	Channel created on Tue, 27 Oct 2015 17:04:43
2018-09-30 21:40:29	-->	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has joined #rust-beginners
2018-09-30 21:40:31	mermi	doesn't that lifetime mean that the struct won't outlive the value it holds? So it's for the reference the struct holds to live longer than the struct is ok correct?
2018-09-30 21:40:55	mermi	or that the struct can not outlive an reference it holds
2018-09-30 21:41:16	-->	bernte (Bernd@moz-uo0rvi.fams.de) has joined #rust-beginners
2018-09-30 21:42:13	<--	fulara (Mibbit@moz-6v84r2.dynamic.chello.pl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 21:43:19	Lil_Dropchk	mbrubeck: but it seems to have some overhead because it also calculates variance etc?
2018-09-30 21:43:37	Lil_Dropchk	is it faster than this? `some_iter.scan((0, 0.), |st, y| { *st = (st.0 + 1, st.1 + y); Some(*st) }).last().map_or(0., |(count, sum)| sum / count as f32)`
2018-09-30 21:44:09	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 21:46:24	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 21:48:24	<--	mermi (Mibbit@moz-puh36u.dynamic.sonic.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 21:48:26	-->	ithinuel (ithinuel@moz-ro6cjb.cable.virginm.net) has joined #rust-beginners
2018-09-30 21:48:28	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 21:49:00	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-09-30 21:50:25	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-09-30 21:50:45	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 21:51:18	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 21:51:40	@mbrubeck	probably not
2018-09-30 21:51:40	Lil_Dropchk	when to use crate numeric_float vs noisy_float?
2018-09-30 21:51:55	Lil_Dropchk	i want to call .max() on a f32 iter
2018-09-30 21:52:03	Lil_Dropchk	they are not nan
2018-09-30 21:52:35	-->	clarkenciel (danny@moz-antpao.res.rr.com) has joined #rust-beginners
2018-09-30 21:52:49	--	stephaneyfx_ is now known as stephaneyfx
2018-09-30 21:52:55	@mbrubeck	you can also do `iter.fold(f32::NAN, f32::max)`
2018-09-30 21:53:25	Lil_Dropchk	mbrubeck: is any f32 > NAN?
2018-09-30 21:53:29	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 21:54:42	@mbrubeck	Lil_Dropchk: Yes, f32::max(x, NAN) will always return `x`. https://doc.rust-lang.org/std/primitive.f32.html#method.max
2018-09-30 21:55:00	Lil_Dropchk	thanks
2018-09-30 21:55:03	<--	eyans (a@moz-bfg4el.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-09-30 21:55:53	<--	emerent (emerentius@moz-n5c2l5.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-30 21:58:10	<--	U007D (U007D@moz-3ai.9b9.245.162.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 21:58:25	-->	U007D (U007D@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-09-30 21:58:26	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-09-30 21:58:32	<--	Eragon (Eragon@moz-earppj.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-09-30 21:59:01	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-09-30 21:59:09	<--	jihi (jih@moz-dc0lej.dip0.t-ipconnect.de) has quit (Connection closed)
2018-09-30 21:59:52	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Client exited)
2018-09-30 22:00:08	-->	mellowmaroon (mellowmaroo@moz-qrk6dg.va.comcast.net) has joined #rust-beginners
2018-09-30 22:01:57	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:08:22	<--	hamsteri_ (hamsteri@moz-hs7.fvt.60.194.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:08:22	<--	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:08:23	--	irc: disconnected from server
2018-09-30 22:25:33	-->	Kirjava (cake@moz-7e0sq4.ip-51-254-223.eu) has joined #rust-beginners
2018-09-30 22:25:33	--	Topic for #rust-beginners is "Beginner's Rust discussion, unlogged. Ask away, but please allow some time for people to respond! | Book  https://doc.rust-lang.org/book/ | Playground  https://play.rust-lang.org | Forum  https://users.rust-lang.org | Conduct  https://www.rust-lang.org/conduct.html"
2018-09-30 22:25:33	--	Topic set by niconii (nicole@moz-fg53dj.midco.net) on Thu, 26 May 2016 11:19:40
2018-09-30 22:25:33	--	Channel #rust-beginners: 1088 nicks (3 ops, 0 halfops, 1 voice, 1084 normals)
2018-09-30 22:25:39	--	Channel created on Tue, 27 Oct 2015 17:04:43
2018-09-30 22:25:52	stpyramids	jm9k: you can use Option like Result and use '?': https://play.rust-lang.org/?gist=4f87f2226caec8c02c29fe0f53032762&version=stable&mode=debug&edition=2015
2018-09-30 22:27:15	jm9k	Hmm, that's interesting.
2018-09-30 22:31:18	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-09-30 22:31:22	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:31:31	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-09-30 22:31:39	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 22:35:30	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-09-30 22:35:30	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-30 22:35:30	jm9k	Should an if let statement have a semicolon at the end? On doc.rust-lang.org I see it both ways.
2018-09-30 22:35:30	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:36:04	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-30 22:36:23	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-09-30 22:36:35	Arnavion	If it's the RHS of a statement, it gets a semicolon because statements get semicolons
2018-09-30 22:36:42	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-09-30 22:37:01	Arnavion	That's the case for all expressions, not specific to if-let
2018-09-30 22:38:51	jm9k	What is an RHS?
2018-09-30 22:38:55	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 22:38:57	dpc1	right hand side
2018-09-30 22:39:00	--	lkurusa is now known as lkurusa|away
2018-09-30 22:39:01	--	lkurusa|away is now known as 381AA7W7Q
2018-09-30 22:39:01	<--	381AA7W7Q (lkurusa@moz-hpde4v.pool.telekom.hu) has quit (OperServ (Q-Lined: drones))
2018-09-30 22:39:13	dpc1	like let x = if foo { bar } else { baz };
2018-09-30 22:39:25	-->	lkurusa (lkurusa@moz-hpde4v.pool.telekom.hu) has joined #rust-beginners
2018-09-30 22:40:24	-->	bernte (Bernd@moz-uo0rvi.fams.de) has joined #rust-beginners
2018-09-30 22:41:43	<--	mad_hatter (mad_hatter@moz-gk1j15.upc-a.chello.nl) has quit (Quit: something calls)
2018-09-30 22:42:57	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-09-30 22:43:16	<--	deja_vu (deja_vu@moz-rlo.e8e.112.62.IP) has quit (Quit: Leaving)
2018-09-30 22:48:43	-->	bernte_ (Bernd@moz-uo0rvi.fams.de) has joined #rust-beginners
2018-09-30 22:49:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 22:49:16	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:49:19	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-30 22:49:51	<--	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-09-30 22:50:56	-->	netrino (netrino@moz-mb8.hu7.69.83.IP) has joined #rust-beginners
2018-09-30 22:51:29	<--	yjv (yjv@moz-u3cm8h.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-09-30 22:51:35	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:52:13	<--	bernte (Bernd@moz-uo0rvi.fams.de) has quit (Quit: Leaving)
2018-09-30 22:52:18	<--	bernte_ (Bernd@moz-uo0rvi.fams.de) has quit (Quit: Leaving)
2018-09-30 22:52:21	-->	bernte (Bernd@moz-uo0rvi.fams.de) has joined #rust-beginners
2018-09-30 22:53:18	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:54:48	<--	yk (yk@moz-9t1.klp.169.109.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 22:56:13	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 22:56:28	<--	clarkenciel (danny@moz-antpao.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-09-30 22:57:23	cja	If I use a crate is there anything stopping me from implementing a trait on one of its structures?
2018-09-30 22:57:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 22:58:02	-->	svanheulen (svanheulen@moz-3a3.fsj.58.209.IP) has joined #rust-beginners
2018-09-30 22:58:33	dpc1	cja: if its your own trait you can do
2018-09-30 22:58:36	Sergio	Yes: coherence. 
2018-09-30 22:58:38	Sergio	^
2018-09-30 22:58:51	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-09-30 22:59:04	dpc1	else you will have to wrap it in a newtype 
2018-09-30 23:00:50	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 23:02:04	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 23:02:53	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-09-30 23:04:26	<--	mandeep (mandeep@moz-lirqek.dyn.columbia.edu) has quit (Ping timeout: 121 seconds)
2018-09-30 23:04:41	-->	mandeep (mandeep@moz-2bq8ic.us.northamericancoax.com) has joined #rust-beginners
2018-09-30 23:06:58	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 23:07:32	<--	svanheulen (svanheulen@moz-3a3.fsj.58.209.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-30 23:08:39	<--	Dariost (Dariost@moz-imi.plf.48.151.IP) has quit (Client exited)
2018-09-30 23:09:25	-->	yjv (yjv@moz-fi9ofb.fios.verizon.net) has joined #rust-beginners
2018-09-30 23:10:02	-->	yjv_ (yjv@moz-fi9ofb.fios.verizon.net) has joined #rust-beginners
2018-09-30 23:10:03	<--	yjv (yjv@moz-fi9ofb.fios.verizon.net) has quit (Connection closed)
2018-09-30 23:10:13	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-09-30 23:10:58	kallisti5	q: I need to sort an array by two fields instead of one.
2018-09-30 23:11:06	kallisti5	currently I sort via:
2018-09-30 23:11:10	kallisti5	epo_inventory.sort_by(|a, b| b.hrev.cmp(&a.hrev));
2018-09-30 23:11:11	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 23:11:29	kallisti5	hrev is an 32.  I have an additional secondary field I need to sort by... any ideas?
2018-09-30 23:11:35	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-09-30 23:11:37	kallisti5	guessing I need to sort_by in by sort_by?
2018-09-30 23:14:39	-->	Arcaelyx (Arcaelyx@moz-rmfk49.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-09-30 23:16:06	-->	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has joined #rust-beginners
2018-09-30 23:16:07	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 23:16:14	<--	insidious (insidious@moz-ccm.hfr.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-09-30 23:16:38	<--	mellowmaroon (mellowmaroo@moz-qrk6dg.va.comcast.net) has quit (The TLS connection was non-properly terminated.)
2018-09-30 23:17:01	-->	bletch (Mibbit@moz-o23mjh.cable.virginm.net) has joined #rust-beginners
2018-09-30 23:17:12	-->	svanheulen (svanheulen@moz-3a3.fsj.58.209.IP) has joined #rust-beginners
2018-09-30 23:17:14	<--	orph (orph@moz-u7jk9p.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-09-30 23:17:34	<--	bletch (Mibbit@moz-o23mjh.cable.virginm.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-09-30 23:17:48	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-09-30 23:18:54	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-09-30 23:18:56	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-09-30 23:20:53	<--	svanheulen (svanheulen@moz-3a3.fsj.58.209.IP) has left #rust-beginners ("WeeChat 2.2")
2018-09-30 23:23:33	cja	I'm looking at https://github.com/mehcode/config-rs/blob/master/examples/hierarchical-env/src/settings.rs. Does this create a config object, then at the end attempt to convert it to a Settings struct? 
2018-09-30 23:24:51	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 23:26:33	<--	U007D (U007D@moz-jc56tv.wa.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 23:26:42	-->	U007D (U007D@moz-a36.9b9.245.162.IP) has joined #rust-beginners
2018-09-30 23:27:15	stpyramids	kallisti5: use sort_by_key and return a tuple
2018-09-30 23:27:31	dpc1	cja: yep
2018-09-30 23:27:42	-->	Guest26 (Guest26@moz-i2j9rj.sndgca.sbcglobal.net) has joined #rust-beginners
2018-09-30 23:28:02	Guest26	hello
2018-09-30 23:28:03	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-09-30 23:28:15	dpc1	hi Guest26
2018-09-30 23:28:20	Guest26	I have a question regarding reserved keywords
2018-09-30 23:28:25	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-09-30 23:28:26	Guest26	i am using the combine parsing library
2018-09-30 23:28:36	Guest26	and they have a function called try
2018-09-30 23:28:50	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-09-30 23:28:53	Guest26	the compiler, understandably, doesnt let me use it as it is a reserved keyword
2018-09-30 23:28:56	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 23:29:34	Guest26	https://docs.rs/combine/3.5.2/combine/fn.try.html
2018-09-30 23:29:50	Guest26	I get the following tests 
2018-09-30 23:29:53	Guest26	i mean errors
2018-09-30 23:29:54	Guest26	   --> parser/src/parsing/message/camx_parser.rs:335:13    |335 |             try(pstr("A_X")).map(|_| 5),    |             ^^^ expected expression
2018-09-30 23:30:09	-->	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has joined #rust-beginners
2018-09-30 23:30:20	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 23:30:39	dpc1	!paste
2018-09-30 23:30:39	+rustbot	Paste code at https://play.rust-lang.org/ and click "Share" or paste large text at https://paste.rs/
2018-09-30 23:32:05	Arnavion	Guest26: If you use nightly and really want to call it `try`, you can use a raw ident   r#try
2018-09-30 23:32:42	Arnavion	Guest26: Though probably it's best to file an issue on the crate to ask them to rename it
2018-09-30 23:32:53	dpc1	Arnavion: i think the problem is the crate naming some variable try instead of him
2018-09-30 23:33:14	Guest26	ya
2018-09-30 23:33:16	Arnavion	Yes, hence my second line.
2018-09-30 23:33:29	Guest26	oh i see
2018-09-30 23:34:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 23:34:29	Guest26	thanks :)
2018-09-30 23:34:32	Arnavion	But hmm
2018-09-30 23:34:38	Guest26	what does the r# actually do?
2018-09-30 23:34:52	Arnavion	IIRC try was reserved long ago and nothing changed re: allowing it for user-defined idents
2018-09-30 23:35:05	Arnavion	eval: let try = 5;
2018-09-30 23:35:08	--	Notice(eval): ()
2018-09-30 23:35:21	Arnavion	eval: fn try() { } try();
2018-09-30 23:35:23	--	Notice(eval): ()
2018-09-30 23:35:35	Arnavion	Are you sure your problem is that try is a keyword?
2018-09-30 23:35:35	kimundi	Guest26: Its syntax for a identifier that may have the same name as a keyword
2018-09-30 23:35:49	dpc1	its more for raw strings
2018-09-30 23:36:01	kimundi	dpc1: Also for idents
2018-09-30 23:36:06	dpc1	where in reserved keywords is one of the usecase
2018-09-30 23:36:18	<--	mrizzo (mrizzo@moz-h42sie.cust.swisscom.ch) has quit (Ping timeout: 121 seconds)
2018-09-30 23:36:36	Guest26	yea i thought that if try is defined as a function, the function resolution mechanism wouldve seen that i was trying to go for a function not the keyword
2018-09-30 23:36:38	dpc1	yeah i meant anything that needs a raw string including identifiers and strings
2018-09-30 23:36:46	Guest26	but that works thanks 
2018-09-30 23:36:47	<--	ct16k (ryan@moz-5f0.el6.96.78.IP) has quit (Quit: What does this button do?)
2018-09-30 23:36:55	kimundi	dpc1: a identifier is not a string though
2018-09-30 23:37:00	dpc1	uhmm
2018-09-30 23:37:02	dpc1	fair enough
2018-09-30 23:37:47	Arnavion	Guest26: Again, why do you think it's because it's also a keyword? The compiler allows a function named try just fine, as I showed above
2018-09-30 23:38:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 23:38:48	Guest26	because of this error
2018-09-30 23:38:52	Guest26	   --> parser/src/parsing/message/camx_parser.rs:335:13    |335 |             try(pstr("A_X")).map(|_| 5),    |             ^^^ expected expression
2018-09-30 23:39:38	Arnavion	eval: fn try(_: i32) { } try(5);
2018-09-30 23:39:40	Guest26	https://paste.rs/wzR
2018-09-30 23:39:41	--	Notice(eval): ()
2018-09-30 23:39:57	Arnavion	Show your whole code
2018-09-30 23:40:36	dpc1	it will error only if you or the crate is compiled with 2018 edition
2018-09-30 23:40:50	Guest26	https://gist.github.com/rust-play/77e0aea6d4a500a272940e3903d0dd9b
2018-09-30 23:40:59	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 23:40:59	Arnavion	Yeah, I was going to ask if you were using 2018
2018-09-30 23:41:09	<--	yjv_ (yjv@moz-fi9ofb.fios.verizon.net) has quit (Connection closed)
2018-09-30 23:41:23	Arnavion	If you are, then yes use r#try
2018-09-30 23:41:38	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-09-30 23:41:54	Guest26	im on nightly
2018-09-30 23:41:54	Guest26	1.30
2018-09-30 23:41:59	-->	ct16k (ryan@moz-5f0.el6.96.78.IP) has joined #rust-beginners
2018-09-30 23:42:00	Guest26	i thought 2018 wouldnt kick in till 1.31
2018-09-30 23:42:23	Arnavion	You opt in to it in your Cargo.toml
2018-09-30 23:43:10	Guest26	oh i did opt in 
2018-09-30 23:43:14	dpc1	:)
2018-09-30 23:43:17	Guest26	lol, thank you :)  
2018-09-30 23:43:37	Guest26	why would the language let keywords be used by libraries though
2018-09-30 23:43:41	Guest26	that sounds.... a bit odd
2018-09-30 23:43:49	Arnavion	Because it wasn't always a keyword
2018-09-30 23:44:05	Arnavion	And thus the new edition is the only way to make such a backwards-incompatible change
2018-09-30 23:44:13	dpc1	because adding a reserved word is a breaking change 
2018-09-30 23:44:53	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-09-30 23:45:08	Guest26	that makes sense
2018-09-30 23:45:16	Guest26	i come from a cpp background
2018-09-30 23:45:34	Arnavion	(Another example is async which affects libraries that named their submodules that, like reqwest)
2018-09-30 23:45:34	Guest26	where backwards compatibility is holding the language so much, i like this approach 
2018-09-30 23:45:40	dpc1	editions are the only way to introduce new breaking changes. and since they are opt-in you know for sure your old code will never fail
2018-09-30 23:45:56	Guest26	makes sense!
2018-09-30 23:46:01	dpc1	Guest26: cpp does have versions right? like cpp14 or something?
2018-09-30 23:46:12	dpc1	idk what you call 'em perhaps editions or something
2018-09-30 23:46:14	Arnavion	They're not like editions. They only add and deprecate
2018-09-30 23:46:19	dpc1	okay
2018-09-30 23:46:25	dpc1	are they BC?
2018-09-30 23:46:35	Arnavion	Yes, they only add and deprecate
2018-09-30 23:46:40	dpc1	okay :D
2018-09-30 23:46:41	Arnavion	... except for rare things like trigraphs which got removed because they were evil
2018-09-30 23:48:04	Guest26	what are trigraphs/
2018-09-30 23:48:07	Guest26	(we never speak of them)
2018-09-30 23:48:12	dpc1	haha
2018-09-30 23:49:40	Arnavion	Oh come to think of it, the tagged literals thing also was backwards-incompatible since it overrides macros
2018-09-30 23:50:07	Arnavion	like foo"bar" would originally expand the macro named foo, but now it would be parsed as a tag
2018-09-30 23:51:02	Guest26	i dont know the state of the preprocessor
2018-09-30 23:51:11	kimundi	A special property of editions is that they are both forward and backward compatible as far as linking library together is concerned
2018-09-30 23:51:15	Guest26	if a breaking change to it is considered a breaking change to the lang
2018-09-30 23:51:28	kimundi	you can mix and match 2015 and 2018 edition library arbitrarily
2018-09-30 23:52:28	Arnavion	Guest26: The preprocessor is covered by the same standard
2018-09-30 23:52:48	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-09-30 23:53:15	Guest26	oh 
2018-09-30 23:53:27	Guest26	to hell with the preprocessor tbh 
2018-09-30 23:53:43	Guest26	it has been more harmful than useful to me
2018-09-30 23:53:54	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-09-30 23:55:39	Guest26	anyways
2018-09-30 23:55:42	Guest26	thanks a lot :)
2018-09-30 23:55:48	Guest26	this community is awesome
2018-09-30 23:55:58	Guest26	and you guys are one of the main reasons
2018-09-30 23:56:07	Guest26	happy sunday/monday to yall
2018-09-30 23:56:09	<--	Guest26 (Guest26@moz-i2j9rj.sndgca.sbcglobal.net) has quit (Connection closed)
2018-09-30 23:56:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-09-30 23:58:01	-->	mrizzo (mrizzo@moz-h42sie.cust.swisscom.ch) has joined #rust-beginners
2018-09-30 23:59:29	<--	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has quit (Quit: ZNC 1.6.5+deb2build2 - http://znc.in)
2018-09-30 23:59:31	<--	ghost64 (ghost64@moz-6m2pkb.xyz) has quit (Quit: See you!)
2018-09-30 23:59:41	-->	danieljabailey (danieljabai@moz-37u8t7.cable.virginm.net) has joined #rust-beginners
2018-09-30 23:59:52	-->	ghost64 (ghost64@moz-6m2pkb.xyz) has joined #rust-beginners
2018-10-01 00:01:54	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 00:02:15	-->	kimundi- (kimundi@moz-1bjqra.versanet.de) has joined #rust-beginners
2018-10-01 00:04:11	<--	kimundi (kimundi@moz-bv4.4n9.116.92.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:04:11	--	kimundi- is now known as kimundi
2018-10-01 00:04:21	dpc1	:)
2018-10-01 00:04:43	Fr0stBit	Hi guys
2018-10-01 00:05:19	Fr0stBit	How can i take a mut ptr from a String that was created using String::with_capacity()?
2018-10-01 00:05:43	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 00:05:56	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:06:35	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-10-01 00:07:23	-->	hyp3rbor3ax (hyp3rbor3ax@moz-fgat30.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-01 00:08:43	<--	grdn (garden@moz-hre5bs.bb.dnainternet.fi) has quit (Connection closed)
2018-10-01 00:10:15	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:10:41	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 00:11:46	-->	Arcaelyx_ (Arcaelyx@moz-veo2ik.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-10-01 00:12:17	durka42	Fr0stBit: &mut s[a..b] same as any String
2018-10-01 00:12:26	durka42	you can't do much with &mut str in rust though...
2018-10-01 00:14:47	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:15:01	Fr0stBit	durka42: I want it as *mut u8 type
2018-10-01 00:15:10	<--	Arcaelyx (Arcaelyx@moz-rmfk49.77ht.vv5c.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:15:13	Fr0stBit	To pass it into a C api
2018-10-01 00:15:37	--	U007D is now known as U007D_afk
2018-10-01 00:16:18	kimundi	.as_bytes_mut().as_mut_ptr() would work
2018-10-01 00:17:09	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-10-01 00:22:14	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-10-01 00:23:35	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-10-01 00:23:44	<--	mrizzo (mrizzo@moz-h42sie.cust.swisscom.ch) has quit (Client exited)
2018-10-01 00:23:55	-->	mrizzo (mrizzo@moz-h42sie.cust.swisscom.ch) has joined #rust-beginners
2018-10-01 00:24:08	-->	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has joined #rust-beginners
2018-10-01 00:28:30	-->	martin2 (martin@moz-2q5330.anteldata.net.uy) has joined #rust-beginners
2018-10-01 00:28:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 00:33:03	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:33:22	-->	grdn (garden@moz-hre5bs.bb.dnainternet.fi) has joined #rust-beginners
2018-10-01 00:34:45	-->	mib_juxb2n (Mibbit@moz-8sm.qkk.178.205.IP) has joined #rust-beginners
2018-10-01 00:34:59	mib_juxb2n	Hello
2018-10-01 00:38:09	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 00:38:15	-->	cdr255 (cdr255@moz-1f47ld.5rhd.p3se.0547.2601.IP) has joined #rust-beginners
2018-10-01 00:42:14	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 00:42:18	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:44:12	tdeficit	are there any books that cover like how to write an application in rust? stuff like idiomatic config, logging, dep injection, testing, etc?
2018-10-01 00:44:24	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-10-01 00:45:33	-->	dethos (dethos@moz-joj.gtm.138.213.IP) has joined #rust-beginners
2018-10-01 00:47:08	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 00:47:25	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 00:49:39	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 00:51:10	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 00:51:20	-->	insidious (insidious@moz-ccm.hfr.198.134.IP) has joined #rust-beginners
2018-10-01 00:51:27	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:52:40	mib_juxb2n	Is this the official rust IRC chat?
2018-10-01 00:53:17	kimundi	yes, if you mean the programming language :)
2018-10-01 00:53:26	Fr0stBit	kimundi: thanks!
2018-10-01 00:53:32	mib_juxb2n	user! kevin
2018-10-01 00:53:58	--	mib_juxb2n is now known as kevin2z
2018-10-01 00:54:05	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-10-01 00:54:47	kevin2z	I have a mutable Duration object, I want to assign a new Duration to this, what happens to the original object? Is it freed?
2018-10-01 00:55:02	kevin2z	variable I mean
2018-10-01 00:55:04	kimundi	kevin2z: it is dropped
2018-10-01 00:55:17	kevin2z	Dropped as in deleted?
2018-10-01 00:55:22	kevin2z	Is this legal rust code?
2018-10-01 00:55:33	kimundi	"freed" implies a memory deallocation, but afaik Duration is just a plain struct without heap allocation
2018-10-01 00:55:47	kimundi	yes
2018-10-01 00:55:53	kevin2z	Ah ok so it doesn't matter then
2018-10-01 00:56:00	kevin2z	What about if it it was a complex structure?
2018-10-01 00:56:02	kimundi	you can just reassign any varaible in Rust, nothing bad will happen
2018-10-01 00:56:04	kevin2z	Does it get freed?
2018-10-01 00:56:31	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 00:56:52	kimundi	kevin2z: It does not matter how complex the struct is: If you reassign a variable, the value that was there before gets dropped, which involves calling its destrcutor if it has one
2018-10-01 00:57:09	-->	jperras (jperras@moz-rip8ur.55ck.80nu.b100.2605.IP) has joined #rust-beginners
2018-10-01 00:57:15	kevin2z	What if it was allocated on the heap, same thing?
2018-10-01 00:57:30	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-10-01 00:57:37	kimundi	So for example, if your variable is a Vec<u8> to a heap allocation of a few bytes, then reassigning the variable would call the destructor of the vector, which will ensure the memroy is freed correctly
2018-10-01 00:58:25	kimundi	kevin2z: Same things - also note that there is no "allocated on the heap" for a plain value - if you have a heap allocation, its managed by a type around it that correctly manages it
2018-10-01 00:58:28	kevin2z	Ah ok that's what I wanted to happen, but I was making sure I didn't have to call a delete method. But I guess it doesn't matter anyway since Duration is static
2018-10-01 00:58:55	kimundi	kevin2z: you generally don't have to call explicit delete methods anywhere in Rust
2018-10-01 00:59:36	<--	dethos (dethos@moz-joj.gtm.138.213.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 00:59:37	kevin2z	OK this makes sense now
2018-10-01 00:59:50	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 01:00:27	<--	udoprog (quassel@moz-rgtfqs.bc.googleusercontent.com) has quit (Connection closed)
2018-10-01 01:00:30	-->	udoprog (quassel@moz-rgtfqs.bc.googleusercontent.com) has joined #rust-beginners
2018-10-01 01:00:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:00:42	<--	NET||abuse (quassel@moz-cslt9q.labdigital.co.uk) has quit (Connection closed)
2018-10-01 01:00:44	-->	NET||abuse (quassel@moz-cslt9q.labdigital.co.uk) has joined #rust-beginners
2018-10-01 01:01:30	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 01:02:26	kevin2z	tdeficit, there's the official Rust book. Not sure it covers a full application though. But it does have examples
2018-10-01 01:02:58	tdeficit	i've worked through that book, i was hoping there was an obvious next step ;)
2018-10-01 01:03:34	kevin2z	I haven't read it myself but I've heard of the book Programming Rust (oreilly)
2018-10-01 01:04:22	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:04:27	<--	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has quit (Client exited)
2018-10-01 01:04:47	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-01 01:05:36	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 01:06:43	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 01:09:38	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:10:24	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-10-01 01:10:26	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-10-01 01:10:56	<--	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 01:11:25	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-10-01 01:14:43	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 01:15:17	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 01:15:24	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-10-01 01:18:48	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:22:42	<--	gordon (gordon@moz-rj5gn0.net.pl) has left #rust-beginners ("WeeChat 2.1")
2018-10-01 01:24:25	-->	enterprisey (enterprisey@moz-pnc2iu.cit.cornell.edu) has joined #rust-beginners
2018-10-01 01:25:08	<--	liquidnight (marcus@moz-0689gr.7bgo.ug7g.0c23.2a01.IP) has quit (Connection closed)
2018-10-01 01:27:03	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-10-01 01:32:55	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 01:33:33	<--	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has quit (Quit: zachahn)
2018-10-01 01:33:41	-->	zachahn (zachahn@moz-tkfnb7.xen.prgmr.com) has joined #rust-beginners
2018-10-01 01:35:18	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-10-01 01:36:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:37:20	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:42:01	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 01:46:04	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:47:53	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 01:48:59	<--	GrimSleepless (GrimSleeple@moz-ap2a4e.dsl.bell.ca) has quit (Connection closed)
2018-10-01 01:50:19	<--	mandeep (mandeep@moz-2bq8ic.us.northamericancoax.com) has quit (Quit: Leaving)
2018-10-01 01:51:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 01:51:32	<--	martin2 (martin@moz-2q5330.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-10-01 01:52:55	-->	hyp3rbor3ax_ (hyp3rbor3ax@moz-obh0rb.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-01 01:53:55	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 01:53:57	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 01:54:32	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-10-01 01:55:10	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:55:23	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 01:56:08	<--	hyp3rbor3ax (hyp3rbor3ax@moz-fgat30.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-10-01 01:57:16	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-10-01 01:57:22	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 01:58:29	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 01:59:01	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 01:59:53	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 02:02:45	-->	jsatk (jesseatkins@moz-a3ci5q.static.sonic.net) has joined #rust-beginners
2018-10-01 02:03:11	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 02:03:11	-->	martin2 (martin@moz-2q5330.anteldata.net.uy) has joined #rust-beginners
2018-10-01 02:04:16	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:06:55	<--	jsatk (jesseatkins@moz-a3ci5q.static.sonic.net) has quit (Ping timeout: 121 seconds)
2018-10-01 02:08:50	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-10-01 02:08:53	-->	BearOfJade1 (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-10-01 02:09:41	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:11:35	-->	gompass (Mibbit@moz-8r6u10.ph.cox.net) has joined #rust-beginners
2018-10-01 02:12:52	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Ping timeout: 121 seconds)
2018-10-01 02:12:52	--	BearOfJade1 is now known as BearOfJade
2018-10-01 02:15:26	<--	gagbo (gagbo@moz-a9bf5n.abo.bbox.fr) has quit (Quit: I'm out !)
2018-10-01 02:16:06	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-10-01 02:17:43	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 02:17:45	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 02:18:32	-->	netrino` (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-10-01 02:19:10	<--	gompass (Mibbit@moz-8r6u10.ph.cox.net) has left #rust-beginners
2018-10-01 02:19:13	<--	netrino (netrino@moz-mb8.hu7.69.83.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:19:23	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-10-01 02:20:51	<--	netrino` (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 02:21:50	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:22:15	-->	oms-hh (oms@moz-baj45g.dyn.telefonica.de) has joined #rust-beginners
2018-10-01 02:25:36	<--	oms (oms@moz-1lh7j4.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-10-01 02:25:59	-->	KiChjang (KiChjang@moz-mau66b.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-10-01 02:26:01	<--	ryfbhkuh (hzdeppax@moz-os1f51.1uqv.7nqa.0642.2601.IP) has quit (Quit: experimentum periculosum)
2018-10-01 02:26:14	-->	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has joined #rust-beginners
2018-10-01 02:27:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 02:27:54	-->	zipkr (zipkr@moz-8ochun.ca.comcast.net) has joined #rust-beginners
2018-10-01 02:28:10	zipkr	ls
2018-10-01 02:28:17	<--	zipkr (zipkr@moz-8ochun.ca.comcast.net) has quit (Quit: leaving)
2018-10-01 02:28:35	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-10-01 02:31:23	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:32:28	<--	jazzpi (jazzpi@moz-201voq.mic3.r4i0.4000.2a03.IP) has quit (Quit: ZNC - http://znc.in)
2018-10-01 02:33:10	-->	cp (cp@moz-fresc2.asahinet.com) has joined #rust-beginners
2018-10-01 02:33:48	<--	oms-hh (oms@moz-baj45g.dyn.telefonica.de) has quit (Quit: Leaving)
2018-10-01 02:33:55	-->	alexeyzab (alexeyzab@moz-jfo142.res.rr.com) has joined #rust-beginners
2018-10-01 02:34:01	-->	jazzpi (jazzpi@moz-i6l8pk.space) has joined #rust-beginners
2018-10-01 02:34:33	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-10-01 02:34:52	<--	weeji (jihi@moz-dhhp3e.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-10-01 02:35:46	-->	ryfbhkuh (hzdeppax@moz-kbdijo.1uqv.7nqa.0642.2601.IP) has joined #rust-beginners
2018-10-01 02:35:47	-->	starblue1 (juergen@moz-h1f7ef.pools.vodafone-ip.de) has joined #rust-beginners
2018-10-01 02:36:37	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 02:36:54	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 02:37:07	-->	montezuma (Mibbit@moz-69skfs.dynamic.fusionbroadband.com) has joined #rust-beginners
2018-10-01 02:37:13	<--	martin2 (martin@moz-2q5330.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-10-01 02:37:17	<--	starblue (juergen@moz-7958sa.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-10-01 02:37:50	<--	montezuma (Mibbit@moz-69skfs.dynamic.fusionbroadband.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 02:38:35	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-10-01 02:39:51	alexeyzab	I've been away from Rust for a while, what's the go-to error handling library these days? I recall `error-chain` being popular, but now I've stumbled upon `failure` and got curious which one people use.
2018-10-01 02:40:22	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-10-01 02:40:40	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:45:23	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 02:46:11	panicbit	alexeyzab: it's failure
2018-10-01 02:46:26	<--	jm9k (email@moz-ckj4do.aflg.tku2.0204.2601.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:46:48	<--	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has quit (Quit: WeeChat 2.2)
2018-10-01 02:47:34	alexeyzab	panicbit: cool, thank you!
2018-10-01 02:47:45	-->	weeji (jihi@moz-sv4ut7.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-01 02:48:06	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 02:48:22	panicbit	alexeyzab: But using error-chain isn't bad per se
2018-10-01 02:49:27	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-10-01 02:49:46	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:50:53	alexeyzab	panicbit: Gotcha, I've only used it briefly before, going to try out failure this time around.
2018-10-01 02:52:16	panicbit	alexeyzab: I'd recommend skimming the failure book, as it describes 3 different error type designs
2018-10-01 02:52:24	panicbit	!failure book
2018-10-01 02:52:25	+rustbot	https://boats.gitlab.io/failure/
2018-10-01 02:52:38	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 02:53:01	panicbit	(section 3, "Patterns & Guidance")
2018-10-01 02:53:41	alexeyzab	That looks super helpful, thanks again!
2018-10-01 02:55:15	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-10-01 02:56:00	-->	asyncsec (asyncsec@moz-i584m8.dyn6.twc.com) has joined #rust-beginners
2018-10-01 03:01:48	-->	martin2 (martin@moz-2q5330.anteldata.net.uy) has joined #rust-beginners
2018-10-01 03:03:16	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 03:03:42	<--	enterprisey (enterprisey@moz-pnc2iu.cit.cornell.edu) has quit (Connection closed)
2018-10-01 03:04:14	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-10-01 03:05:31	<--	asyncsec (asyncsec@moz-i584m8.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 03:07:00	-->	Mateon2 (Thunderbird@moz-fe12ki.supernova.orange.pl) has joined #rust-beginners
2018-10-01 03:07:21	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 03:07:31	panicbit	:)
2018-10-01 03:07:32	<--	Mateon1 (Thunderbird@moz-oou526.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-10-01 03:07:33	--	Mateon2 is now known as Mateon1
2018-10-01 03:09:21	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 03:09:51	<--	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 03:10:00	-->	neal (neal@moz-c4h54j.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-01 03:12:52	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 03:12:57	<--	neal_ (neal@moz-f066es.dip0.t-ipconnect.de) has quit (Ping timeout: 121 seconds)
2018-10-01 03:13:38	-->	gregg (greg@moz-00mjdg.gnumpf.tk) has joined #rust-beginners
2018-10-01 03:14:29	-->	asyncsec (asyncsec@moz-3ev55c.dyn6.twc.com) has joined #rust-beginners
2018-10-01 03:15:36	<--	asyncsec (asyncsec@moz-3ev55c.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 03:16:25	-->	g0w (uid26336@moz-jgqv5l.stonehaven.irccloud.com) has joined #rust-beginners
2018-10-01 03:17:00	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 03:19:48	-->	morton (Mibbit@moz-rgl.vqu.120.119.IP) has joined #rust-beginners
2018-10-01 03:19:56	<--	morton (Mibbit@moz-rgl.vqu.120.119.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 03:20:45	<--	AtumT (IRC@moz-hdt.j1m.95.179.IP) has quit (Client exited)
2018-10-01 03:22:04	<--	BDH_ (BDH@moz-k5a.s01.91.192.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 03:22:50	<--	martin2 (martin@moz-2q5330.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-10-01 03:24:57	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-10-01 03:25:53	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 03:26:01	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 03:26:29	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 03:26:42	-->	BDH (BDH@moz-n77d5t.gc2c.86sc.0104.2620.IP) has joined #rust-beginners
2018-10-01 03:28:39	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 03:31:14	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 03:31:31	-->	KiChjang_ (KiChjang@moz-pjl7rg.urm1.6cdi.0646.2601.IP) has joined #rust-beginners
2018-10-01 03:32:26	<--	jperras (jperras@moz-rip8ur.55ck.80nu.b100.2605.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 03:32:41	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 03:34:01	<--	arctodus (uid322408@moz-hup6d3.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 03:34:24	<--	KiChjang (KiChjang@moz-mau66b.urm1.6cdi.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 03:35:20	kevin2z	So rust doesn't let you make one field mutable and the other mutable in a struct.. what is the best way to do this?
2018-10-01 03:35:23	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 03:36:06	kevin2z	Just make them both mutable and hope the 'immutable' one does not get changed?
2018-10-01 03:36:46	stephaneyfx	kevin2z: Make the "immutable" one private?
2018-10-01 03:38:28	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 03:39:08	kevin2z	Ah yeah that makes sense
2018-10-01 03:40:28	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 03:40:28	-->	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has joined #rust-beginners
2018-10-01 03:40:46	kevin2z	Another problem I'm having is that the rust crate package does not have documentation, so I have to look at the code. When I click on the 'repository' it points to github. However when I look at the code in github, it doesn't match the code in the version of my program. Where to find the exact code in my program?
2018-10-01 03:41:13	stephaneyfx	What is the name of the crate?
2018-10-01 03:41:24	kevin2z	hueclient
2018-10-01 03:41:25	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 03:41:44	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-01 03:42:02	Arnavion	https://github.com/kali/hue.rs/tree/0.3.2   is probably it
2018-10-01 03:42:13	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 03:42:55	Arnavion	(In general there's no relation between the repo and the code in the crate, so at best you have to trust git tags like this)
2018-10-01 03:43:03	stephaneyfx	kevin2z: There's this, but this is lacking :( https://docs.rs/hueclient/0.3.1/hueclient/index.html
2018-10-01 03:43:26	stephaneyfx	kevin2z: And the 0.3.2 docs failed to be generated
2018-10-01 03:44:35	kevin2z	Oh actually that one does look like it matches the one I was using, I didn't know there was git tags. But is there a way to pull up the code from cargo or something just in case the tag is mislabeled?
2018-10-01 03:44:51	Arnavion	It's ancient openssl-sys that doesn't work with the newer openssl on the docs builder machine, so it probably won't work for you either
2018-10-01 03:45:01	Arnavion	The crate contains the source
2018-10-01 03:45:18	Arnavion	Look in ~/.cargo/registry/.../$crate_name/
2018-10-01 03:45:30	kevin2z	Haha yeah I actually ended up installing an old version of the openssl to make it work
2018-10-01 03:46:40	-->	siddhartharao17 (siddharthar@moz-63nair.oqtm.17gi.0647.2601.IP) has joined #rust-beginners
2018-10-01 03:46:45	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 03:47:26	<--	siddhartharao17 (siddharthar@moz-63nair.oqtm.17gi.0647.2601.IP) has quit (Quit: Leaving...)
2018-10-01 03:47:37	kevin2z	It is there is .cargo/registry cool
2018-10-01 03:47:57	kevin2z	Thanks for the help stephaneyfx and Arnavion
2018-10-01 03:49:02	-->	martin2 (martin@moz-2q5330.anteldata.net.uy) has joined #rust-beginners
2018-10-01 03:49:12	-->	xmb35 (Mibbit@moz-qm5r6q.fuse.net) has joined #rust-beginners
2018-10-01 03:49:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 03:50:31	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 03:50:38	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-01 03:50:53	xmb35	Hello. Just discovered Rust this weekend and am working through the docs. Question: When cargo downloads a crate, how can I inspect and/or modify the source and/or license of it before trusting and using it?
2018-10-01 03:51:54	stephaneyfx	xmb35: You can clone its git repo and depend on that instead of the version on crates.io
2018-10-01 03:52:34	WindowsBunny	xmb35: You can view the source of all the downloaded crates in the cargo registry cache
2018-10-01 03:52:51	xmb35	where's the cache?
2018-10-01 03:53:03	xmb35	(on linux)
2018-10-01 03:53:18	kevin2z	That was similar to my question. If you change it from the cache and rebuild it, will it use the new source?
2018-10-01 03:53:23	WindowsBunny	$CARGO_HOME\registry\cache\github.com-1ecc6299db9ec823 is where the downloaded crates are stored
2018-10-01 03:53:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 03:53:31	WindowsBunny	kevin2z: don't do that
2018-10-01 03:53:49	WindowsBunny	and s/cache/src for where the extracted crates are stored and built from
2018-10-01 03:53:57	kevin2z	~/.cargo/registry/.../crate name
2018-10-01 03:54:09	kevin2z	WindowsBunny why not?
2018-10-01 03:54:24	WindowsBunny	kevin2z: cargo has built in ways to replace crates from crates.io with a custom version
2018-10-01 03:54:46	WindowsBunny	you should not be messing with the stuff in the cache
2018-10-01 03:55:04	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 03:55:48	xmb35	The cache contains crate files...how to crack them open?
2018-10-01 03:55:55	<--	kimundi (kimundi@moz-1bjqra.versanet.de) has quit (Ping timeout: 121 seconds)
2018-10-01 03:56:25	WindowsBunny	kevin2z: use the [patch] and [replace] stuff https://doc.rust-lang.org/cargo/reference/manifest.html#the-patch-section
2018-10-01 03:56:38	WindowsBunny	xmb35: They are normal .tar.gz archives, just with a different extension
2018-10-01 03:56:50	kevin2z	xmb35 there should be another folder there where they are unzipped for you
2018-10-01 03:57:24	-->	kimundi (kimundi@moz-nl25qt.versanet.de) has joined #rust-beginners
2018-10-01 03:57:51	kevin2z	WindowsBunny oh this is cool, the patch thing
2018-10-01 03:58:13	<--	backnforth (backnforth@moz-mutf58.nb.bellaliant.net) has quit (Ping timeout: 121 seconds)
2018-10-01 03:58:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 03:58:47	Arnavion	kevin2z: You can change stuff in ~/.cargo/registry for quick-hacking stuff, but cargo won't rebuild it automatically because it doesn't realize you changed it. You have to delete the build output from your crate's target dir for that crate first
2018-10-01 04:00:01	xmb35	cool, thanks. I found them in the registry/src dir instead of registry/cache
2018-10-01 04:00:48	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-10-01 04:00:59	WindowsBunny	But it's a much better idea to just use [patch] and [replace]
2018-10-01 04:01:28	-->	clarkenciel (danny@moz-antpao.res.rr.com) has joined #rust-beginners
2018-10-01 04:01:41	xmb35	wondering why cargo felt the need to get fuscia-zircon and winapi crates. Is that some kind of default behavior? No idea why I'd need Windows stuff.
2018-10-01 04:01:49	Arnavion	(By "quick-hacking stuff" I'm refering to "This crate is broken for me but there's a one-line PR out for it. Let's test if the PR fixes it for me." kind of deals. Definitely not something permanent or scalable)
2018-10-01 04:02:35	<--	martin2 (martin@moz-2q5330.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-10-01 04:02:43	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:03:02	-->	subhojit777 (subhojit777@moz-m9h.503.163.122.IP) has joined #rust-beginners
2018-10-01 04:05:37	WindowsBunny	xmb35: Some cargo commands, like clippy, will pull in dependencies that are otherwise platform specific
2018-10-01 04:07:05	WindowsBunny	xmb35: but at worst it's just a bit of wasted bandwidth and storage
2018-10-01 04:07:33	WindowsBunny	https://github.com/rust-lang-nursery/rust-clippy/issues/2915
2018-10-01 04:12:24	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 04:12:51	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-10-01 04:13:32	xmb35	somehow those crates got added to my app
2018-10-01 04:14:06	xmb35	ok now, I just blew away the whole .cargo dir and started over
2018-10-01 04:15:35	xmb35	I have a lot to learn, but I like what I see so far...looks like some Haskell goodness but without the whole giant runtime/dynamic linking mess that I didn't like there.
2018-10-01 04:16:44	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 04:16:55	xmb35	What are some good editor/IDE options for linux? (only open source - no Sublime)
2018-10-01 04:19:03	fowlduck	vscode is popular for rust
2018-10-01 04:19:27	fowlduck	and it runs on linux
2018-10-01 04:19:42	fowlduck	and it's open source
2018-10-01 04:20:07	xmb35	ugh, no thanks
2018-10-01 04:20:19	WindowsBunny	xmb35: Even if they do get downloaded, they're not gonna be compiled, and if they are compiled they'll be completely empty and not linked in anyway
2018-10-01 04:20:54	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:23:13	stpyramids	I tried a lot of different editors with Rust Language Server support and the vscode support was by far the best (and I'm otherwise a vim user)
2018-10-01 04:23:27	stpyramids	because the reference implementation for RLS is in vscode
2018-10-01 04:24:21	fowlduck	I use emacs, myself, but vscode's RLS integration is *really* nice
2018-10-01 04:24:25	WindowsBunny	I wish RustyCode would be worked on again :(
2018-10-01 04:24:35	stpyramids	I'll admit I didn't try atom because I didn't see the point in trying an editor so similar to vscode
2018-10-01 04:24:59	WindowsBunny	atom is definitely inferior to VS Code
2018-10-01 04:25:30	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 04:25:50	WindowsBunny	they're both owned by Microsoft, but Microsoft actually cares about VS Code, while Atom is neglected
2018-10-01 04:27:04	GreenJello	WindowsBunny, atom was made by github
2018-10-01 04:27:19	stpyramids	which is owned by Microsoft now
2018-10-01 04:27:23	GreenJello	ah
2018-10-01 04:27:43	xmb35	vscode debugging uses Chrome...I don't have Chrome (not open source) and have no interest in Chromium, even if it would work.
2018-10-01 04:27:45	stpyramids	(atom was on the back burner well before then, imo)
2018-10-01 04:28:30	stpyramids	doesn't it use Chrome for JS debugging, not debugging in general?
2018-10-01 04:28:44	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 04:28:49	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-01 04:28:59	xmb35	Not particularly interested in Electron based apps anyway. I haven't dug into it too deeply to find out all the actual dependencies, but I have a feeling it's too deep for my taste.
2018-10-01 04:29:37	xmb35	I run a pretty minimal system and like to minimize dependencies of the stuff I use.
2018-10-01 04:29:52	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:29:58	<--	hyp3rbor3ax_ (hyp3rbor3ax@moz-obh0rb.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-10-01 04:30:56	kevin2z	xmb35 I've used geany (pure gtk) before but it doesn't have as many features as sublime or notepad++
2018-10-01 04:31:29	fowlduck	you'll probably have the best luck with vim or emacs, given those constraints
2018-10-01 04:31:48	stpyramids	well, there's reasonably functional vim8/nvim support, and there's experimental emacs support, and that's pretty much all I was able to find
2018-10-01 04:31:52	xmb35	I have used geany before. vim > emacs   ;)
2018-10-01 04:32:08	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 04:32:17	fowlduck	I'm using spacemacs, best of both worlds
2018-10-01 04:32:25	xmb35	just wondering if there was something more rust-centric.  
2018-10-01 04:32:28	fowlduck	(uses evil, so vim key bindings)
2018-10-01 04:32:32	kevin2z	I'd like to learn vim, but it doesn't have good support for dvorak keyboard
2018-10-01 04:32:47	-->	martin2 (martin@moz-2q5330.anteldata.net.uy) has joined #rust-beginners
2018-10-01 04:33:34	fowlduck	there's https://intellij-rust.github.io/
2018-10-01 04:33:37	fowlduck	it's MIT
2018-10-01 04:33:50	fowlduck	but I think the editor itself isn't open source
2018-10-01 04:33:58	stpyramids	the energy is definitely toward adding support to existing editors via RLS rather than building specialized IDEs, but you never know, that might change
2018-10-01 04:35:07	<--	nj0rd (nj0rd@moz-c420mr.versanet.de) has quit (Ping timeout: 121 seconds)
2018-10-01 04:36:11	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 04:36:20	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 04:36:39	<--	alx741 (alx741@moz-613.gq3.196.181.IP) has quit (Client exited)
2018-10-01 04:37:29	xmb35	Yeah, intellij isn't open source. It's from JetBrains (same company as Resharper). They make some interesting tools, but sadly they don't seem to do open source
2018-10-01 04:38:45	xmb35	I'll probably use vim.  Emacs runs against my 'minimal' preferences.
2018-10-01 04:39:25	-->	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has joined #rust-beginners
2018-10-01 04:40:52	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:41:12	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:41:24	-->	hamsteri_ (hamsteri@moz-hs7.fvt.60.194.IP) has joined #rust-beginners
2018-10-01 04:42:10	<--	niconii (nicole@moz-ujf4sp.midco.net) has quit (Quit: leaving)
2018-10-01 04:42:20	-->	alatiera (alatiera@moz-gpqp8c.access.hol.gr) has joined #rust-beginners
2018-10-01 04:42:39	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-01 04:43:22	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 04:43:38	<--	hamsteri (hamsteri@moz-rf0.e1o.73.77.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:45:48	xmb35	thanks everyone
2018-10-01 04:45:53	<--	xmb35 (Mibbit@moz-qm5r6q.fuse.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 04:47:32	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:47:33	<--	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:47:54	-->	nj0rd (nj0rd@moz-0c17gl.dsl.tropolys.de) has joined #rust-beginners
2018-10-01 04:48:00	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-10-01 04:48:09	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-10-01 04:48:14	--	nj0rd is now known as Guest32523
2018-10-01 04:48:34	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-10-01 04:50:01	-->	sp1ff (sp1ff@moz-aac03k.ca.comcast.net) has joined #rust-beginners
2018-10-01 04:51:42	<--	sp1ff (sp1ff@moz-aac03k.ca.comcast.net) has quit (Quit: WeeChat 1.4)
2018-10-01 04:52:07	-->	sp1ff (sp1ff@moz-aac03k.ca.comcast.net) has joined #rust-beginners
2018-10-01 04:52:12	-->	quibbit (Mibbit@moz-sgc.7ss.110.69.IP) has joined #rust-beginners
2018-10-01 04:52:37	quibbit	Hi. Are there any cargo tools to do some build time code generation
2018-10-01 04:52:37	quibbit	?
2018-10-01 04:52:56	quibbit	I'd simply like to inject some code before packaging my crate.
2018-10-01 04:52:58	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 04:53:13	quibbit	But without actually changing my project.
2018-10-01 04:53:39	durka42	quibbit: https://doc.rust-lang.org/cargo/reference/build-scripts.html
2018-10-01 04:53:54	-->	adrianbrink (sid204313@moz-gao0gj.hathersage.irccloud.com) has joined #rust-beginners
2018-10-01 04:54:12	quibbit	durka42: build script won't cut it: I don't want this code to run when you're building my crate.
2018-10-01 04:54:35	quibbit	I bascially want a build script that get's only run on packaging.
2018-10-01 04:54:45	quibbit	A package.rs for Cargo, if you may.
2018-10-01 04:54:47	<--	clarkenciel (danny@moz-antpao.res.rr.com) has quit (Connection closed)
2018-10-01 04:54:53	durka42	oh, I see
2018-10-01 04:54:53	<--	adrianbrink (sid204313@moz-gao0gj.hathersage.irccloud.com) has left #rust-beginners ("")
2018-10-01 04:54:56	durka42	there's nothing built in for that
2018-10-01 04:55:04	durka42	maybe there's a third party command
2018-10-01 04:55:12	quibbit	Yeah, that's what I was thinking.
2018-10-01 04:55:25	quibbit	Is there any place where Cargo commands are listed?
2018-10-01 04:55:46	<--	sp1ff (sp1ff@moz-aac03k.ca.comcast.net) has quit (Quit: WeeChat 1.4)
2018-10-01 04:55:51	fowlduck	jeeze, the jump to definition in vscode for rust is so awesome
2018-10-01 04:56:35	durka42	there's cargo-make but it's kind of a sledgehammer to drive in this nail https://github.com/sagiegurari/cargo-make
2018-10-01 04:56:52	quibbit	durka42: That's what I was thinking.
2018-10-01 04:57:03	durka42	here's the list https://crates.io/categories/development-tools::cargo-plugins
2018-10-01 04:57:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 04:57:19	quibbit	I remember some tool that was used to run procedural-macro-like things before proc-macros were a thing.
2018-10-01 04:58:07	Arnavion	Have a separate codegen crate that emits your crate
2018-10-01 04:58:08	-->	Karen (Mibbit@moz-6te.1p0.185.146.IP) has joined #rust-beginners
2018-10-01 04:58:24	Arnavion	or as much of your crate as needs to be dynamic, at any rate
2018-10-01 04:58:27	Karen	Hi
2018-10-01 04:59:01	quibbit	I was thinking about that, but I'd like to use an as-idiomatic-as-possible kind of approach here.
2018-10-01 04:59:07	quibbit	Hi.
2018-10-01 05:00:09	quibbit	The issue is that I'd like this to be easily revertible. Ideally, it would be run during cargo package, then immediately reverted.
2018-10-01 05:00:23	-->	sp1ff (sp1ff@moz-aac03k.ca.comcast.net) has joined #rust-beginners
2018-10-01 05:00:25	Arnavion	Are you doing this to write a build identifier or something
2018-10-01 05:00:44	quibbit	No, I'm generating quite a bit of code.
2018-10-01 05:00:53	quibbit	I'm trying to bootstrap a crate.
2018-10-01 05:01:00	<--	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 05:01:07	quibbit	Without having to rely on older versions of the crate.
2018-10-01 05:07:29	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-10-01 05:07:46	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 05:08:09	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 05:09:32	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 05:10:01	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 05:11:20	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 05:12:11	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 05:15:04	<--	Karen (Mibbit@moz-6te.1p0.185.146.IP) has quit (G-Lined: no spamming here)
2018-10-01 05:15:22	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 05:17:35	<--	mysteriouspants (mysteriousp@moz-36hdos.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-10-01 05:20:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 05:21:19	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-10-01 05:24:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 05:25:08	<--	quibbit (Mibbit@moz-sgc.7ss.110.69.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 05:26:12	<--	himi-cat (sjjf@moz-vdfhkl.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 05:26:36	-->	himi-cat (sjjf@moz-8e0.vj6.253.185.IP) has joined #rust-beginners
2018-10-01 05:27:01	-->	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-10-01 05:28:06	-->	eyans (a@moz-afuum6.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-10-01 05:29:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 05:29:49	<--	insidious (insidious@moz-ccm.hfr.198.134.IP) has quit (Quit: WeeChat 2.2)
2018-10-01 05:30:27	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 05:33:34	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 05:34:56	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-10-01 05:34:59	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 05:36:16	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-10-01 05:36:20	<--	g0w (uid26336@moz-jgqv5l.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 05:36:57	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 05:38:18	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 05:38:34	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 05:40:18	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-10-01 05:41:26	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 05:42:27	<--	subhojit777 (subhojit777@moz-m9h.503.163.122.IP) has quit (Quit: Leaving)
2018-10-01 05:42:33	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 05:44:33	<--	hamsteri_ (hamsteri@moz-hs7.fvt.60.194.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 05:44:58	<--	dinfuehr (dinfuehr@moz-1k723d.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-10-01 05:45:31	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-10-01 05:46:06	-->	dinfuehr (dinfuehr@moz-23i0vd.highway.telekom.at) has joined #rust-beginners
2018-10-01 05:48:25	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-10-01 05:50:15	<--	dinfuehr (dinfuehr@moz-23i0vd.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-10-01 05:51:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-01 05:51:32	<--	glguy (glguy@moz-iflv8b.o0eg.mkgl.01c0.2601.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 05:52:51	-->	lompik (lompik@moz-kdv.la5.172.163.IP) has joined #rust-beginners
2018-10-01 05:53:07	-->	dinfuehr (dinfuehr@moz-qum99q.highway.telekom.at) has joined #rust-beginners
2018-10-01 05:53:43	kevin2z	I'm having a hard time modifying the contents of a vector
2018-10-01 05:53:54	kevin2z	  I have this code let mut bulbs: Vec<Bulb> = Vec::new();
2018-10-01 05:54:19	kevin2z	I've also tried this   let mut bulbs: Vec<mut Bulb> = Vec::new();
2018-10-01 05:54:37	stephaneyfx	kevin2z: The first one is good
2018-10-01 05:55:30	kevin2z	"cannot borrow immutable borrowed content `*bulb` as mutable" is the error
2018-10-01 05:56:10	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 05:56:12	-->	glguy (glguy@moz-vqvmvd.o0eg.mkgl.01c0.2601.IP) has joined #rust-beginners
2018-10-01 05:56:27	kevin2z	It looks like the thing that's inside the vector is immutable but the vector is mutable. So how do I make the thing inside the vector mutable?
2018-10-01 05:56:37	stephaneyfx	Can you share your code on the playground?
2018-10-01 05:56:39	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 05:57:16	<--	dinfuehr (dinfuehr@moz-qum99q.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-10-01 05:57:41	kevin2z	You mean like pastebin?
2018-10-01 05:57:52	stephaneyfx	!playground
2018-10-01 05:57:52	+rustbot	<https://play.rust-lang.org> — The Rust Playground (a.k.a. Playpen) is a Web service for running and sharing short Rust programs.
2018-10-01 05:58:24	stephaneyfx	Once pasted, press the Share button and copy the link at the bottom
2018-10-01 05:59:49	kevin2z	It's not going to compile there because of the external crate, I will put in pastebin
2018-10-01 06:00:00	stephaneyfx	It does not have to compile
2018-10-01 06:00:07	-->	dinfuehr (dinfuehr@moz-5nq960.highway.telekom.at) has joined #rust-beginners
2018-10-01 06:00:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:00:20	stephaneyfx	You'll still get a link by pressing the Share button
2018-10-01 06:00:27	-->	Michelleml82 (Mibbit@moz-ej7.82l.61.179.IP) has joined #rust-beginners
2018-10-01 06:00:43	Michelleml82	Hey
2018-10-01 06:02:34	-->	yk (yk@moz-9t1.klp.169.109.IP) has joined #rust-beginners
2018-10-01 06:04:15	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 06:04:22	kevin2z	https://play.rust-lang.org/?gist=ecde88b6ae7257bc43a3e486eaf1a8e9&version=stable&mode=debug&edition=2015
2018-10-01 06:04:35	kevin2z	I put some code there but not the whole thing, so it's not confusing
2018-10-01 06:05:04	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 06:05:30	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-10-01 06:05:30	Arnavion	bulbs.iter()   is an Iterator of &Bulb. You want an Iterator of &mut Bulb, which you get with   bulbs.iter_mut()
2018-10-01 06:05:46	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 06:06:16	kevin2z	That fixed it
2018-10-01 06:06:30	kevin2z	Thanks Arnavion and stephaneyfx
2018-10-01 06:06:47	kevin2z	I didn't realize the iterator's were mutable / immutable
2018-10-01 06:07:21	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 06:07:40	Arnavion	It's not about the iterators being mutable or immutable
2018-10-01 06:07:46	Arnavion	It's about the kind of item they yield
2018-10-01 06:08:10	kevin2z	Well I tried this originally  let mut bulbs: Vec<mut Bulb> = Vec::new();
2018-10-01 06:08:16	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-10-01 06:08:23	Arnavion	That is invalid syntax
2018-10-01 06:08:24	kevin2z	But the compile complained about the "mut Bulb"
2018-10-01 06:08:32	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-10-01 06:08:48	italic	mutability is in the variable binding, not the data within the structure
2018-10-01 06:09:34	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:09:53	kevin2z	OK interesting didn't realize that
2018-10-01 06:09:56	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:10:13	italic	so you can have a mutable bind with `let mut bulbs: Vec<u8> = Vec::new();` and an immutable binding with `let bulbs: Vec<u8> = Vec::new();`
2018-10-01 06:10:21	italic	they contain the same data, but one is mutable and one isn't
2018-10-01 06:12:34	<--	brennie (barret@moz-m6a.sua.197.138.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:12:52	kevin2z	So the iter() function returns an immutable variable even though the vector was declared as mutable?
2018-10-01 06:13:07	italic	yep
2018-10-01 06:13:07	Arnavion	Correct
2018-10-01 06:13:21	Arnavion	Vec<T>::iter() takes &Vec<T> and gives an Iterator<&T>
2018-10-01 06:13:24	<--	Michelleml82 (Mibbit@moz-ej7.82l.61.179.IP) has quit (G-Lined: no spamming here)
2018-10-01 06:13:27	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-10-01 06:13:30	Arnavion	Vec<T>::iter_mut() takes &mut Vec<T> and gives an Iterator<&mut T>
2018-10-01 06:13:30	italic	although this may not be proper, i like to think of it as a way to maintain consistency with your own bindings
2018-10-01 06:13:33	kevin2z	So if I use a for loop, and index into the vector, it should also work then?
2018-10-01 06:13:41	Arnavion	(Actually they're defined on [T])
2018-10-01 06:14:56	-->	sainathvd (sainathvd@moz-4bf.abv.87.183.IP) has joined #rust-beginners
2018-10-01 06:15:02	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 06:15:05	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:15:29	<--	ccakes (ccakes@moz-40s.vpi.166.188.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 06:15:35	-->	ccakes (ccakes@moz-40s.vpi.166.188.IP) has joined #rust-beginners
2018-10-01 06:15:35	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 06:15:59	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 06:18:23	-->	fwilkens (fwilkens@moz-d44s07.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-10-01 06:18:39	<--	fwilkens (fwilkens@moz-d44s07.dynamic.kabel-deutschland.de) has quit (Client exited)
2018-10-01 06:19:07	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:19:18	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 06:19:20	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 06:21:54	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:23:05	<--	martin2 (martin@moz-2q5330.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-10-01 06:23:20	-->	spear2 (spear2@moz-jsi95h.or.charter.com) has joined #rust-beginners
2018-10-01 06:24:35	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 06:29:07	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:29:23	<--	eyans (a@moz-afuum6.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-10-01 06:33:13	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 06:37:15	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:37:30	stian	yenp
2018-10-01 06:39:22	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-01 06:39:43	<--	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has quit (Quit: Sorry, was AFK)
2018-10-01 06:42:20	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 06:43:51	-->	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has joined #rust-beginners
2018-10-01 06:46:17	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-10-01 06:46:23	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:48:05	<--	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:51:26	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 06:52:35	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:53:18	-->	morton (Mibbit@moz-rrl.06o.55.1.IP) has joined #rust-beginners
2018-10-01 06:54:37	<--	muep (quassel@moz-qqefgu.iki.fi) has quit (Client exited)
2018-10-01 06:54:57	-->	muep (quassel@moz-qqefgu.iki.fi) has joined #rust-beginners
2018-10-01 06:55:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:55:39	<--	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 06:57:38	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 06:58:39	<--	artfwo (artfwo@moz-1bo.rrn.120.37.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 06:59:14	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 06:59:15	-->	igluze (igloo@moz-05bh8k.res.spectrum.com) has joined #rust-beginners
2018-10-01 06:59:28	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 06:59:31	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 07:00:32	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 07:03:43	-->	raingloom (raingloom@moz-7r4saj.eduroam.elte.hu) has joined #rust-beginners
2018-10-01 07:04:35	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 07:06:42	<--	morton (Mibbit@moz-rrl.06o.55.1.IP) has left #rust-beginners
2018-10-01 07:08:19	-->	emerentius (emerentius@moz-215tg4.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-01 07:09:33	<--	emerent (emerentius@moz-hkn47s.dip0.t-ipconnect.de) has quit (Connection closed)
2018-10-01 07:09:39	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 07:12:23	<--	yk (yk@moz-9t1.klp.169.109.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 07:15:08	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 07:15:38	<--	cdr255 (cdr255@moz-1f47ld.5rhd.p3se.0547.2601.IP) has quit (Quit: Leaving)
2018-10-01 07:17:45	<--	raingloom (raingloom@moz-7r4saj.eduroam.elte.hu) has quit (Ping timeout: 121 seconds)
2018-10-01 07:17:51	<--	GrayShade (quassel@moz-27s.2c9.117.79.IP) has quit (Client exited)
2018-10-01 07:18:02	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 07:18:42	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 07:19:45	-->	GrayShade (quassel@moz-p9443k.leje.sn81.2f05.2a02.IP) has joined #rust-beginners
2018-10-01 07:22:26	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 07:23:14	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 07:25:46	<--	kevin2z (Mibbit@moz-8sm.qkk.178.205.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 07:28:50	-->	raingloom (raingloom@moz-7r4saj.eduroam.elte.hu) has joined #rust-beginners
2018-10-01 07:34:32	<--	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has quit (Quit: WeeChat 2.2)
2018-10-01 07:34:33	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 07:35:05	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 07:36:25	<--	igluze (igloo@moz-05bh8k.res.spectrum.com) has quit (Ping timeout: 121 seconds)
2018-10-01 07:37:06	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 07:37:27	-->	igluze (igloo@moz-05bh8k.res.spectrum.com) has joined #rust-beginners
2018-10-01 07:38:40	<--	igluze (igloo@moz-05bh8k.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 07:40:17	-->	igluze (igloo@moz-05bh8k.res.spectrum.com) has joined #rust-beginners
2018-10-01 07:40:24	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 07:40:51	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-10-01 07:43:27	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 07:43:49	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 07:44:08	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 07:44:11	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 07:45:39	-->	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has joined #rust-beginners
2018-10-01 07:46:37	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Quit: Leaving)
2018-10-01 07:46:52	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-10-01 07:47:16	<--	igluze (igloo@moz-05bh8k.res.spectrum.com) has quit (Connection closed)
2018-10-01 07:47:33	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 07:47:55	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 07:48:07	-->	igluze (igloo@moz-05bh8k.res.spectrum.com) has joined #rust-beginners
2018-10-01 07:48:48	<--	igluze (igloo@moz-05bh8k.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 07:48:48	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 07:49:37	<--	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has quit (Ping timeout: 121 seconds)
2018-10-01 07:49:48	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 07:51:48	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 07:51:57	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 07:51:59	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 07:52:26	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 07:53:37	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-01 07:57:46	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 07:58:16	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 07:58:21	-->	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has joined #rust-beginners
2018-10-01 07:58:52	-->	Aqo_ (Aqo@moz-v4gmcv.inter.net.il) has joined #rust-beginners
2018-10-01 07:59:07	-->	igluze (igloo@moz-05bh8k.res.spectrum.com) has joined #rust-beginners
2018-10-01 07:59:15	-->	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has joined #rust-beginners
2018-10-01 07:59:27	<--	Aqo (Aqo@moz-25cu4v.inter.net.il) has quit (Ping timeout: 121 seconds)
2018-10-01 07:59:32	--	Aqo_ is now known as Aqo
2018-10-01 07:59:44	<--	igluze (igloo@moz-05bh8k.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 07:59:46	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 08:00:07	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 08:00:10	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 08:00:12	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 08:01:29	<--	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has quit (Ping timeout: 121 seconds)
2018-10-01 08:01:29	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 08:02:11	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 08:02:38	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 08:03:55	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 08:04:53	-->	igluze (igloo@moz-05bh8k.res.spectrum.com) has joined #rust-beginners
2018-10-01 08:05:00	<--	igluze (igloo@moz-05bh8k.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 08:05:20	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 08:06:51	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-10-01 08:07:12	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-10-01 08:07:15	<--	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-10-01 08:07:33	<--	GreenJello (GreenJello@moz-ttl.a60.200.192.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 08:09:40	-->	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has joined #rust-beginners
2018-10-01 08:11:18	-->	insidious (insidious@moz-fut852.hylcas.scranton.edu) has joined #rust-beginners
2018-10-01 08:11:59	<--	alexeyzab (alexeyzab@moz-jfo142.res.rr.com) has quit (Quit: WeeChat 2.2)
2018-10-01 08:12:00	-->	igluze (igloo@moz-05bh8k.res.spectrum.com) has joined #rust-beginners
2018-10-01 08:12:50	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 08:14:51	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 08:15:16	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 08:15:24	<--	insidious (insidious@moz-fut852.hylcas.scranton.edu) has quit (Ping timeout: 121 seconds)
2018-10-01 08:15:28	-->	yk (yk@moz-9t1.klp.169.109.IP) has joined #rust-beginners
2018-10-01 08:17:23	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 08:19:53	-->	paulvt (paul.van.ti@moz-sseuk3.fb56.nn7d.a446.2a02.IP) has joined #rust-beginners
2018-10-01 08:21:25	<--	igluze (igloo@moz-05bh8k.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 08:22:51	-->	igluze (igloo@moz-05bh8k.res.spectrum.com) has joined #rust-beginners
2018-10-01 08:23:40	-->	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has joined #rust-beginners
2018-10-01 08:23:54	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 08:24:01	<--	igluze (igloo@moz-05bh8k.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 08:25:08	<--	sainathvd (sainathvd@moz-4bf.abv.87.183.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 08:26:42	<--	raingloom (raingloom@moz-7r4saj.eduroam.elte.hu) has quit (Ping timeout: 121 seconds)
2018-10-01 08:28:50	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-10-01 08:28:57	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-01 08:29:05	-->	sainathvd (sainathvd@moz-4bf.abv.87.183.IP) has joined #rust-beginners
2018-10-01 08:32:27	-->	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has joined #rust-beginners
2018-10-01 08:33:19	--	KiChjang_ is now known as KiChjang
2018-10-01 08:33:48	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 08:35:39	-->	Tucky (Tucky@moz-1cuha4.rev.sfr.net) has joined #rust-beginners
2018-10-01 08:39:24	-->	Mary_1976 (Mary_1976@moz-0ul.62i.215.181.IP) has joined #rust-beginners
2018-10-01 08:39:32	Mary_1976	Hey!
2018-10-01 08:39:50	<--	Mary_1976 (Mary_1976@moz-0ul.62i.215.181.IP) has quit (G-Lined: no spamming here)
2018-10-01 08:40:54	-->	mib_1j4upp (Mibbit@moz-0bojte.ip.btc-net.bg) has joined #rust-beginners
2018-10-01 08:44:25	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 08:44:30	-->	Grilinctus (notasquid@moz-d6s.mm9.207.49.IP) has joined #rust-beginners
2018-10-01 08:44:41	<--	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 08:44:42	--	Grilinctus is now known as Aankhen``
2018-10-01 08:44:56	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 08:45:56	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-10-01 08:47:08	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-10-01 08:48:48	<--	Arcaelyx_ (Arcaelyx@moz-veo2ik.77ht.vv5c.2000.2604.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 08:49:16	-->	Arcaelyx (Arcaelyx@moz-gcpd2f.77ht.vv5c.2000.2604.IP) has joined #rust-beginners
2018-10-01 08:52:00	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 08:52:04	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 08:55:41	-->	liquidnight (marcus@moz-p5pvmh.8e6g.pb3k.0c23.2a01.IP) has joined #rust-beginners
2018-10-01 08:55:57	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-01 08:56:48	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-10-01 08:57:34	-->	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has joined #rust-beginners
2018-10-01 08:58:12	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Client exited)
2018-10-01 09:00:00	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 09:00:00	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 09:00:41	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 09:01:14	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 09:01:37	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 09:01:38	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 09:02:15	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 09:03:11	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-10-01 09:05:36	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 09:05:52	-->	gagbo (gagbo@moz-a9bf5n.abo.bbox.fr) has joined #rust-beginners
2018-10-01 09:06:59	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 09:08:28	-->	runfalk (runfalk@moz-d6be9k.priv.bahnhof.se) has joined #rust-beginners
2018-10-01 09:09:30	<--	yk (yk@moz-9t1.klp.169.109.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 09:11:31	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 09:18:36	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-10-01 09:18:39	<--	KiChjang (KiChjang@moz-pjl7rg.urm1.6cdi.0646.2601.IP) has quit (Quit: Leaving)
2018-10-01 09:19:37	<--	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 09:21:30	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 09:22:40	<--	Aankhen`` (notasquid@moz-d6s.mm9.207.49.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 09:23:08	-->	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has joined #rust-beginners
2018-10-01 09:24:34	<--	Aqo (Aqo@moz-v4gmcv.inter.net.il) has quit (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
2018-10-01 09:26:09	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-10-01 09:30:51	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 09:32:01	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 09:32:19	-->	Aqo (Aqo@moz-tsphbp.inter.net.il) has joined #rust-beginners
2018-10-01 09:34:54	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-10-01 09:35:21	<--	orium (fulano@moz-cjq57u.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-10-01 09:35:57	<--	leotaku (leotaku@moz-lnm2k9.highway.a1.net) has quit (Ping timeout: 121 seconds)
2018-10-01 09:36:38	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 09:38:13	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-10-01 09:40:55	<--	jones (jones@moz-jqo904.customer.lyse.net) has quit (Quit: WeeChat 2.2)
2018-10-01 09:41:40	<--	kyren (kyren@moz-79c2gr.ic6o.knbj.9001.2603.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 09:42:15	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-10-01 09:50:41	-->	syntheticsh (Mibbit@moz-euonk6.is74.ru) has joined #rust-beginners
2018-10-01 09:54:33	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 09:59:10	-->	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 09:59:12	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Connection closed)
2018-10-01 09:59:13	-->	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has joined #rust-beginners
2018-10-01 10:00:23	<--	syntheticsh (Mibbit@moz-euonk6.is74.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 10:01:04	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 10:01:06	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 10:05:12	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 10:05:38	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 10:06:35	-->	fsasm (fsasm@moz-u0aefh.dynamic.surfer.at) has joined #rust-beginners
2018-10-01 10:12:28	<--	sainathvd (sainathvd@moz-4bf.abv.87.183.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 10:14:18	-->	mr_sticky (Mibbit@moz-n9vsoj.au-net.ne.jp) has joined #rust-beginners
2018-10-01 10:14:35	<--	mr_sticky (Mibbit@moz-n9vsoj.au-net.ne.jp) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 10:17:38	<--	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has quit (Quit: ZNC - http://znc.in)
2018-10-01 10:18:24	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-10-01 10:21:15	-->	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has joined #rust-beginners
2018-10-01 10:21:45	-->	crane (crane@moz-vr9.9a7.93.101.IP) has joined #rust-beginners
2018-10-01 10:23:38	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 10:23:38	<--	dekokun_ (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Connection closed)
2018-10-01 10:29:38	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 10:29:39	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 10:29:52	-->	dethos (dethos@moz-joj.gtm.138.213.IP) has joined #rust-beginners
2018-10-01 10:30:12	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 10:31:18	-->	RunFor (uid313158@moz-jokd8m.charlton.irccloud.com) has joined #rust-beginners
2018-10-01 10:31:42	-->	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has joined #rust-beginners
2018-10-01 10:31:49	RunFor	Hi
2018-10-01 10:32:08	-->	orium (fulano@moz-9mu.6i1.35.193.IP) has joined #rust-beginners
2018-10-01 10:32:37	RunFor	Futures seem so not completed in Rust, im confused. Is this a good crate to use ? https://github.com/rust-lang-nursery/futures-rs
2018-10-01 10:32:49	-->	yann-kaelig (yann-kaelig@moz-0hqbua.dynamic.chello.pl) has joined #rust-beginners
2018-10-01 10:32:53	RunFor	Everything besides that somehow relates to tokio 
2018-10-01 10:33:22	RunFor	Is it for nightly compiler mostly? 
2018-10-01 10:35:29	-->	mib_pdzba5 (Mibbit@moz-jvs3lh.oxuni.org.uk) has joined #rust-beginners
2018-10-01 10:35:56	<--	mib_pdzba5 (Mibbit@moz-jvs3lh.oxuni.org.uk) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 10:36:31	-->	mlindner (mlindner@moz-k8som4.ca.comcast.net) has joined #rust-beginners
2018-10-01 10:40:20	BroodFromBelow	Well i have been using channel Receivers and Senders before
2018-10-01 10:41:40	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 10:42:18	--	U007D_afk is now known as U007D
2018-10-01 10:42:21	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 10:43:25	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-10-01 10:44:29	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 10:46:53	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 10:50:19	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 10:50:57	<--	maarten (maartenBE@moz-p01hcr.access.telenet.be) has quit (Ping timeout: 121 seconds)
2018-10-01 10:51:27	<--	crane (crane@moz-vr9.9a7.93.101.IP) has quit (Client exited)
2018-10-01 10:52:15	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 10:52:24	<--	U007D (U007D@moz-a36.9b9.245.162.IP) has quit (Connection closed)
2018-10-01 10:52:50	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-01 10:53:59	-->	crane (crane@moz-vr9.9a7.93.101.IP) has joined #rust-beginners
2018-10-01 10:54:06	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-10-01 10:54:57	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 10:55:13	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 10:55:53	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 10:56:44	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 10:57:25	<--	mib_1j4upp (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 10:58:58	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-10-01 10:59:45	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 10:59:55	-->	martin2 (martin@moz-asl4gg.anteldata.net.uy) has joined #rust-beginners
2018-10-01 11:00:25	-->	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has joined #rust-beginners
2018-10-01 11:01:49	<--	fwiw (fwiw@moz-145phg.hashbang.sh) has quit (The TLS connection was non-properly terminated.)
2018-10-01 11:01:57	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-10-01 11:03:20	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-01 11:03:52	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 11:05:52	-->	fwiw (fwiw@moz-145phg.hashbang.sh) has joined #rust-beginners
2018-10-01 11:12:55	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 11:13:14	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 11:14:15	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 11:14:57	<--	martin2 (martin@moz-asl4gg.anteldata.net.uy) has quit (Ping timeout: 121 seconds)
2018-10-01 11:15:23	Fr0stBit	Hiw guys is this wrong? https://bpaste.net/show/a1a5a895d547
2018-10-01 11:16:04	-->	glenn (Mibbit@moz-6jtbm0.tukrga.sbcglobal.net) has joined #rust-beginners
2018-10-01 11:17:13	<--	mrizzo (mrizzo@moz-h42sie.cust.swisscom.ch) has quit (Client exited)
2018-10-01 11:17:33	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Quit: WeeChat 2.2)
2018-10-01 11:17:43	Fr0stBit	If i try to print the buf after, i get weird results
2018-10-01 11:18:28	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-10-01 11:19:13	-->	mrizzo (mrizzo@moz-h42sie.cust.swisscom.ch) has joined #rust-beginners
2018-10-01 11:19:47	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-10-01 11:19:51	Lumpio-	Hm, is it valid to write outside the length of the string via as_bytes_mut()? Even if the capacity is enough
2018-10-01 11:20:14	Lumpio-	At any rate nothing in this code seems to set the length of "buf" so I'd expect it to print an empty string
2018-10-01 11:20:34	-->	justsomequestions (gumble@moz-87hffn.wlan.uni-bonn.de) has joined #rust-beginners
2018-10-01 11:20:43	<--	mrizzo (mrizzo@moz-h42sie.cust.swisscom.ch) has quit (Client exited)
2018-10-01 11:21:14	<--	glenn (Mibbit@moz-6jtbm0.tukrga.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 11:21:18	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 11:22:22	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 11:22:31	Fr0stBit	Lumpio-: correct!
2018-10-01 11:22:38	Fr0stBit	Can i zero fill it somehow?
2018-10-01 11:22:49	Lumpio-	There's str::repeat
2018-10-01 11:22:52	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 11:23:00	Lumpio-	You could use that to create a string full of nulls
2018-10-01 11:23:32	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-01 11:23:33	justsomequestions	how are reference counted pointers normally implemented? As a pointer to a pointer to T which also keeps a count or a pointer to an object T+count?
2018-10-01 11:24:07	Lumpio-	You can check the source code for Rc if you want to
2018-10-01 11:24:18	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 11:24:41	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 11:25:56	-->	mrizzo (mrizzo@moz-h42sie.cust.swisscom.ch) has joined #rust-beginners
2018-10-01 11:27:20	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-01 11:27:34	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 11:29:05	-->	pamaury (pamaury@moz-gt59fa.mpi-sws.org) has joined #rust-beginners
2018-10-01 11:31:20	justsomequestions	Lumpio-: I did not think I would be able to read it, I'll try
2018-10-01 11:31:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 11:32:38	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-10-01 11:32:52	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 11:33:59	Lumpio-	A lot of the standard library isn't immensely complicated
2018-10-01 11:34:22	dpc1	yeah the code isn't that difficult
2018-10-01 11:35:51	justsomequestions	ah thats cool :)
2018-10-01 11:35:54	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 11:36:14	justsomequestions	I always that stuff is so hyper-optimized that only very few understand it
2018-10-01 11:36:40	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (Ping timeout: 121 seconds)
2018-10-01 11:37:03	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 11:39:26	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 11:41:30	-->	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has joined #rust-beginners
2018-10-01 11:43:08	-->	Puddles (Mibbit@moz-mr2.9ho.149.169.IP) has joined #rust-beginners
2018-10-01 11:43:46	-->	mib_r0y830 (Mibbit@moz-0bojte.ip.btc-net.bg) has joined #rust-beginners
2018-10-01 11:45:10	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 11:45:10	-->	maarten (maartenBE@moz-p01hcr.access.telenet.be) has joined #rust-beginners
2018-10-01 11:45:40	<--	DeltaManiac (DeltaManiac@moz-5hb.5q9.13.203.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 11:48:16	sebk	justsomequestions: pointer to (count, object)
2018-10-01 11:49:21	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 11:50:41	<--	cp (cp@moz-fresc2.asahinet.com) has quit (Quit: Disappears in a puff of smoke)
2018-10-01 11:50:57	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 11:52:16	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Quit: Leaving)
2018-10-01 11:53:53	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 11:56:27	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-10-01 11:58:43	-->	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has joined #rust-beginners
2018-10-01 12:00:48	-->	danreeves (localghost@moz-lcb.hel.31.2.IP) has joined #rust-beginners
2018-10-01 12:01:09	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 12:02:53	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-10-01 12:02:56	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-10-01 12:05:08	<--	spacekookie (ThinkCat@moz-bsfnsc.contaboserver.net) has quit (Quit: No Ping reply in 60 seconds.)
2018-10-01 12:05:20	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-10-01 12:05:55	justsomequestions	sebk: perfect, thank you
2018-10-01 12:06:22	-->	spacekookie (ThinkCat@moz-bsfnsc.contaboserver.net) has joined #rust-beginners
2018-10-01 12:09:03	<--	Aankhen`` (notasquid@moz-31o.u3c.68.182.IP) has quit (Quit: Sorry, was AFK)
2018-10-01 12:11:12	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-10-01 12:11:43	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 12:11:51	-->	tasansga (ansgar@moz-oucppq.connect.netcom.no) has joined #rust-beginners
2018-10-01 12:13:46	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 12:14:28	-->	chaomi (androirc@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 12:14:33	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-10-01 12:17:14	<--	chaomi (androirc@moz-aeo.ddu.90.212.IP) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2018-10-01 12:17:24	-->	chaomi (androirc@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 12:17:26	-->	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has joined #rust-beginners
2018-10-01 12:17:37	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-10-01 12:18:47	<--	crane (crane@moz-vr9.9a7.93.101.IP) has quit (Client exited)
2018-10-01 12:20:55	<--	danreeves (localghost@moz-lcb.hel.31.2.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 12:21:35	Fr0stBit	How can i make an enum that resides inside the namespace of a struct? For example i have a Vattr enum that i want to access like Mesh::Vattr
2018-10-01 12:21:46	Fr0stBit	Where Mesh some other struct
2018-10-01 12:22:18	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 12:22:34	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 12:23:07	-->	crane (crane@moz-vr9.9a7.93.101.IP) has joined #rust-beginners
2018-10-01 12:23:19	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 12:23:38	dpc1	you can't do that
2018-10-01 12:24:30	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 12:27:45	<--	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2018-10-01 12:28:05	-->	sycal (sycalme__@moz-q4q9dh.opsera.com) has joined #rust-beginners
2018-10-01 12:28:51	-->	danreeves (localghost@moz-lcb.hel.31.2.IP) has joined #rust-beginners
2018-10-01 12:32:37	<--	justsomequestions (gumble@moz-87hffn.wlan.uni-bonn.de) has quit (Ping timeout: 121 seconds)
2018-10-01 12:33:39	-->	najeex (najeeb@moz-cfo.cli.219.106.IP) has joined #rust-beginners
2018-10-01 12:33:49	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 12:33:59	-->	indy (mozillindy@moz-3g6bq7.213-160-167.telecom.sk) has joined #rust-beginners
2018-10-01 12:34:42	<--	Eric-M (ericpedr0n@moz-522p1u.matrix.org) has left #rust-beginners ("User left")
2018-10-01 12:36:58	-->	zacps (zacmps@moz-e9ic93.2s47.el68.7000.2407.IP) has joined #rust-beginners
2018-10-01 12:37:05	<--	najeex (najeeb@moz-cfo.cli.219.106.IP) has left #rust-beginners
2018-10-01 12:37:21	<--	crane (crane@moz-vr9.9a7.93.101.IP) has quit (Client exited)
2018-10-01 12:37:51	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 12:37:58	<--	zacmps (zacmps@moz-lekb76.vf.net.nz) has quit (Ping timeout: 121 seconds)
2018-10-01 12:40:42	-->	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has joined #rust-beginners
2018-10-01 12:42:08	drager	Fr0stBit: Isn't module good enough?
2018-10-01 12:42:57	drager	RunFor: futures-rs is what you should check out yeah
2018-10-01 12:43:14	drager	RunFor: I use futures on stable rust. So, no it's not just for nightly
2018-10-01 12:43:27	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 12:44:23	RunFor	@drager: ty
2018-10-01 12:45:52	drager	RunFor: But you use tokio to run your futures, checkout this guide here: https://tokio.rs/docs/getting-started/hello-world/
2018-10-01 12:46:15	<--	zacps (zacmps@moz-e9ic93.2s47.el68.7000.2407.IP) has quit (Quit: ZNC - https://znc.in)
2018-10-01 12:46:19	-->	zacmps (zacmps@moz-8kg0ij.vf.net.nz) has joined #rust-beginners
2018-10-01 12:47:59	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 12:48:07	-->	smerft (Mibbit@moz-rj1h4j.dyn.optonline.net) has joined #rust-beginners
2018-10-01 12:49:32	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-01 12:49:32	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 12:49:57	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 12:54:02	-->	jonasbn (jonasbn@moz-do3.1m5.199.128.IP) has joined #rust-beginners
2018-10-01 12:54:31	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 12:55:57	Fr0stBit	drager: I made it a module member in the end
2018-10-01 12:56:10	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-10-01 12:56:12	Fr0stBit	Can i iterate enum values?
2018-10-01 12:59:52	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 13:06:26	jonasbn	Fr0stBit: according to StackOverflow - no, ref: https://stackoverflow.com/questions/21371534/in-rust-is-there-a-way-to-iterate-through-the-values-of-an-enum
2018-10-01 13:06:54	 *	jonasbn is a n00b and has not yet played with enums
2018-10-01 13:07:24	dpc1	xD
2018-10-01 13:07:42	dowwie	I could swear that I've got an example in my sandbox of iterating over an enum but I can't find it
2018-10-01 13:07:44	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 13:08:00	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 13:08:09	dowwie	whatever you're trying to achieve by iterating could probably be done better using another approach, though
2018-10-01 13:08:18	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 13:10:09	<--	danreeves (localghost@moz-lcb.hel.31.2.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 13:10:16	Puddles	Is travis CI free for opensource or is it free for only 100 builds in opensource ?
2018-10-01 13:10:41	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-01 13:10:41	-->	danreeves (localghost@moz-lcb.hel.31.2.IP) has joined #rust-beginners
2018-10-01 13:11:10	dpc1	i think it is free forever
2018-10-01 13:11:38	<--	Puddles (Mibbit@moz-mr2.9ho.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 13:11:57	-->	mib_ootru0 (Mibbit@moz-5q6.aol.149.169.IP) has joined #rust-beginners
2018-10-01 13:13:04	-->	Urania (textual@moz-83q96u.sph.umich.edu) has joined #rust-beginners
2018-10-01 13:13:38	-->	luizdepra (luizdepra@moz-sj7kbe.vktm.tl6j.1284.2001.IP) has joined #rust-beginners
2018-10-01 13:14:15	-->	cp (cp@moz-4f5h05.asahi-net.or.jp) has joined #rust-beginners
2018-10-01 13:14:54	-->	leaper (Mibbit@moz-4p3.fv0.4.80.IP) has joined #rust-beginners
2018-10-01 13:15:07	-->	Avuxo (Mibbit@moz-1b6.veg.121.144.IP) has joined #rust-beginners
2018-10-01 13:15:38	leaper	what IDE do I use with Rust?
2018-10-01 13:15:59	ilmari	leaper: https://areweideyet.com/
2018-10-01 13:16:08	svartalf	JetBrains + Rust plugin is good, if you're okay with java-based IDEs
2018-10-01 13:16:08	Avuxo	Hey, I'm an engineer working on a cross-platform library in C++ and I'm interested to know if there's a way to distribute an SO / DLL / dylib without the target having to care that it's rust code?
2018-10-01 13:16:27	jonasbn	leaper: Visual Studio Code is nice with RLS extension
2018-10-01 13:16:33	Avuxo	so like if I just compile libfoo.so for their target, will it work fine?
2018-10-01 13:16:36	-->	AtumT (IRC@moz-hdt.j1m.95.179.IP) has joined #rust-beginners
2018-10-01 13:16:40	Avuxo	or do they need some sort of tooling
2018-10-01 13:17:11	svartalf	Avuxo: https://doc.rust-lang.org/1.9.0/book/ffi.html#calling-rust-code-from-c 
2018-10-01 13:17:31	mib_ootru0	Clion + Rust plugin works well too ... it even has a debugger
2018-10-01 13:18:07	Avuxo	This is a question of distribution, not so much writing it
2018-10-01 13:18:10	jonasbn	have not tried the debugger integration i VSC in Rust context yet
2018-10-01 13:18:18	Avuxo	I'm interested in porting over to Rust from C++
2018-10-01 13:18:33	Avuxo	and I don't want to force the customer to have a rust compiler installed
2018-10-01 13:18:48	mib_ootru0	Avuxo: This may help https://github.com/sn99/rust-ffi-examples
2018-10-01 13:18:55	Avuxo	presently I'm able to distribute a shared-object to linux-based customers or a DLL to windows-based customers -- is this possible?
2018-10-01 13:19:13	<--	chaomi (androirc@moz-aeo.ddu.90.212.IP) has quit (Connection closed)
2018-10-01 13:20:03	Avuxo	again, this isn't a question of calling rust code, it's a question of binary distribution
2018-10-01 13:20:56	-->	asyncsec (asyncsec@moz-qjsqrk.dyn6.twc.com) has joined #rust-beginners
2018-10-01 13:21:18	<--	smerft (Mibbit@moz-rj1h4j.dyn.optonline.net) has left #rust-beginners
2018-10-01 13:22:14	dpc1	you may look at cross
2018-10-01 13:22:15	dpc1	!cross
2018-10-01 13:22:15	+rustbot	see documentation at https://github.com/japaric/rust-cross
2018-10-01 13:22:34	dpc1	though it won't deal with the packaging 
2018-10-01 13:23:24	<--	leaper (Mibbit@moz-4p3.fv0.4.80.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 13:23:42	-->	chaomi (androirc@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 13:23:57	Avuxo	Thanks.
2018-10-01 13:23:58	mrizzo	I don't think users will need a rust compiler. On windows they might need the MS C libraries but you could always link statically
2018-10-01 13:24:00	<--	Avuxo (Mibbit@moz-1b6.veg.121.144.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 13:24:12	dowwie	Fr0stBit:  here's one approach https://play.integer32.com/?gist=ae731b6d2a1a875eb6e8a8fc17b64957&version=stable&mode=debug&edition=2015
2018-10-01 13:24:44	dowwie	can anyone improve upon this design for making an Enum iteratator?
2018-10-01 13:25:16	jonasbn	dowwie: you found it :-)
2018-10-01 13:25:29	dowwie	jonasbn:  nope, I wrote one from scratch
2018-10-01 13:25:49	jonasbn	oh 
2018-10-01 13:25:58	 *	jonasbn will have a look
2018-10-01 13:26:06	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 13:26:13	dowwie	jonasbn:  it's not quite what I was hoping for because it requires I seed what x is
2018-10-01 13:28:35	<--	sycal (sycalme__@moz-q4q9dh.opsera.com) has quit (Quit: Leaving)
2018-10-01 13:28:41	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 13:29:52	 *	jonasbn has a long way to go
2018-10-01 13:30:42	-->	mib_39psit (Mibbit@moz-ia5.51e.127.118.IP) has joined #rust-beginners
2018-10-01 13:31:15	<--	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has quit (Quit: Leaving)
2018-10-01 13:31:40	-->	mib_d9oog1 (Mibbit@moz-rdj67g.loria.fr) has joined #rust-beginners
2018-10-01 13:32:03	-->	jperras (jperras@moz-21gfrr.ln67.g62t.1970.2001.IP) has joined #rust-beginners
2018-10-01 13:32:55	<--	Arcaelyx (Arcaelyx@moz-gcpd2f.77ht.vv5c.2000.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 13:33:44	-->	jec_ (jec@moz-pboa8b.ks.cox.net) has joined #rust-beginners
2018-10-01 13:34:00	jec_	oh wow, the end of chapter 15 in the book is pretty confusing :S
2018-10-01 13:34:03	-->	justsomequestions (gumble@moz-fk51ng.pools.vodafone-ip.de) has joined #rust-beginners
2018-10-01 13:34:26	Fr0stBit	dowwie: Yeah i thought of this too, but we need to duplicate code when inserting new elements into the enum...
2018-10-01 13:34:26	dpc1	xD
2018-10-01 13:34:40	dpc1	it's strange though to iterate over enums
2018-10-01 13:35:10	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-01 13:36:27	dowwie	Fr0stBit:   I don't know what you mean by duplicating code..
2018-10-01 13:36:57	-->	mib_vd3w7r (Mibbit@moz-gve.1dg.150.47.IP) has joined #rust-beginners
2018-10-01 13:37:02	dowwie	dpc1:   yeah, it's misusing the type
2018-10-01 13:37:04	Fr0stBit	dowwie: You would need to modify the next() function if you added a new item in the enum!
2018-10-01 13:37:10	<--	mib_vd3w7r (Mibbit@moz-gve.1dg.150.47.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 13:37:13	dowwie	Fr0stBit:  so what?  
2018-10-01 13:37:34	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 13:37:38	dowwie	Fr0stBit:  how many times in the grand scheme of writing wonderful Rust code would you have to update that enum?  not many!
2018-10-01 13:38:53	Fr0stBit	dowwie: Yeah thats kinda true :)
2018-10-01 13:39:22	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-10-01 13:42:06	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 13:43:12	yaymukund	you might be able to write a macro ( https://old.reddit.com/r/rust/comments/29sk5d/iterating_over_static_enum_values/, warning: ancient code from 4 years ago )
2018-10-01 13:44:33	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 13:45:08	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 13:47:08	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 13:47:18	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 13:47:35	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 13:49:02	-->	miqid (miqid@moz-7qp.555.122.1.IP) has joined #rust-beginners
2018-10-01 13:50:39	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-01 13:51:20	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 13:52:19	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 13:52:19	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 13:52:43	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 13:55:22	<--	jec_ (jec@moz-pboa8b.ks.cox.net) has left #rust-beginners
2018-10-01 13:56:59	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 13:57:19	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-01 13:58:04	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 13:58:36	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 13:58:45	-->	Kimberly_85 (Kimberly_85@moz-1d7.pjt.185.146.IP) has joined #rust-beginners
2018-10-01 13:58:53	yaymukund	this channel has more nicks than #rust... everyone's a beginner huh
2018-10-01 13:58:59	Kimberly_85	Hi!
2018-10-01 13:59:13	dpc1	xD
2018-10-01 13:59:18	<--	Kimberly_85 (Kimberly_85@moz-1d7.pjt.185.146.IP) has quit (G-Lined: no spamming here)
2018-10-01 14:00:00	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 14:01:21	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 14:01:33	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-10-01 14:01:54	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 14:02:53	Fr0stBit	Ok, comming from C how would you implement the bit flags concept in proper Rust?
2018-10-01 14:03:01	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-01 14:03:14	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 14:03:15	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 14:03:58	-->	durka42 (durka42@moz-goiche.pa.comcast.net) has joined #rust-beginners
2018-10-01 14:04:48	<--	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 14:04:50	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 14:05:04	<--	mib_d9oog1 (Mibbit@moz-rdj67g.loria.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 14:06:28	dpc1	!bitflags
2018-10-01 14:06:34	dpc1	!crate bitflags
2018-10-01 14:06:34	+rustbot	bitflags (1.0.4) - A macro to generate structures which behave like bitflags.  -> https://crates.io/crates/bitflags <https://docs.rs/bitflags>
2018-10-01 14:07:15	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-10-01 14:07:23	-->	num8er (num8er@moz-plq.kta.168.178.IP) has joined #rust-beginners
2018-10-01 14:07:45	<--	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has quit (Quit: WeeChat 2.2)
2018-10-01 14:07:54	num8er	he.
2018-10-01 14:08:04	num8er	hello everyone
2018-10-01 14:08:10	num8er	I've such issue:
2018-10-01 14:08:20	num8er	    let mut img = ImageBuffer::from_fn(WIDTH, HEIGHT, |x, y| {
2018-10-01 14:08:20	num8er	        if x == 0 && y == 0 {
2018-10-01 14:08:20	num8er	            Luma([0u8]);
2018-10-01 14:08:22	num8er	        } else {
2018-10-01 14:08:24	num8er	            Luma([256u8]);
2018-10-01 14:08:26	num8er	        }
2018-10-01 14:08:29	num8er	    });
2018-10-01 14:08:29	dpc1	oh no
2018-10-01 14:08:39	dpc1	!paste
2018-10-01 14:08:39	+rustbot	Paste code at https://play.rust-lang.org/ and click "Share" or paste large text at https://paste.rs/
2018-10-01 14:08:41	num8er	the trait `image::Pixel` is not implemented for `()`
2018-10-01 14:08:46	num8er	thx
2018-10-01 14:09:07	svartalf	num8er: you're not returning your `Luma` instances, try to remove semicolons
2018-10-01 14:09:34	-->	Dima_ (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-10-01 14:09:59	Fr0stBit	By the way, thanks guys the community here is super helpful and i'm glad i've becoming a rustacean!
2018-10-01 14:10:00	-->	sp1ff_ (sp1ff@moz-aac03k.ca.comcast.net) has joined #rust-beginners
2018-10-01 14:10:35	num8er	@svartalf thank You very much. I'm semi-colon lover. So I forgot it :)
2018-10-01 14:12:19	dpc1	x`xD
2018-10-01 14:12:35	dpc1	Fr0stBit: feels good to read that :) Do help others as well in return :)
2018-10-01 14:13:38	<--	Dima_ (textual@moz-n6e8rf.iinet.net.au) has quit (Ping timeout: 121 seconds)
2018-10-01 14:13:45	Fr0stBit	dpc1: I will!
2018-10-01 14:15:28	drager	num8er: You can also do: return Luma(..);
2018-10-01 14:15:41	drager	But that's not the most idomatic way
2018-10-01 14:15:45	<--	Starlit-Ghost (SG@2604:a880:800:a1::12:e001) has quit (Connection closed)
2018-10-01 14:15:58	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-01 14:16:05	num8er	#drager understood, thx for help
2018-10-01 14:16:13	<--	durka42 (durka42@moz-goiche.pa.comcast.net) has quit (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
2018-10-01 14:16:56	Wolvereness	return is better suited for a termination situation, like searching for a value in a loop
2018-10-01 14:17:20	num8er	I hope it will not take more of my time until I get on to rocket to develop microservices (:
2018-10-01 14:17:44	num8er	putting 1-2 hrs a day to experiment and understand rust
2018-10-01 14:17:48	dpc1	:)
2018-10-01 14:18:03	<--	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 14:18:54	-->	dalley (dalley@moz-sj3bja.dyn6.twc.com) has joined #rust-beginners
2018-10-01 14:19:36	drager	num8er: np, and as Wolvereness wrote :)
2018-10-01 14:21:27	-->	poljar1 (poljar@moz-dmbiaq.net.t-com.hr) has joined #rust-beginners
2018-10-01 14:24:09	<--	poljar (poljar@moz-us8nu6.net.t-com.hr) has quit (Ping timeout: 121 seconds)
2018-10-01 14:24:28	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 14:24:33	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 14:24:48	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 14:30:48	-->	StarlitGhost (SG@2604:a880:800:a1::12:e001) has joined #rust-beginners
2018-10-01 14:31:43	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 14:31:48	<--	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has quit (Quit: WeeChat 2.2)
2018-10-01 14:33:09	-->	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has joined #rust-beginners
2018-10-01 14:33:59	-->	DeltaManiac (DeltaManiac@moz-jdf.a77.171.122.IP) has joined #rust-beginners
2018-10-01 14:35:04	-->	Arcaelyx (Arcaelyx@moz-5sb.7vn.121.144.IP) has joined #rust-beginners
2018-10-01 14:35:17	-->	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has joined #rust-beginners
2018-10-01 14:35:19	num8er	One more question :)
2018-10-01 14:35:37	num8er	I'm trying to understand this one: https://github.com/danmack/sierpinski-rs/blob/master/src/main.rs
2018-10-01 14:35:40	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 14:36:15	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 14:37:08	num8er	here is playground
2018-10-01 14:37:08	num8er	https://play.rust-lang.org/?gist=d30280fe0fffe219eafb7608e9ca06d2&version=stable&mode=debug&edition=2015
2018-10-01 14:37:35	num8er	I've achieved it to work with such code:     ImageLuma8(img).save(&Path::new("triangle.png")).unwrap(); 
2018-10-01 14:37:41	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 14:37:51	num8er	but File::create method does not allow to save it
2018-10-01 14:38:04	num8er	I understand that .save method takes path
2018-10-01 14:38:24	num8er	but why author wrote that code?
2018-10-01 14:38:37	num8er	and made a video from it https://www.youtube.com/watch?v=T2Hwu-XiVkA :D
2018-10-01 14:39:42	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 14:40:21	svartalf	num8er: if you take a look into doc, you will see that `save` method accepts `path: Q where Q: AsRef<Path>`, which is roughly means that Q type can be any type that can be referenced as Path. So, your fd is not a path in any way, but plain `"tri.png"` is
2018-10-01 14:40:27	svartalf	https://docs.rs/image/0.20.0/image/enum.DynamicImage.html#method.save
2018-10-01 14:40:58	num8er	yes, as I said it takes Path, and I've achieved it to work like this: ImageLuma8(img).save(&Path::new("triangle.png")).unwrap();
2018-10-01 14:41:13	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-10-01 14:41:36	num8er	found why: http://joxi.ru/brRddJuJaOXj21
2018-10-01 14:41:38	svartalf	You can simplify it with `ImageLuma8(img).save("triangle.png")`, btw. `&'static str` can be referenced as `Path`, so you do not need to do it manually
2018-10-01 14:42:09	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-10-01 14:42:28	svartalf	num8er: yep, it happens :)
2018-10-01 14:42:51	num8er	ok :) thank You [svartalf]
2018-10-01 14:43:11	stephaneyfx	num8er: https://docs.rs/image/0.15.0/image/enum.DynamicImage.html#method.save vs https://docs.rs/image/0.20.0/image/enum.DynamicImage.html#method.save
2018-10-01 14:43:11	svartalf	np
2018-10-01 14:43:53	num8er	I think for today I'll switch to my project... 2 hrs passed of learning :)
2018-10-01 14:43:58	num8er	thank You very much
2018-10-01 14:44:15	-->	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has joined #rust-beginners
2018-10-01 14:44:21	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-10-01 14:44:27	dpc1	:)
2018-10-01 14:45:25	<--	chaomi (androirc@moz-aeo.ddu.90.212.IP) has quit (Connection closed)
2018-10-01 14:52:51	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-01 14:52:51	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 14:53:27	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-01 14:54:06	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 14:57:14	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-10-01 14:57:37	<--	jperras (jperras@moz-21gfrr.ln67.g62t.1970.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 14:58:59	<--	wildermind (uid300433@moz-3a3mnj.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 14:59:30	-->	jperras (jperras@moz-d8mscg.ln67.g62t.1970.2001.IP) has joined #rust-beginners
2018-10-01 15:01:43	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Ping timeout: 121 seconds)
2018-10-01 15:04:21	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 15:04:30	-->	eh2406 (Mibbit@moz-anb6ut.livnmi.sbcglobal.net) has joined #rust-beginners
2018-10-01 15:05:44	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-01 15:06:03	-->	PeterRabbit (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-10-01 15:06:24	-->	DaQue (Mutter@moz-ap3.4hv.116.199.IP) has joined #rust-beginners
2018-10-01 15:06:42	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 15:06:43	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 15:06:51	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 15:07:36	<--	mib_ootru0 (Mibbit@moz-5q6.aol.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 15:07:38	-->	HowDidIGetHere (Mibbit@moz-fptoaf.biz.rr.com) has joined #rust-beginners
2018-10-01 15:07:52	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 15:07:52	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 15:08:42	HowDidIGetHere	Hey! So I was wondering.. What is Rust made for? Is it made for software development, or games? Or is it more for behind the scenes tasks, like automation and what not?
2018-10-01 15:09:27	--	WindowsBunny1 is now known as WindowsBunny
2018-10-01 15:09:35	-->	nunatak (nunatak@moz-0o9u0v.netcologne.de) has joined #rust-beginners
2018-10-01 15:10:41	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-10-01 15:10:48	<--	RunFor (uid313158@moz-jokd8m.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 15:13:21	svartalf	All of it, I guess. I saw couple games made in Rust, for example
2018-10-01 15:13:40	HowDidIGetHere	Do you remember their names?
2018-10-01 15:13:45	HowDidIGetHere	I'd be interested to see them
2018-10-01 15:13:46	-->	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has joined #rust-beginners
2018-10-01 15:14:00	<--	gregg (greg@moz-00mjdg.gnumpf.tk) has quit (Connection closed)
2018-10-01 15:14:06	HowDidIGetHere	I'm sure a quick google search would tell me some, but I'd like to hear which ones you saw
2018-10-01 15:14:28	<--	nunatak (nunatak@moz-0o9u0v.netcologne.de) has quit (Quit: Leaving)
2018-10-01 15:14:28	<--	StarlitGhost (SG@2604:a880:800:a1::12:e001) has quit (Connection closed)
2018-10-01 15:14:30	svartalf	HowDidIGetHere: that presentation about CityBound was amazing: https://www.youtube.com/watch?v=qr9GTTST_Dk
2018-10-01 15:14:50	num8er	As with C++ You can do everything, with Rust You do also everything. At least I'm using Firefox Developer Edition it's written with Rust. So it's rendering images faster that Chrome.
2018-10-01 15:14:53	ccakes	lots of examples of things written in rust here - https://github.com/rust-unofficial/awesome-rust
2018-10-01 15:15:20	ilmari	HowDidIGetHere: http://arewegameyet.com/#games
2018-10-01 15:15:28	num8er	for now I'm learning Rust to replace microservices which I wrote using NodeJS
2018-10-01 15:15:40	dpc1	i thought your 2 hours were over xD
2018-10-01 15:16:09	num8er	:D I'm working, just LimeChat sometimes makes me switch to discussions :D
2018-10-01 15:16:14	<--	dorfsmay (dorfsmay@moz-m6vu7b.abhsia.telus.net) has quit (Ping timeout: 121 seconds)
2018-10-01 15:16:21	dpc1	xD
2018-10-01 15:16:55	-->	StarlitGhost (SG@2604:a880:800:a1::12:e001) has joined #rust-beginners
2018-10-01 15:17:28	-->	RockyTV (alex@moz-c95.njs.249.191.IP) has joined #rust-beginners
2018-10-01 15:18:05	<--	miqid (miqid@moz-7qp.555.122.1.IP) has quit (Connection closed)
2018-10-01 15:18:09	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 15:18:09	kimundi	!friends
2018-10-01 15:18:09	+rustbot	https://www.rust-lang.org/en-US/friends.html
2018-10-01 15:18:13	kimundi	HowDidIGetHere: ^
2018-10-01 15:19:01	kimundi	HowDidIGetHere: In general Rust is intended as a general purpose system programming language like C++
2018-10-01 15:19:11	HowDidIGetHere	I am currently wanting to make some GUI applications for deleting user folders or moving/copying them depending on the needs for that user. I have a few other things I would like to try with it once I can get that working. I am very new to this world, and I'm just trying to figure out what language would work best for what I want to do.
2018-10-01 15:19:20	<--	Xinayder (alex@moz-36b.21s.213.186.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 15:19:45	<--	dethos (dethos@moz-joj.gtm.138.213.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 15:20:18	HowDidIGetHere	I would like to give an option to use a default path, or put in a custom one if needed as well
2018-10-01 15:22:03	HowDidIGetHere	So, if that's the case kimundi, I should be able to do what I want with Rust? Or would you think that C++ would work better for me?
2018-10-01 15:22:08	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 15:23:39	<--	eh2406 (Mibbit@moz-anb6ut.livnmi.sbcglobal.net) has left #rust-beginners
2018-10-01 15:24:28	num8er	For me if I want asap result I'll use nodejs + electron
2018-10-01 15:25:02	num8er	I'm changing small parts of my working project with Rust code
2018-10-01 15:25:10	HowDidIGetHere	Have you ever heard of Openfire, num8er?
2018-10-01 15:25:22	num8er	so: 1. make it work asap, 2. change it's parts
2018-10-01 15:25:50	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 15:25:51	num8er	yes, I've heard
2018-10-01 15:26:08	num8er	xmpp server
2018-10-01 15:26:12	HowDidIGetHere	Is nodejs what their leaf nodes use?
2018-10-01 15:27:07	-->	Aankhen`` (notasquid@moz-q3q.k33.207.49.IP) has joined #rust-beginners
2018-10-01 15:27:28	num8er	hmmm, I'm not developing xmpp stuff, but for messaging kind of app I do make nodejs producers and consumers on kafka
2018-10-01 15:27:36	<--	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has quit (Quit: WeeChat 2.2)
2018-10-01 15:27:57	-->	dorfsmay (dorfsmay@moz-477out.ipv6.telus.net) has joined #rust-beginners
2018-10-01 15:28:00	<--	sp1ff_ (sp1ff@moz-aac03k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 15:28:30	HowDidIGetHere	This world is so vast, I just don't know where to start. I'd hate to start somewhere that's meant to be a mid zone rather than a starting zone.. if that makes sense
2018-10-01 15:28:54	num8er	how
2018-10-01 15:30:14	num8er	let's make this discussion to private chat
2018-10-01 15:30:22	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 15:31:04	-->	arunkumar413 (arunkumar41@moz-jmf.5u4.44.157.IP) has joined #rust-beginners
2018-10-01 15:32:17	kimundi	HowDidIGetHere: In principle Rust ought to be useable for that, the issue is that GUI library are still a pain point, because GUI libraries in general are
2018-10-01 15:32:41	-->	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has joined #rust-beginners
2018-10-01 15:33:46	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 15:34:19	HowDidIGetHere	Are you able to briefly tell me what GUI libraries are? If it's too complex for a quick overview, I can most certainly go research it.
2018-10-01 15:34:21	<--	dmc (dmc@moz-vii1ts.east.verizon.net) has quit (Quit: WeeChat 2.2)
2018-10-01 15:34:38	HowDidIGetHere	I just like to hear it from people that understand it and aren't going to assume I know a lot, when I don't
2018-10-01 15:35:00	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 15:35:47	kimundi	HowDidIGetHere: What they are in general, or which exists?
2018-10-01 15:36:10	kimundi	The latter I'm not really familiar with - I know there are bindings for GTK and qt
2018-10-01 15:36:23	<--	DaQue (Mutter@moz-ap3.4hv.116.199.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 15:36:39	HowDidIGetHere	In general, what are they?
2018-10-01 15:37:25	kimundi	Uhm, well libraries for setting up a graphical user interface. Eg, for a desktop, stuff like windows, the control elements in it, text boxes, etc
2018-10-01 15:38:07	-->	dmc (dmc@moz-vii1ts.east.verizon.net) has joined #rust-beginners
2018-10-01 15:38:08	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 15:38:08	HowDidIGetHere	Does each programming language have it's own GUI libraries, or are they shared?
2018-10-01 15:38:11	kimundi	Basically you somehwo describe how your windows is going to look via code or via some config file, and then have code for reacting to interactions with it. Eg, "run this code if the user clicked that button"
2018-10-01 15:38:51	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-10-01 15:38:54	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-01 15:39:00	kimundi	HowDidIGetHere: In general GUI is a hugely complicated topic, so every language inventing theor own libraries is a non-starter
2018-10-01 15:39:03	-->	ianpartridge (ipartrid@moz-h7jpmk.emea.ibm.com) has joined #rust-beginners
2018-10-01 15:40:12	HowDidIGetHere	I completely forgot about the fact that they are specified in the code itself
2018-10-01 15:40:14	kimundi	HowDidIGetHere: Usually you want something that binds to the native wa<y for your platform. Eg, on windows, you would want a library that wraps the windows control elements. On platforms where is no default, like Linux, you usually have a few big portable libraries like GTK and QT that do their own thing
2018-10-01 15:40:27	-->	Naman (Mibbit@moz-abu.lkb.167.139.IP) has joined #rust-beginners
2018-10-01 15:40:29	WindowsBunny	Qt also generally works alright on Windows
2018-10-01 15:40:43	WindowsBunny	GTK is not great on Windows
2018-10-01 15:41:08	HowDidIGetHere	Luckily, I am strictly Windows so I don't have to worry about cross platform compatibility.
2018-10-01 15:41:25	kimundi	Well, then I leave WindowsBunny to it :D
2018-10-01 15:41:34	WindowsBunny	HowDidIGetHere: Great, how comfortable are you with working with windows API directly?
2018-10-01 15:41:42	kimundi	(Sorry, but I'm unfamiliar with both Windows adn GUI programming in general ;))
2018-10-01 15:41:51	ilmari	there's also wxWidgets, which uses native widgets on windows/mac and gtk on other unixes
2018-10-01 15:41:59	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-10-01 15:42:02	HowDidIGetHere	Well, I'm extremely new to all of this so I am mostly open to anything
2018-10-01 15:42:13	WindowsBunny	HowDidIGetHere: Do you know C or C++?
2018-10-01 15:42:27	<--	num8er (num8er@moz-plq.kta.168.178.IP) has quit (Connection closed)
2018-10-01 15:43:11	kimundi	ilmari: Every time I try to use one of those "small portable" gui libraries I immediatly run into a ton of weird issue that prvent me from even getting started with them, so I never was able to evaluate that option :P
2018-10-01 15:43:11	-->	Naman_Chikara (Thunderbird@moz-at0vd8.1gml.q9hj.4053.2409.IP) has joined #rust-beginners
2018-10-01 15:43:15	WindowsBunny	Because if you don't, trying to make a GUI with winapi directly might be a bit too much unsafe all at once
2018-10-01 15:43:28	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 15:43:36	HowDidIGetHere	I do not. I was looking at C++, but when I was wandering around Barnes & Noble I noticed a book about Rust
2018-10-01 15:44:00	WindowsBunny	holy shit, that's the first time I ever heard of someone learning about Rust that way
2018-10-01 15:44:18	WindowsBunny	we made it chaps, we are now a big name programming language with books at B&N!
2018-10-01 15:44:35	kimundi	HowDidIGetHere: Does what you want to do require a GUI? Because if you just want to write some small tool, then the commandline might be vastly simpler to get started with
2018-10-01 15:45:05	WindowsBunny	For learning Rust I seriously recommend doing command line first
2018-10-01 15:45:14	WindowsBunny	and then once you do know Rust, then you can move on to GUIs
2018-10-01 15:45:35	HowDidIGetHere	I think it was this book: https://www.amazon.com/Rust-Programming-Language-Steve-Klabnik-ebook/dp/B071YKRV8Q/ref=sr_1_fkmr0_2?ie=UTF8&qid=1538405151&sr=8-2-fkmr0&keywords=learn+rust+programming
2018-10-01 15:45:48	WindowsBunny	that's an adorable cover
2018-10-01 15:45:57	-->	dethos (dethos@moz-joj.gtm.138.213.IP) has joined #rust-beginners
2018-10-01 15:46:28	HowDidIGetHere	I already have bat and ps to do it for me, but I want to move past that to make it more accessible for others to use. That's why I want to start using a GUI
2018-10-01 15:47:08	HowDidIGetHere	WindowsBunny: I almost got it, but it was $40 and I wasn't sure if I should do that or C++
2018-10-01 15:47:11	-->	gnzlbg_ (gnzlbg@moz-c8j.gvm.130.134.IP) has joined #rust-beginners
2018-10-01 15:47:33	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-01 15:47:44	WindowsBunny	I haven't touched books on programming since I was little when I borrowed books on web development from the library...
2018-10-01 15:48:29	<--	mib_39psit (Mibbit@moz-ia5.51e.127.118.IP) has left #rust-beginners
2018-10-01 15:48:30	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 15:48:39	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-10-01 15:48:57	HowDidIGetHere	I've tried looking online, but most of the stuff that I find seems to assume I have pre existing knowledge on the subject which I don't
2018-10-01 15:49:00	kimundi	HowDidIGetHere: For what it's worth, that book is aviable for free as a website from the main rust page
2018-10-01 15:49:11	HowDidIGetHere	These books are written mostly for beginners
2018-10-01 15:49:28	kimundi	https://doc.rust-lang.org/book/
2018-10-01 15:49:32	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 15:50:19	HowDidIGetHere	I'm actually looking at that right now
2018-10-01 15:50:28	<--	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 15:51:23	HowDidIGetHere	I do a lot better learning from a book because it's a tangible object, rather than virtual, that I can't as easily pulled away from
2018-10-01 15:51:35	<--	gnzlbg_ (gnzlbg@moz-c8j.gvm.130.134.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 15:51:51	HowDidIGetHere	But there's no reason to not read online if I can. I'm definitely going to have to save this link though
2018-10-01 15:52:08	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-10-01 15:53:32	<--	Naman_Chikara (Thunderbird@moz-at0vd8.1gml.q9hj.4053.2409.IP) has quit (Client exited)
2018-10-01 15:53:51	<--	danreeves (localghost@moz-lcb.hel.31.2.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 15:54:16	WindowsBunny	HowDidIGetHere: would you rather use a higher level GUI library, or would you rather work with the nitty gritty unsafe windows api stuff directly?
2018-10-01 15:54:47	-->	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has joined #rust-beginners
2018-10-01 15:54:48	-->	Naman_Chikara (Thunderbird@moz-at0vd8.1gml.q9hj.4053.2409.IP) has joined #rust-beginners
2018-10-01 15:54:51	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 15:54:53	<--	Naman_Chikara (Thunderbird@moz-at0vd8.1gml.q9hj.4053.2409.IP) has left #rust-beginners
2018-10-01 15:55:01	-->	Naman_Chikara (Thunderbird@moz-at0vd8.1gml.q9hj.4053.2409.IP) has joined #rust-beginners
2018-10-01 15:55:25	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-10-01 15:56:35	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-10-01 15:56:51	-->	shmoo (Mibbit@moz-5q6.aol.149.169.IP) has joined #rust-beginners
2018-10-01 15:59:28	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 16:00:32	<--	tasansga (ansgar@moz-oucppq.connect.netcom.no) has quit (Quit: Leaving.)
2018-10-01 16:00:59	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-10-01 16:01:07	-->	num8er (num8er@moz-plq.kta.168.178.IP) has joined #rust-beginners
2018-10-01 16:01:29	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 16:03:31	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 16:04:50	<--	Urania (textual@moz-83q96u.sph.umich.edu) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-01 16:04:58	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 16:05:40	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 16:06:45	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 16:06:45	<--	PeterRabbit (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 16:06:45	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 16:07:14	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 16:08:11	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 16:08:13	<--	paulvt (paul.van.ti@moz-sseuk3.fb56.nn7d.a446.2a02.IP) has quit (Client exited)
2018-10-01 16:08:16	--	WindowsBunny1 is now known as WindowsBunny
2018-10-01 16:08:47	-->	Simon (Simon@moz-7lpj3l.dynamic.mnet-online.de) has joined #rust-beginners
2018-10-01 16:09:18	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 16:09:20	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-10-01 16:10:07	-->	Cardano (textual@moz-dfalls.PUBLIC.monkeybrains.net) has joined #rust-beginners
2018-10-01 16:10:52	<--	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has quit (Quit: WeeChat 2.2)
2018-10-01 16:10:56	-->	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has joined #rust-beginners
2018-10-01 16:12:16	-->	javiz8 (Mibbit@moz-oeit2o.static.sonic.net) has joined #rust-beginners
2018-10-01 16:12:30	shmoo	I want to make an android application in rust ... where do I start ?
2018-10-01 16:13:05	<--	num8er (num8er@moz-plq.kta.168.178.IP) has quit (Connection closed)
2018-10-01 16:13:10	<--	Cardano (textual@moz-dfalls.PUBLIC.monkeybrains.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 16:13:26	-->	num8er (num8er@moz-plq.kta.168.178.IP) has joined #rust-beginners
2018-10-01 16:15:14	-->	jihi (jih@moz-uu4955.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-01 16:16:21	Alexendoo	shmoo: There are some JNI binding crates to be able to use rust in an android app, but you wouldn't really be able to write the whole thing in rust I don't think
2018-10-01 16:16:29	javiz8	I'm looking for a way to zip two vectors based on the longest of the two, that repeats the last elements of the shortest. For example, zipping [0,1] and [0,1,2,3] would give [(0,0), (1,1), (1,2), (1,3)]
2018-10-01 16:16:46	liw	I have a numeric uid and gid, can I look up the username and group name in Rust? it would  be getpwuid in C
2018-10-01 16:17:28	<--	num8er (num8er@moz-plq.kta.168.178.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 16:17:57	-->	rustusr (rustusr@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-01 16:18:06	--	rustusr is now known as ru
2018-10-01 16:18:40	ru	i have a struct which has another struct in it, which I want to return from a function impl for the struct, how do i do it ?
2018-10-01 16:18:52	liw	I've been pointed at the passwd crate
2018-10-01 16:19:09	<--	Simon (Simon@moz-7lpj3l.dynamic.mnet-online.de) has quit (Quit: Leaving...)
2018-10-01 16:19:25	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-10-01 16:19:42	dpc1	ru: return the type of the inner struct?
2018-10-01 16:19:57	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 16:20:51	ru	struct A has an member of an Option<struct B>, I have a fn blah(&mut self...) -> struct B
2018-10-01 16:21:11	dpc1	that's right
2018-10-01 16:21:18	ilmari	ru: what is that supposed to return if the member is None?
2018-10-01 16:21:20	ru	I get cannot move out of borrowed content
2018-10-01 16:21:31	ru	it will panic
2018-10-01 16:22:08	ilmari	ru: it has to either return &B, or consume the invocant (fn blah (self, …) -> B)
2018-10-01 16:22:23	dpc1	or clone it if possible
2018-10-01 16:22:36	-->	boydjohnson (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 16:22:39	dpc1	though the other 2 options are better
2018-10-01 16:24:29	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 16:25:26	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 16:25:43	ru	ahh, I think I got it, sec
2018-10-01 16:25:50	dpc1	:)
2018-10-01 16:26:37	ru	or not..
2018-10-01 16:27:13	ru	let's say the fn returns Result<Option<B>, ...>
2018-10-01 16:27:23	dpc1	okay and
2018-10-01 16:27:35	<--	arunkumar413 (arunkumar41@moz-jmf.5u4.44.157.IP) has quit (Quit: Leaving)
2018-10-01 16:27:52	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 16:27:55	ru	let's say the fn returns Result<Option<B>, ...>
2018-10-01 16:28:23	ru	it's in a trait which requires that B will be defined in the impl as type Item=B
2018-10-01 16:28:39	ru	if I change the =B to =&B, I get expected lifetime parameter
2018-10-01 16:28:39	WindowsBunny	shmoo: In general you'll write a lot of core logic and compute in Rust, while the android specific bits and GUI stuff will be written in Java, and you'll JNI them together
2018-10-01 16:29:20	ilmari	ru: https://play.rust-lang.org/?gist=470d0f8d3597cc844729e666cebba4c2&version=stable&mode=debug&edition=2015
2018-10-01 16:30:28	ilmari	ru: type Item = B; fn foo (&self, …) -> &Item; should work
2018-10-01 16:31:12	-->	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has joined #rust-beginners
2018-10-01 16:31:54	ru	the fn impl by the trait is defined as -> Result<Option<Self::Item>, Self::Error>;
2018-10-01 16:31:55	ru	I can't change it
2018-10-01 16:31:57	<--	Fr0stBit (theartist@moz-2g19h5.okeanos.grnet.gr) has quit (Ping timeout: 121 seconds)
2018-10-01 16:32:29	-->	theartist (theartist@moz-2g19h5.okeanos.grnet.gr) has joined #rust-beginners
2018-10-01 16:32:56	<--	dethos (dethos@moz-joj.gtm.138.213.IP) has quit (Quit: ciau)
2018-10-01 16:34:36	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-01 16:35:13	-->	nickhs (nickhs@moz-252ioj.rl6p.hsii.2000.2604.IP) has joined #rust-beginners
2018-10-01 16:35:47	ru	?
2018-10-01 16:36:51	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 16:36:57	-->	mib_0nmsc5 (Mibbit@moz-c81.hmu.38.77.IP) has joined #rust-beginners
2018-10-01 16:37:26	-->	oms (oms@moz-baj45g.dyn.telefonica.de) has joined #rust-beginners
2018-10-01 16:37:27	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 16:37:27	<--	mib_0nmsc5 (Mibbit@moz-c81.hmu.38.77.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 16:37:58	ilmari	if your struct member is already an Option<B>, what's the problem?
2018-10-01 16:38:00	-->	mib_vx5m0e (Mibbit@moz-hobl6a.rev.sfr.net) has joined #rust-beginners
2018-10-01 16:38:39	<--	mib_vx5m0e (Mibbit@moz-hobl6a.rev.sfr.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 16:39:04	-->	Eragon (Eragon@moz-v9k0js.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 16:39:36	-->	siddhartharao17 (siddharthar@moz-u06k9a.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-10-01 16:39:44	shmoo	I am interested in making webpages with rust ... what do I need to know apart from rust ?
2018-10-01 16:40:41	dpc1	shmoo: http://www.arewewebyet.org/
2018-10-01 16:40:56	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Ping timeout: 121 seconds)
2018-10-01 16:41:17	<--	Arcaelyx (Arcaelyx@moz-5sb.7vn.121.144.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 16:43:28	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 16:44:02	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 16:44:29	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 16:46:13	<--	ianpartridge (ipartrid@moz-h7jpmk.emea.ibm.com) has quit (Quit: leaving)
2018-10-01 16:46:50	ru	ilmari: that I get can't move out of borrowed context
2018-10-01 16:47:05	dpc1	ru: you will have to consume self
2018-10-01 16:48:21	<--	safwan (uid93576@moz-e1sk3h.brockwell.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-01 16:48:55	-->	Arcaelyx (Arcaelyx@moz-5sb.7vn.121.144.IP) has joined #rust-beginners
2018-10-01 16:49:42	<--	kinetik (kinetik@moz-5v5.8kl.99.121.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 16:50:59	-->	a_chou (Thunderbird@moz-af1pa6.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-10-01 16:52:23	ilmari	dpc1: but if the trait specifies that the method takes &self, that won't work
2018-10-01 16:52:33	dpc1	fair
2018-10-01 16:52:57	ilmari	ru: you could .take() the B out of the option, but then you can only call this method once
2018-10-01 16:54:28	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 16:55:30	dpc1	or clone it
2018-10-01 16:55:33	ilmari	that does require the method to have &mut self, not &self
2018-10-01 16:55:56	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-01 16:56:05	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 16:56:12	ilmari	ru: can you expain a bit more which trait you're implementing, and what your struct is?
2018-10-01 16:57:01	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 16:57:50	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-01 16:57:59	dpc1	clone requires mut? 
2018-10-01 16:58:48	<--	a_chou (Thunderbird@moz-af1pa6.ri7p.2kuh.0182.2601.IP) has quit (Client exited)
2018-10-01 16:58:50	Moongoodnull{K}	nah, but take() does
2018-10-01 16:58:52	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 16:58:58	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 16:59:12	dpc1	:)
2018-10-01 17:01:12	ru	it has &mut self
2018-10-01 17:01:16	ru	i dont want to clone it
2018-10-01 17:01:19	ru	sec, let me try
2018-10-01 17:01:39	dpc1	ah okay
2018-10-01 17:01:52	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 17:01:58	ru	ahh .take() was what I needed
2018-10-01 17:02:32	ilmari	ru: but as I said, that can only be called once, since it repaces the Some<T> with a None
2018-10-01 17:02:36	ru	what happens when I call it again ? can't I just reassign B next time ?
2018-10-01 17:04:46	-->	sp1ff_ (sp1ff@moz-tvt9nn.u583.gjp6.0119.2620.IP) has joined #rust-beginners
2018-10-01 17:05:07	<--	DeltaManiac (DeltaManiac@moz-jdf.a77.171.122.IP) has quit (Quit: Leaving)
2018-10-01 17:06:39	ru	any pointers to a good dynamic dispatch framework in rust ?
2018-10-01 17:06:43	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-10-01 17:07:18	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 17:07:44	ilmari	ru: .take() replaces replaces the Some(T) with a None, so the next time you call it on the same value it will return None
2018-10-01 17:08:07	ru	ahh, thats ok, since I make sure to re-init it on next return
2018-10-01 17:08:15	Moongoodnull{K}	ru: Rust already has dynamic dispatch through trait objects
2018-10-01 17:08:36	ru	(but it's in a for loop with a state machine, which is why I put it inside the member list, altough I could probebly define it as a local in the start of the function)
2018-10-01 17:08:46	-->	Jezza (Jezza@moz-o1v.kut.206.92.IP) has joined #rust-beginners
2018-10-01 17:08:57	ru	Moongoodnull{K}: but I know nothing about what will be called
2018-10-01 17:09:36	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 17:10:20	ru	basically I want to convert a bytestream containing a method and arguments, to some function call
2018-10-01 17:10:30	ru	method name, and function call in some struct
2018-10-01 17:10:33	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-10-01 17:10:53	ru	so I guess I need to macro the struct to get it's function defintions / arguments and create my own dynamic dispatch object
2018-10-01 17:11:01	ru	the question is, is there some ready crate that can do this for me
2018-10-01 17:11:16	<--	mib_r0y830 (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 17:11:18	Moongoodnull{K}	sounds like RPC?
2018-10-01 17:11:21	ru	sort of
2018-10-01 17:11:24	ru	actually yes
2018-10-01 17:11:29	ru	but a custom byte stream
2018-10-01 17:11:48	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 17:11:54	Moongoodnull{K}	(I hope you don't mean that the bytestream can contain actual code to execute, rather than just some way of referencing a method and some serialized arguments)
2018-10-01 17:12:03	ru	indeed
2018-10-01 17:12:35	<--	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has quit (Quit: Leaving.)
2018-10-01 17:13:05	-->	kinetik (kinetik@moz-5v5.8kl.99.121.IP) has joined #rust-beginners
2018-10-01 17:13:05	ru	I want to map function name from the byte stream calling some function in a predefined object
2018-10-01 17:13:22	ru	(which has that name)
2018-10-01 17:13:49	<--	danreeves (localghost@moz-52pevn.range86-141.btcentralplus.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 17:15:25	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-01 17:16:46	-->	a_chou (Thunderbird@moz-af1pa6.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-10-01 17:18:26	-->	mortona (Mibbit@moz-754.e2l.227.50.IP) has joined #rust-beginners
2018-10-01 17:18:32	<--	yann-kaelig (yann-kaelig@moz-0hqbua.dynamic.chello.pl) has quit (Client exited)
2018-10-01 17:18:33	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-10-01 17:19:26	<--	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has quit (Quit: Leaving)
2018-10-01 17:22:00	<--	Naman (Mibbit@moz-abu.lkb.167.139.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 17:24:01	<--	a_chou (Thunderbird@moz-af1pa6.ri7p.2kuh.0182.2601.IP) has quit (Connection closed)
2018-10-01 17:24:04	-->	a_chou (Thunderbird@moz-af1pa6.ri7p.2kuh.0182.2601.IP) has joined #rust-beginners
2018-10-01 17:24:35	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 17:26:36	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Ping timeout: 121 seconds)
2018-10-01 17:28:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-01 17:28:28	-->	jwat (Mibbit@moz-vhekld.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 17:28:37	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-10-01 17:29:35	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Quit: Leaving)
2018-10-01 17:30:26	<--	dalley (dalley@moz-sj3bja.dyn6.twc.com) has quit (Connection closed)
2018-10-01 17:30:34	-->	dalley (dalley@moz-fh5sdh.dyn6.twc.com) has joined #rust-beginners
2018-10-01 17:30:34	<--	shmoo (Mibbit@moz-5q6.aol.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 17:30:44	<--	boydjohnson (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-10-01 17:31:48	-->	Lisa90 (Mibbit@moz-16m.v60.252.185.IP) has joined #rust-beginners
2018-10-01 17:32:12	Lisa90	hola
2018-10-01 17:33:41	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 17:34:07	Moongoodnull{K}	Wait for it…
2018-10-01 17:34:25	HowDidIGetHere	WindowsBunny: High level GUI would probably be what I aim for I think
2018-10-01 17:35:44	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 17:36:10	<--	fsasm (fsasm@moz-u0aefh.dynamic.surfer.at) has quit (Ping timeout: 121 seconds)
2018-10-01 17:37:43	<--	siddhartharao17 (siddharthar@moz-u06k9a.79gu.6ej8.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 17:38:08	-->	mib_tytx2b (Mibbit@moz-o0q.97k.149.169.IP) has joined #rust-beginners
2018-10-01 17:38:25	mib_tytx2b	How do I GET BADGE OF A CRATE IN RUST ?
2018-10-01 17:39:32	Yaniel	which nadge?
2018-10-01 17:39:33	<--	sp1ff_ (sp1ff@moz-tvt9nn.u583.gjp6.0119.2620.IP) has quit (Connection closed)
2018-10-01 17:39:37	Yaniel	*badge
2018-10-01 17:40:23	dpc1	i guess they are talking about readme badges
2018-10-01 17:40:31	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 17:40:36	Yaniel	yeah and there's like 5 very common ones
2018-10-01 17:41:10	mib_tytx2b	the badge that shows which crate is being used like the ones in https://rust-lang-nursery.github.io/rust-cookbook/intro.html
2018-10-01 17:41:12	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 17:41:56	<--	jwat (Mibbit@moz-vhekld.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 17:41:59	Arnavion	mib_tytx2b:   https://docs.rs/about   The "Badges" section
2018-10-01 17:43:05	Arnavion	Hmm, or I guess that's a crates.io badge instead
2018-10-01 17:43:08	-->	num8er (num8er@moz-9amhn4.moldtelecom.md) has joined #rust-beginners
2018-10-01 17:43:21	 *	Moongoodnull{K} …tilts head at Lisa90.
2018-10-01 17:44:00	<--	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-10-01 17:44:02	-->	SenasOzys_ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-10-01 17:44:06	mib_tytx2b	Arnavion yep I need a crates.io badge
2018-10-01 17:44:10	<--	oln (oln@moz-hnlvb2.customer.cdi.no) has quit (The TLS connection was non-properly terminated.)
2018-10-01 17:44:10	Arnavion	mib_tytx2b: Yeah it's   https://img.shields.io/crates/v/rand.svg?label=rand
2018-10-01 17:44:34	mib_tytx2b	Thanks :)
2018-10-01 17:44:49	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-10-01 17:44:52	-->	jeenalee (uid168853@moz-gd9146.charlton.irccloud.com) has joined #rust-beginners
2018-10-01 17:46:04	HowDidIGetHere	?
2018-10-01 17:46:30	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 17:47:34	HowDidIGetHere	Can anyone tell me the IRC link to this channel?
2018-10-01 17:48:33	Moongoodnull{K}	irc.mozilla.org/#rust-beginners ?
2018-10-01 17:48:44	dowwie	I think this Rust 2018 guide belongs in the topic of this channel.  Thoughts?   https://rust-lang-nursery.github.io/edition-guide/rust-2018
2018-10-01 17:48:49	Moongoodnull{K}	there's not really a good URI scheme for IRC
2018-10-01 17:48:54	-->	siddhartharao17 (siddharthar@moz-u06k9a.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-10-01 17:49:35	Moongoodnull{K}	one of them (the official one?) has an implicit # at the beginning, which means you can only generate links to channels whose names start with #
2018-10-01 17:49:49	Moongoodnull{K}	and it's confusing if the channel's name starts with /more than one/ #
2018-10-01 17:50:30	Moongoodnull{K}	and if you start a competing scheme interpretation that /doesn't/ do that, everything is inconsistent and it's all bad >:(
2018-10-01 17:50:50	<--	moltonel (moltonel@moz-a2g.1fg.101.89.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 17:51:30	Moongoodnull{K}	honestly, the best representation is probably `#rust-beginners on irc.mozilla.org`
2018-10-01 17:51:34	HowDidIGetHere	I really want to use a client instead of the webpage because I accidentally close my webpage all the time lol
2018-10-01 17:51:50	dpc1	xD
2018-10-01 17:52:10	kimundi	HowDidIGetHere: If you are on windows, I've made good experiences with hexchat
2018-10-01 17:52:20	dpc1	there are plenty of clients some of them like weechat run through the terminal (shouldn't be a problem unless you close your terminal tabs as well xD )
2018-10-01 17:52:25	HowDidIGetHere	ARe you connected to this channel with it?
2018-10-01 17:52:35	<--	Lisa90 (Mibbit@moz-16m.v60.252.185.IP) has quit (G-Lined: no spamming here)
2018-10-01 17:52:46	Moongoodnull{K}	THERE it is!
2018-10-01 17:52:49	kimundi	dpc1: Pff, fancy terminals with tabs
2018-10-01 17:52:49	<--	Naman_Chikara (Thunderbird@moz-at0vd8.1gml.q9hj.4053.2409.IP) has quit (Client exited)
2018-10-01 17:52:58	<--	orium (fulano@moz-9mu.6i1.35.193.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 17:52:59	dpc1	xD
2018-10-01 17:53:00	 *	emerentius uses hexchat
2018-10-01 17:53:08	Moongoodnull{K}	Lisa90: https://youtu.be/sPW9ki-IfZ8?t=0m45m17s
2018-10-01 17:53:09	kimundi	HowDidIGetHere: Yeah, I'm using it on my linux machine
2018-10-01 17:53:33	HowDidIGetHere	I have nettalk right now, I just don't know this IRC link
2018-10-01 17:53:52	Moongoodnull{K}	HowDidIGetHere: weechat is best client >.>
2018-10-01 17:53:55	kimundi	HowDidIGetHere: As others have said, there is no real "irc link" format
2018-10-01 17:54:12	<--	damiano (quassel@moz-1rie8v.pibit.ch) has quit (Connection closed)
2018-10-01 17:54:17	kimundi	You connect to a channel X on a network Y ;D
2018-10-01 17:54:18	<--	liquidnight (marcus@moz-p5pvmh.8e6g.pb3k.0c23.2a01.IP) has quit (Connection closed)
2018-10-01 17:54:22	Moongoodnull{K}	oh, dpc1 already mentioned weechat :D
2018-10-01 17:54:36	kimundi	IRCCloud is good as well, supposedly
2018-10-01 17:54:45	Moongoodnull{K}	people like irccloud
2018-10-01 17:54:50	Moongoodnull{K}	people who are not me
2018-10-01 17:55:30	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 17:55:34	dpc1	Moongoodnull{K}: :)
2018-10-01 17:55:56	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 17:56:07	-->	boydjohnson (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 17:56:34	mortona	i was curious why in rust i need a method's self argument to be 
2018-10-01 17:56:45	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 17:56:55	mortona	"&self" as opposed to just "self" (prepending mut when needed)
2018-10-01 17:56:58	-->	damiano (quassel@moz-1rie8v.pibit.ch) has joined #rust-beginners
2018-10-01 17:57:06	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 17:57:24	-->	tallpants (tallpants@moz-62h.7lg.167.122.IP) has joined #rust-beginners
2018-10-01 17:57:33	-->	WindowsBunny1 (Bunny@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-10-01 17:57:58	dpc1	mortona: you can still use self, depends on whether you want to consume "self" or just borrow it
2018-10-01 17:58:04	Moongoodnull{K}	mortona: writing `self` there consumes the thing; `&self` just borrows it
2018-10-01 17:58:16	Moongoodnull{K}	(`&mut self` borrows it /mutably/)
2018-10-01 17:58:41	Moongoodnull{K}	tbh it should've been `ref self` instead of `&self` :(
2018-10-01 17:58:51	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 17:58:51	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 17:58:55	tallpants	How do you choose between using an enum and using a struct? Like, under what circumstances is an enum a better choice than a struct and  vice versa?
2018-10-01 17:59:33	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 17:59:36	Moongoodnull{K}	tallpants: structs are /always/ combinations of their fields. enums are /one of/ their variants (which can contain fields)
2018-10-01 17:59:50	-->	nineczar (nate@moz-4r8jk7.ma.comcast.net) has joined #rust-beginners
2018-10-01 17:59:52	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Ping timeout: 121 seconds)
2018-10-01 18:00:09	--	WindowsBunny1 is now known as WindowsBunny
2018-10-01 18:00:36	Moongoodnull{K}	tallpants: a Vec is /always/ a pointer to a heap allocation, the length of the allocation, and the number of values stored in it. An Option is /either/ Some value, or None.
2018-10-01 18:00:45	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 18:00:48	<--	jperras (jperras@moz-d8mscg.ln67.g62t.1970.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 18:01:07	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-10-01 18:01:24	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 18:01:31	tallpants	So if something will always have the same structure, then use a struct, but if the structure depends on what type of thing it is, then use an enum?
2018-10-01 18:01:48	Moongoodnull{K}	Not just the structure, but also…uhhhh…
2018-10-01 18:01:56	dpc1	struct is more for "structures" where you have types under it and some functions
2018-10-01 18:02:10	dpc1	enums are more for when you have different types and you want to wrap them as one type so that the user can choose either one
2018-10-01 18:02:25	mortona	awesome. thanks!
2018-10-01 18:03:04	tallpants	That makes sense, Moongoodnull{K} and dpc1 thanks guys!
2018-10-01 18:03:29	Moongoodnull{K}	tallpants: it makes sense to have different enum variants with the same structure (often that structure is “nothing”). ErrorKind, for example, has /a ton of/ variants with one structure, all meaning different things.
2018-10-01 18:03:34	kimundi	tallpants: You use a enum if your type should store either of a number of different states. Simples example would be to imagine a integer as a enum of all possible values 0, 1, 2, 3...
2018-10-01 18:04:22	kimundi	A struct on the other hand is for grouping multiple pieces of data together, like a tuple
2018-10-01 18:04:35	kimundi	Dpeneding on what the type should store, you usually combine both as needed
2018-10-01 18:04:53	tallpants	So in some weird sense, enums are like subtype structs? 
2018-10-01 18:04:59	kimundi	Eg, you might have a struct with a enum field, or a enum where each case contains a more complext struct, etc
2018-10-01 18:05:44	-->	moose (Mibbit@moz-pitbjq.bredband.comhem.se) has joined #rust-beginners
2018-10-01 18:05:54	kimundi	tallpants: You _could_ see them as defining a class hierachy in the classical OOP sense: the enum is the parent class, and each variant a subclass of it. There are many detail differences though
2018-10-01 18:05:56	<--	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 18:05:56	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 18:06:01	Moongoodnull{K}	tallpants: a struct is like an enum with exactly one variant.
2018-10-01 18:06:02	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-01 18:06:20	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 18:06:24	kimundi	Like it being a fixed number of possible variants, and not needing pointer indirection/heap allocation to make the memroy layout work out
2018-10-01 18:06:35	Moongoodnull{K}	kimundi: ehhhhhh.
2018-10-01 18:06:52	Moongoodnull{K}	…well, I guess, if the “superclass” is strictly abstract :P
2018-10-01 18:07:00	Moongoodnull{K}	and with zero fields
2018-10-01 18:07:08	kimundi	Moongoodnull{K}: Scala exposes the concept of enums as "sealed class"es, so its not _that_ farfecthed :P
2018-10-01 18:07:09	Moongoodnull{K}	it's a really weird analogy though
2018-10-01 18:07:35	-->	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has joined #rust-beginners
2018-10-01 18:07:39	kimundi	Yeah, I wouldn't give it myself, but tallpants question wnet in that direction
2018-10-01 18:07:50	tallpants	I mean I understand how they're different technically - I'm wondering more in the sense of "should this domain concept make more sense modeled as a struct or modeled as an enum"
2018-10-01 18:08:05	Moongoodnull{K}	It's hard to say without knowing the concept!
2018-10-01 18:08:06	-->	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has joined #rust-beginners
2018-10-01 18:08:26	tallpants	True, but I got a pretty good idea from your answers! :D
2018-10-01 18:08:38	kimundi	tallpants: If we are very abstract, then many concepts that would require a small object hierachy in something like Java would map to a enum with way less efford
2018-10-01 18:08:45	Moongoodnull{K}	If it's always the same kind of thing with the same set of fields, struct. If it sometimes has some fields and sometimes others, or if it needs to encode information through variants, enum.
2018-10-01 18:08:58	-->	TheSilentDrifter (TheSilentDr@moz-d25.mvl.65.137.IP) has joined #rust-beginners
2018-10-01 18:09:43	Moongoodnull{K}	For me at least, the answer to /how do you know when to use a struct vs an enum?/ is /intuition./ :p
2018-10-01 18:10:11	kimundi	Yeah, you get familiar enough with the language to just recognize them as two building blocks, and combine them as needed
2018-10-01 18:10:22	<--	dalley (dalley@moz-fh5sdh.dyn6.twc.com) has quit (Ping timeout: 121 seconds)
2018-10-01 18:10:53	kimundi	tallpants: Maybe as additional info: In Rust, there is no inherent difference betwen enums and structs as far as the typesystem is concerned. But are normal types, you can implement traits for both, both can be generic, etc
2018-10-01 18:11:09	kimundi	This is different to something like C++ or Java, where enums are a more specialized weird thing
2018-10-01 18:11:14	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 18:12:52	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-10-01 18:14:07	Arnavion	something something sum vs product types
2018-10-01 18:14:44	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 18:14:45	kimundi	Yeah, those are the type-theory names for them
2018-10-01 18:15:11	kimundi	And more formal languages like Haskell just expose them as the same concept, with no explicit distinction
2018-10-01 18:15:18	Arnavion	(Product of { a: String } and { b: String } is struct S { a: String, b: String }; sum of { a: String } and { b: String } is enum E { A(String), B(String) } )
2018-10-01 18:17:35	<--	pamaury (pamaury@moz-gt59fa.mpi-sws.org) has quit (Ping timeout: 121 seconds)
2018-10-01 18:18:21	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-10-01 18:18:32	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-01 18:19:01	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 18:20:19	<--	panicbit (panicbit@moz-7vq7dg.dip0.t-ipconnect.de) has quit (Quit: Bye o/)
2018-10-01 18:21:22	 *	ilmari can never remember which of product and sum is "and" and "or"
2018-10-01 18:22:01	<--	SenasOzys_ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-10-01 18:22:22	Moongoodnull{K}	sum (enum) is or; product (struct) is and
2018-10-01 18:24:01	ilmari	I think I need to remember that it's backwards of the intuitive naming (i.e. summation is often read as "and": three and five is eight)
2018-10-01 18:24:52	Moongoodnull{K}	multiplication isn't /three or five is fifteen/ though 6_9
2018-10-01 18:24:53	tallpants	ilmari: this is one of those things where you have no issues with it until you think about it, and then you get confused as hell
2018-10-01 18:25:19	Moongoodnull{K}	they align with the bitwise operations though
2018-10-01 18:25:31	Moongoodnull{K}	1 & 0 == 1 * 0 == 0
2018-10-01 18:25:33	tallpants	I think if you make the basic distinction between arithmetic and logical ops then you're fine
2018-10-01 18:25:41	Moongoodnull{K}	1 | 0 == 1 + 0 == 1
2018-10-01 18:25:42	stephaneyfx	ilmari: You can see it as the number of values the resulting type has
2018-10-01 18:25:47	Moongoodnull{K}	(assuming a u1)
2018-10-01 18:26:00	Moongoodnull{K}	(…well, kind of)
2018-10-01 18:26:01	tallpants	3 and five is 8 means (3 * 5 == 8), but yes and yes is yes means (Y && Y == Y)
2018-10-01 18:26:35	Moongoodnull{K}	a u1 with saturating operations xD
2018-10-01 18:26:47	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 18:27:33	javiz8	I'm looking for a way to zip two vectors based on the longest of the two, that repeats the last elements of the shortest. For example, zipping [0,1] and [0,1,2,3] would give [(0,0), (1,1), (1,2), (1,3)]
2018-10-01 18:27:34	stephaneyfx	ilmari: A struct with 2 u32 fields has potentially 2^32 * 2^32 values (thus product type). An enum Foo {A(u32), B(u32)} has 2^32 + 2^32 possible values (thus sum type)
2018-10-01 18:28:27	dpc1	ilmari: in boolean logic, + is OR xD
2018-10-01 18:29:11	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-10-01 18:29:12	-->	eyans (a@moz-c05fhn.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-10-01 18:29:27	emerentius	Moongoodnull{K}: + is xor :P
2018-10-01 18:29:43	-->	KiChjang__ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 18:29:50	Moongoodnull{K}	yeah
2018-10-01 18:30:00	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 18:30:01	--	KiChjang__ is now known as KiChjang
2018-10-01 18:30:59	dpc1	xor is + with the circle arounnd it
2018-10-01 18:31:34	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-10-01 18:31:35	sarnold	but only APL programmers have that key
2018-10-01 18:31:38	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-10-01 18:31:39	-->	SenasOzys_ (SenasOzys@moz-njp.ke9.47.194.IP) has joined #rust-beginners
2018-10-01 18:31:41	sarnold	so the rest of us use +
2018-10-01 18:32:07	dpc1	fair point
2018-10-01 18:32:17	dpc1	i think even ^ is xor
2018-10-01 18:33:30	ilmari	stephaneyfx: ah, that makes sense
2018-10-01 18:33:35	<--	bzikarsky (bzikarsky@moz-qbe2d6.b-zik.de) has quit (Connection closed)
2018-10-01 18:33:36	-->	xliiv (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-10-01 18:34:01	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-10-01 18:34:08	<--	eyans (a@moz-c05fhn.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-10-01 18:34:14	-->	joni (joni@moz-94ksa6.ip-149-56-134.net) has joined #rust-beginners
2018-10-01 18:34:15	<--	grdn (garden@moz-hre5bs.bb.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-10-01 18:34:18	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-10-01 18:35:17	<--	xurtis (curtis@moz-kn8rti.unsw.edu.au) has quit (Quit: xurtis has left the building.)
2018-10-01 18:35:58	-->	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has joined #rust-beginners
2018-10-01 18:36:01	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-10-01 18:36:08	-->	Sarah (Mibbit@moz-698.e4b.223.185.IP) has joined #rust-beginners
2018-10-01 18:36:27	Sarah	Hello
2018-10-01 18:36:34	richo2	Do I misunderstand the 'static lifetime? I thought it meant "alive for the whole program, something that could be put into .rodata", but a few crates I've been using seem to imply that it can be looser than that
2018-10-01 18:37:11	-->	xurtis (curtis@moz-kn8rti.unsw.edu.au) has joined #rust-beginners
2018-10-01 18:37:18	Yaniel	hmm?
2018-10-01 18:37:56	dpc1	hi Sarah
2018-10-01 18:38:08	<--	ru (rustusr@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-01 18:38:28	-->	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-10-01 18:38:36	-->	TeeVee (TeeVee@moz-e28ajl.chf-qkr.eircom.net) has joined #rust-beginners
2018-10-01 18:38:45	Moongoodnull{K}	richo2: 'static means, roughly, /allowed to live beyond the end of main()/
2018-10-01 18:38:51	richo2	so a good example is https://docs.rs/reqwest/0.9.2/reqwest/struct.Body.html where it can take ownership of a Vec or you can give it a &'static [u8].
2018-10-01 18:39:28	richo2	Moongoodnull{K}: that's what I thought. I'll see if I can find the concrete example of when I last bumped into this, it was with hyper. That issue ^^ is currently annoying because it means allocating a new buffer for every chunk of data I want to send, instead of just reusing one that I have
2018-10-01 18:39:37	Moongoodnull{K}	richo2: for example, a Vec is 'static (footnote) because it doesn't borrow anything, so there's no reason it can't be returned all the way up to main() and beyond
2018-10-01 18:40:18	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-10-01 18:41:00	<--	a_chou (Thunderbird@moz-af1pa6.ri7p.2kuh.0182.2601.IP) has quit (Client exited)
2018-10-01 18:44:04	--	irc: disconnected from server
2018-10-01 18:47:44	-->	Kirjava (cake@moz-7e0sq4.ip-51-254-223.eu) has joined #rust-beginners
2018-10-01 18:47:44	--	Topic for #rust-beginners is "Beginner's Rust discussion, unlogged. Ask away, but please allow some time for people to respond! | Book  https://doc.rust-lang.org/book/ | Playground  https://play.rust-lang.org | Forum  https://users.rust-lang.org | Conduct  https://www.rust-lang.org/conduct.html"
2018-10-01 18:47:44	--	Topic set by niconii (nicole@moz-fg53dj.midco.net) on Thu, 26 May 2016 11:19:40
2018-10-01 18:47:44	--	Channel #rust-beginners: 1098 nicks (2 ops, 0 halfops, 1 voice, 1095 normals)
2018-10-01 18:47:47	--	Channel created on Tue, 27 Oct 2015 17:04:43
2018-10-01 18:49:09	stephaneyfx	javiz8: Better handles empty slices: https://play.rust-lang.org/?gist=00515a126f0dd5e575e39b24724fed07&version=stable&mode=debug&edition=2015
2018-10-01 18:49:58	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 18:51:04	-->	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has joined #rust-beginners
2018-10-01 18:51:05	-->	FreeMasen (FreeMasen@moz-qfcdsu.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 18:51:11	javiz8	stephaneyfx: i was trying to copy Zip and use Peekable to stop shy of the last one on the shortest vector, but i couldn't get it to work
2018-10-01 18:51:31	<--	asyncsec (asyncsec@moz-qjsqrk.dyn6.twc.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 18:52:10	<--	Orphis (orphis@moz-e3ahku.orphis.net) has quit (Ping timeout: 121 seconds)
2018-10-01 18:52:16	<--	FreeMasen (FreeMasen@moz-qfcdsu.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2018-10-01 18:52:28	-->	orium (fulano@moz-cjq57u.cable.virginm.net) has joined #rust-beginners
2018-10-01 18:52:41	-->	FreeMasen (FreeMasen@moz-qfcdsu.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 18:53:40	-->	artfwo (artfwo@moz-f0f.bt1.120.37.IP) has joined #rust-beginners
2018-10-01 18:53:41	-->	asyncsec (asyncsec@moz-udlq32.dyn6.twc.com) has joined #rust-beginners
2018-10-01 18:54:26	-->	bzikarsky (bzikarsky@moz-qbe2d6.b-zik.de) has joined #rust-beginners
2018-10-01 18:54:26	javiz8	stephaneyfx: quick question, do you know if `a.last().cloned().unwrap_or(0)` is slow? it seems like it would iterate the whole list to just get the last item
2018-10-01 18:54:42	<--	moose (Mibbit@moz-pitbjq.bredband.comhem.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 18:55:08	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 18:55:15	-->	Orphis (orphis@moz-e3ahku.orphis.net) has joined #rust-beginners
2018-10-01 18:55:41	Moongoodnull{K}	javiz8: it's calling last() on a slice, which just takes the length minus one and offsets from the beginning of the slice
2018-10-01 18:55:46	stephaneyfx	javiz8: It does not iterate. It's like a pointer offset and dereferencing.
2018-10-01 18:55:51	<--	Bakkot (Bakkot@moz-6slr16.ca.comcast.net) has left #rust-beginners
2018-10-01 18:55:58	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 18:55:59	javiz8	awesome, thanks!
2018-10-01 18:56:01	Moongoodnull{K}	it's like four instructions
2018-10-01 18:56:07	<--	HowDidIGetHere (Mibbit@moz-fptoaf.biz.rr.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 18:56:46	<--	Sarah (Mibbit@moz-698.e4b.223.185.IP) has quit (G-Lined: no spamming here)
2018-10-01 18:56:47	-->	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has joined #rust-beginners
2018-10-01 18:56:55	javiz8	sorry, i thought it was https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.last
2018-10-01 18:57:06	Moongoodnull{K}	np :)
2018-10-01 18:57:14	Moongoodnull{K}	slices don't implement Iterator, btw
2018-10-01 18:57:27	Moongoodnull{K}	(IntoIterator, yes, but /that/ doesn't have a last())
2018-10-01 18:57:59	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-10-01 18:58:22	Moongoodnull{K}	last() on a slice iterator probably does the same thing tbh (though it'll also mutate the iterator to exhaust it, so more like six instructions)
2018-10-01 18:58:56	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-01 18:59:02	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 18:59:23	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 18:59:29	javiz8	good to know, thanks! i should really learn some basic assembly to understand what the different idioms compile down to
2018-10-01 19:00:12	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 19:01:29	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-10-01 19:01:50	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 19:02:19	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 19:02:48	-->	panicbit (panicbit@moz-7vq7dg.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-01 19:03:49	<--	bzikarsky (bzikarsky@moz-qbe2d6.b-zik.de) has quit (Connection closed)
2018-10-01 19:04:06	-->	bzikarsky (bzikarsky@moz-qbe2d6.b-zik.de) has joined #rust-beginners
2018-10-01 19:05:22	<--	mib_tytx2b (Mibbit@moz-o0q.97k.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 19:06:31	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 19:06:58	<--	italic (italic@moz-rk4170.if2c.jm52.0646.2601.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 19:09:08	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 19:11:08	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 19:13:33	<--	WindowsBunny (Bunny@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 19:13:45	--	WindowsBunny1 is now known as WindowsBunny
2018-10-01 19:14:47	-->	gunther (Mibbit@moz-hs8.qlq.72.115.IP) has joined #rust-beginners
2018-10-01 19:14:53	<--	gunther (Mibbit@moz-hs8.qlq.72.115.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 19:15:36	-->	mad_hatter (mad_hatter@moz-gk1j15.upc-a.chello.nl) has joined #rust-beginners
2018-10-01 19:15:48	<--	prospector (prospector@moz-scd.iqd.179.95.IP) has quit (Quit: Prospecting gems of CS)
2018-10-01 19:16:36	<--	tallpants (tallpants@moz-62h.7lg.167.122.IP) has quit (Quit: )
2018-10-01 19:16:50	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-01 19:17:16	<--	AtumT (IRC@moz-hdt.j1m.95.179.IP) has quit (Client exited)
2018-10-01 19:18:12	-->	prospector (prospector@moz-scd.iqd.179.95.IP) has joined #rust-beginners
2018-10-01 19:18:52	-->	jbradberry (jrb@moz-mrjdh9.rlghnc.sbcglobal.net) has joined #rust-beginners
2018-10-01 19:20:53	<--	xliiv_ (xliiv@moz-qq13g2.icpnet.pl) has quit (Ping timeout: 121 seconds)
2018-10-01 19:21:15	-->	jperras (jperras@moz-jhpgjh.3qb8.c7p0.b100.2605.IP) has joined #rust-beginners
2018-10-01 19:21:29	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 19:21:34	-->	tallpants (quassel@moz-62h.7lg.167.122.IP) has joined #rust-beginners
2018-10-01 19:21:52	--	theartist is now known as Fr0stBit
2018-10-01 19:22:33	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-10-01 19:24:07	<--	tallpants (quassel@moz-62h.7lg.167.122.IP) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2018-10-01 19:24:57	-->	kilimanjaroeh (Mibbit@moz-hu8s1b.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 19:24:59	Fr0stBit	Hi again guys! So lets say my function returns Result<SomeStruct, String> and i call a library function inside a try!() that returns Result<SomeOtherStruct, LoadError> where LoadError implements Display. How can i make it to change the returned LoadError to String in the try!() macro?
2018-10-01 19:25:25	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 19:26:08	kilimanjaroeh	Hi guys, are there any signature files for the rust-init binaries? Piping curl into sh is really...offputting
2018-10-01 19:26:16	<--	num8er (num8er@moz-9amhn4.moldtelecom.md) has quit (Connection closed)
2018-10-01 19:26:45	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 19:26:53	stephaneyfx	Fr0stBit: load().map_err(|e| e.to_string())?
2018-10-01 19:27:00	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 19:27:26	stephaneyfx	Fr0stBit: Or `try!(load().map_err(|e| e.to_string()))`
2018-10-01 19:27:39	<--	boydjohnson (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-10-01 19:28:26	sarnold	kilimanjaroeh: completely agreed :(
2018-10-01 19:29:16	Fr0stBit	stephaneyfx: FANTASTIC :D!
2018-10-01 19:29:25	sarnold	kilimanjaroeh: I took the time to read the rustup script and execute those commands by hand, but the downloaded binaries aren't accessible in the same way. for those, I wrote apparmor profiles to confine what they could do, and then wrote apparmor profiles for the resulting built binaries...
2018-10-01 19:29:28	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-10-01 19:30:13	dowwie	stephaneyfx:  I gave my first rust talk last week in nyc ^_^  remember when I was just learning? (just say yes)
2018-10-01 19:30:39	stephaneyfx	dowwie: Congratulations! (yes!)
2018-10-01 19:30:47	stephaneyfx	dowwie: How did it go?
2018-10-01 19:30:53	dowwie	stephaneyfx:  went very well!
2018-10-01 19:31:14	dowwie	stephaneyfx:   I'ved averaged a talk a year (or so) but until now they've been Python related
2018-10-01 19:32:33	kilimanjaroeh	sarnold: that's a lot of hassle to go through :/ I was really hoping for a snap or some other system package
2018-10-01 19:33:07	Aankhen``	dowwie: WTG!
2018-10-01 19:33:17	<--	jperras (jperras@moz-jhpgjh.3qb8.c7p0.b100.2605.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 19:33:31	ru	if i'm writing a library code, should i ever panic or always return an error to who called me?
2018-10-01 19:33:41	Aankhen``	Return an error.
2018-10-01 19:33:59	ru	is there any tips on good error handling in rust ?
2018-10-01 19:34:01	-->	jperras (jperras@moz-qdg.seb.151.184.IP) has joined #rust-beginners
2018-10-01 19:34:15	ru	or must i be very explicit about each and every piece of errorable code
2018-10-01 19:34:36	sarnold	kilimanjaroeh: completely agreed. there *is* https://launchpad.net/~ubuntu-mozilla-security/+archive/ubuntu/rust-updates -- but it exists SOLELY to prepare firefox updates. I'm not sure I should even point it out, but there it is..
2018-10-01 19:34:36	Aankhen``	I think the `failure` crate is recommended these days: https://github.com/withoutboats/failure
2018-10-01 19:34:44	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 19:34:51	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-10-01 19:34:56	--	KiChjang_ is now known as KiChjang
2018-10-01 19:35:00	Aankhen``	ru: You should definitely be explicit about your error conditions as far as possible.
2018-10-01 19:35:19	Aankhen``	ru: It’s better to know at compile-time than discover it at runtime.
2018-10-01 19:36:30	ru	ofcourse but it's very verbose.. i rather on any error to return some error and thats it
2018-10-01 19:36:31	sarnold	ru: fwiw I think "internal errors" in your library are fair game to panic, but *everything* related to use/misuse of the API, or errors from the OS, etc., should be returned as errors to your clients
2018-10-01 19:37:32	<--	enterprisey (enterprisey@moz-nd9pn5.ip.windstream.net) has quit (Connection closed)
2018-10-01 19:38:39	-->	sp1ff_ (sp1ff@moz-7134bt.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-01 19:39:31	stephaneyfx	dowwie: Did you focus on any specific topic?
2018-10-01 19:39:36	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-10-01 19:39:39	dowwie	Aankhen``:  thx!
2018-10-01 19:41:04	dowwie	stephaneyfx:  yes, the topic was database dev with rust, specifically using rust-postgres:  https://github.com/Dowwie/pg_example   I wrote a small project for the talk too:  https://github.com/Dowwie/pg_example
2018-10-01 19:41:27	<--	SenasOzys_ (SenasOzys@moz-njp.ke9.47.194.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 19:41:35	stephaneyfx	dowwie: Nice
2018-10-01 19:41:57	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-10-01 19:42:46	dowwie	should have been the slides link above:  https://slides.com/dowwie/deck-3#/
2018-10-01 19:42:52	dowwie	stephaneyfx: ^
2018-10-01 19:44:31	-->	mib_kjne32 (Mibbit@moz-f1j7cl.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 19:44:37	kilimanjaroeh	sarnold: they do say it's not intended for general usage :(
2018-10-01 19:44:52	richo2	Am I missing something obvious? What's the idiomatic way to read into a (large) buffer from a file? Vec::with_capacity(large_number), and then file.read(&mut buf) reads no bytes
2018-10-01 19:44:54	mib_kjne32	If a &T gets passed to a function is it moved?
2018-10-01 19:45:03	kilimanjaroeh	I'll drop rust for now. maybe in a year or so they'll finally add signatures
2018-10-01 19:45:06	mib_kjne32	can that reference be used again
2018-10-01 19:45:12	@mbrubeck	richo2: vec![0; large_number]
2018-10-01 19:45:14	sarnold	kilimanjaroeh: we can hope. :)
2018-10-01 19:45:20	richo2	oh, derp
2018-10-01 19:45:22	richo2	thanks
2018-10-01 19:46:06	kimundi	mib_kjne32: &T are Copy, so passing it by valuecopies instead of moves
2018-10-01 19:46:07	Jezza	What's the idomatic way to map a bunch of elements in a Vec to another struct in parallel, while maintaining order?
2018-10-01 19:46:18	@mbrubeck	richo2: If you want to read the entire file, see also https://doc.rust-lang.org/nightly/std/fs/fn.read.html
2018-10-01 19:46:30	Jezza	So, [a, b, c] => [1, 2, 3], but in parallel.
2018-10-01 19:46:38	mib_kjne32	what about if it get's passed to .map in option?
2018-10-01 19:47:06	mib_kjne32	I'm curious because I was having trouble with borrowing then I used map and unwrap and my borrowing issues went away
2018-10-01 19:47:18	@mbrubeck	Jezza: https://docs.rs/rayon
2018-10-01 19:47:18	kimundi	Jezza: scoped threading libraries from crates.io, that can iterate over all elements of a &mut [T] in parallel
2018-10-01 19:47:19	richo2	mbrubeck: I need it in chunks. I guess then I truncate() it if it didn't completely fill the buffer? This looks like what I want
2018-10-01 19:47:43	Jezza	Oh, I should point out, in the process of mapping the structs, I do need to do requests.
2018-10-01 19:47:44	kimundi	mib_kjne32: Need more context
2018-10-01 19:47:49	-->	DaQue (Mutter@moz-uha.4hv.116.199.IP) has joined #rust-beginners
2018-10-01 19:48:01	Jezza	Basically, I have a vec of "targets", and then the map scrapes the page content from the server in question.
2018-10-01 19:48:09	@mbrubeck	richo2: Yeah, you can truncate, or operate on a slice like `&buffer[..n]`
2018-10-01 19:48:10	Jezza	And structures it nicely, etc.
2018-10-01 19:48:35	richo2	the API I'm using wants Vec, or a &'static [u8], sadly
2018-10-01 19:48:43	Jezza	mbrubeck, rayon seems like overkill.
2018-10-01 19:48:53	richo2	Lending out a slice of one vec would be *way* better in every way
2018-10-01 19:48:58	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-10-01 19:49:00	@mbrubeck	Jezza: with Rayon you can do `vec.par_iter().map(|target| scrape(target)).collect()`
2018-10-01 19:49:30	@mbrubeck	Jezza: I highly recommend it.  We use it in Firefox and Servo, and it has a very nice high-level API *and* excellent performance characteristics
2018-10-01 19:49:35	Jezza	Hm, I'll take a look at it.
2018-10-01 19:49:41	Jezza	I just don't want it to blow up my binary.
2018-10-01 19:49:48	Jezza	It's just supposed to be a small little thing.
2018-10-01 19:49:53	Jezza	But as I said, I'll take a look at it.
2018-10-01 19:50:06	-->	GreenJello (GreenJello@moz-naaatm.7di5.9nhv.8800.2600.IP) has joined #rust-beginners
2018-10-01 19:50:31	Jezza	Cheers.
2018-10-01 19:53:02	Jezza	Oh, the iterator doesn't give me ownership of the struct.
2018-10-01 19:53:18	Jezza	Is there an `iter` or `par_iter` that just gives me ownership of the struct?
2018-10-01 19:54:07	-->	SenasOzys_ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-10-01 19:54:35	-->	mib_tjmmjr (Mibbit@moz-o0q.97k.149.169.IP) has joined #rust-beginners
2018-10-01 19:55:25	Jezza	Seems like `#drain` is what I want..
2018-10-01 19:55:34	Jezza	But there's no par_drain... :|
2018-10-01 19:55:51	kimundi	https://docs.rs/rayon/1.0.2/rayon/vec/struct.IntoIter.html
2018-10-01 19:55:57	Jezza	Hm, that's over a range though, and not just an iterator.
2018-10-01 19:56:00	kimundi	maybe thats the right starting point
2018-10-01 19:56:07	DaQue	Is there a good way to read the 2018 edition of the book offline on a iPhone/iPad?
2018-10-01 19:56:28	-->	mib_hej6jk (Mibbit@moz-48irve.priv.bahnhof.se) has joined #rust-beginners
2018-10-01 19:57:00	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-01 19:57:09	Jezza	kimundi, Oh... yes... that's actually helpful.
2018-10-01 19:57:10	mib_hej6jk	Q: Is there any way to run `cargo check` without it checking external crates?
2018-10-01 19:57:11	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 19:57:30	Fr0stBit	I do a for loop and i want to move out member values from each entry, but i get 'cannot move out of borrowed content', what should i do?
2018-10-01 19:57:51	<--	Aankhen`` (notasquid@moz-q3q.k33.207.49.IP) has quit (Quit: Sorry, was AFK)
2018-10-01 19:57:56	stephaneyfx	Fr0stBit: Can you share your loop on the playground?
2018-10-01 19:59:01	Fr0stBit	https://play.rust-lang.org/?gist=9e5fd1f960b0cbe493785f42e375937a&version=stable&mode=debug&edition=2015
2018-10-01 20:00:02	stephaneyfx	Fr0stBit: Does the type of `models` have into_iter?
2018-10-01 20:00:34	Fr0stBit	stephaneyfx: Its a Vec<tobj::Model>
2018-10-01 20:00:58	stephaneyfx	Fr0stBit: So `for m in models {...}`
2018-10-01 20:01:17	stephaneyfx	Fr0stBit: To take ownership of the Vec and move the items out
2018-10-01 20:01:24	Fr0stBit	Woah, i didn't think it was that simple
2018-10-01 20:01:30	-->	niconii (nicole@moz-drnb8a.midco.net) has joined #rust-beginners
2018-10-01 20:01:30	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-10-01 20:01:35	Fr0stBit	So i should use .iter() only when taking references?
2018-10-01 20:01:54	stephaneyfx	Fr0stBit: With `.iter()`, you just borrow the Vec and so only get references to the items
2018-10-01 20:02:02	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 20:02:09	Fr0stBit	stephaneyfx: Thanks i got it
2018-10-01 20:02:26	Fr0stBit	I'm learning so much stuff from this channel :)
2018-10-01 20:02:35	stephaneyfx	Good to hear :)
2018-10-01 20:02:55	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 20:03:27	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 20:03:43	Gachuk	with a Result<T, Err>, how can I check the T for a specific condition and do something, I mean I can do a match but this so far I seem to be making a lot of coder which should be a simple if
2018-10-01 20:03:54	Gachuk	T is an enum
2018-10-01 20:04:43	stephaneyfx	Gachuk: if let Ok(Enum::Var) = x {...}
2018-10-01 20:04:49	<--	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 20:05:26	Jezza	Haha, it works.
2018-10-01 20:05:32	Jezza	Thanks, kimundi and mbrubeck.
2018-10-01 20:05:45	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:05:51	Jezza	I tried using hyper earlier, but it just involved me changing a lot of my code around.
2018-10-01 20:06:16	Debaran	Gachuk: maybe you could unwrap the Result first, if you don't have any/a lot of error conditions?
2018-10-01 20:06:59	Gachuk	I do, I dont want to unwrap, stephaneyfx that seems more on lines, didnt realise you could use if let like that. Though actually T is a struct with an enum heh
2018-10-01 20:07:01	<--	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has quit (Connection closed)
2018-10-01 20:07:21	-->	boydjohnson (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 20:07:24	<--	DaQue (Mutter@moz-uha.4hv.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:07:30	-->	Dariost (Dariost@moz-hk9.cg7.21.151.IP) has joined #rust-beginners
2018-10-01 20:07:36	-->	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has joined #rust-beginners
2018-10-01 20:07:36	mib_tjmmjr	why does my latest commit https://github.com/sn99/rust-cookbook does not work the way it is supposes to ... it is supposed to make a section as "2.2 ANSI Terminal" but it does not do it :(
2018-10-01 20:07:37	stephaneyfx	Gachuk: if let Ok(Struct {field: Enum::Var, ..}) = x {...}
2018-10-01 20:07:40	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:08:17	Gachuk	okay I've missed a chapter somewhere, what's ..
2018-10-01 20:08:21	Gachuk	anything else?
2018-10-01 20:08:34	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 20:08:35	stephaneyfx	Gachuk: The other fields of the struct you don't care about
2018-10-01 20:10:23	Gachuk	neat
2018-10-01 20:10:24	Gachuk	thank you!
2018-10-01 20:11:33	<--	Arcaelyx (Arcaelyx@moz-5sb.7vn.121.144.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 20:12:50	--	Moongoodnull{K} is now known as Moongoodboy{K}
2018-10-01 20:13:52	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-01 20:14:37	-->	virtualritz (Mibbit@moz-s686al.customers.d1-online.com) has joined #rust-beginners
2018-10-01 20:14:39	<--	sp1ff_ (sp1ff@moz-7134bt.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:14:41	-->	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 20:15:24	virtualritz	I have a bindgen issue. Similar to: https://github.com/rust-lang-nursery/rust-bindgen/issues/242
2018-10-01 20:16:54	virtualritz	I added a comment there, at the bottom. Basically bindgen can't find a system header on macOS.
2018-10-01 20:17:29	<--	mib_kjne32 (Mibbit@moz-f1j7cl.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 20:17:49	-->	num8er (num8er@moz-9amhn4.moldtelecom.md) has joined #rust-beginners
2018-10-01 20:18:12	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 20:18:20	-->	Betty30 (Betty30@moz-q1v.1p0.185.146.IP) has joined #rust-beginners
2018-10-01 20:18:30	Betty30	Hi!
2018-10-01 20:18:37	<--	Betty30 (Betty30@moz-q1v.1p0.185.146.IP) has quit (G-Lined: no spamming here)
2018-10-01 20:19:35	<--	cody1 (cody@moz-t8t5u8.2urf.4i6p.810d.2a02.IP) has quit (Quit: WeeChat 1.9.1)
2018-10-01 20:19:37	<--	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has quit (Quit: Leaving)
2018-10-01 20:19:58	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 20:20:44	-->	Arcaelyx (Arcaelyx@moz-5sb.7vn.121.144.IP) has joined #rust-beginners
2018-10-01 20:20:53	-->	pamaury (pamaury@moz-bmj.qc3.235.46.IP) has joined #rust-beginners
2018-10-01 20:21:19	<--	Arcaelyx (Arcaelyx@moz-5sb.7vn.121.144.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-01 20:21:21	<--	lundibundi (lundibundi@moz-aeo.ddu.90.212.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 20:22:06	mib_tjmmjr	why does my latest commit https://github.com/sn99/rust-cookbook does not work the way it is supposes to ... it is supposed to make a section as "2.2 ANSI Terminal" but it does not do it
2018-10-01 20:22:14	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 20:23:03	-->	hihana (Mibbit@moz-i51gjc.versanet.de) has joined #rust-beginners
2018-10-01 20:23:45	-->	Karrq (Karrq@moz-gfus0l.v4.ngi.it) has joined #rust-beginners
2018-10-01 20:23:48	Gachuk	if you want to push onto a vec and then use the value you pushed after, what's the idiomatic way to do this, with a complex type the ownership moves into the vec
2018-10-01 20:23:48	Karrq	hi everyone
2018-10-01 20:23:52	hihana	hello! i want to parse a value `x` and if that fails return an error, i can do if let or check if `is_err`, yes, but is there a one liner eg unwrap_or_else() but that allows returning?
2018-10-01 20:24:07	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-01 20:24:18	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 20:24:19	stephaneyfx	hihana: There's the `?` operator
2018-10-01 20:24:22	Karrq	unwrap_or_else() allows returning
2018-10-01 20:24:44	Karrq	you just have to define a returning closure ;)
2018-10-01 20:24:49	hihana	stephaneyfx: the ? only allows if the fn actually returns the error that the parsing would do
2018-10-01 20:25:13	hihana	i want to use a customised error
2018-10-01 20:25:18	stephaneyfx	hihana: Or if it can be converted to it, or if you convert it explicitly using map_err
2018-10-01 20:25:21	Karrq	you can match on the error
2018-10-01 20:25:33	Karrq	it's not really a one-liner
2018-10-01 20:25:58	stephaneyfx	hihana: If you want to exit when the parsing fails, your custom error type must have a value representing this failure
2018-10-01 20:26:56	stephaneyfx	hihana: So you can do something like `parse(x).map_err(|_| YourError::ParsingFailed)?`
2018-10-01 20:26:56	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 20:27:31	-->	cow-orker (foobar@moz-b1ft62.net) has joined #rust-beginners
2018-10-01 20:27:31	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 20:27:57	stephaneyfx	hihana: Another way is to define `impl From<ParserError> for YourError {...}`, and then map_err is not needed anymore
2018-10-01 20:29:01	hihana	stephaneyfx: oh, two interesting ways
2018-10-01 20:29:11	hihana	i think from is more idiomatic?
2018-10-01 20:29:18	<--	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has quit (Ping timeout: 121 seconds)
2018-10-01 20:29:30	hihana	tho the first one allows more context related mapping
2018-10-01 20:29:34	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:29:43	stephaneyfx	hihana: More useful, especially if you need the conversion in multiple places
2018-10-01 20:30:54	yath	how would I use bindgen for generating an enum { Foo = 1 } from #define __NR_foo 1 or something else nice? I found that I can return an IntKind::Custom in int_macro for ParseCallbacks, but I can't forward-declare an enum it seems. I guess I could in my int_macro write to some other external file as a side effect, but that seems rather hacky and was wondering if my approach makes sense at all
2018-10-01 20:31:21	yath	(I'm trying to generate an enum Syscall or so from the system headers)
2018-10-01 20:32:29	orph	Can someone help me figure out how to work around "the parameter type `T` may not live long enough" without using 'static. This is in a struct that has threads that process channels of type T (none are passed in as thread arguments)
2018-10-01 20:32:47	yath	there's some crate for parsing C header files, but I'm using bindgen for e.g. user_regs_struct already, so bindgen would be my obvious choice
2018-10-01 20:33:01	orph	I don't understand how a type cannot live long enough
2018-10-01 20:33:24	stephaneyfx	orph: If it holds references to other types
2018-10-01 20:33:46	orph	@stephaneyfx aren't types static by nature?
2018-10-01 20:33:56	stephaneyfx	orph: E.g. struct Foo<'a>(&'a i32);
2018-10-01 20:34:38	Karrq	mmh... Is there no way to match on a string pattern?
2018-10-01 20:34:43	Karrq	or match a string partially?
2018-10-01 20:34:57	@mbrubeck	Karrq: correct
2018-10-01 20:35:04	@mbrubeck	Well, I guess you could match on string.as_bytes()
2018-10-01 20:35:10	@mbrubeck	and then use slice patterns
2018-10-01 20:35:26	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:36:37	stephaneyfx	Karrq: Do you mean this? https://play.rust-lang.org/?gist=2487b8eeb83bb11f94201ec9928c017e&version=stable&mode=debug&edition=2015
2018-10-01 20:37:43	stephaneyfx	Karrq: And this for the partial case: https://play.rust-lang.org/?gist=d59d534a428fa6527698cbd28417ced3&version=stable&mode=debug&edition=2015
2018-10-01 20:38:00	Karrq	That won't do
2018-10-01 20:38:07	Karrq	I'll get you my match
2018-10-01 20:38:16	Karrq	https://play.rust-lang.org/?gist=597b31ff807d3d5cf3f53e4ac43ce5e0&version=stable&mode=debug&edition=2015
2018-10-01 20:38:41	 *	Moongoodboy{K} wonders if having better support for kinds of matching other than equality would be a good idea.
2018-10-01 20:38:43	Karrq	It's a webserver application (going thru The Book, Chapter 20 currently)
2018-10-01 20:39:16	@mbrubeck	Here's how you could do partial matching with slice patterns: https://play.rust-lang.org/?gist=c9c6b1da62c62890d063d446625505fc&version=nightly&mode=debug&edition=2015
2018-10-01 20:39:20	Moongoodboy{K}	like some way to express `match string begins_with { "foo" => {}, "bar" => {}, "quux" => {} }`
2018-10-01 20:39:32	 *	Karrq I wondered the same today... Maybe you can have a closure or a funcion be called with the match expression passed as the argument and enter the arm if the function returns true
2018-10-01 20:39:38	@mbrubeck	It seems like it'd be straightforward to add syntax for "string slice patterns"
2018-10-01 20:39:51	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-10-01 20:40:19	-->	creyes (Mibbit@moz-3euguv.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 20:40:56	Moongoodboy{K}	mbrubeck: that sounds like `if let "foo" = bar {}` or something, which…doesn't make a lot of sense
2018-10-01 20:40:59	Fr0stBit	Is there a les verbose way to do this? https://play.rust-lang.org/?gist=c2c5ff19e8e5e55b21f1528fe1794c5d&version=stable&mode=debug&edition=2015
2018-10-01 20:41:13	Moongoodboy{K}	considering that slice patterns are like `if let [a, b, c] = bar {}`
2018-10-01 20:41:50	@mbrubeck	Moongoodboy{K}: In nightly can also have slice patterns like `if let [1, 2, 3..] = bar {}`
2018-10-01 20:42:03	<--	mad_hatter (mad_hatter@moz-gk1j15.upc-a.chello.nl) has quit (Quit: something calls)
2018-10-01 20:42:38	@mbrubeck	and even in stable you can do `if let [1, _, 3] = bar`
2018-10-01 20:43:05	Moongoodboy{K}	what would it look like with a string instead of a slice on the left there?
2018-10-01 20:43:09	-->	sp1ff_ (sp1ff@moz-7134bt.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-01 20:43:31	dowwie	hey mbrubeck
2018-10-01 20:43:35	@mbrubeck	hey
2018-10-01 20:44:07	dowwie	mbrubeck:  are there any performance benefits to taking a functional style of chained calls rather than procedural style?
2018-10-01 20:44:35	@mbrubeck	dowwie: in most cases no
2018-10-01 20:44:56	Karrq	So you guys are saying that I can't match my input string this way and have complex argument passing, right?
2018-10-01 20:45:10	@mbrubeck	Karrq: You can't use `match` to do it, right.
2018-10-01 20:45:16	Karrq	I might do another function to spit out the URI type I need with encoded info and match that
2018-10-01 20:46:14	Gachuk	https://play.rust-lang.org/?gist=2d88afaad97a83f0022dbe26cb08e8e7&version=stable&mode=debug&edition=2015 how can I do something like this neatly. I realise I could move the push after the condition, but what if I cant because I need to do that push first
2018-10-01 20:46:23	stephaneyfx	Karrq: All you need to do for your match to work is to split your input string first. The example I showed you can be made to work. I'm modifying your code to show you.
2018-10-01 20:46:37	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 20:46:38	Karrq	thanks
2018-10-01 20:46:49	Karrq	I tried modifying mine but it became a mess
2018-10-01 20:47:19	<--	sp1ff_ (sp1ff@moz-7134bt.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:47:23	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:47:24	@mbrubeck	Gachuk: If you don't want to clone `x` then you could do https://play.rust-lang.org/?gist=5ff874f04ff50cdf1e93569cea03f91b&version=stable&mode=debug&edition=2015
2018-10-01 20:47:52	Gachuk	ye I dont wanna unwrap though because I dont want it to panic
2018-10-01 20:48:11	<--	mortona (Mibbit@moz-754.e2l.227.50.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 20:48:16	<--	mib_tjmmjr (Mibbit@moz-o0q.97k.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 20:48:17	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-10-01 20:48:29	Gachuk	also I did think maybe last, it just seems a bit icky
2018-10-01 20:48:47	Gachuk	to be fair thats a bad contrived example as really what im trying to do is use the if condition to break out of a loop while still adding to a vec
2018-10-01 20:48:49	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:48:53	Gachuk	something more like...
2018-10-01 20:49:06	<--	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-10-01 20:49:10	@mbrubeck	Gachuk: calling .last().unwrap() after .push() cannot panic
2018-10-01 20:49:10	-->	dalley (dalley@moz-sj3bja.dyn6.twc.com) has joined #rust-beginners
2018-10-01 20:49:23	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 20:49:49	Gachuk	mbrubeck: no?
2018-10-01 20:49:56	-->	jperras_ (jperras@moz-vsgqvb.t3id.69bk.b100.2605.IP) has joined #rust-beginners
2018-10-01 20:50:01	@mbrubeck	`last` can only return None if the vector is empty.
2018-10-01 20:50:05	<--	jperras (jperras@moz-qdg.seb.151.184.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 20:50:13	@mbrubeck	If you know it's not empty, then it's okay to unwrap.
2018-10-01 20:50:19	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-01 20:50:31	creyes	Hi everyone, I'm trying to learn some rust by translating a C# game to Rust and am a little stuck on Vectors, initialization. Gist here https://gist.github.com/das3in/17a2ae43553bd204a74749510e8460e5 - getting "cannot move out of indexed content: cannot move out of indexed content" on the `current_player` and `opponent_player` functions
2018-10-01 20:50:44	<--	kilimanjaroeh (Mibbit@moz-hu8s1b.abo.wanadoo.fr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 20:50:45	Gachuk	oh I see
2018-10-01 20:50:47	Gachuk	interesting...
2018-10-01 20:51:02	hihana	i still would not unwrap, i once changed code before such a bit and then got an panic during an application that should rather recover
2018-10-01 20:51:04	dpc1	or use `.expect("some error message"). i prefer that over unwrap
2018-10-01 20:51:15	sarnold	creyes: have you read The Book yet?
2018-10-01 20:51:17	stephaneyfx	Karrq: https://play.rust-lang.org/?gist=f530af36987ae6da14a7b277bcb05d29&version=stable&mode=debug&edition=2015
2018-10-01 20:51:45	stephaneyfx	Karrq: You can do something more fancy with a regex if your parsing rules are more complex, so that you can extract the relevant parts
2018-10-01 20:51:46	Gachuk	ye I'm rather wary of using unwrap anywhere tbh
2018-10-01 20:52:06	Karrq	I wanted to do everything without using external crates, if possible
2018-10-01 20:52:07	GreenJello	creyes, you either have to return &Player, which is a reference, or clone the Player and return the clone
2018-10-01 20:52:08	Gachuk	I mean in my code, I could just do the push after and also in the condition
2018-10-01 20:52:13	Gachuk	but that also seems messy
2018-10-01 20:52:13	Karrq	But afaik Regex = external crate
2018-10-01 20:52:21	Karrq	correct, stephaneyfx ?
2018-10-01 20:52:34	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Quit: WeeChat 2.2)
2018-10-01 20:52:55	stephaneyfx	Karrq: Correct. But it was just a suggestion. The code I linked does not use it and you could extend it based on your parsing rules without using regex.
2018-10-01 20:52:57	GreenJello	creyes, they type 'Player' is an owned type, and you can't have both the Vec own it and the caller of current_player own it
2018-10-01 20:53:26	GreenJello	the type*
2018-10-01 20:53:45	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 20:53:46	stephaneyfx	Gachuk: You can also write it this way: https://play.rust-lang.org/?gist=2c19480993a4477fcbfb6a00ce50b72c&version=stable&mode=debug&edition=2015
2018-10-01 20:54:32	Gachuk	so in that scenario None just does nothing
2018-10-01 20:55:42	Gachuk	thanks all, this gives me some options. I find myself finding solutions just not all seem overly idiomatic in rust
2018-10-01 20:55:43	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 20:55:47	Gachuk	so this helps:)
2018-10-01 20:56:01	GreenJello	creyes, one alternative is to remove it from the Vec, but that's not desirable here, or you can use Rc which essentially allows multiple read-only owners
2018-10-01 20:56:45	Moongoodboy{K}	Gachuk: anything that doesn't match that pattern will skip the if-let (because there's no else)
2018-10-01 20:56:57	Moongoodboy{K}	so None, yes, and also Some where the inner bar is not 1
2018-10-01 20:57:32	Gachuk	perfect
2018-10-01 20:57:33	Gachuk	thanks
2018-10-01 20:58:18	Moongoodboy{K}	mmhmm ^.^
2018-10-01 20:58:44	creyes	Oooh I see.  I was reading the compiler wrong, still getting used to the lingo. I assumed it was a vector initialization error
2018-10-01 20:58:46	creyes	Thanks everyone!
2018-10-01 21:01:24	-->	PeterRabbitIsFluffy (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 21:01:25	-->	WindowsBunny (Bunny@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-10-01 21:01:48	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 21:02:01	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 21:02:55	Moongoodboy{K}	creyes: careful with that subtraction in opponent_player()
2018-10-01 21:03:43	<--	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 21:03:43	creyes	Because the Vec could have a length other than two?
2018-10-01 21:03:49	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 21:05:36	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 21:06:31	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 21:06:42	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 21:07:04	-->	boydjohn1on (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 21:07:14	<--	boydjohnson (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-10-01 21:07:21	<--	creyes (Mibbit@moz-3euguv.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 21:07:43	-->	lundibundi (androirc@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-01 21:07:51	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-10-01 21:08:42	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Connection closed)
2018-10-01 21:09:58	Moongoodboy{K}	because if current_player_index is 0, the decrement will make it overflow to—
2018-10-01 21:10:05	Moongoodboy{K}	augh, they quit
2018-10-01 21:11:01	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-01 21:11:24	-->	liquidnight (marcus@moz-p5pvmh.8e6g.pb3k.0c23.2a01.IP) has joined #rust-beginners
2018-10-01 21:12:07	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 21:12:17	<--	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 21:12:38	-->	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has joined #rust-beginners
2018-10-01 21:12:54	-->	mib_0f8mrn (Mibbit@moz-5q6.aol.149.169.IP) has joined #rust-beginners
2018-10-01 21:13:59	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-01 21:14:25	mib_0f8mrn	I want to split a slice of let's say [34,45,65,65,76,65,22,32,23] at 76 and make 2 slices of [34,45,65,65] & [65,22,32,23] , Is there a predefined way in the rust itself ?
2018-10-01 21:15:11	-->	jperras (jperras@moz-4v7ef1.dsl.bell.ca) has joined #rust-beginners
2018-10-01 21:15:26	<--	hihana (Mibbit@moz-i51gjc.versanet.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 21:15:49	stephaneyfx	mib_0f8mrn: split_at if you know the index
2018-10-01 21:16:00	stephaneyfx	mib_0f8mrn: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at
2018-10-01 21:16:10	mib_0f8mrn	stephaneyfx: I don't know the index 
2018-10-01 21:16:28	stephaneyfx	mib_0f8mrn: There's split then
2018-10-01 21:16:40	stephaneyfx	Takes a predicate
2018-10-01 21:16:58	<--	jperras_ (jperras@moz-vsgqvb.t3id.69bk.b100.2605.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 21:17:07	<--	jperras (jperras@moz-4v7ef1.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-10-01 21:17:10	<--	jihi (jih@moz-uu4955.dip0.t-ipconnect.de) has quit (Connection closed)
2018-10-01 21:17:12	-->	jperras (jperras@moz-4v7ef1.dsl.bell.ca) has joined #rust-beginners
2018-10-01 21:17:17	stephaneyfx	Or you can find the index and use split_at
2018-10-01 21:17:24	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 21:17:34	<--	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has quit (Connection closed)
2018-10-01 21:19:28	-->	sp1ff_ (sp1ff@moz-7134bt.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-01 21:21:53	<--	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has quit (Ping timeout: 121 seconds)
2018-10-01 21:22:45	-->	jupart (coolp_jim@moz-k61.0hs.142.63.IP) has joined #rust-beginners
2018-10-01 21:22:52	-->	blackgoat_ (blackgoat@moz-9jq.rrb.116.199.IP) has joined #rust-beginners
2018-10-01 21:23:11	-->	enterprisey (enterprisey@moz-pnc2iu.cit.cornell.edu) has joined #rust-beginners
2018-10-01 21:23:33	-->	quiggle (Mibbit@moz-gah842.adsl.tpnet.pl) has joined #rust-beginners
2018-10-01 21:23:38	<--	sp1ff_ (sp1ff@moz-7134bt.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 21:23:45	<--	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 21:23:51	<--	quiggle (Mibbit@moz-gah842.adsl.tpnet.pl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 21:24:23	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-01 21:24:37	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-10-01 21:25:08	<--	Allegretto (allegretto@moz-vrrl1j.pool.digikabel.hu) has quit (Ping timeout: 121 seconds)
2018-10-01 21:25:28	-->	vladimiroff (vladimiroff@moz-5iid5r.pon.spectrumnet.bg) has joined #rust-beginners
2018-10-01 21:25:35	-->	sagax__ (sagax@moz-l5n.qh0.138.213.IP) has joined #rust-beginners
2018-10-01 21:26:06	-->	yana (Mibbit@moz-6p30f0.versanet.de) has joined #rust-beginners
2018-10-01 21:26:22	yana	i have a string, is there a way to convert it to a type that impl std::io::Read?
2018-10-01 21:26:43	stephaneyfx	yana: Cursor<String>
2018-10-01 21:26:47	sarnold	yana: if it doesn't already (it might!) check out Cursor<>
2018-10-01 21:28:36	yana	stephaneyfx and sarnold thank you two : ) works!
2018-10-01 21:28:50	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 21:29:48	-->	_blackgoat (blackgoat@moz-vqn.dq7.127.199.IP) has joined #rust-beginners
2018-10-01 21:30:20	--	sagax__ is now known as sagax
2018-10-01 21:31:49	<--	blackgoat_ (blackgoat@moz-9jq.rrb.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 21:32:21	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 21:34:02	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-10-01 21:34:03	<--	nineczar (nate@moz-4r8jk7.ma.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-01 21:35:25	<--	Dariost (Dariost@moz-hk9.cg7.21.151.IP) has quit (Client exited)
2018-10-01 21:35:53	-->	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-01 21:36:46	-->	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has joined #rust-beginners
2018-10-01 21:37:19	-->	Allegretto (allegretto@moz-m985jq.pool.digikabel.hu) has joined #rust-beginners
2018-10-01 21:37:23	-->	demurgos (Mibbit@moz-v8he2l.rev.sfr.net) has joined #rust-beginners
2018-10-01 21:37:35	demurgos	Hi
2018-10-01 21:37:53	demurgos	I am working on code coverage for Node.js
2018-10-01 21:38:33	demurgos	One of the steps consists in merging coverage results from multiple processes
2018-10-01 21:38:44	ish	before I go to far adding bit flags, is there a better construct to use - coming from C?
2018-10-01 21:38:45	<--	_blackgoat (blackgoat@moz-vqn.dq7.127.199.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 21:39:10	dpc1	!crate bitflags
2018-10-01 21:39:10	+rustbot	bitflags (1.0.4) - A macro to generate structures which behave like bitflags.  -> https://crates.io/crates/bitflags <https://docs.rs/bitflags>
2018-10-01 21:39:21	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-10-01 21:39:49	demurgos	By improving the algorithm I was able to go down to 6 seconds to merge all the coverages for the Node.js test suite
2018-10-01 21:40:08	demurgos	This is good (the initial implementation took 30 minutes...) but still slow
2018-10-01 21:40:17	demurgos	So I'm trying to convert the algorithm to Rust
2018-10-01 21:40:33	demurgos	And use it with Wasm/Node modules, etc.
2018-10-01 21:40:41	demurgos	I am currently working on the tests
2018-10-01 21:41:02	demurgos	I generate a JSON file with test cases
2018-10-01 21:41:30	demurgos	The goal is to use the same test cases for the old JS implementation and the new Rust implementation
2018-10-01 21:41:33	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 21:41:38	<--	mib_0f8mrn (Mibbit@moz-5q6.aol.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 21:42:01	demurgos	In Javascript, I am able to generate and register test functions dynamically
2018-10-01 21:42:07	<--	boydjohn1on (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-10-01 21:42:15	Fr0stBit	Can i re-export an external's crate interface from one of my module? E.g. i have assets::image module that i would like to "include" the contents of the image crate. Is it possible?
2018-10-01 21:42:24	demurgos	-> I can read the JSON file and register a test case for each item in the JSON file
2018-10-01 21:42:29	-->	boydjohnson (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 21:42:39	demurgos	How can I achieve the same results in Rust ?
2018-10-01 21:42:41	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-01 21:42:58	demurgos	I tried to look on the internet, but couldn't find much
2018-10-01 21:43:03	-->	refold (refold@moz-0jm.sl9.98.88.IP) has joined #rust-beginners
2018-10-01 21:43:07	demurgos	I am trying to dynamically define test functions
2018-10-01 21:43:15	stephaneyfx	Fr0stBit: `pub use external_crate::Stuff;`
2018-10-01 21:43:16	demurgos	Do I need to use macros ?
2018-10-01 21:43:25	demurgos	A `build.rs` file ?
2018-10-01 21:43:34	demurgos	(I never used them)
2018-10-01 21:44:14	sarnold	demurgos: maybe this is time to ignore the existing tools and build your own thing. I'm not sure you'd gain much by trying to dynamically generate code that's then used in the rust / cargo test infratstructure..
2018-10-01 21:44:15	demurgos	Is there a crate already to generate tests from data files ?
2018-10-01 21:44:16	Fr0stBit	stephaneyfx: thats exactly what i did but it does not work
2018-10-01 21:44:24	stephaneyfx	Fr0stBit: With your example, in src/assets.rs: `pub use image;` should do
2018-10-01 21:44:33	Karrq	Moongoodboy{K}, I managed to solve my parsing problems my own way
2018-10-01 21:44:43	sarnold	demurgos: after all you just need to emit a clear FAIL or UNEXPECTED PASS and exit with a non-zero exit status, right?
2018-10-01 21:45:17	demurgos	Yes
2018-10-01 21:45:47	demurgos	But I'd prefer it to work with `cargo test` instead of require'ing a separate tool
2018-10-01 21:45:50	-->	sp1ff_ (sp1ff@moz-37v7jk.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-01 21:45:56	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 21:46:20	demurgos	I already encountered this issue previously when writing an SWF parser (again, test data in JSON, implementation in JS or Rust)
2018-10-01 21:46:33	demurgos	I implemented a small test runner in Python and moved on
2018-10-01 21:47:05	demurgos	But I was hoping there was a way to integrate it better with standard tools
2018-10-01 21:47:17	sarnold	demurgos: I think I'd probably go with Make :) but that's me..
2018-10-01 21:47:36	demurgos	Ok
2018-10-01 21:48:16	demurgos	I'll look at what I can with procedural macros, but eventually I may follow your advice and just use another tool
2018-10-01 21:48:18	demurgos	Thanks
2018-10-01 21:48:35	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-10-01 21:48:35	-->	BooleanCat (Mibbit@moz-q3e.jn4.98.88.IP) has joined #rust-beginners
2018-10-01 21:48:53	Fr0stBit	stephaneyfx: Ok i have assets/mod.rs and inside i did put pub use image; Now i get extern crate `image` is private, and cannot be re-exported (error E0365), consider declaring with `pub`
2018-10-01 21:49:28	dpc1	what is image?
2018-10-01 21:49:28	stephaneyfx	Fr0stBit: Yeah, `pub extern crate image;` in your lib.rs
2018-10-01 21:49:36	stephaneyfx	dpc1: A crate
2018-10-01 21:49:41	Fr0stBit	stephaneyfx: Ah i haven't seen this
2018-10-01 21:49:44	dpc1	oops yeah i figured that xD
2018-10-01 21:50:29	dpc1	but they are just using image inside they might not want to export it
2018-10-01 21:50:53	stephaneyfx	dpc1: How to re-export was their original question
2018-10-01 21:51:09	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-01 21:51:29	dpc1	oh missed it. i thought this was the starting of the question and he just mentioned you for some reason :)
2018-10-01 21:52:40	stephaneyfx	dpc1: It's alright, there are multiple threads interleaved :)
2018-10-01 21:52:46	<--	himi-cat (sjjf@moz-8e0.vj6.253.185.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 21:53:24	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-01 21:53:45	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 21:53:54	BooleanCat	Hello friends. I'm having some difficulty getting this compiling: https://play.rust-lang.org/?gist=a677559fc0df4f59b62a6efda23980e8&version=stable&mode.
2018-10-01 21:53:57	BooleanCat	I'm trying to use serde_json to define a struct, then have a unit test that checks that it can serialize correctly-I think I've closely followed the example in the serde docs so this is confusing me a little.
2018-10-01 21:54:28	BooleanCat	The error I see is "access to extern crates through prelude is experimental (see issue #44660)"
2018-10-01 21:55:36	<--	GreenJello (GreenJello@moz-naaatm.7di5.9nhv.8800.2600.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-01 21:55:49	dpc1	:)
2018-10-01 21:56:03	sarnold	that means you're missing something like an 'extern crate serde' or something. I can never remember the magic :(
2018-10-01 21:56:25	stephaneyfx	BooleanCat: https://play.rust-lang.org/?gist=2b1f49491e28c96faa7b1ccc83a54d31&version=stable&mode=debug&edition=2015
2018-10-01 21:56:44	sarnold	oh sweet stephaneyfx remembers the magic! :D
2018-10-01 21:56:58	dpc1	xD
2018-10-01 21:57:02	BooleanCat	Yeah I should have mentioned - this is in a config.rs, adjacent to a main.rs that has those imports
2018-10-01 21:57:12	BooleanCat	Lemme get a link to that 1 sec
2018-10-01 21:57:20	stephaneyfx	BooleanCat: Besides the missing `extern crate` declarations, you also need to `use serde_json` in child modules like `tests`
2018-10-01 21:58:44	stephaneyfx	sarnold: Be ready, I heard there's a new magic coming in 2018 ;)
2018-10-01 21:58:49	dpc1	xD
2018-10-01 21:59:03	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-01 21:59:10	BooleanCat	Here's my main.rs: https://github.com/BooleanCat/prefab/blob/master/src/main.rs - I *think* I have the extern crates and uses right
2018-10-01 21:59:19	-->	GreenJello (GreenJello@moz-a744i6.7di5.9nhv.8800.2600.IP) has joined #rust-beginners
2018-10-01 21:59:29	sarnold	stephaneyfx: I hope they come alnog with flying cars :)
2018-10-01 21:59:55	stephaneyfx	BooleanCat: I think you still need #[macro_use] before `extern crate serde_json;` in main.rs
2018-10-01 22:00:02	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:00:03	BooleanCat	(I have also added a #[macro_use] to serde_json
2018-10-01 22:00:07	BooleanCat	Yeah that ^^
2018-10-01 22:00:22	BooleanCat	Sorry couldn't figure out how to pase multi file snippets in the playground
2018-10-01 22:00:26	stephaneyfx	BooleanCat: And then you should just need `use serde_json;` at the beginning of your tests module
2018-10-01 22:00:43	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-10-01 22:01:12	stephaneyfx	sarnold: Just async, constfn and specialization would make my day/year :p
2018-10-01 22:01:14	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 22:01:22	BooleanCat	Oh that works great, thanks!
2018-10-01 22:01:45	BooleanCat	So I can get the prelude for crates by using `use`ing the crate name huh?
2018-10-01 22:02:10	<--	ZeroWalker (Zerowalker@moz-n1rskf.tbcn.telia.com) has quit (Quit: Leaving)
2018-10-01 22:02:35	-->	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-10-01 22:02:41	<--	voiceftp (voiceftp@moz-i3f0e0.academ.org) has quit (Connection closed)
2018-10-01 22:02:43	stephaneyfx	BooleanCat: `prelude` is sometimes a submodule some crates offer that defines most commonly used items so that people can just do `use some_crate::prelude::*;`
2018-10-01 22:02:54	-->	voiceftp (voiceftp@moz-i3f0e0.academ.org) has joined #rust-beginners
2018-10-01 22:03:20	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-10-01 22:03:57	<--	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:04:13	BooleanCat	Thanks again for the help :)
2018-10-01 22:04:16	<--	voiceftp (voiceftp@moz-i3f0e0.academ.org) has quit (Connection closed)
2018-10-01 22:04:24	-->	voiceftp (voiceftp@moz-i3f0e0.academ.org) has joined #rust-beginners
2018-10-01 22:04:29	<--	PeterRabbitIsFluffy (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 22:04:29	<--	WindowsBunny (Bunny@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:04:40	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-10-01 22:04:44	<--	demurgos (Mibbit@moz-v8he2l.rev.sfr.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 22:05:18	<--	jperras (jperras@moz-4v7ef1.dsl.bell.ca) has quit (Quit: WeeChat 2.2)
2018-10-01 22:05:39	<--	Karrq (Karrq@moz-gfus0l.v4.ngi.it) has quit (Ping timeout: 121 seconds)
2018-10-01 22:05:42	<--	GreenJello (GreenJello@moz-a744i6.7di5.9nhv.8800.2600.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-01 22:05:47	-->	GreenJello (GreenJello@moz-a744i6.7di5.9nhv.8800.2600.IP) has joined #rust-beginners
2018-10-01 22:05:53	-->	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-01 22:06:10	-->	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-01 22:06:23	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-01 22:07:08	<--	arsnael (arsnael@moz-5vqeii.io) has quit (Quit: The Lounge - https://thelounge.chat)
2018-10-01 22:07:32	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-01 22:07:44	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 22:09:14	<--	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 22:09:32	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Connection closed)
2018-10-01 22:09:36	-->	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-01 22:10:48	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-01 22:11:34	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-01 22:11:53	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 22:11:55	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:12:42	-->	arsnael (arsnael@moz-5vqeii.io) has joined #rust-beginners
2018-10-01 22:13:07	<--	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has quit (Connection closed)
2018-10-01 22:13:08	-->	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-01 22:13:28	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Connection closed)
2018-10-01 22:13:38	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:13:49	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-10-01 22:14:08	Fr0stBit	I suppose to make this work:
2018-10-01 22:14:08	<--	Eragon (Eragon@moz-v9k0js.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-01 22:14:10	Fr0stBit	pub trait Load {
2018-10-01 22:14:12	Fr0stBit	    fn from_file(fpath: &Path) -> Result<Self, String>;
2018-10-01 22:14:14	Fr0stBit	}
2018-10-01 22:14:31	Fr0stBit	I should make the return value as Result<Box<Self>, String>?
2018-10-01 22:14:45	Fr0stBit	Or can it be done otherwise?
2018-10-01 22:14:55	BooleanCat	Is it possible to tell rust that #[macro_use] should only be use for tests. For example: I'm only using json! from serde_json in a test only and cargo test throws no warnings, cargo build throws an unsued macro_use warning.
2018-10-01 22:15:28	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-01 22:15:45	stephaneyfx	Fr0stBit: Result<Self, String> is fine
2018-10-01 22:15:57	stephaneyfx	Fr0stBit: You may just need `Self: Sized`
2018-10-01 22:16:11	dpc1	BooleanCat: wrap it in #[cfg(test)]
2018-10-01 22:16:12	stephaneyfx	Fr0stBit: Or `trait Load: Sized`
2018-10-01 22:16:59	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-10-01 22:17:08	Fr0stBit	stephaneyfx: Where should i put the Self: Sized part?
2018-10-01 22:17:27	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-10-01 22:17:30	Fr0stBit	I know how i add it for generic parameters, not for Self
2018-10-01 22:17:38	stephaneyfx	Fr0stBit: `... -> Result<Self, String> where Self: Sized;`
2018-10-01 22:18:06	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-10-01 22:18:06	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-10-01 22:18:10	Fr0stBit	Aha thanks again :)
2018-10-01 22:19:55	<--	alatiera (alatiera@moz-gpqp8c.access.hol.gr) has quit (Quit: Leaving)
2018-10-01 22:20:21	BooleanCat	dpc1: Does #[cfg(test)] #[macro_use] extern crate serde_json; not apply "test only" to the entire extern crate statement (not just the macro_use bit)?
2018-10-01 22:20:32	BooleanCat	I mean that's fine for now in my case but might not be fine soon
2018-10-01 22:20:57	dpc1	or you can use an extern crate in your test with `#[macro_use]` if that works. 
2018-10-01 22:22:08	BooleanCat	extern crate statements need to be in main.rs no?
2018-10-01 22:22:28	BooleanCat	(my test is in an adjacent file)
2018-10-01 22:22:53	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-10-01 22:23:07	<--	asyncsec (asyncsec@moz-udlq32.dyn6.twc.com) has quit (Connection closed)
2018-10-01 22:23:22	stephaneyfx	BooleanCat: Maybe like this? https://play.rust-lang.org/?gist=7d6a57d2b7909787a8584ffa342350a0&version=stable&mode=debug&edition=2015
2018-10-01 22:23:52	<--	Albori (Albori@moz-nr1v0b.fidnet.com) has quit (Ping timeout: 121 seconds)
2018-10-01 22:24:06	stephaneyfx	BooleanCat: So basically two extern crate declarations, mutually exclusive based on whether test is set
2018-10-01 22:24:17	BooleanCat	Aha that'll work - looks a little weird thought, is that normal?
2018-10-01 22:24:35	-->	asyncsec (asyncsec@moz-udlq32.dyn6.twc.com) has joined #rust-beginners
2018-10-01 22:25:15	-->	Albori (Albori@moz-nr1v0b.fidnet.com) has joined #rust-beginners
2018-10-01 22:25:33	stephaneyfx	BooleanCat: This may be more idiomatic: https://play.rust-lang.org/?gist=85929e39e917c89e3d8185c76348cc18&version=stable&mode=debug&edition=2015
2018-10-01 22:25:59	stephaneyfx	BooleanCat: Explanation of cfg_attr at the end of https://doc.rust-lang.org/stable/reference/attributes.html#conditional-compilation
2018-10-01 22:26:10	<--	Jezza (Jezza@moz-o1v.kut.206.92.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:26:38	BooleanCat	Great, thanks to both of you, that looks much nicer
2018-10-01 22:27:29	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-01 22:28:46	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 22:29:46	<--	FreeMasen (FreeMasen@moz-qfcdsu.hfc.comcastbusiness.net) has quit (Quit: Leaving)
2018-10-01 22:30:02	-->	slmjkdbtl (t@moz-l9nsnm.fios.verizon.net) has joined #rust-beginners
2018-10-01 22:30:28	<--	BooleanCat (Mibbit@moz-q3e.jn4.98.88.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 22:30:39	<--	dalley (dalley@moz-sj3bja.dyn6.twc.com) has quit (Ping timeout: 121 seconds)
2018-10-01 22:31:05	-->	umurgdk (umurgdk@moz-vm6b78.asahi-net.or.jp) has joined #rust-beginners
2018-10-01 22:31:08	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 22:31:46	dpc1	yeah cfg_attr is a better way :)
2018-10-01 22:32:05	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-01 22:32:12	<--	yana (Mibbit@moz-6p30f0.versanet.de) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 22:32:56	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 22:33:09	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Ping timeout: 121 seconds)
2018-10-01 22:33:14	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2018-10-01 22:34:21	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Connection closed)
2018-10-01 22:34:42	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 22:37:41	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-10-01 22:38:03	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 22:38:58	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:40:06	<--	luizdepra (luizdepra@moz-sj7kbe.vktm.tl6j.1284.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 22:40:27	--	miles is now known as miles-afk
2018-10-01 22:42:20	<--	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 22:42:52	-->	kulshrax (kulshrax@moz-jl6.9o0.201.199.IP) has joined #rust-beginners
2018-10-01 22:43:13	-->	alx741 (alx741@moz-613.gq3.196.181.IP) has joined #rust-beginners
2018-10-01 22:43:58	<--	virtualritz (Mibbit@moz-s686al.customers.d1-online.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 22:45:28	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-01 22:46:52	<--	justsomequestions (gumble@moz-fk51ng.pools.vodafone-ip.de) has quit (Ping timeout: 121 seconds)
2018-10-01 22:46:54	<--	kulshrax (kulshrax@moz-jl6.9o0.201.199.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:48:50	-->	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-01 22:49:09	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 22:49:52	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:50:35	-->	skippydippy (Mibbit@moz-ighs13.home.otenet.gr) has joined #rust-beginners
2018-10-01 22:51:05	<--	skippydippy (Mibbit@moz-ighs13.home.otenet.gr) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 22:51:47	<--	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 22:51:52	-->	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-01 22:51:57	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 22:52:31	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:52:40	-->	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has joined #rust-beginners
2018-10-01 22:53:11	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 22:55:59	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 22:56:39	-->	BearOfJade (Thunderbird@moz-mcsnig.wireless.uvic.ca) has joined #rust-beginners
2018-10-01 22:57:00	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-10-01 22:57:25	<--	gnzlbg (gnzlbg@moz-ond016.netcologne.de) has quit (Ping timeout: 121 seconds)
2018-10-01 22:58:27	-->	mib_n5793y (Mibbit@moz-kc3g04.stlsmo.sbcglobal.net) has joined #rust-beginners
2018-10-01 22:59:00	<--	mib_n5793y (Mibbit@moz-kc3g04.stlsmo.sbcglobal.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 22:59:07	-->	Lil_Dropchk (uid18992@moz-iglud4.ealing.irccloud.com) has joined #rust-beginners
2018-10-01 23:00:34	-->	justsomequestions (gumble@moz-ap2.pta.94.194.IP) has joined #rust-beginners
2018-10-01 23:00:39	Lil_Dropchk	if i want to allow also "" (empty string), should i write "^(|...)$" or "^$|^...$"? in this regex: Regex::new(r"^([01]?[0-9]|2[0-3]):[0-5][0-9]$")
2018-10-01 23:01:39	dpc1	oh damn regex
2018-10-01 23:02:27	Lil_Dropchk	both should work, right? but which one is more idiomatic?
2018-10-01 23:02:34	Lumpio-	Both should work yes
2018-10-01 23:03:13	Lumpio-	Probably a matter of opinion which one's more readable
2018-10-01 23:03:24	Lil_Dropchk	Lumpio-: which one do you find more readable?
2018-10-01 23:03:26	<--	Aqo (Aqo@moz-tsphbp.inter.net.il) has quit (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
2018-10-01 23:03:42	Lumpio-	I like the first one more because it only uses ^$ once
2018-10-01 23:03:46	-->	npmccallum (npmccallum@moz-d8863v.redhat.com) has joined #rust-beginners
2018-10-01 23:03:54	Lumpio-	However the second one has less nesting and might be more immediately obvious in some peoples' opinion so
2018-10-01 23:04:46	dpc1	regex being readable.. uhmmm xD
2018-10-01 23:05:48	Lumpio-	it's totally readable to me!
2018-10-01 23:06:00	Lil_Dropchk	both are readable
2018-10-01 23:06:45	dpc1	yeah ihis case looks readable but was just throwing darts at regex in general :)
2018-10-01 23:07:15	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 23:08:27	-->	kermie (Mibbit@moz-9vl7l1.dynamic.chello.pl) has joined #rust-beginners
2018-10-01 23:09:25	<--	Guest32523 (nj0rd@moz-0c17gl.dsl.tropolys.de) has quit (Ping timeout: 121 seconds)
2018-10-01 23:10:23	<--	kulshrax (kulshrax@moz-p74oak.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-01 23:11:17	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 23:12:11	<--	BearOfJade (Thunderbird@moz-mcsnig.wireless.uvic.ca) has quit (Client exited)
2018-10-01 23:12:27	-->	jperras (jperras@moz-lfg.mjm.190.192.IP) has joined #rust-beginners
2018-10-01 23:14:08	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 23:16:26	<--	boydjohnson (bjohnson@moz-9fhn92.hfc.comcastbusiness.net) has quit (Ping timeout: 121 seconds)
2018-10-01 23:18:17	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 23:22:12	-->	Guest32523 (nj0rd@moz-5if484.dip.versatel-1u1.de) has joined #rust-beginners
2018-10-01 23:23:37	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-10-01 23:24:50	-->	BearOfJade (Thunderbird@moz-mcsnig.wireless.uvic.ca) has joined #rust-beginners
2018-10-01 23:24:51	<--	BearOfJade (Thunderbird@moz-mcsnig.wireless.uvic.ca) has quit (Client exited)
2018-10-01 23:25:21	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 23:27:32	<--	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has quit (Quit: )
2018-10-01 23:29:23	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 23:30:09	-->	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has joined #rust-beginners
2018-10-01 23:30:49	-->	mib_ss1dk5 (Mibbit@moz-o0q.97k.149.169.IP) has joined #rust-beginners
2018-10-01 23:31:07	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-01 23:32:51	mib_ss1dk5	https://play.rust-lang.org/?gist=1d8c004b31b8f975062082aa4ad4ec5c&version=stable&mode=debug&edition=2015 I want the value to not be 0 but ze the value it already has
2018-10-01 23:33:45	<--	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has quit (Quit: leaving)
2018-10-01 23:33:53	-->	dostoyevsky (sck@moz-qv4.1l2.23.46.IP) has joined #rust-beginners
2018-10-01 23:34:34	-->	raktajino (raktajino@moz-f92.voh.170.107.IP) has joined #rust-beginners
2018-10-01 23:34:49	<--	dostoyevsky (sck@moz-qv4.1l2.23.46.IP) has quit (Quit: leaving)
2018-10-01 23:35:20	-->	dostoyevsky (sck@moz-qv4.1l2.23.46.IP) has joined #rust-beginners
2018-10-01 23:35:59	<--	mib_ss1dk5 (Mibbit@moz-o0q.97k.149.169.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 23:36:48	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 23:36:56	<--	kermie (Mibbit@moz-9vl7l1.dynamic.chello.pl) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-01 23:40:53	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-01 23:41:21	<--	lundibundi (androirc@moz-aeo.ddu.90.212.IP) has quit (Connection closed)
2018-10-01 23:43:27	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-01 23:43:59	-->	himi-cat (sjjf@moz-psjk59.anu.edu.au) has joined #rust-beginners
2018-10-01 23:45:36	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-10-01 23:46:02	-->	ter- (michal@moz-akmaj4.58v1.a0qj.41d0.2001.IP) has joined #rust-beginners
2018-10-01 23:47:29	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-01 23:47:39	-->	jaix (jaix@moz-knve4t.tv2v.klbj.0c7f.2a02.IP) has joined #rust-beginners
2018-10-01 23:48:43	-->	Miss (Duo@moz-vki.6e1.91.213.IP) has joined #rust-beginners
2018-10-01 23:50:04	<--	Miss (Duo@moz-vki.6e1.91.213.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-10-01 23:50:23	-->	Miss (Duo@moz-vki.6e1.91.213.IP) has joined #rust-beginners
2018-10-01 23:51:47	<--	sinesc_ (sinesc@moz-gn4693.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-10-01 23:56:26	<--	netrino (netrino@moz-csb.sqm.159.185.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-01 23:56:35	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-01 23:57:46	-->	ubuntourist (kjcole@moz-g5jhd1.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-01 23:58:00	-->	mvzink (mvzink@moz-s3c.0ql.46.174.IP) has joined #rust-beginners
2018-10-01 23:59:14	-->	soren (soren@moz-tdtkqs.bath.ac.uk) has joined #rust-beginners
2018-10-01 23:59:34	<--	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has quit (Ping timeout: 121 seconds)
2018-10-01 23:59:50	<--	Miss (Duo@moz-vki.6e1.91.213.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 00:00:36	<--	justsomequestions (gumble@moz-ap2.pta.94.194.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 00:01:33	-->	jony (jony@moz-r1b.2c4.68.80.IP) has joined #rust-beginners
2018-10-02 00:01:51	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 00:01:57	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-10-02 00:02:13	-->	Miss (Duo@moz-vki.6e1.91.213.IP) has joined #rust-beginners
2018-10-02 00:02:26	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 00:03:21	<--	soren (soren@moz-tdtkqs.bath.ac.uk) has quit (Ping timeout: 121 seconds)
2018-10-02 00:04:12	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-02 00:05:35	<--	jony (jony@moz-r1b.2c4.68.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 00:06:25	--	Miss is now known as iphonAry
2018-10-02 00:06:25	<--	iphonAry (Duo@moz-vki.6e1.91.213.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-10-02 00:07:02	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-10-02 00:07:43	<--	npmccallum (npmccallum@moz-d8863v.redhat.com) has quit (Ping timeout: 121 seconds)
2018-10-02 00:08:46	-->	bemeurer (bemeurer@moz-m5i3k3.sbcc.edu) has joined #rust-beginners
2018-10-02 00:09:32	<--	bemeurer (bemeurer@moz-m5i3k3.sbcc.edu) has quit (Quit: WeeChat 2.2)
2018-10-02 00:12:37	orph	is there a way to enforce rustdocs for pub functions? like as part of CI
2018-10-02 00:12:42	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Quit: WeeChat 2.1)
2018-10-02 00:12:46	-->	claude (Mibbit@moz-llac54.beget.ru) has joined #rust-beginners
2018-10-02 00:12:54	<--	claude (Mibbit@moz-llac54.beget.ru) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 00:13:17	Havvy	misdreavus: ^^
2018-10-02 00:13:23	emerentius	orph: there's a lint, missing_docs
2018-10-02 00:13:25	<--	orium (fulano@moz-cjq57u.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-10-02 00:13:29	emerentius	you can #[warn(missing_docs)]
2018-10-02 00:13:31	emerentius	or deny
2018-10-02 00:14:41	<--	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has quit (Ping timeout: 121 seconds)
2018-10-02 00:15:12	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-10-02 00:16:34	<--	mib_hej6jk (Mibbit@moz-48irve.priv.bahnhof.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 00:17:34	<--	javiz8 (Mibbit@moz-oeit2o.static.sonic.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 00:18:11	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 00:19:17	--	cjm__ is now known as cjm
2018-10-02 00:19:17	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-02 00:19:23	--	irc: disconnected from server
2018-10-02 08:58:29	-->	Kirjava (cake@moz-7e0sq4.ip-51-254-223.eu) has joined #rust-beginners
2018-10-02 08:58:29	--	Topic for #rust-beginners is "Beginner's Rust discussion, unlogged. Ask away, but please allow some time for people to respond! | Book  https://doc.rust-lang.org/book/ | Playground  https://play.rust-lang.org | Forum  https://users.rust-lang.org | Conduct  https://www.rust-lang.org/conduct.html"
2018-10-02 08:58:29	--	Topic set by niconii (nicole@moz-fg53dj.midco.net) on Thu, 26 May 2016 11:19:40
2018-10-02 08:58:29	--	Channel #rust-beginners: 1074 nicks (2 ops, 0 halfops, 1 voice, 1071 normals)
2018-10-02 08:58:31	--	Channel created on Tue, 27 Oct 2015 17:04:43
2018-10-02 08:58:32	--	irc: disconnected from server
2018-10-02 08:58:46	-->	Kirjava (cake@moz-7e0sq4.ip-51-254-223.eu) has joined #rust-beginners
2018-10-02 08:58:46	--	Topic for #rust-beginners is "Beginner's Rust discussion, unlogged. Ask away, but please allow some time for people to respond! | Book  https://doc.rust-lang.org/book/ | Playground  https://play.rust-lang.org | Forum  https://users.rust-lang.org | Conduct  https://www.rust-lang.org/conduct.html"
2018-10-02 08:58:46	--	Topic set by niconii (nicole@moz-fg53dj.midco.net) on Thu, 26 May 2016 11:19:40
2018-10-02 08:58:46	--	Channel #rust-beginners: 1074 nicks (2 ops, 0 halfops, 1 voice, 1071 normals)
2018-10-02 08:58:48	--	Channel created on Tue, 27 Oct 2015 17:04:43
2018-10-02 08:58:54	<--	gagbo_work (gagbo@moz-uls.ica.158.77.IP) has quit (Quit: Leaving)
2018-10-02 08:58:56	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-02 08:59:00	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-02 08:59:08	-->	tasansga (ansgar@moz-oucppq.connect.netcom.no) has joined #rust-beginners
2018-10-02 08:59:35	-->	oembot (textual@moz-k71m4j.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-10-02 09:01:30	-->	davidthecoder (david@moz-1m9odq.mus8.ihq5.04c8.2a01.IP) has joined #rust-beginners
2018-10-02 09:01:41	-->	gagbo_work (gagbo@moz-uls.ica.158.77.IP) has joined #rust-beginners
2018-10-02 09:01:46	<--	subhojit777 (subhojit777@moz-b5r.56d.225.110.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 09:02:31	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-02 09:03:29	scottmcm	(It might well be fast and productive and such, but the features page on its website is not at all persuasive to me.)
2018-10-02 09:04:57	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-10-02 09:06:08	-->	ufobat (Martin@moz-8bv3kl.dyn.telefonica.de) has joined #rust-beginners
2018-10-02 09:07:04	-->	himi-cat (sjjf@moz-a0v4u0.ml56.e9ai.44b8.2001.IP) has joined #rust-beginners
2018-10-02 09:07:07	<--	tasansga (ansgar@moz-oucppq.connect.netcom.no) has quit (Quit: Leaving.)
2018-10-02 09:07:36	-->	tasansga (tasansga@moz-oucppq.connect.netcom.no) has joined #rust-beginners
2018-10-02 09:07:42	-->	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has joined #rust-beginners
2018-10-02 09:08:38	<--	orph (orph@moz-cb4n5q.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 09:13:45	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-02 09:13:57	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Ping timeout: 121 seconds)
2018-10-02 09:17:47	ibrokemypie	is it possible to re-define a builtin macro?
2018-10-02 09:17:52	ibrokemypie	eg println!?
2018-10-02 09:18:02	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 09:19:37	scottmcm	I believe you can shadow them
2018-10-02 09:19:59	-->	yann-kaelig (yann-kaelig@moz-d1opn9.dynamic.chello.pl) has joined #rust-beginners
2018-10-02 09:21:14	scottmcm	yup, this compiles: `macro_rules! vec { () => {()} } fn main() { vec!() }`
2018-10-02 09:21:35	demonarxs1	Can anyone help me? I start study Rust, in a book on 11 chapter. But I want to have practice and don't know which project to start or which project to study for the consolidate knowledge. Sorry for my bad English
2018-10-02 09:21:49	drager	!rustlings
2018-10-02 09:21:49	+rustbot	http://github.com/rustlings/rustlings - Small exercises to get you used to reading and writing Rust code.
2018-10-02 09:22:28	drager	demonarxs1 ^
2018-10-02 09:23:20	demonarxs1	thanks
2018-10-02 09:24:23	ibrokemypie	thanks scottmcm !
2018-10-02 09:24:25	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Ping timeout: 121 seconds)
2018-10-02 09:24:35	ibrokemypie	will this apply in all source files?
2018-10-02 09:24:40	drager	demonarxs1: np
2018-10-02 09:25:29	ibrokemypie	what is the source of println!
2018-10-02 09:25:32	ibrokemypie	or where can I find it?
2018-10-02 09:26:00	-->	subhojit777 (subhojit777@moz-b5r.56d.225.110.IP) has joined #rust-beginners
2018-10-02 09:26:19	-->	justsomequestions (gumble@moz-92ujdr.pptp.stw-bonn.de) has joined #rust-beginners
2018-10-02 09:26:40	ibrokemypie	nvm, found it I think
2018-10-02 09:27:00	ibrokemypie	nope doesnt compile
2018-10-02 09:29:02	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-10-02 09:29:11	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Connection closed)
2018-10-02 09:29:47	<--	barometz (dominic@moz-deu4fu.d.baudvine.net) has quit (Quit: reboot)
2018-10-02 09:29:49	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-02 09:29:59	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-02 09:32:02	svartalf	ibrokemypie: you can press [src] link here: https://doc.rust-lang.org/std/macro.println.html
2018-10-02 09:32:04	-->	barometz (dominic@moz-deu4fu.d.baudvine.net) has joined #rust-beginners
2018-10-02 09:32:52	ibrokemypie	fails to build because of allow_internal_unstable side-steps feature gating and stability checks
2018-10-02 09:33:10	ibrokemypie	if i remove that it fails to build because  `format_args_nl` is only for internal language use and is subject to change
2018-10-02 09:33:21	<--	sdrodge (sdrodge@moz-85ovhr.fios.verizon.net) has quit (Ping timeout: 121 seconds)
2018-10-02 09:34:56	-->	ysz (ysz@moz-o9un62.broadband.corbina.ru) has joined #rust-beginners
2018-10-02 09:35:05	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 09:38:20	<--	laalaa (asdf@moz-fveb6i.rev.dnainternet.fi) has quit (Quit: Leaving)
2018-10-02 09:39:31	-->	moltonel (moltonel@moz-5ubgvn.prp-wtd.eircom.net) has joined #rust-beginners
2018-10-02 09:40:55	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 09:41:06	<--	orium (fulano@moz-cjq57u.cable.virginm.net) has quit (Ping timeout: 121 seconds)
2018-10-02 09:43:12	-->	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has joined #rust-beginners
2018-10-02 09:44:04	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-02 09:45:27	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 09:47:39	-->	mib_3xd1cf (Mibbit@moz-ihivpq.customer.comfortel.pro) has joined #rust-beginners
2018-10-02 09:48:12	mib_3xd1cf	hi
2018-10-02 09:48:54	<--	mib_3xd1cf (Mibbit@moz-ihivpq.customer.comfortel.pro) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 09:50:17	-->	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has joined #rust-beginners
2018-10-02 09:51:54	<--	holmgr (holmgr@moz-845df3.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 09:52:10	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-02 09:52:59	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-02 09:53:13	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-10-02 09:53:21	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-02 09:56:08	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-02 09:56:17	<--	lundibundi (androirc@moz-aeo.ddu.90.212.IP) has quit (Connection closed)
2018-10-02 09:59:13	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 10:01:05	-->	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has joined #rust-beginners
2018-10-02 10:01:35	<--	guacamole (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 10:01:38	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 10:01:51	-->	shoarek88 (textual@moz-ec12u7.leaseweb.net) has joined #rust-beginners
2018-10-02 10:02:34	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-02 10:02:57	-->	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has joined #rust-beginners
2018-10-02 10:03:23	ibrokemypie	how do i use my macreo defined in main.rs in other modues?
2018-10-02 10:03:33	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-02 10:07:16	-->	fsasm (fsasm@moz-5fd.qra.178.62.IP) has joined #rust-beginners
2018-10-02 10:10:54	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-02 10:11:08	<--	bjgeesink (bjgeesink@moz-jh0l4t.adsl.xs4all.nl) has quit (Quit: )
2018-10-02 10:11:32	-->	patrl (patrl@moz-m17vkr.zas-berlin.de) has joined #rust-beginners
2018-10-02 10:15:10	-->	mib_dw0e6j (Mibbit@moz-hj3a8f.range109-158.btcentralplus.com) has joined #rust-beginners
2018-10-02 10:15:11	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:17:46	-->	holmgr (holmgr@moz-g0jnvl.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 10:19:51	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-02 10:20:32	-->	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has joined #rust-beginners
2018-10-02 10:24:34	<--	moltonel (moltonel@moz-5ubgvn.prp-wtd.eircom.net) has quit (Ping timeout: 121 seconds)
2018-10-02 10:24:49	-->	moltonel (moltonel@moz-n9f4jt.prp-wtd.eircom.net) has joined #rust-beginners
2018-10-02 10:26:46	<--	carlosdagos (uid312197@moz-lepsr1.stonehaven.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-02 10:26:55	<--	refold (refold@moz-0jm.sl9.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:29:10	-->	moltonel3x (moltonel@moz-v07.5rs.233.80.IP) has joined #rust-beginners
2018-10-02 10:29:10	<--	moltonel (moltonel@moz-n9f4jt.prp-wtd.eircom.net) has quit (Ping timeout: 121 seconds)
2018-10-02 10:29:43	<--	moltonel3x (moltonel@moz-v07.5rs.233.80.IP) has quit (Quit: Konversation terminated!)
2018-10-02 10:29:49	-->	adoa (awachtel@moz-tls.v74.64.158.IP) has joined #rust-beginners
2018-10-02 10:30:25	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-10-02 10:30:44	<--	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has quit (Connection closed)
2018-10-02 10:31:31	-->	nubee (Mibbit@moz-ovafg7.dynamic.sbb.rs) has joined #rust-beginners
2018-10-02 10:31:41	nubee	Hi everyone
2018-10-02 10:31:57	mib_dw0e6j	nubee: hi
2018-10-02 10:32:08	-->	rado_ (rado@moz-d6nkbp.cam.ac.uk) has joined #rust-beginners
2018-10-02 10:32:35	-->	adamgr (adamgr@moz-fbutm1.wa.comcast.net) has joined #rust-beginners
2018-10-02 10:33:40	-->	orium (fulano@moz-9mu.6i1.35.193.IP) has joined #rust-beginners
2018-10-02 10:35:02	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 10:35:49	<--	nubee (Mibbit@moz-ovafg7.dynamic.sbb.rs) has left #rust-beginners
2018-10-02 10:38:48	<--	glguy (glguy@moz-vqvmvd.o0eg.mkgl.01c0.2601.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:39:34	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:41:36	-->	sirup (Mibbit@moz-8fg.j7s.144.198.IP) has joined #rust-beginners
2018-10-02 10:42:23	-->	glguy (glguy@moz-4tck6m.or.comcast.net) has joined #rust-beginners
2018-10-02 10:42:48	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-10-02 10:43:42	<--	GreenJello (GreenJello@moz-a744i6.7di5.9nhv.8800.2600.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 10:45:08	<--	cjm (c@moz-n9k8pi.1n99.j5ei.0281.2601.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:45:15	<--	subhojit777 (subhojit777@moz-b5r.56d.225.110.IP) has quit (Connection closed)
2018-10-02 10:47:14	sirup	hey friends! I wrote some code for some simple fork-join with rayon, however, the code ended up a lot more convoluted than I'd like (mostly the reduce_with step). would love some pointers! https://gist.github.com/sirupsen/3dcf173d422d4ab32ee554f484b7ae0a
2018-10-02 10:47:27	-->	cjm (c@moz-0mn.m4j.8.24.IP) has joined #rust-beginners
2018-10-02 10:49:43	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-02 10:49:47	mib_dw0e6j	sirup: can you use flatten?
2018-10-02 10:50:53	<--	holmgr (holmgr@moz-g0jnvl.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 10:51:15	-->	holmgr (holmgr@moz-g0jnvl.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 10:52:37	<--	liquidnight (marcus@moz-v6lrck.qseq.2u9h.0c22.2a01.IP) has quit (Connection closed)
2018-10-02 10:53:06	-->	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 10:54:10	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:54:36	sirup	mib_dw0e6j: would that merge the two vectors though?
2018-10-02 10:54:42	-->	WindowsBunny2 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 10:55:00	mib_dw0e6j	sirup: well I am only thinking of it w.r.t. to functional programming, flatten should do that, yes.
2018-10-02 10:55:06	sirup	:o
2018-10-02 10:55:09	sirup	I'll give it a shot.
2018-10-02 10:55:11	-->	pamaury (pamaury@moz-jam7a7.mpi-sws.org) has joined #rust-beginners
2018-10-02 10:55:17	<--	holmgr (holmgr@moz-g0jnvl.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:55:41	<--	WindowsBunny2 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 10:55:49	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 10:55:55	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 10:55:55	<--	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:56:34	<--	FreeFull (freefull@moz-t4nkmd.ip-54-37-16.eu) has quit (Quit: rebooting)
2018-10-02 10:57:17	-->	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 10:57:53	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 10:58:54	-->	DaQue (Mutter@moz-efflt3.mo.charter.com) has joined #rust-beginners
2018-10-02 10:59:18	<--	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 11:00:07	-->	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 11:01:03	-->	zofrex (zofrex@moz-kekvm2.ip-176-31-106.eu) has joined #rust-beginners
2018-10-02 11:01:18	-->	mib_c9b126 (Mibbit@moz-0bojte.ip.btc-net.bg) has joined #rust-beginners
2018-10-02 11:01:37	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 11:01:50	<--	davidthecoder (david@moz-1m9odq.mus8.ihq5.04c8.2a01.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-02 11:02:09	-->	davidthecoder (david@moz-1m9odq.mus8.ihq5.04c8.2a01.IP) has joined #rust-beginners
2018-10-02 11:02:09	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 11:02:41	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 11:02:43	<--	DaQue (Mutter@moz-efflt3.mo.charter.com) has quit (Quit: Mutter: www.mutterirc.com)
2018-10-02 11:03:00	sirup	mib_c9b126: With flat_map, how would you handle the errors though?
2018-10-02 11:03:16	sirup	They seem somewhat tricky to propagate to the caller in this case
2018-10-02 11:03:29	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 11:04:11	-->	holmgr (holmgr@moz-5c3e0i.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 11:05:24	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 11:05:55	sirup	mib_c9b126: code here https://gist.github.com/sirupsen/3dcf173d422d4ab32ee554f484b7ae0a#gistcomment-2721778
2018-10-02 11:06:17	sirup	You're right that it does the right thing, just unsure how to get rid of that unwrap
2018-10-02 11:15:17	<--	cp (cp@moz-fresc2.asahinet.com) has quit (Quit: Disappears in a puff of smoke)
2018-10-02 11:17:16	<--	vmx (vmx@moz-n602bc.j5e8.jonq.810d.2a02.IP) has quit (Quit: Leaving)
2018-10-02 11:18:46	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Ping timeout: 121 seconds)
2018-10-02 11:21:43	-->	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has joined #rust-beginners
2018-10-02 11:21:58	-->	holmgr_ (holmgr@moz-r2668t.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 11:25:13	<--	holmgr (holmgr@moz-5c3e0i.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 11:25:46	-->	spuz (spuz@moz-uon8ip.as13285.net) has joined #rust-beginners
2018-10-02 11:27:37	-->	subhojit777 (subhojit777@moz-b5r.56d.225.110.IP) has joined #rust-beginners
2018-10-02 11:27:38	-->	holmgr (holmgr@moz-pfnek6.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 11:28:35	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-02 11:29:10	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 11:29:16	Fr0stBit	I have a graphics::texture module that needs to use assets::image module, do i need to refer to it using the absolute package path like use assets::image or is there any trick to refer to it relatively?
2018-10-02 11:31:09	<--	holmgr_ (holmgr@moz-r2668t.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 11:31:45	<--	oh_lawd (sid410@moz-7l35ei.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-10-02 11:33:04	<--	holmgr (holmgr@moz-pfnek6.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 11:33:10	-->	oh_lawd (sid410@moz-7vj0gq.hathersage.irccloud.com) has joined #rust-beginners
2018-10-02 11:33:34	-->	holmgr (holmgr@moz-pfnek6.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 11:33:42	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 11:34:32	Ferdirand	Fr0stBit: you can use super:: 
2018-10-02 11:35:55	Fr0stBit	Can i also use super::super::?
2018-10-02 11:36:21	<--	holmgr (holmgr@moz-pfnek6.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 11:36:23	-->	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has joined #rust-beginners
2018-10-02 11:36:40	-->	lundibundi (androirc@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-02 11:37:45	mib_dw0e6j	sirup: did you figure it out?
2018-10-02 11:38:15	<--	davidthecoder (david@moz-1m9odq.mus8.ihq5.04c8.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 11:38:32	-->	davidthecoder (david@moz-pth.eai.156.185.IP) has joined #rust-beginners
2018-10-02 11:40:51	mib_dw0e6j	sirup: surely you don't need to propagate the error, instapaper::bookmarks_in returns an option (I presume), if there are no bookmarks in a folder, that's not an error case?
2018-10-02 11:41:06	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-10-02 11:42:17	sirup	mib_dw0e6j: it retuns a Result with a vector, could be empty. I'd like to know if there was a network or API error in the caller
2018-10-02 11:42:20	-->	proc (aron@moz-o44dhv.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-02 11:44:33	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-10-02 11:44:39	mib_dw0e6j	sirup: you could change rss_stamps to hold Result's instead?
2018-10-02 11:45:39	mib_dw0e6j	sirup: why can't you use the question mark to propagate the errors?
2018-10-02 11:46:52	sirup	the question mark work just bail from the closure, but with an incorrect type (since it's going to expect Vec<String>
2018-10-02 11:47:20	sirup	yeah I guess I could map and turn the Vec<String> in the closure to Vec<Result<String, Error>>
2018-10-02 11:47:30	sirup	And then map over that again and propagate any errors
2018-10-02 11:47:33	sirup	just seems a bit messy :(
2018-10-02 11:47:45	mib_dw0e6j	sirup: there may be a better way, I don't know rust at all.
2018-10-02 11:48:15	sirup	thanks for your perspective either way :) I'm going to play a bit with that, maybe it's not so ugly.
2018-10-02 11:48:54	<--	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has quit (Connection closed)
2018-10-02 11:49:07	-->	holmgr (holmgr@moz-pfnek6.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 11:51:25	-->	kyrylo_ (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-02 11:51:51	<--	holmgr (holmgr@moz-pfnek6.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 11:52:16	-->	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has joined #rust-beginners
2018-10-02 11:52:32	<--	spear2 (spear2@moz-jsi95h.or.charter.com) has quit (Connection closed)
2018-10-02 11:52:37	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 11:53:22	-->	FreeFull (freefull@moz-t4nkmd.ip-54-37-16.eu) has joined #rust-beginners
2018-10-02 11:53:51	Fr0stBit	Can i generalize somehow these three functions: https://github.com/Nercury/rust-and-opengl-lessons/blob/3433c7b912f746b94fb53b0e4a4b1d85aebd9fbe/lesson-23-x/src/render_gl/shader.rs#L111 to a single set_uniform function with generic parameters?
2018-10-02 11:54:44	-->	cp (cp@moz-4f5h05.asahi-net.or.jp) has joined #rust-beginners
2018-10-02 11:55:18	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-02 11:55:24	<--	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has quit (Connection closed)
2018-10-02 11:55:40	-->	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has joined #rust-beginners
2018-10-02 11:56:23	-->	liquidnight (marcus@moz-v6lrck.qseq.2u9h.0c22.2a01.IP) has joined #rust-beginners
2018-10-02 11:56:24	-->	morton (Mibbit@moz-uri.ujg.104.223.IP) has joined #rust-beginners
2018-10-02 11:58:01	<--	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has quit (Quit: WeeChat 2.2)
2018-10-02 11:58:13	mib_dw0e6j	sirup: you may be able to only have one collect by deferring the mapping of the description and just returning the .bookmarks
2018-10-02 11:58:41	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-10-02 11:59:22	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 11:59:35	ibrokemypie	how can i iterate over an iterable from the start multiple times?
2018-10-02 12:00:36	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-02 12:01:08	<--	shoarek88 (textual@moz-ec12u7.leaseweb.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 12:02:41	<--	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has quit (Connection closed)
2018-10-02 12:02:42	<--	kyrylo_ (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 12:03:03	-->	holmgr (holmgr@moz-ka7bss.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 12:03:51	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-10-02 12:03:52	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-02 12:06:18	<--	morton (Mibbit@moz-uri.ujg.104.223.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 12:07:05	<--	holmgr (holmgr@moz-ka7bss.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 12:07:21	<--	patrl (patrl@moz-m17vkr.zas-berlin.de) has quit (Ping timeout: 121 seconds)
2018-10-02 12:07:47	mib_dw0e6j	ibrokemypie: very good question, maybe you could clone it?
2018-10-02 12:07:52	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 12:08:00	mib_dw0e6j	ibrokemypie: you might be able to use a for loop too?
2018-10-02 12:08:05	-->	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has joined #rust-beginners
2018-10-02 12:08:07	svartalf	How about https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cycle ?
2018-10-02 12:10:33	-->	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has joined #rust-beginners
2018-10-02 12:10:35	ibrokemypie	ah, for each may work for me
2018-10-02 12:12:10	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-02 12:12:19	mib_dw0e6j	svartalf: that's cool, thanks. I was looking for a "rewind" or a "reset" but couldn't find it. I guess you would have to keep a reference or a counter to know when you loop though, not terrible.
2018-10-02 12:14:24	<--	kapil___ (uid36151@moz-7g0ahg.highgate.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-02 12:21:26	-->	num8er (num8er@moz-9amhn4.moldtelecom.md) has joined #rust-beginners
2018-10-02 12:21:48	<--	cubetastic (Thunderbird@moz-da3c7v.ok8b.et54.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 12:22:12	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-02 12:23:17	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 12:23:46	ibrokemypie	how can i turn a vec into a peekable enumerated iterable?
2018-10-02 12:23:50	ibrokemypie	    let mut iter = &options.iter().enumerate().peekable();
2018-10-02 12:23:54	ibrokemypie	doesnt seem to work
2018-10-02 12:24:37	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-10-02 12:24:59	-->	shoarek88 (textual@moz-ec12u7.leaseweb.net) has joined #rust-beginners
2018-10-02 12:25:59	kimundi	ibrokemypie: remove the &
2018-10-02 12:26:41	kimundi	currently it parses as &(options.iter().enumerate().peekable()), which means you get a shared reference to the resulting iterator
2018-10-02 12:27:12	kimundi	you probably meant (&options).iter().enumerate().peekable(), but that is also uneccessary because .iter() does borrowing like that automatically
2018-10-02 12:27:49	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 12:28:24	-->	nathanj (njones@moz-j93lof.2ur8.8o51.19f0.2001.IP) has joined #rust-beginners
2018-10-02 12:28:57	ibrokemypie	why can't I use the value of iter.peek().unwrap() as a variable?
2018-10-02 12:29:29	kimundi	Uhm, there is nothing that prevents it, what is the error you get?
2018-10-02 12:30:24	<--	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has quit (Connection closed)
2018-10-02 12:31:04	drager	ibrokemypie: https://play.rust-lang.org/?gist=a367b23a38cb9152ad2dc9af6e3f30f2&version=stable&mode=debug&edition=2015
2018-10-02 12:31:06	drager	?
2018-10-02 12:31:08	-->	holmgr (holmgr@moz-ps6jtn.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 12:31:24	ibrokemypie	uh, probably not helpful without context so going to paste the code
2018-10-02 12:31:28	<--	shoarek88 (textual@moz-ec12u7.leaseweb.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-02 12:32:03	ibrokemypie	https://bpaste.net/show/b3a7b38a75e0
2018-10-02 12:33:12	<--	holmgr (holmgr@moz-ps6jtn.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 12:34:12	-->	Lakier15 (Mibbit@moz-4h6944.plus.com) has joined #rust-beginners
2018-10-02 12:35:23	<--	Lakier15 (Mibbit@moz-4h6944.plus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 12:35:33	<--	lundibundi (androirc@moz-aeo.ddu.90.212.IP) has quit (Connection closed)
2018-10-02 12:36:15	kimundi	ibrokemypie: can you make a reproducible example on https://play.rust-lang.org/ ?
2018-10-02 12:36:24	-->	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has joined #rust-beginners
2018-10-02 12:36:30	kimundi	That way we can directly see all context and the error messages
2018-10-02 12:36:42	kimundi	Generally its way easier if you post the error messages themself :)
2018-10-02 12:37:19	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 12:38:14	-->	charmander (Mibbit@moz-7oh.9v6.174.93.IP) has joined #rust-beginners
2018-10-02 12:38:26	ibrokemypie	https://bpaste.net/show/4f7a538f733b
2018-10-02 12:38:26	<--	charmander (Mibbit@moz-7oh.9v6.174.93.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 12:38:31	ibrokemypie	errors here, working on playground
2018-10-02 12:39:07	<--	jml (sid162989@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-10-02 12:39:33	<--	beachjar (sid183232@moz-rp9ic4.irccloud.com) has quit (Ping timeout: 121 seconds)
2018-10-02 12:39:40	kimundi	okay, its becaus eiterating an iterators consumes it. basically, the for loop grabs the tier variable permamently, so you can not access it elsewhere anymore. The easiest way here would be to switch from a for loop to a "while let Some(...) = iter.next()" loop
2018-10-02 12:39:49	-->	beachjar (sid183232@moz-rg73q1.ealing.irccloud.com) has joined #rust-beginners
2018-10-02 12:40:16	<--	dekokun (dekokun@moz-06n9pe.ucom.ne.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-02 12:40:22	dpc1	or you could use something like iter.for_each()
2018-10-02 12:40:46	ibrokemypie	does for_each allow me to access the index?
2018-10-02 12:41:24	kimundi	dpc1: That doesn't solve the issue here at all, I think :P
2018-10-02 12:41:41	ibrokemypie	what does the while let Some() do?
2018-10-02 12:41:54	dpc1	kimundi: i guess i'm not sure what exactly the issue is
2018-10-02 12:42:03	ibrokemypie	https://play.rust-lang.org/?gist=f4e330d1ee60a4201d66b83109c71660&version=stable&mode=debug&edition=2015
2018-10-02 12:42:05	kimundi	ibrokemypie: Basically, instead of moving the iter variable into the for loop construct, you just modify it directly
2018-10-02 12:42:55	kimundi	https://play.rust-lang.org/?gist=5fb84f567979a7213e1fcd0e4f67866c&version=stable&mode=debug&edition=2015
2018-10-02 12:43:34	-->	demurgos (Mibbit@moz-irs1oq.rev.sfr.net) has joined #rust-beginners
2018-10-02 12:43:55	<--	subhojit777 (subhojit777@moz-b5r.56d.225.110.IP) has quit (Connection closed)
2018-10-02 12:44:13	kimundi	The difference is that the "for" syntax calls into_iter() on the value first, which takes ownership and converts it into an iterator
2018-10-02 12:44:25	kimundi	(Andy iterator can be trivially turned into an iterator by returning itself)
2018-10-02 12:44:30	kimundi	(Any*)
2018-10-02 12:44:59	ibrokemypie	ah, thanks! will try it soon
2018-10-02 12:45:21	kimundi	But because you want to access the iterator still, you basically want a more basic code that just does the "loop while iter.next() returns a Some" aspect of a for loop
2018-10-02 12:46:12	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-02 12:49:28	-->	onix (Mibbit@moz-do7.ko6.227.91.IP) has joined #rust-beginners
2018-10-02 12:49:33	<--	onix (Mibbit@moz-do7.ko6.227.91.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 12:49:41	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-10-02 12:50:23	demurgos	I am trying to convert a Typescript function to Rust but encounter issues with the borrow checker. I think I know why but I am not sure what is the best way to solve it.
2018-10-02 12:50:24	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-02 12:50:45	mib_dw0e6j	demurgos: maybe paste the code and we might be able to help?
2018-10-02 12:50:50	demurgos	I have a flat list of ranges and want to build a tree based on the inclusion relation (there is no partial overlap)
2018-10-02 12:50:57	demurgos	TS version: https://gist.github.com/demurgos/5768ec3f26c0ce10b874031f09af00dc
2018-10-02 12:51:05	demurgos	Rust version: https://play.integer32.com//
2018-10-02 12:51:16	demurgos	My ranges are sorted by inclusion
2018-10-02 12:51:28	kimundi	demurgos: something went wrong with the playpen link there
2018-10-02 12:51:35	demurgos	Oh sorry
2018-10-02 12:51:43	demurgos	(depth first traversal)
2018-10-02 12:51:43	dpc1	hha
2018-10-02 12:51:56	demurgos	https://play.integer32.com/?gist=260380b424ccde67bd9a9a117e07280f&version=stable&mode=debug&edition=2015
2018-10-02 12:52:17	demurgos	The idea is that I have a stack of the current nodes, from root to current branch
2018-10-02 12:52:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 12:52:43	demurgos	And when I see a new range, I go up the stack to find the first node that can contain it
2018-10-02 12:52:55	demurgos	And then add the node, push it to the stack and continue
2018-10-02 12:52:57	-->	jml (sid162989@moz-r6e2pi.ealing.irccloud.com) has joined #rust-beginners
2018-10-02 12:53:07	-->	refold (refold@moz-0ig.vcg.98.88.IP) has joined #rust-beginners
2018-10-02 12:53:09	demurgos	My issue, from what I understand, is that I have two mutable references
2018-10-02 12:53:32	demurgos	My stack of parent nodes contains "active" parent nodes
2018-10-02 12:53:39	demurgos	(mutable references)
2018-10-02 12:54:06	demurgos	And when I find the right parent node, I also get a mutable reference
2018-10-02 12:54:49	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 12:54:49	demurgos	There's one on line 33 and one "owned" by the stack defined line 29
2018-10-02 12:54:59	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 12:56:53	demurgos	The reference on line 33 prevents from reusing the stack
2018-10-02 12:57:37	demurgos	Can I somehow rewrite it to signal that the reference on line 33 does not need to block the stack for the next iteration?
2018-10-02 12:58:54	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-10-02 12:59:49	-->	Susan_94 (Susan_94@moz-53s.29j.216.91.IP) has joined #rust-beginners
2018-10-02 13:00:05	Susan_94	Hey!
2018-10-02 13:00:09	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 13:01:11	<--	Susan_94 (Susan_94@moz-53s.29j.216.91.IP) has quit (G-Lined: no spamming here)
2018-10-02 13:01:33	<--	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has quit (Connection closed)
2018-10-02 13:02:03	-->	holmgr (holmgr@moz-ps6jtn.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 13:03:34	Fr0stBit	Ok i've implemented From trait into my Uniform type (OpenGL uniform parameter) and now i can call my set_uniform function like this: shdr.set_uniform("mvp", Uniform::from(&mvp));
2018-10-02 13:04:06	Fr0stBit	Can i ommit the Uniform::from() part, and make rust automatically convert the value into my Unifrom type?
2018-10-02 13:04:16	dpc1	`mvp.into()`
2018-10-02 13:04:35	<--	adoa (awachtel@moz-tls.v74.64.158.IP) has quit (Client exited)
2018-10-02 13:04:45	-->	adoa (awachtel@moz-tls.v74.64.158.IP) has joined #rust-beginners
2018-10-02 13:04:55	dpc1	Fr0stBit: when you write a From impl it implicitly declares a reverse Into declaration
2018-10-02 13:05:53	Fr0stBit	I'm not looking for the reverse i'm looking to make my call like this: set_uniform("mvp" &mvp)
2018-10-02 13:06:22	Fr0stBit	And make the &mvp automatically converted as if i was calling Uniform::from(&mvp)
2018-10-02 13:07:23	-->	vmx (vmx@moz-rbolev.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-02 13:07:25	dpc1	you could change set_uniform to accept a parameter generic over T:Into<Uniform> and then do `mvp.into()` in set_uniform. 
2018-10-02 13:07:49	Fr0stBit	Thats a nice idea! Let me try it
2018-10-02 13:07:53	demurgos	Do I have to use cells in my stack ?
2018-10-02 13:08:11	demurgos	I believe that they have a runtime cost
2018-10-02 13:09:06	<--	adoa (awachtel@moz-tls.v74.64.158.IP) has quit (Client exited)
2018-10-02 13:09:16	-->	adoa (awachtel@moz-tls.v74.64.158.IP) has joined #rust-beginners
2018-10-02 13:09:34	-->	patrl (patrl@moz-m17vkr.zas-berlin.de) has joined #rust-beginners
2018-10-02 13:09:58	Fr0stBit	dpc1: You save the day again bud!
2018-10-02 13:10:22	 *	dpc1 changes nick to batman
2018-10-02 13:11:33	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-02 13:11:56	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-02 13:13:56	-->	ysz_ (ysz@moz-ve6.3l2.171.81.IP) has joined #rust-beginners
2018-10-02 13:14:34	<--	sirup (Mibbit@moz-8fg.j7s.144.198.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 13:14:47	<--	helix (abacaxi@moz-q96skh.torproject.org) has quit (Ping timeout: 121 seconds)
2018-10-02 13:15:58	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-02 13:16:07	<--	ysz (ysz@moz-o9un62.broadband.corbina.ru) has quit (Ping timeout: 121 seconds)
2018-10-02 13:16:50	-->	ubuntourist (kjcole@moz-tp5qq2.cgn.spcsdns.net) has joined #rust-beginners
2018-10-02 13:17:05	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 13:17:25	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 13:17:32	-->	cubetastic (Thunderbird@moz-da3c7v.ok8b.et54.4072.2409.IP) has joined #rust-beginners
2018-10-02 13:18:36	<--	ubuntourist (kjcole@moz-tp5qq2.cgn.spcsdns.net) has quit (The TLS connection was non-properly terminated.)
2018-10-02 13:21:10	-->	helix (abacaxi@moz-q96skh.torproject.org) has joined #rust-beginners
2018-10-02 13:21:21	<--	mohan43u (mohan43u@moz-29p.1hl.251.45.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 13:21:57	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 13:23:11	-->	kapil_____ (uid36151@moz-7g0ahg.highgate.irccloud.com) has joined #rust-beginners
2018-10-02 13:23:20	-->	jamjuice (Mibbit@moz-ffpkg5.wireless.umu.se) has joined #rust-beginners
2018-10-02 13:23:40	-->	emerentius (emerentius@moz-pkj127.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-02 13:25:15	jamjuice	hi! quick question about deploying a rust project with docker; When i build my rust project in the docker image it cant find my external dependencies that i have. do i have to include all my dependencies as part of the docker image?
2018-10-02 13:25:37	<--	cubetastic (Thunderbird@moz-da3c7v.ok8b.et54.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 13:27:01	<--	kapil_____ (uid36151@moz-7g0ahg.highgate.irccloud.com) has quit (Quit: Updating details, brb)
2018-10-02 13:32:52	-->	mib_dsfj0w (Mibbit@moz-cp5fpg.iinet.net.au) has joined #rust-beginners
2018-10-02 13:35:08	<--	andrehjr (andrehjr@moz-2t6.doo.65.187.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 13:35:23	mib_dsfj0w	I'm hitting a "type may not live long enough" that I'm having trouble diagnosing - I've cut my code down to https://play.rust-lang.org/?gist=195e31bf13332031e321c5e2889c40e9&version=stable&mode=debug&edition=2015 - I'm sure it can be cut down more - but its pretty short.
2018-10-02 13:35:33	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Ping timeout: 121 seconds)
2018-10-02 13:36:15	<--	holmgr (holmgr@moz-ps6jtn.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 13:36:55	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-10-02 13:38:11	<--	jamjuice (Mibbit@moz-ffpkg5.wireless.umu.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 13:40:38	-->	dark-knight (dark-knight@moz-067kkd.dynamic.surfer.at) has joined #rust-beginners
2018-10-02 13:47:25	<--	fsasm (fsasm@moz-5fd.qra.178.62.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 13:47:36	neal_	I'm trying to debug a doctest.  When I do gdb target/debug/foo-HASH, I can run the unit tests, but not the doctests.  Where should I be looking for the doctests?
2018-10-02 13:47:39	--	neal_ is now known as neal
2018-10-02 13:47:46	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-10-02 13:48:40	-->	hyp3rbor3ax (hyp3rbor3ax@moz-9psn3s.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-02 13:48:58	-->	nbro (nbro@moz-tucgbt.s4ui.8gaq.aa13.2a02.IP) has joined #rust-beginners
2018-10-02 13:50:20	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-10-02 13:50:56	mib_dsfj0w	Got an answer to my question from rust discord channel. Thanks. 
2018-10-02 13:51:03	<--	mib_dsfj0w (Mibbit@moz-cp5fpg.iinet.net.au) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 13:51:38	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-02 13:52:42	<--	dostoyevsky (sck@moz-qv4.1l2.23.46.IP) has quit (Quit: leaving)
2018-10-02 13:52:59	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-02 13:53:28	-->	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has joined #rust-beginners
2018-10-02 13:53:35	<--	kinetik (kinetik@moz-5v5.8kl.99.121.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 13:53:35	<--	brundleticks (yp@moz-ij3.v2k.81.148.IP) has quit (Connection closed)
2018-10-02 13:54:16	-->	brundleticks (yp@moz-ij3.v2k.81.148.IP) has joined #rust-beginners
2018-10-02 13:55:35	-->	kinetik (kinetik@moz-5v5.8kl.99.121.IP) has joined #rust-beginners
2018-10-02 13:57:01	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-02 13:57:02	-->	Oerli (Mibbit@moz-98e.tdd.135.193.IP) has joined #rust-beginners
2018-10-02 13:59:03	-->	luizdepra (luizdepra@moz-92k43h.horizonstelecom.com.br) has joined #rust-beginners
2018-10-02 14:00:17	<--	Oerli (Mibbit@moz-98e.tdd.135.193.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 14:00:52	<--	davidthecoder (david@moz-pth.eai.156.185.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 14:00:54	<--	luizdepra (luizdepra@moz-92k43h.horizonstelecom.com.br) has quit (Quit: WeeChat 1.9.1)
2018-10-02 14:01:55	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 14:04:30	-->	U007D (U007D@moz-jc56tv.wa.comcast.net) has joined #rust-beginners
2018-10-02 14:05:09	-->	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 14:05:44	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 14:05:51	U007D	Any idea how I can satisfy the compiler?  https://play.rust-lang.org/?gist=d74eb9d5dbbfc6ccf5a3af1c15bec7b7&version=stable&mode=debug&edition=2015
2018-10-02 14:05:56	<--	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 14:05:56	-->	PeterRabbitIsFluffy (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-10-02 14:06:05	-->	holmgr (holmgr@moz-iib.qja.115.213.IP) has joined #rust-beginners
2018-10-02 14:07:45	-->	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 14:07:57	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-02 14:09:46	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 14:10:06	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 14:10:08	<--	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has quit (Quit: Connection closed for inactivity)
2018-10-02 14:11:18	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 14:11:32	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 14:11:36	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-02 14:12:29	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 14:13:50	-->	Itkovian (Itkovian@moz-nvl427.access.telenet.be) has joined #rust-beginners
2018-10-02 14:16:04	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 14:18:30	-->	sp1ff_ (sp1ff@moz-aac03k.ca.comcast.net) has joined #rust-beginners
2018-10-02 14:20:04	<--	qfire (qfire@moz-vq63an.CC.CMU.EDU) has quit (Ping timeout: 121 seconds)
2018-10-02 14:22:51	-->	poljar (poljar@moz-nkqlpv.net.t-com.hr) has joined #rust-beginners
2018-10-02 14:24:51	<--	demurgos (Mibbit@moz-irs1oq.rev.sfr.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 14:25:35	<--	poljar1 (poljar@moz-dmbiaq.net.t-com.hr) has quit (Ping timeout: 121 seconds)
2018-10-02 14:27:20	-->	blaphmat (Mibbit@moz-5m1.n5i.207.49.IP) has joined #rust-beginners
2018-10-02 14:27:25	blaphmat	the trait `serde::Deserialize<'_>` is not implemented for `chrono::Date<chrono::Utc>`
2018-10-02 14:27:52	blaphmat	Why does Date not have serialize and deserialize
2018-10-02 14:27:52	blaphmat	?
2018-10-02 14:28:58	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (The TLS connection was non-properly terminated.)
2018-10-02 14:29:57	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 14:30:33	-->	cadac (Mibbit@moz-70l.4m1.111.217.IP) has joined #rust-beginners
2018-10-02 14:31:03	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-02 14:31:05	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-10-02 14:31:11	proc	blaphmat: would look into the chrono repo
2018-10-02 14:31:15	<--	raktajino (raktajino@moz-f92.voh.170.107.IP) has left #rust-beginners ("WeeChat 2.2")
2018-10-02 14:31:34	proc	blaphmat: NaiveDate works
2018-10-02 14:32:16	proc	blaphmat: you use DateTIme
2018-10-02 14:32:36	proc	blaphmat: should be unix timestamp related, so Date is just A 00:00:00 DateTime
2018-10-02 14:32:50	proc	and you can get a Date from DateTime using .date()
2018-10-02 14:33:02	blaphmat	why not Date with tz?
2018-10-02 14:33:09	proc	tz ?
2018-10-02 14:33:13	blaphmat	timezone
2018-10-02 14:33:20	proc	that is date with timezone
2018-10-02 14:33:30	proc	use datetime and get a date from there
2018-10-02 14:33:36	proc	that's inclusive a timezone
2018-10-02 14:33:39	-->	qfire (qfire@moz-vq63an.CC.CMU.EDU) has joined #rust-beginners
2018-10-02 14:33:50	blaphmat	I dont need time component.
2018-10-02 14:33:53	proc	I think you just can't calc a Date without Time regarding timezones
2018-10-02 14:34:04	blaphmat	why not?
2018-10-02 14:34:11	proc	as the "timezone" already implicitely requires some "time" representation
2018-10-02 14:34:29	proc	internally there is no date
2018-10-02 14:34:32	proc	it's just a point in time
2018-10-02 14:34:55	blaphmat	https://docs.rs/chrono/0.4.0/chrono/struct.Date.html
2018-10-02 14:35:10	blaphmat	There is Date with timezone... just that its serializer is not available.
2018-10-02 14:35:15	proc	blaphmat: https://github.com/chronotope/chrono/issues/182
2018-10-02 14:35:32	proc	blaphmat: exactly as I told you
2018-10-02 14:35:45	proc	so use DateTime, that includes a TimeZone and get the date from there
2018-10-02 14:36:10	<--	Eragon (Eragon@moz-i01qg5.abo.wanadoo.fr) has quit (Ping timeout: 121 seconds)
2018-10-02 14:36:22	blaphmat	Yup I saw that... and I know I can use DateTime... but was wondering why do we not have serializer for Date.
2018-10-02 14:36:30	proc	because it won't work
2018-10-02 14:37:00	proc	rest is in the issue
2018-10-02 14:39:39	-->	davidthecoder (david@moz-fsuqnr.rm1q.e7on.04c8.2a01.IP) has joined #rust-beginners
2018-10-02 14:40:03	<--	mib_dw0e6j (Mibbit@moz-hj3a8f.range109-158.btcentralplus.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 14:40:16	blaphmat	Didn't really understand that. Why do you think, what will be the problem in serializing Date<Utc> to something like "2018-10-02+01:00".
2018-10-02 14:40:44	yaymukund	well, you couldn't actually use the timezone information to, say, convert to a different timezone
2018-10-02 14:40:47	blaphmat	Is it just not implemented yet or it actually cannot be implemented?
2018-10-02 14:40:53	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-02 14:40:58	yaymukund	without knowing what time it represents on that day
2018-10-02 14:41:21	proc	and you'll end up with 0.234 Days
2018-10-02 14:41:33	proc	and you'll have to decide how to store the days, all of this is inside the issue
2018-10-02 14:41:37	proc	you said you've found already
2018-10-02 14:42:06	blaphmat	ok. got it. I was thinking it can use 00:00 as default time, but I got the point.
2018-10-02 14:42:08	blaphmat	thanks
2018-10-02 14:42:28	proc	you can write an custom deserialization function for serde
2018-10-02 14:42:33	proc	so you just directly get a Date
2018-10-02 14:42:34	-->	arunkumar413 (arunkumar41@moz-7ha.j3r.96.103.IP) has joined #rust-beginners
2018-10-02 14:43:19	blaphmat	yup planning to. can you point me to DateTime serialization function present in serde?
2018-10-02 14:43:21	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Quit: Lost terminal)
2018-10-02 14:43:32	-->	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has joined #rust-beginners
2018-10-02 14:44:52	proc	I meant wrapping/unwrapping the Date
2018-10-02 14:44:56	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-02 14:44:59	proc	and calling serde on the result
2018-10-02 14:45:02	<--	patrl (patrl@moz-m17vkr.zas-berlin.de) has quit (Ping timeout: 121 seconds)
2018-10-02 14:45:25	proc	otherwise the docs already have the link to the source
2018-10-02 14:45:28	proc	https://docs.rs/chrono/0.4.6/src/chrono/datetime.rs.html#1291-1312
2018-10-02 14:45:36	proc	from https://docs.rs/chrono/0.4.6/chrono/struct.DateTime.html#impl-Serialize
2018-10-02 14:47:33	-->	demurgos (Mibbit@moz-irs1oq.rev.sfr.net) has joined #rust-beginners
2018-10-02 14:48:33	-->	FreeMasen (FreeMasen@moz-qfcdsu.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-02 14:50:24	<--	davidthecoder (david@moz-fsuqnr.rm1q.e7on.04c8.2a01.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 14:51:09	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-02 14:55:33	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 14:56:27	-->	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has joined #rust-beginners
2018-10-02 14:56:34	--	U007D is now known as U007D_afk
2018-10-02 14:57:51	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Ping timeout: 121 seconds)
2018-10-02 14:58:07	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 14:58:23	--	U007D_afk is now known as U007D
2018-10-02 14:58:26	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-10-02 14:59:02	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 14:59:18	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-10-02 15:02:56	<--	PeterRabbitIsFluffy (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:04:36	-->	PeterRabbitIsFluffy (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 15:04:48	-->	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-10-02 15:04:50	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 15:04:50	<--	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 15:05:41	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 15:06:29	-->	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 15:06:29	<--	Miniwoffer (Miniwoffer@moz-a1p.ost.247.109.IP) has quit (Connection closed)
2018-10-02 15:06:42	-->	Miniwoffer (Miniwoffer@moz-a1p.ost.247.109.IP) has joined #rust-beginners
2018-10-02 15:08:02	<--	matt-h (matt-h@moz-t1ckfj.biz.rr.com) has quit (The TLS connection was non-properly terminated.)
2018-10-02 15:08:05	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:08:38	<--	PeterRabbitIsFluffy (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 15:10:13	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:10:21	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 15:10:28	<--	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2018-10-02 15:10:38	-->	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has joined #rust-beginners
2018-10-02 15:11:15	<--	dinfuehr (dinfuehr@moz-5nq960.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-10-02 15:12:01	-->	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has joined #rust-beginners
2018-10-02 15:12:19	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 15:12:21	-->	dinfuehr (dinfuehr@moz-b3tmpv.highway.telekom.at) has joined #rust-beginners
2018-10-02 15:12:55	-->	matt-h (matt-h@moz-t1ckfj.biz.rr.com) has joined #rust-beginners
2018-10-02 15:13:38	-->	jperras (jperras@moz-17e1ed.kc4u.lihr.1970.2001.IP) has joined #rust-beginners
2018-10-02 15:13:41	<--	gregg (greg@moz-00mjdg.gnumpf.tk) has quit (Connection closed)
2018-10-02 15:16:15	<--	gnzlbg (gnzlbg@moz-7bh.gvm.130.134.IP) has quit (Quit: )
2018-10-02 15:16:48	-->	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-10-02 15:17:30	<--	sp1ff_ (sp1ff@moz-aac03k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 15:17:37	--	U007D is now known as U007D_afk
2018-10-02 15:19:33	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:20:06	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-02 15:20:50	-->	xkapastel (uid17782@moz-pa9kj7.ealing.irccloud.com) has joined #rust-beginners
2018-10-02 15:21:45	-->	cubetastic (Thunderbird@moz-da3c7v.ok8b.et54.4072.2409.IP) has joined #rust-beginners
2018-10-02 15:22:05	-->	alx741 (alx741@moz-ili.k67.178.186.IP) has joined #rust-beginners
2018-10-02 15:24:50	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-10-02 15:26:57	yaymukund	what the heck is https://github.com/Cobrand/toyunda-player-rs/blob/db2313b72da1f191bd5dd114d03a16b183faffe9/src/toyunda_player/toyunda.rs#L621 ?
2018-10-02 15:27:20	-->	giesch (user@moz-6sr.iv2.140.159.IP) has joined #rust-beginners
2018-10-02 15:27:27	yaymukund	The code does `'main: loop { ... }`
2018-10-02 15:28:05	FreeMasen	Its a named loop
2018-10-02 15:28:14	svartalf	yaymukund: https://doc.rust-lang.org/rust-by-example/flow_control/loop/nested.html
2018-10-02 15:28:29	yaymukund	oh, named so they can later do `break 'main`?
2018-10-02 15:28:31	<--	Miniwoffer (Miniwoffer@moz-a1p.ost.247.109.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:28:40	yaymukund	ahh
2018-10-02 15:28:53	FreeMasen	exactly
2018-10-02 15:29:15	yaymukund	sweet, that makes complete sense. thank you FreeMasen & svartalf 
2018-10-02 15:29:28	yaymukund	i initially thought it was lifetime related xD
2018-10-02 15:29:29	-->	roqvist (roqvist@moz-u2c7ko.meridium.se) has joined #rust-beginners
2018-10-02 15:30:12	<--	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2018-10-02 15:30:16	<--	roqvist (roqvist@moz-u2c7ko.meridium.se) has quit (Connection closed)
2018-10-02 15:33:06	-->	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has joined #rust-beginners
2018-10-02 15:33:11	-->	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has joined #rust-beginners
2018-10-02 15:33:17	-->	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has joined #rust-beginners
2018-10-02 15:33:35	-->	Elizabeth_34 (Elizabeth_3@moz-1ce.027.223.185.IP) has joined #rust-beginners
2018-10-02 15:33:49	Elizabeth_34	Hello!
2018-10-02 15:33:56	<--	neverfox (neverfox@moz-325q8o.res.rr.com) has quit (Ping timeout: 121 seconds)
2018-10-02 15:33:59	<--	Elizabeth_34 (Elizabeth_3@moz-1ce.027.223.185.IP) has quit (G-Lined: no spamming here)
2018-10-02 15:36:23	<--	justsomequestions (gumble@moz-92ujdr.pptp.stw-bonn.de) has quit (Ping timeout: 121 seconds)
2018-10-02 15:37:14	--	U007D_afk is now known as U007D
2018-10-02 15:38:13	<--	mib_c9b126 (Mibbit@moz-0bojte.ip.btc-net.bg) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 15:38:26	<--	jonalmeida (jonalmeida@moz-kml.1j0.77.45.IP) has quit (ircservices.mozilla.org (Too many invalid passwords))
2018-10-02 15:38:31	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 15:38:36	-->	jonalmeida (jonalmeida@moz-afsk3d.20db.tl8k.19f0.2001.IP) has joined #rust-beginners
2018-10-02 15:40:26	<--	federico (federico@moz-p8f.2ni.108.201.IP) has quit (Connection closed)
2018-10-02 15:40:57	<--	giesch (user@moz-6sr.iv2.140.159.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:41:35	<--	holmgr (holmgr@moz-iib.qja.115.213.IP) has quit (Connection closed)
2018-10-02 15:42:06	<--	yaymukund (yaymukund@moz-blc.52g.231.80.IP) has quit (Quit: leaving)
2018-10-02 15:43:08	-->	neverfox (neverfox@moz-325q8o.res.rr.com) has joined #rust-beginners
2018-10-02 15:43:24	<--	neverfox_ (neverfox@moz-4nt.8b3.42.64.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:43:31	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:44:29	-->	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has joined #rust-beginners
2018-10-02 15:44:56	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-10-02 15:47:16	--	U007D is now known as U007D_afk
2018-10-02 15:47:18	<--	stephaneyfx (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 15:49:29	cadac	I have a design question. My program should convert between different 3D file formats by parsing the file into a canonical representation and writing it to a file in a format according to an enum value. First, the output part: There's a gap between the value and type level here that I'm not sure how to cross.
2018-10-02 15:49:33	-->	giesch (user@moz-6sr.iv2.140.159.IP) has joined #rust-beginners
2018-10-02 15:49:36	cadac	What I'd like is something like `fn export(f: FileFormat, name: &Path) { write_to_file::<f>(name); }`, where write_to_file is a method of a trait that each format implements. However, types implement traits, not values. How can I best do that?
2018-10-02 15:50:27	Moongoodboy{K}	cadac: sounds like you want export() to be generic instead
2018-10-02 15:50:37	Moongoodboy{K}	instead of having a FileFormat enum…
2018-10-02 15:51:13	-->	justsomequestions (gumble@moz-qln302.pools.vodafone-ip.de) has joined #rust-beginners
2018-10-02 15:51:22	Moongoodboy{K}	have a FileFormat trait, with a write() method that takes a writer and a reference to the canonical format, and writes it out
2018-10-02 15:51:43	<--	YuGiOhJCJ (YuGiOhJCJ@moz-7598gj.fbx.proxad.net) has quit (Client exited)
2018-10-02 15:52:08	cadac	Hmm. clap gives me a FileFormat enum, so I'm not sure how that will work.
2018-10-02 15:52:30	Moongoodboy{K}	ahh, lessee
2018-10-02 15:54:21	-->	sproing (Mibbit@moz-vain5b.staticip.rima-tde.net) has joined #rust-beginners
2018-10-02 15:54:40	<--	sproing (Mibbit@moz-vain5b.staticip.rima-tde.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 15:55:03	Moongoodboy{K}	if you want export() to still take an enum FileFormat, you can make it match on the enum, construct the appropriate type that implements trait FileFormat and immediately use it to write the file
2018-10-02 15:56:12	-->	lundibundi (androirc@moz-ogi.71k.73.37.IP) has joined #rust-beginners
2018-10-02 15:58:21	<--	stephaneyfx_ (stephaneyfx@moz-apm.mv8.157.192.IP) has quit (Quit: Leaving)
2018-10-02 15:58:39	cadac	I wouldn't even have to construct a value, right? I half-thought of that before.
2018-10-02 15:59:48	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 16:00:29	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 16:01:04	-->	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 16:01:17	Moongoodboy{K}	fn export<..>(..) { match format { FileFormatChoice::Png => { PngFormatter::new(canonical_representation).write(file); }, /* etc */ } }
2018-10-02 16:01:30	-->	Fusxfaranto (Fusxfaranto@moz-4gm881.ca.comcast.net) has joined #rust-beginners
2018-10-02 16:01:50	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 16:03:21	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-02 16:03:44	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 16:03:44	<--	PeterRabbitIsFuzzy (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:04:01	Moongoodboy{K}	…I guess technically PngFormatter doesn't have to implement the FileFormat trait
2018-10-02 16:04:13	Moongoodboy{K}	but it would make sense for it to
2018-10-02 16:04:20	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:05:28	<--	xliiv (xliiv@moz-qq13g2.icpnet.pl) has quit (Quit: Leaving)
2018-10-02 16:05:40	ilmari	then you coud do let formatter = match format { ... }; formatter.write(file);
2018-10-02 16:07:12	<--	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 16:07:12	cadac	ilmari, that is allowed? Cool.
2018-10-02 16:07:17	-->	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 16:07:17	Moongoodboy{K}	ilmari: not without making a trait object, which doesn't seem worth it
2018-10-02 16:07:26	<--	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2018-10-02 16:08:19	ilmari	Moongoodboy{K}: or a fn make_formatter(…) -> impl FileFormat { … }?
2018-10-02 16:09:57	-->	chaomi (androirc@moz-aeo.ddu.90.212.IP) has joined #rust-beginners
2018-10-02 16:10:08	cadac	ilmari, I tried that, didn't work
2018-10-02 16:10:21	cadac	But what I haven't tried is a boxed trait object
2018-10-02 16:10:35	<--	cubetastic (Thunderbird@moz-da3c7v.ok8b.et54.4072.2409.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:11:00	<--	ysz_ (ysz@moz-ve6.3l2.171.81.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:11:49	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:12:04	-->	cubetastic (Thunderbird@moz-fvj2vh.pjqr.nuqn.0204.2405.IP) has joined #rust-beginners
2018-10-02 16:12:35	Moongoodboy{K}	ilmari, cadac: can't use `-> impl` to return multiple different types
2018-10-02 16:13:04	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-02 16:13:34	<--	lundibundi (androirc@moz-ogi.71k.73.37.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:13:38	Moongoodboy{K}	ilmari: I'd have export() match and dispatch to an instance of the appropriate formatter type that never leaves the match scope, to avoid Box<dyn>
2018-10-02 16:14:37	-->	ysz_ (ysz@moz-o9un62.broadband.corbina.ru) has joined #rust-beginners
2018-10-02 16:14:56	-->	cschneid (cschneid@moz-addqnt.co.comcast.net) has joined #rust-beginners
2018-10-02 16:15:14	-->	holmgr (holmgr@moz-2ghphh.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 16:15:31	-->	Dima_ (textual@moz-n6e8rf.iinet.net.au) has joined #rust-beginners
2018-10-02 16:15:37	<--	cschneid (cschneid@moz-addqnt.co.comcast.net) has quit (Connection closed)
2018-10-02 16:17:06	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-02 16:17:43	-->	Wax (wax@moz-niq99q.fios.verizon.net) has joined #rust-beginners
2018-10-02 16:18:21	<--	justsomequestions (gumble@moz-qln302.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2018-10-02 16:18:28	-->	justsomequestions (gumble@moz-qln302.pools.vodafone-ip.de) has joined #rust-beginners
2018-10-02 16:19:00	<--	demonarxs1 (demonarxs1@moz-8peosa.net78.udm.net) has quit (Quit: Leaving)
2018-10-02 16:19:20	<--	ysz_ (ysz@moz-o9un62.broadband.corbina.ru) has quit (Quit: Leaving)
2018-10-02 16:19:27	-->	mmacherey (Thunderbird@moz-qlu9sk.bibliothek-gruenwald.de) has joined #rust-beginners
2018-10-02 16:19:56	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 16:21:31	-->	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has joined #rust-beginners
2018-10-02 16:21:49	<--	SenasOzys_ (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has quit (Ping timeout: 121 seconds)
2018-10-02 16:22:16	<--	fstuess (Thunderbird@moz-nk0ep6.customer.m-online.net) has quit (Client exited)
2018-10-02 16:22:25	<--	arunkumar413 (arunkumar41@moz-7ha.j3r.96.103.IP) has quit (Quit: Leaving)
2018-10-02 16:23:02	-->	Aimai (Aimai@moz-htrt0b.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-02 16:23:16	Aimai	How can I make this work with the Entry api? https://play.rust-lang.org/?gist=8e207701b813e3e678976620acd263e6&version=stable&mode=debug&edition=2015
2018-10-02 16:23:41	Aimai	the idea is to only retrieve the len() if necessary
2018-10-02 16:24:11	<--	cubetastic (Thunderbird@moz-fvj2vh.pjqr.nuqn.0204.2405.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:25:25	<--	num8er (num8er@moz-9amhn4.moldtelecom.md) has quit (Connection closed)
2018-10-02 16:25:46	-->	num8er (num8er@moz-9amhn4.moldtelecom.md) has joined #rust-beginners
2018-10-02 16:26:54	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 16:28:17	-->	SenasOzys_ (SenasOzys@moz-njp.ke9.47.194.IP) has joined #rust-beginners
2018-10-02 16:29:37	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:29:38	<--	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has quit (Ping timeout: 121 seconds)
2018-10-02 16:29:39	-->	insidious (insidious@moz-fut852.hylcas.scranton.edu) has joined #rust-beginners
2018-10-02 16:29:48	<--	num8er (num8er@moz-9amhn4.moldtelecom.md) has quit (Ping timeout: 121 seconds)
2018-10-02 16:30:03	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-02 16:30:08	-->	siddhartharao17 (siddharthar@moz-ukkgel.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-10-02 16:31:11	<--	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has quit (Quit: leaving)
2018-10-02 16:31:15	-->	dostoyevsky (sck@moz-vrb7m1.de.inter.net) has joined #rust-beginners
2018-10-02 16:31:57	-->	federico (federico@moz-p8f.2ni.108.201.IP) has joined #rust-beginners
2018-10-02 16:32:44	--	U007D_afk is now known as U007D
2018-10-02 16:32:50	-->	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has joined #rust-beginners
2018-10-02 16:33:23	<--	raingloom (raingloom@moz-2kh8cn.wifi.elte.hu) has quit (Quit: WeeChat 2.2)
2018-10-02 16:35:04	-->	Vinod (textual@moz-fp8m9m.81pt.fldr.4071.2409.IP) has joined #rust-beginners
2018-10-02 16:35:12	<--	pamaury (pamaury@moz-jam7a7.mpi-sws.org) has quit (Ping timeout: 121 seconds)
2018-10-02 16:36:15	<--	Biolunar (Biolunar@moz-98hl5m.math.uni-bielefeld.de) has quit (Quit: Leaving)
2018-10-02 16:36:28	-->	tomte (agrotux@moz-689quh.bredband.skanova.com) has joined #rust-beginners
2018-10-02 16:36:30	<--	Vinod (textual@moz-fp8m9m.81pt.fldr.4071.2409.IP) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-02 16:36:35	-->	fengshaun (fengshaun@moz-7b85hc.cpe.pppoe.ca) has joined #rust-beginners
2018-10-02 16:36:48	-->	jihi (jih@moz-olpft4.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-02 16:37:20	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 16:37:36	<--	mmacherey (Thunderbird@moz-qlu9sk.bibliothek-gruenwald.de) has quit (Ping timeout: 121 seconds)
2018-10-02 16:38:28	-->	cubetastic (Thunderbird@moz-fvj2vh.pjqr.nuqn.0204.2405.IP) has joined #rust-beginners
2018-10-02 16:39:28	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-02 16:40:15	-->	oln (oln@moz-hnlvb2.customer.cdi.no) has joined #rust-beginners
2018-10-02 16:40:40	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 16:42:09	-->	Eragon (Eragon@moz-2bm9pv.abo.wanadoo.fr) has joined #rust-beginners
2018-10-02 16:42:24	-->	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-10-02 16:42:25	<--	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has quit (Ping timeout: 121 seconds)
2018-10-02 16:42:44	--	U007D is now known as U007D_afk
2018-10-02 16:42:57	<--	nbro (nbro@moz-tucgbt.s4ui.8gaq.aa13.2a02.IP) has quit (Quit: Leaving...)
2018-10-02 16:43:10	<--	holmgr (holmgr@moz-2ghphh.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 16:44:27	<--	Itkovian (Itkovian@moz-nvl427.access.telenet.be) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 16:45:55	<--	chaomi (androirc@moz-aeo.ddu.90.212.IP) has quit (Connection closed)
2018-10-02 16:48:23	-->	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has joined #rust-beginners
2018-10-02 16:49:20	<--	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has quit (Connection closed)
2018-10-02 16:49:21	-->	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has joined #rust-beginners
2018-10-02 16:50:23	<--	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has quit (Connection closed)
2018-10-02 16:50:27	-->	jperras_ (jperras@moz-hc4ikf.kc4u.lihr.1970.2001.IP) has joined #rust-beginners
2018-10-02 16:51:02	-->	mohawk (Mibbit@moz-gm2.h0k.231.123.IP) has joined #rust-beginners
2018-10-02 16:51:39	<--	jperras (jperras@moz-17e1ed.kc4u.lihr.1970.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:51:51	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:51:59	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-02 16:53:55	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 16:54:14	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-02 16:56:24	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:56:54	<--	oembot (textual@moz-k71m4j.dynamic.kabel-deutschland.de) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 16:58:27	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 16:59:26	-->	sp1ff_ (sp1ff@moz-8jsssj.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-02 16:59:30	-->	DaQue (Mutter@moz-pjl.4hv.116.199.IP) has joined #rust-beginners
2018-10-02 16:59:49	-->	holmgr (holmgr@moz-je91h5.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 16:59:57	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 17:00:41	-->	stephaneyfx (stephaneyfx@moz-k9v.37m.68.184.IP) has joined #rust-beginners
2018-10-02 17:01:58	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:02:13	<--	klausi (klausi@moz-rn0sf3.static.upcbusiness.at) has quit (Connection closed)
2018-10-02 17:02:15	<--	DaQue (Mutter@moz-pjl.4hv.116.199.IP) has quit (Quit: Mutter: www.mutterirc.com)
2018-10-02 17:02:24	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 17:03:18	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 17:04:05	-->	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 17:04:29	<--	Wax (wax@moz-niq99q.fios.verizon.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2018-10-02 17:05:27	<--	emerentius (emerentius@moz-pkj127.dip0.t-ipconnect.de) has quit (Connection closed)
2018-10-02 17:05:37	<--	holmgr (holmgr@moz-je91h5.9n7n.hs5t.06b0.2001.IP) has quit (Connection closed)
2018-10-02 17:05:43	-->	emerentius (emerentius@moz-pkj127.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-02 17:06:26	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 17:06:37	--	WindowsBunny1 is now known as WindowsBunny
2018-10-02 17:08:20	<--	andrew200 (Andrew@moz-2d7vps.cust.wifirst.net) has quit (Quit: Leaving)
2018-10-02 17:08:46	-->	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has joined #rust-beginners
2018-10-02 17:09:58	<--	mohawk (Mibbit@moz-gm2.h0k.231.123.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 17:12:31	-->	DaQue (Mutter@moz-pjl.4hv.116.199.IP) has joined #rust-beginners
2018-10-02 17:12:55	@mbrubeck	Aimai: I don't think there's an easy way
2018-10-02 17:13:07	<--	lburgazzoli (lburgazzoli@moz-kqv.p2f.224.2.IP) has quit (Quit: Leaving)
2018-10-02 17:13:12	@mbrubeck	Aimai: but note that `HashMap::len` has almost zero cost
2018-10-02 17:13:30	@mbrubeck	so I would just retrieve the length unconditionally
2018-10-02 17:15:44	<--	artfwo (artfwo@moz-6ldta8.bsa1-r1.syseleven.net) has quit (Ping timeout: 121 seconds)
2018-10-02 17:15:45	<--	holmgr (holmgr@moz-k84kml.eduroam.liu.se) has quit (Connection closed)
2018-10-02 17:15:52	-->	DaQue_ (Mutter@moz-9hq.4hv.116.199.IP) has joined #rust-beginners
2018-10-02 17:15:55	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-10-02 17:15:57	-->	Dariost (Dariost@moz-u5b.3la.48.151.IP) has joined #rust-beginners
2018-10-02 17:16:26	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-02 17:16:37	<--	vmx (vmx@moz-rbolev.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2018-10-02 17:17:45	-->	holmgr (holmgr@moz-je91h5.9n7n.hs5t.06b0.2001.IP) has joined #rust-beginners
2018-10-02 17:19:00	-->	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has joined #rust-beginners
2018-10-02 17:19:33	<--	DaQue (Mutter@moz-pjl.4hv.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:19:36	<--	siddhartharao17 (siddharthar@moz-ukkgel.uoas.oelm.0420.2001.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-02 17:19:39	-->	jsatk (jesseatkins@moz-48ft7k.ca.comcast.net) has joined #rust-beginners
2018-10-02 17:19:53	-->	siddhartharao17 (siddharthar@moz-ukkgel.uoas.oelm.0420.2001.IP) has joined #rust-beginners
2018-10-02 17:20:35	<--	BearOfJade (Thunderbird@moz-bb82fr.gv.shawcable.net) has quit (Client exited)
2018-10-02 17:21:11	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-10-02 17:21:47	<--	holmgr (holmgr@moz-je91h5.9n7n.hs5t.06b0.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:22:31	ilmari	indeed, .len() is just self.table.size(), and .table.size() is just self.size
2018-10-02 17:22:54	ilmari	so just two struct field accessess
2018-10-02 17:23:16	-->	dpc1 (dpc@moz-05s.km5.186.1.IP) has joined #rust-beginners
2018-10-02 17:24:15	<--	DaQue_ (Mutter@moz-9hq.4hv.116.199.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:25:21	Gachuk	Why does this: println!("Peeked '{}'", some_char); output: 'eeked '
2018-10-02 17:25:27	-->	harikb (uid137943@moz-c7bmd5.brockwell.irccloud.com) has joined #rust-beginners
2018-10-02 17:26:04	dgriffen	Gachuk: it shouldn't, can you create an example on play.rust-lang.org?
2018-10-02 17:26:11	stephaneyfx	eval: println!("Peeked '{}'", 'a')
2018-10-02 17:26:14	--	Notice(eval): Peeked 'a'
2018-10-02 17:26:14	--	Notice(eval): ()
2018-10-02 17:26:24	Gachuk	sec
2018-10-02 17:26:43	-->	spill (Mibbit@moz-a2b.kc5.216.74.IP) has joined #rust-beginners
2018-10-02 17:27:50	--	U007D_afk is now known as U007D
2018-10-02 17:28:28	Gachuk	hmm okay no, in which case must be something else about this code, let me see if I can build a test case
2018-10-02 17:29:21	-->	quibbit (Mibbit@moz-f1j7cl.hfc.comcastbusiness.net) has joined #rust-beginners
2018-10-02 17:30:27	Moongoodboy{K}	by the way, instead of putting singlequotes in the formatting string like that…
2018-10-02 17:30:44	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 17:30:44	Moongoodboy{K}	eval: format!("Peeked {:?}", 'a')
2018-10-02 17:30:47	--	Notice(eval): "Peeked \'a\'"
2018-10-02 17:30:47	-->	mib_1322yy (Mibbit@moz-kbgkpo.dsl.as9105.com) has joined #rust-beginners
2018-10-02 17:30:55	-->	eyans (a@moz-vfh1m4.878i.pbkb.2002.2001.IP) has joined #rust-beginners
2018-10-02 17:31:01	<--	spuz (spuz@moz-uon8ip.as13285.net) has quit (Ping timeout: 121 seconds)
2018-10-02 17:31:22	Gachuk	remind me what's the :? do?
2018-10-02 17:31:29	ilmari	debug format
2018-10-02 17:31:53	--	emerentius is now known as emerent
2018-10-02 17:31:55	<--	siddhartharao17 (siddharthar@moz-ukkgel.uoas.oelm.0420.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:31:59	-->	Aqo (Aqo@moz-tsphbp.inter.net.il) has joined #rust-beginners
2018-10-02 17:32:32	Gachuk	ah
2018-10-02 17:33:25	-->	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has joined #rust-beginners
2018-10-02 17:34:06	stephaneyfx	Gachuk: Note that "'{}'" and "{:?}" are not equivalent, even for a char.
2018-10-02 17:34:31	Moongoodboy{K}	which is why you should use the second one :p
2018-10-02 17:34:44	stephaneyfx	eval: let c = '\t';
2018-10-02 17:34:44	stephaneyfx	 println!("'{}' -- {:?}", c, c);
2018-10-02 17:34:47	--	Notice(eval): ()
2018-10-02 17:34:56	<--	spill (Mibbit@moz-a2b.kc5.216.74.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 17:34:57	mib_1322yy	uh, any clue on how to get visual studio to see rust as an enviroment? if i want to run anything i have to use the terminal to build and run
2018-10-02 17:35:06	stephaneyfx	eval: let c = '\t'; println!("'{}' -- {:?}", c, c);
2018-10-02 17:35:09	--	Notice(eval): '	' -- '\t'
2018-10-02 17:35:09	--	Notice(eval): ()
2018-10-02 17:35:21	Gachuk	this is so weird, I can't recreate it in playground:S but it's still happening in my code
2018-10-02 17:35:33	stephaneyfx	Gachuk: Can you share your code?
2018-10-02 17:35:53	dgriffen	mib_1322yy: I think there are some custom steps you can run but I normally just use the terminal when I'm in VS
2018-10-02 17:35:53	Gachuk	bit of a mess, give me a minute
2018-10-02 17:36:12	dgriffen	I find the terminal easier to do what I want. I use VS for debugging mainly
2018-10-02 17:36:24	mib_1322yy	but there's no given set up to have it run cargo build cargo run on F5 right?
2018-10-02 17:36:39	<--	giesch (user@moz-6sr.iv2.140.159.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:36:39	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 17:36:45	dgriffen	Not by default, I've considered adding it to my extension though.
2018-10-02 17:36:45	-->	giesch (user@moz-6sr.iv2.140.159.IP) has joined #rust-beginners
2018-10-02 17:37:00	mib_1322yy	alright, i thought i was missing something at the very least
2018-10-02 17:37:20	dgriffen	But the unfortunate part is I would have to create a project system for that. If you are in open folder you can set custom F5 tasks with a json file I think
2018-10-02 17:37:42	dgriffen	https://blogs.msdn.microsoft.com/vcblog/2016/10/05/bring-your-c-codebase-to-visual-studio-with-open-folder/#debug-code
2018-10-02 17:37:51	--	U007D is now known as U007D_afk
2018-10-02 17:37:57	dgriffen	that's for C++ but it should be compatible with rust
2018-10-02 17:38:32	dgriffen	mib_1322yy: may I ask why you chose VS for Rust instead of VSCode?
2018-10-02 17:38:51	mib_1322yy	sorry, it is VSCode
2018-10-02 17:39:04	mib_1322yy	i've only really ever had experience with eclipse and java
2018-10-02 17:39:28	dgriffen	mib_1322yy: ah, yeah, in VSCode you have to write the tasks json
2018-10-02 17:39:48	mib_1322yy	i can see there's a "run task" under the terminal folder
2018-10-02 17:41:08	Gachuk	https://gist.github.com/richardhallett/f30a9246ffd9ef6bb328fa13bb71d09f line 75 is the print, I'm still trying to make an isolated example though
2018-10-02 17:42:17	mib_1322yy	cheers anyway, i only just learnt of the inbuilt terminal so it should be good enough to start messing about
2018-10-02 17:42:51	Gachuk	also god damn, vs code terminal is crashy crashy
2018-10-02 17:47:19	Gachuk	my rust is 1.29.0 as opposed to .1
2018-10-02 17:47:21	Gachuk	maybe ill update
2018-10-02 17:47:30	-->	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has joined #rust-beginners
2018-10-02 17:47:43	cubetastic	mib_1322yy: what OS do you use?
2018-10-02 17:47:47	<--	Dima_ (textual@moz-n6e8rf.iinet.net.au) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 17:47:48	dgriffen	Gachuk: I've never had a problem with vscode terminal
2018-10-02 17:47:55	Gachuk	dgriffen: nor me until recently
2018-10-02 17:48:02	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 17:48:06	cubetastic	Gachuk: I mean what OS do you use
2018-10-02 17:48:11	Gachuk	Windows 10
2018-10-02 17:48:14	cubetastic	pinged the wrong person, my bad...
2018-10-02 17:48:23	dgriffen	Gachuk: are you on the insiders build of VSCode?
2018-10-02 17:48:26	Gachuk	nope
2018-10-02 17:48:29	dgriffen	hmm, odd
2018-10-02 17:48:30	cubetastic	Gachuk: What terminal shell do you use?
2018-10-02 17:48:31	Gachuk	i've not had problems in past, at least not with other languages
2018-10-02 17:48:33	cubetastic	in VSCode
2018-10-02 17:48:33	Gachuk	powershell
2018-10-02 17:48:34	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-02 17:48:35	-->	BearOfJade (Thunderbird@moz-qqk978.wireless.uvic.ca) has joined #rust-beginners
2018-10-02 17:48:47	dRk	what is the current best practice wrt wrapping/converting different types of errors? There is something on wrapping errors in an Enum in the first edition of the book, there is the failure crate, and I see RFC 2504 'fix the Error trait' got merged. Any advice/experiences? Is an extern crate still needed with this new RFC?
2018-10-02 17:48:50	cubetastic	try switching
2018-10-02 17:49:00	Gachuk	alright
2018-10-02 17:49:03	dgriffen	I know they are doing some work for RS5 to use the new conpty backend. Which is why I asked about the insiders build
2018-10-02 17:49:40	cubetastic	Gachuk: may be the other shell might work better
2018-10-02 17:49:50	--	avadacatavra|w3c is now known as avadacatavra
2018-10-02 17:49:56	mib_1322yy	woops, long response
2018-10-02 17:50:00	mib_1322yy	i use windows 7
2018-10-02 17:50:20	cubetastic	mib_1322yy: I'm sorry, I meant Gachuk
2018-10-02 17:50:22	mib_1322yy	oh, i see you meant to ping the other dude
2018-10-02 17:50:23	mib_1322yy	np
2018-10-02 17:50:59	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-10-02 17:51:07	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 17:51:09	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-10-02 17:51:21	cubetastic	Is it possible to read the contents of a webpage at localhost:5050/foo using only tokio?
2018-10-02 17:52:34	<--	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:52:37	-->	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has joined #rust-beginners
2018-10-02 17:52:54	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-02 17:53:01	stephaneyfx	cubetastic: Yes, if you format and send the http request yourself. But I'd rather use a crate doing it.
2018-10-02 17:53:31	<--	SenasOzys_ (SenasOzys@moz-njp.ke9.47.194.IP) has quit (Connection closed)
2018-10-02 17:53:34	-->	SenasOzys (SenasOzys@moz-njp.ke9.47.194.IP) has joined #rust-beginners
2018-10-02 17:54:35	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-02 17:54:36	<--	orium (fulano@moz-9mu.6i1.35.193.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:54:53	-->	kyrylo_ (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-02 17:55:29	<--	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has quit (Client exited)
2018-10-02 17:55:31	Aimai	alright, thanks mbrubeck 
2018-10-02 17:55:34	cubetastic	stephaneyfx: Is that what https://tokio.rs/docs/getting-started/io/ talks about?
2018-10-02 17:55:39	-->	bochecha (bochecha@moz-g64dl9.rev.sfr.net) has joined #rust-beginners
2018-10-02 17:55:54	<--	daschl (daschl@moz-3i95uu.dynamic.surfer.at) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 17:56:03	stephaneyfx	cubetastic: Yes
2018-10-02 17:56:08	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-10-02 17:56:16	-->	Saukk_ (Saukk@moz-t00thi.elisa-laajakaista.fi) has joined #rust-beginners
2018-10-02 17:56:18	<--	mib_1322yy (Mibbit@moz-kbgkpo.dsl.as9105.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 17:56:25	cubetastic	stephaneyfx: so what is the socket variable?
2018-10-02 17:56:56	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 17:56:56	stephaneyfx	cubetastic: A client socket. This is the code for a server.
2018-10-02 17:57:20	Gachuk	So that was weird
2018-10-02 17:57:44	Gachuk	in 1.29.0 I was getting that strange output, in 1.29.1 it works fine
2018-10-02 17:58:24	<--	Saukk (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Ping timeout: 121 seconds)
2018-10-02 17:59:12	<--	quibbit (Mibbit@moz-f1j7cl.hfc.comcastbusiness.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 17:59:53	-->	oembot (textual@moz-qp5tha.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-10-02 18:00:26	<--	sp1ff_ (sp1ff@moz-8jsssj.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 18:00:26	<--	cubetastic (Thunderbird@moz-fvj2vh.pjqr.nuqn.0204.2405.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 18:00:42	-->	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 18:00:49	Gachuk	wait no
2018-10-02 18:00:51	Gachuk	that's not true
2018-10-02 18:00:56	Gachuk	still broken, had the wrong code loaded
2018-10-02 18:01:02	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 18:01:17	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-02 18:01:21	<--	giesch (user@moz-6sr.iv2.140.159.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 18:01:34	-->	PeterRabbitIsFluffy (peter@moz-f75.72t.143.75.IP) has joined #rust-beginners
2018-10-02 18:02:28	-->	lachlansneff (uid265665@moz-tk9su0.charlton.irccloud.com) has joined #rust-beginners
2018-10-02 18:03:27	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 18:03:27	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 18:04:18	-->	siddhartharao17 (siddharthar@moz-1vo.sr5.107.128.IP) has joined #rust-beginners
2018-10-02 18:04:49	-->	sp1ff_ (sp1ff@moz-33nsbu.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-02 18:04:54	proc	Gachuk: then it's easy: don't use that broken code
2018-10-02 18:05:19	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-02 18:06:04	-->	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 18:06:44	Gachuk	proc: :P
2018-10-02 18:06:54	<--	WindowsBunny1 (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 18:07:28	<--	jperras_ (jperras@moz-hc4ikf.kc4u.lihr.1970.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 18:10:05	<--	justsomequestions (gumble@moz-qln302.pools.vodafone-ip.de) has quit (Quit: Konversation terminated!)
2018-10-02 18:10:46	<--	BearOfJade (Thunderbird@moz-qqk978.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-10-02 18:10:53	-->	BearOfJade (Thunderbird@moz-qqk978.wireless.uvic.ca) has joined #rust-beginners
2018-10-02 18:11:20	<--	oembot (textual@moz-qp5tha.dynamic.kabel-deutschland.de) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 18:13:00	<--	refold (refold@moz-0ig.vcg.98.88.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 18:13:00	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-02 18:13:10	-->	artfwo (artfwo@moz-gk2.a0k.120.37.IP) has joined #rust-beginners
2018-10-02 18:15:06	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-10-02 18:15:30	<--	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has quit (Quit: Leaving)
2018-10-02 18:15:35	-->	tac-tics (tac-tics@moz-93pd7l.ph.cox.net) has joined #rust-beginners
2018-10-02 18:16:01	-->	oembot (textual@moz-qp5tha.dynamic.kabel-deutschland.de) has joined #rust-beginners
2018-10-02 18:16:55	Gachuk	I've managed to reproduce the problem outside my code, however it relies on using stdin, you can't do that on playground right?
2018-10-02 18:18:25	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-10-02 18:18:50	<--	Rembane (irssi@moz-rd8dm7.members.linode.com) has left #rust-beginners
2018-10-02 18:19:26	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-02 18:22:29	Arnavion	Playground's stdin is closed, yes
2018-10-02 18:22:49	Arnavion	but you can still show the code on playground
2018-10-02 18:23:26	Gachuk	https://play.rust-lang.org/?gist=a2ed008ec5a8e99dbeb6736e8c3994a1&version=stable&mode=debug&edition=2015
2018-10-02 18:23:27	@mbrubeck	Simulated stdin on playground https://play.rust-lang.org/?gist=3e58355add89bd5b022297bd868e21d8&version=stable&mode=debug&edition=2015
2018-10-02 18:23:32	Gachuk	can someone try running that locally
2018-10-02 18:23:49	Gachuk	I can simulate it outputting 'eeked ' for me with that
2018-10-02 18:24:46	Gachuk	ooh you dont even need any of the peekable stuff
2018-10-02 18:24:51	@mbrubeck	You're printing a `\r` character
2018-10-02 18:25:01	-->	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-02 18:25:02	<--	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-02 18:25:09	@mbrubeck	Which is a control character that moves the cursor to the start of the line
2018-10-02 18:25:11	-->	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-02 18:25:18	@mbrubeck	So it prints Peeked '
2018-10-02 18:25:19	<--	kyrylo_ (kyrylo@moz-nrg.utv.105.130.IP) has quit (Connection closed)
2018-10-02 18:25:23	@mbrubeck	and then moves the character to the start of the line
2018-10-02 18:25:25	@mbrubeck	and then prints '
2018-10-02 18:25:31	@mbrubeck	which writes over the P
2018-10-02 18:25:37	-->	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has joined #rust-beginners
2018-10-02 18:25:57	 *	Gachuk face palms
2018-10-02 18:26:12	Gachuk	of course
2018-10-02 18:26:13	@mbrubeck	The solution, as mentioned earlier, is use {:?} https://play.rust-lang.org/?gist=38cd798ca4cd676039fb8785ca58ee72&version=stable&mode=debug&edition=2015
2018-10-02 18:26:16	Gachuk	god I'm an idiot
2018-10-02 18:26:18	Gachuk	yes yes
2018-10-02 18:26:20	Gachuk	I understand
2018-10-02 18:26:31	Gachuk	my brain was so focused on the output I wasn't considering what I was actually outputting
2018-10-02 18:26:41	Gachuk	thank you
2018-10-02 18:26:58	-->	KiChjang_ (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 18:27:10	--	KiChjang_ is now known as KiChjang
2018-10-02 18:29:08	-->	giesch (user@moz-6sr.iv2.140.159.IP) has joined #rust-beginners
2018-10-02 18:30:13	-->	dvorak_mech (alexbrown@moz-seijk2.tx.comcast.net) has joined #rust-beginners
2018-10-02 18:30:50	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 18:31:34	-->	Aqo_ (Aqo@moz-tsphbp.inter.net.il) has joined #rust-beginners
2018-10-02 18:31:39	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-02 18:32:12	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 18:33:04	<--	BearOfJade (Thunderbird@moz-qqk978.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-10-02 18:34:12	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-02 18:34:19	<--	oembot (textual@moz-qp5tha.dynamic.kabel-deutschland.de) has quit (Ping timeout: 121 seconds)
2018-10-02 18:34:51	<--	Aqo (Aqo@moz-tsphbp.inter.net.il) has quit (Ping timeout: 121 seconds)
2018-10-02 18:34:57	--	Aqo_ is now known as Aqo
2018-10-02 18:35:48	-->	plusone (custom@moz-kl7s3i.skybroadband.com) has joined #rust-beginners
2018-10-02 18:36:34	-->	Xanorax (Xanorax@moz-qemh21.cust.swisscom.ch) has joined #rust-beginners
2018-10-02 18:36:40	Xanorax	sebk, hey
2018-10-02 18:36:43	Aimai	How do I deal with cases such as for element in self.elements { self.mut_self_function(element); } ?
2018-10-02 18:37:48	sebk	Xanorax: hello
2018-10-02 18:37:53	Xanorax	sebk, this is the example from nickel basically which doesn't work for me. https://play.rust-lang.org/?gist=f5bd0ab81d7001cbb5ff9352e3a4f6f7&version=stable&mode=debug&edition=2015 - my goal is to make calling trait methods work. Any pointers? Thank you
2018-10-02 18:37:55	Xanorax	:D
2018-10-02 18:37:58	-->	zeggpold (Mibbit@moz-lso.0k6.170.207.IP) has joined #rust-beginners
2018-10-02 18:38:12	<--	zeggpold (Mibbit@moz-lso.0k6.170.207.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 18:38:39	sebk	hm.
2018-10-02 18:38:45	sebk	not today
2018-10-02 18:39:00	 *	sebk is looking for a picture of Epilobium stevenii
2018-10-02 18:39:16	Xanorax	sebk, ok, I just wanted to make a minimal example so it's easier to figure out a solution
2018-10-02 18:39:18	Xanorax	:D
2018-10-02 18:39:19	sebk	if you find one, I will write a working thing
2018-10-02 18:39:22	stephaneyfx	Aimai: Usually you try to make mut_self_function a function taking only what it needs, instead of a method taking &mut self. This can potentially be making it a method of a field of Self that contains everything it needs.
2018-10-02 18:39:57	Xanorax	sebk, good luck on finding one =)
2018-10-02 18:39:59	Aimai	hmm that's not really possible
2018-10-02 18:40:20	sebk	Xanorax: I found a plant, but fail to identify it
2018-10-02 18:40:27	Aimai	or at least it would be unwieldy to make a wrapper struct and trait implementation just to make that function work inside of the loop
2018-10-02 18:40:41	<--	qfire (qfire@moz-vq63an.CC.CMU.EDU) has quit (Ping timeout: 121 seconds)
2018-10-02 18:40:48	stephaneyfx	Aimai: You can make it a regular function or associated function
2018-10-02 18:40:58	Aimai	of what?
2018-10-02 18:41:50	stephaneyfx	Regular function in the module or associated function of your type
2018-10-02 18:42:25	Aimai	it can't take self as an argument then
2018-10-02 18:42:40	Aimai	but I couldn't pass mutable references of the objects inside my struct I have to modify either right?
2018-10-02 18:42:58	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-02 18:42:59	stephaneyfx	That's the problem, taking &mut self when self is already borrowed by the loop
2018-10-02 18:43:26	stephaneyfx	You can pass reference (even mutable ones) to other fields than the one borrowed by the loop
2018-10-02 18:43:34	stephaneyfx	*references
2018-10-02 18:44:05	Aimai	but I can't pass self.property or I'll get the same error
2018-10-02 18:44:05	stephaneyfx	You just can't take a mut ref to *all* of self or the field borrowed by the loop
2018-10-02 18:44:10	-->	qfire (qfire@moz-vq63an.CC.CMU.EDU) has joined #rust-beginners
2018-10-02 18:44:15	Aimai	oh right
2018-10-02 18:44:16	Aimai	hmm
2018-10-02 18:44:29	Aimai	so I guess it's a matter of the borrow checker not being smart enough?
2018-10-02 18:45:24	Xanorax	sebk, ah didnt even know what that is... =)
2018-10-02 18:45:31	stephaneyfx	That's the model it works with. It forbids some valid code, but all code it accepts is valid.
2018-10-02 18:46:01	Aimai	I mean
2018-10-02 18:46:16	Xanorax	sebk, will you ping me once you have time?
2018-10-02 18:46:20	Aimai	if the function that takes mut self doesn't modify the properties that are already borrowed
2018-10-02 18:46:52	sebk	Xanorax: maybe tomorrow
2018-10-02 18:46:54	proc	mbrubeck: nice stdin hack
2018-10-02 18:46:59	Aimai	it could be able to figure out whether the function actually uses anything that's already borrowed
2018-10-02 18:47:07	sebk	I am fairly certain the previous thing works
2018-10-02 18:47:08	stephaneyfx	Aimai: Sure, but that's be kind of hard to show in the method signature. And changing the impl of a method could easily change that.
2018-10-02 18:47:09	proc	mbrubeck: although you need to know that a main.rs is in the background
2018-10-02 18:47:09	sebk	if fixed
2018-10-02 18:47:24	sebk	*when fixed
2018-10-02 18:47:31	sebk	and that there is no easier one
2018-10-02 18:47:56	Aimai	well in my case I just switched to interior mutability
2018-10-02 18:48:16	Xanorax	sebk, hmm... I keep reading online that this kind of stuff doesnt work with rust so I would like to see it on this example so I don't get confused by the nickelrs foo
2018-10-02 18:48:33	sebk	can you link it again?
2018-10-02 18:48:39	 *	sebk fetches nickel
2018-10-02 18:48:53	sebk	ideally, can you make a repo that I can clone?
2018-10-02 18:48:58	sebk	which contains the example
2018-10-02 18:49:12	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-10-02 18:49:29	Xanorax	yeah sure
2018-10-02 18:49:33	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 18:50:13	<--	kyrylo (kyrylo@moz-nrg.utv.105.130.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 18:50:43	--	U007D_afk is now known as U007D
2018-10-02 18:52:17	<--	dalley_ (dalley@moz-5ib9oe.res.spectrum.com) has quit (The TLS connection was non-properly terminated.)
2018-10-02 18:52:22	-->	dalley (dalley@moz-sj3bja.dyn6.twc.com) has joined #rust-beginners
2018-10-02 18:52:32	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-02 18:54:24	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 18:56:09	<--	tasansga (tasansga@moz-oucppq.connect.netcom.no) has quit (The TLS connection was non-properly terminated.)
2018-10-02 18:56:14	<--	giesch (user@moz-6sr.iv2.140.159.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 18:56:26	-->	Miniwoffer (Miniwoffer@moz-tsi1n6.89-11-253.nextgentel.com) has joined #rust-beginners
2018-10-02 18:56:50	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 18:57:54	sebk	yes
2018-10-02 18:58:09	Xanorax	ok great
2018-10-02 18:58:21	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 18:59:15	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 18:59:31	<--	sp1ff_ (sp1ff@moz-33nsbu.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:00:14	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 19:00:23	-->	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 19:00:53	-->	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has joined #rust-beginners
2018-10-02 19:01:03	-->	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 19:01:34	-->	giesch (user@moz-6sr.iv2.140.159.IP) has joined #rust-beginners
2018-10-02 19:01:51	-->	sp1ff_ (sp1ff@moz-fsbndm.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-02 19:02:09	<--	edcragg (edcragg@moz-sjrvib.co.uk) has quit (Quit: ZNC - http://znc.in)
2018-10-02 19:02:22	<--	PeterRabbitIsFluffy (peter@moz-f75.72t.143.75.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:02:55	-->	edcragg (edcragg@moz-sjrvib.co.uk) has joined #rust-beginners
2018-10-02 19:04:32	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:05:43	-->	dthul (dthul@moz-9kivq0.adslplus.ch) has joined #rust-beginners
2018-10-02 19:05:48	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-10-02 19:06:07	<--	sp1ff_ (sp1ff@moz-fsbndm.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:06:26	<--	oms (oms@moz-95d3fi.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-10-02 19:07:02	GenghisJohn	does using super:: in a mod have any performance implications?
2018-10-02 19:07:27	stephaneyfx	GenghisJohn: No
2018-10-02 19:07:33	GenghisJohn	awesome
2018-10-02 19:07:37	stephaneyfx	GenghisJohn: It's all resolved at compile time
2018-10-02 19:07:58	<--	demurgos (Mibbit@moz-irs1oq.rev.sfr.net) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 19:08:22	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 19:09:06	GenghisJohn	ok. Is there an automagical way for crate to assume that if it's not in the mod, then to check super
2018-10-02 19:09:32	stephaneyfx	GenghisJohn: I don't think there is
2018-10-02 19:09:42	GenghisJohn	alrighty. thank you
2018-10-02 19:09:50	stephaneyfx	You're welcome
2018-10-02 19:11:13	<--	giesch (user@moz-6sr.iv2.140.159.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:11:38	-->	pamaury (pamaury@moz-gid.qc3.235.46.IP) has joined #rust-beginners
2018-10-02 19:12:19	-->	mvzink (mvzink@moz-s3c.0ql.46.174.IP) has joined #rust-beginners
2018-10-02 19:12:22	-->	oms (oms@moz-95d3fi.dyn.telefonica.de) has joined #rust-beginners
2018-10-02 19:12:42	<--	Saukk_ (Saukk@moz-t00thi.elisa-laajakaista.fi) has quit (Connection closed)
2018-10-02 19:14:49	-->	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has joined #rust-beginners
2018-10-02 19:15:12	<--	qfire (qfire@moz-vq63an.CC.CMU.EDU) has quit (Ping timeout: 121 seconds)
2018-10-02 19:15:21	GenghisJohn	ah I was doing it on a per-method/struct basis instead of doing a use super:: at the top. Much cleaner now
2018-10-02 19:16:08	-->	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has joined #rust-beginners
2018-10-02 19:16:10	--	U007D is now known as U007D_afk
2018-10-02 19:17:38	<--	siddhartharao17 (siddharthar@moz-1vo.sr5.107.128.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:20:25	Fr0stBit	Hi again guys!
2018-10-02 19:20:30	Fr0stBit	According to this: https://docs.rs/cgmath/0.16.1/cgmath/struct.Vector3.html#impl-From%3C%26%27a%20%5BS%3B%203%5D%3E
2018-10-02 19:20:44	Fr0stBit	Shouldn't this work? https://play.rust-lang.org/?gist=63b699e5c13217149469d619fa5b7bda&version=stable&mode=debug&edition=2015
2018-10-02 19:20:45	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-02 19:20:51	-->	qfire (qfire@moz-vq63an.CC.CMU.EDU) has joined #rust-beginners
2018-10-02 19:21:22	stephaneyfx	Fr0stBit: You're passing in a slice, not an array of 3 elements
2018-10-02 19:22:00	stephaneyfx	Fr0stBit: `let tt = [c.0, c.1, c.2];` may work
2018-10-02 19:22:08	-->	sargas (sargas@moz-4lg1v6.slkc.qwest.net) has joined #rust-beginners
2018-10-02 19:22:12	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-02 19:22:13	stephaneyfx	Fr0stBit: Sorry, I meant indices
2018-10-02 19:22:28	stephaneyfx	Fr0stBit: `let tt = [c[0], c[1], c[2]];` may work
2018-10-02 19:22:54	Fr0stBit	Ah sorry just noticed its a slice not an array as you said
2018-10-02 19:23:03	Fr0stBit	Can i make an array ref from a slice?
2018-10-02 19:23:06	stephaneyfx	Fr0stBit: It's alright :)
2018-10-02 19:24:32	stephaneyfx	Fr0stBit: Why not create a local array as shown? It's just 3 u32. I don't know if there is a safe wrapper for doing the cast you described.
2018-10-02 19:26:13	Fr0stBit	stephaneyfx: Yeah i'm just exploring rust and its shortcuts! I thought that some kind of trick from a slice to an array ref could have been possible
2018-10-02 19:27:59	stephaneyfx	!crate arrayref
2018-10-02 19:27:59	+rustbot	arrayref (0.3.5) - Macros to take array references of slices -> https://crates.io/crates/arrayref <https://docs.rs/arrayref>
2018-10-02 19:28:00	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-02 19:28:04	stephaneyfx	Fr0stBit:  ^
2018-10-02 19:28:43	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-02 19:29:15	-->	BearOfJade (Thunderbird@moz-qqk978.wireless.uvic.ca) has joined #rust-beginners
2018-10-02 19:30:25	-->	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has joined #rust-beginners
2018-10-02 19:30:32	-->	siho (uid323867@moz-t8en3e.ealing.irccloud.com) has joined #rust-beginners
2018-10-02 19:33:32	-->	sp1ff_ (sp1ff@moz-fsbndm.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-02 19:36:11	<--	Mateon1 (Thunderbird@moz-pnid9g.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-10-02 19:36:49	sarnold	stephaneyfx: ooh. looks neat. (actually, looks slightly frustrating, since it feels like a clear thing the language is missing.. but still. :)
2018-10-02 19:37:29	stephaneyfx	sarnold: :)
2018-10-02 19:37:42	<--	sp1ff_ (sp1ff@moz-fsbndm.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:41:19	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-02 19:41:25	<--	esc (Eric@moz-d25h75.mssnks.sbcglobal.net) has quit (Quit: WeeChat 2.2)
2018-10-02 19:42:25	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-02 19:43:16	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-02 19:43:35	<--	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-02 19:43:56	-->	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-02 19:44:06	<--	dark-knight (dark-knight@moz-067kkd.dynamic.surfer.at) has quit (The TLS connection was non-properly terminated.)
2018-10-02 19:44:55	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-02 19:45:14	-->	chrisdotcode (quassel@moz-cd4qn1.jv55.dlrr.fcc8.2607.IP) has joined #rust-beginners
2018-10-02 19:46:38	-->	jperras_ (jperras@moz-4v7ef1.dsl.bell.ca) has joined #rust-beginners
2018-10-02 19:47:54	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-02 19:48:03	<--	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:48:39	<--	artfwo (artfwo@moz-gk2.a0k.120.37.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 19:48:50	--	U007D_afk is now known as U007D
2018-10-02 19:48:51	-->	artfwo (artfwo@moz-fb0.8oo.75.184.IP) has joined #rust-beginners
2018-10-02 19:49:18	-->	mib_be87be (Mibbit@moz-3dh.g8h.91.158.IP) has joined #rust-beginners
2018-10-02 19:49:25	<--	BearOfJade (Thunderbird@moz-qqk978.wireless.uvic.ca) has quit (Ping timeout: 121 seconds)
2018-10-02 19:49:27	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-02 19:49:48	mib_be87be	sup
2018-10-02 19:50:19	-->	leotaku (leotaku@moz-lnm2k9.highway.a1.net) has joined #rust-beginners
2018-10-02 19:50:53	<--	mib_be87be (Mibbit@moz-3dh.g8h.91.158.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 19:51:58	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 19:52:04	-->	someone (Mibbit@moz-2g0ul0.etb.net.co) has joined #rust-beginners
2018-10-02 19:53:22	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-02 19:53:29	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-02 19:54:10	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-02 19:55:00	<--	SenasOzys (SenasOzys@moz-njp.ke9.47.194.IP) has quit (Connection closed)
2018-10-02 19:55:01	someone	Which tools do you use to do a coverage test?
2018-10-02 19:56:51	<--	sargas (sargas@moz-4lg1v6.slkc.qwest.net) has quit (Quit: WeeChat 2.2)
2018-10-02 19:59:09	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 19:59:19	-->	PeterRabbitIsFluffy (peter@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 20:01:17	<--	PeterRabbit (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 20:01:53	-->	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 20:02:18	<--	plusone (custom@moz-kl7s3i.skybroadband.com) has quit (Ping timeout: 121 seconds)
2018-10-02 20:04:01	-->	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has joined #rust-beginners
2018-10-02 20:04:04	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-02 20:04:28	<--	patrl (patrl@moz-2kp3kj.f90c.bh8c.8109.2a02.IP) has quit (Quit: WeeChat 2.2)
2018-10-02 20:06:29	-->	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-02 20:06:34	<--	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has quit (Connection closed)
2018-10-02 20:06:42	-->	kulshrax (kulshrax@moz-fohlgg.8r4b.grs8.010d.2620.IP) has joined #rust-beginners
2018-10-02 20:06:48	-->	sp1ff_ (sp1ff@moz-fsbndm.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-02 20:06:56	-->	saimen (saimen@moz-vaamlo.dynamic.mnet-online.de) has joined #rust-beginners
2018-10-02 20:07:06	<--	alx741 (alx741@moz-ili.k67.178.186.IP) has quit (Client exited)
2018-10-02 20:08:33	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-10-02 20:09:52	<--	Gilfoyle (hatter@moz-4784p7.dyn.optonline.net) has quit (Ping timeout: 121 seconds)
2018-10-02 20:10:18	--	japaric is now known as japaric|busy
2018-10-02 20:11:30	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-02 20:11:33	-->	jonhoo (jonhoo_@moz-h9o79l.csail.mit.edu) has joined #rust-beginners
2018-10-02 20:13:05	<--	Uther (Thunderbird@moz-gssp49.fbx.proxad.net) has quit (Connection closed)
2018-10-02 20:17:26	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 20:19:07	-->	SenasOzys (SenasOzys@moz-ci6uef.77-105-199.netatonce.net) has joined #rust-beginners
2018-10-02 20:19:07	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-02 20:19:47	-->	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has joined #rust-beginners
2018-10-02 20:20:51	-->	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has joined #rust-beginners
2018-10-02 20:25:08	someone	s
2018-10-02 20:25:13	someone	s
2018-10-02 20:25:28	dpc1	someone: ?
2018-10-02 20:25:53	-->	orph (orph@moz-4bjvto.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-10-02 20:26:22	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 20:27:31	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-02 20:27:33	someone	Which tools do you use to do a coverage test?
2018-10-02 20:28:02	<--	Xanorax (Xanorax@moz-qemh21.cust.swisscom.ch) has quit (Quit: Leaving)
2018-10-02 20:28:38	-->	plusone (custom@moz-kl7s3i.skybroadband.com) has joined #rust-beginners
2018-10-02 20:30:55	-->	cwndrws (cwndrws@moz-pvul7j.psnl.79ot.4700.2606.IP) has joined #rust-beginners
2018-10-02 20:32:08	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-02 20:33:31	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 20:36:02	<--	eyans (a@moz-vfh1m4.878i.pbkb.2002.2001.IP) has quit (Client exited)
2018-10-02 20:36:15	-->	num8er (num8er@moz-9amhn4.moldtelecom.md) has joined #rust-beginners
2018-10-02 20:36:33	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Connection closed)
2018-10-02 20:36:45	-->	jossypoo (jos@moz-0m2.4ee.243.162.IP) has joined #rust-beginners
2018-10-02 20:40:06	<--	plusone (custom@moz-kl7s3i.skybroadband.com) has quit (Quit: No Ping reply in 180 seconds.)
2018-10-02 20:41:17	-->	plusone (custom@moz-kl7s3i.skybroadband.com) has joined #rust-beginners
2018-10-02 20:41:39	-->	siddhartharao17 (siddharthar@moz-u06k9a.79gu.6ej8.0420.2001.IP) has joined #rust-beginners
2018-10-02 20:41:51	-->	demurgos (Mibbit@moz-irs1oq.rev.sfr.net) has joined #rust-beginners
2018-10-02 20:43:05	richo2	Can I not box a trait with associated types, even when those types are bound by a trait themselves?
2018-10-02 20:44:45	-->	ru (ru@moz-8la824.red.bezeqint.net) has joined #rust-beginners
2018-10-02 20:44:48	stephaneyfx	richo2: You need to specify the exact type of associated types when boxing. Can you share your code on the playground?
2018-10-02 20:45:14	-->	gagbo (gagbo@moz-a9bf5n.abo.bbox.fr) has joined #rust-beginners
2018-10-02 20:45:27	richo2	stephaneyfx: I can try to redudce it to a playground link. That said, if I need to specify the concrete types then I might be hosed (I'm trying ot return a Vec of objects that implement an interface)
2018-10-02 20:45:44	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 20:45:54	dpc1	richo2: vec needs all types to be the same
2018-10-02 20:46:05	stephaneyfx	richo2: And this interface/trait has associated types?
2018-10-02 20:46:12	richo2	it does, yeah
2018-10-02 20:46:28	richo2	dpc1: well, I can do like Vec<Box<dyn Trait>> just fine
2018-10-02 20:46:31	stephaneyfx	richo2: And you don't want to state what these types are exactly?
2018-10-02 20:46:51	richo2	they're different for each implementor. I can maybe try to unify them but it would probably not be great
2018-10-02 20:47:22	stephaneyfx	richo2: You have to unify them somehow if you want to store them in the same Vec
2018-10-02 20:47:46	richo2	well I was hoping that since the associated types implement the interface, downstream would just get them as trait objects
2018-10-02 20:47:50	richo2	and not actually know their concrete types
2018-10-02 20:48:27	richo2	https://github.com/richo/archiver/blob/vimeo-implementation/src/config.rs#L158-L165 and https://github.com/richo/archiver/blob/vimeo-implementation/src/dropbox.rs#L264 are the upstream parts, I can try to reduce it down for the playpen
2018-10-02 20:48:44	richo2	although I think I forgot to commit the implementations for the vimeo adaptor, although I don't think that will actually fix the problem
2018-10-02 20:49:07	<--	insidious (insidious@moz-fut852.hylcas.scranton.edu) has quit (Quit: WeeChat 2.2)
2018-10-02 20:50:07	-->	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has joined #rust-beginners
2018-10-02 20:50:26	stephaneyfx	richo2: I think you explained the problem clearly, so no need to edit your code to put in on the playground. You need a common associated type, possibly boxing it too. I can try to write an example if this helps.
2018-10-02 20:50:35	stephaneyfx	*put it
2018-10-02 20:50:47	richo2	no, that makes sense. I will see if I can make that work
2018-10-02 20:51:12	richo2	I suppose I could just use an enum as that upload type to wrap the other types
2018-10-02 20:51:29	demurgos	Hi
2018-10-02 20:51:30	stephaneyfx	That's another way, yes
2018-10-02 20:51:34	richo2	and then more or less implement that StorageResponse trait on the enum
2018-10-02 20:51:48	richo2	anyway, thanks for all your help. I see what's going on now
2018-10-02 20:51:56	stephaneyfx	You're welcome
2018-10-02 20:52:02	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 20:52:22	demurgos	I am trying to consume to sorted vectors and merge them into a single sorted vector
2018-10-02 20:52:29	<--	ru (ru@moz-8la824.red.bezeqint.net) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2018-10-02 20:52:34	-->	Itkovian (Itkovian@moz-nvl427.access.telenet.be) has joined #rust-beginners
2018-10-02 20:52:41	demurgos	But my type does not implement Copy (it's a Box)
2018-10-02 20:53:15	demurgos	I don't understand why the borrow checker prevents this code:
2018-10-02 20:53:16	demurgos	https://play.integer32.com/?gist=ab51bc3329d681500f4f3fa53351ab5b&version=stable&mode=debug&edition=2015
2018-10-02 20:53:20	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-02 20:53:51	demurgos	I need to keep track of the next value of each vec to add the smallest one each time
2018-10-02 20:54:26	demurgos	But it seems that this value is not allowed to be a `Box`
2018-10-02 20:54:37	demurgos	Can I add `Copy` to this `Box` ?
2018-10-02 20:55:06	--	U007D is now known as U007D_afk
2018-10-02 20:55:39	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 20:56:37	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 20:57:40	<--	someone (Mibbit@moz-2g0ul0.etb.net.co) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 20:57:45	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 20:59:15	stephaneyfx	demurgos: Box can't be Copy. Copy implies memcpy'ing makes sense and the type is not Drop.
2018-10-02 20:59:26	stephaneyfx	demurgos: Why are your ranges boxed in the first place?
2018-10-02 20:59:35	KiChjang	are ranges traits?
2018-10-02 20:59:39	KiChjang	that would probably explain why
2018-10-02 20:59:40	demurgos	This is a reduced example
2018-10-02 20:59:43	dvorak_mech	i was wondering the same thing
2018-10-02 20:59:51	demurgos	The ranges are in fact tree nodes
2018-10-02 20:59:54	stephaneyfx	KiChjang: Defined as struct in the example
2018-10-02 20:59:58	<--	PeterRabbitIsFluffy (peter@moz-qupuoj.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 20:59:59	demurgos	So I allocate them on the heap
2018-10-02 21:00:10	demurgos	And build a tree with them
2018-10-02 21:00:19	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 21:00:24	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 21:00:28	KiChjang	one sec, i happen to be writing a tree impl myself
2018-10-02 21:00:33	stephaneyfx	demurgos: Is a node (or the part you used to sort them) cheap to clone?
2018-10-02 21:00:44	<--	Miniwoffer (Miniwoffer@moz-tsi1n6.89-11-253.nextgentel.com) has quit (Ping timeout: 121 seconds)
2018-10-02 21:00:50	demurgos	Cloning a node clones its whole subtree
2018-10-02 21:00:56	demurgos	So I want to avoid cloning
2018-10-02 21:01:02	-->	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 21:01:04	<--	cwndrws (cwndrws@moz-pvul7j.psnl.79ot.4700.2606.IP) has quit (Connection closed)
2018-10-02 21:01:07	demurgos	I come with C++ experience
2018-10-02 21:01:09	stephaneyfx	demurgos: What part of the node do you use to sort them?
2018-10-02 21:01:25	demurgos	Each node has a `start` value
2018-10-02 21:01:25	-->	deifacted (deifacted@moz-glvmi0.c504.nbab.0646.2601.IP) has joined #rust-beginners
2018-10-02 21:01:27	-->	Nancy1999 (Mibbit@moz-f63.e4b.223.185.IP) has joined #rust-beginners
2018-10-02 21:01:41	demurgos	I have a previous functions that does some preprocessing
2018-10-02 21:01:45	Nancy1999	Hi
2018-10-02 21:01:57	demurgos	And I end up with two lists sorted list of trees
2018-10-02 21:02:05	KiChjang	demurgos: add a take() call when you're matching against next_a
2018-10-02 21:02:09	demurgos	(they represent disjoint subsets)
2018-10-02 21:02:37	KiChjang	demurgos: https://play.integer32.com/?gist=2ea734968cb3e1b4e84d86f300870f9b&version=stable&mode=debug&edition=2015
2018-10-02 21:02:37	demurgos	And the final step consists in merging the two forests by increasing `start` of the root node
2018-10-02 21:04:00	<--	WindowsBunny (Bunny@moz-qupuoj.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 21:04:04	demurgos	KiChjang: Thanks, I'll look into what `take` does (and why your code only prints 3 items, maybe an issue with my function)
2018-10-02 21:04:39	KiChjang	it returns whatever the Option has, and replaces the original lvalue with a None
2018-10-02 21:04:55	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-02 21:05:01	stephaneyfx	demurgos: next_a and next_b are moved on *every* iterator but not all branches of the match assign to them. That's the main issue.
2018-10-02 21:05:09	stephaneyfx	*every iteration
2018-10-02 21:05:21	demurgos	Ok
2018-10-02 21:05:35	Gachuk	does anybody know with std::iter::Peekable if you can peek more than just to the next, i.e. two ahead instead of just one
2018-10-02 21:05:36	demurgos	So if I move them back in each branch, it may solve it?
2018-10-02 21:06:31	emerent	Gachuk: not with peekable, but itertools should have one
2018-10-02 21:06:37	sarnold	Gachuk: may be useful https://docs.rs/itertools/0.7.8/itertools/fn.multipeek.html
2018-10-02 21:06:59	-->	Michelle_28 (Michelle_28@moz-17a.v60.252.185.IP) has joined #rust-beginners
2018-10-02 21:07:06	--	U007D_afk is now known as U007D
2018-10-02 21:07:08	Gachuk	hmm, I need to peek over chars
2018-10-02 21:07:15	Michelle_28	Hi!
2018-10-02 21:07:15	<--	zakora (zakora@moz-pfd0vo.fbx.proxad.net) has quit (Quit: WeeChat 2.2)
2018-10-02 21:07:23	dvorak_mech	Gachuk: "An iterator with a peek() that returns an optional reference to the next element.
2018-10-02 21:07:31	dvorak_mech	so i would say no
2018-10-02 21:07:49	<--	Michelle_28 (Michelle_28@moz-17a.v60.252.185.IP) has quit (G-Lined: no spamming here)
2018-10-02 21:07:50	Gachuk	damn
2018-10-02 21:07:53	Gachuk	hmm maybe multipeek is what I want then
2018-10-02 21:08:04	stephaneyfx	demurgos: Something like that: https://play.integer32.com/?gist=bc308411cf7221dcddde2d8c79e0f69a&version=stable&mode=debug&edition=2015
2018-10-02 21:08:33	Itkovian	Hello. I am trying to solve the react problem from exercism.io (a spreadsheet-like declarative computation task system) One of the tasks is to build a "compute_node". The function I need to implement receives a &[CellID] (CellID being a struct) and I would like to store this information in a hashmap. Obviously, I cannot just store the references there, because lifetimes and such, the hashmap used internall may outlive the
2018-10-02 21:08:34	Itkovian	 declaration of the original [CellId] when the function is called.
2018-10-02 21:08:36	Itkovian	However, I get a
2018-10-02 21:08:37	Itkovian	42 |     CValue([CellID], ComputeFunction<T>),
2018-10-02 21:08:38	Itkovian	   |            ^^^^^^^^ doesn't have a size known at compile-time
2018-10-02 21:08:52	-->	GreenJello (GreenJello@moz-n13.vnp.83.23.IP) has joined #rust-beginners
2018-10-02 21:08:55	demurgos	stephaneyfx: KiChjang: Thanks! Using `take` and then moving the value back if it is unused fix my issue
2018-10-02 21:08:59	Itkovian	CValue being the cell type I wish to store compute nodes in.
2018-10-02 21:09:06	Itkovian	Any suggestions on how to proceed here?
2018-10-02 21:09:38	stephaneyfx	demurgos: (Note that take'ing is not strictly necessary if you always reassign to both in all branches)
2018-10-02 21:09:48	<--	sp1ff_ (sp1ff@moz-fsbndm.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 21:09:52	-->	netrino (netrino@moz-csb.sqm.159.185.IP) has joined #rust-beginners
2018-10-02 21:10:28	-->	niconii (nicole@moz-31kn4e.midco.net) has joined #rust-beginners
2018-10-02 21:10:28	--	Mode #rust-beginners [+ao niconii niconii] by ChanServ
2018-10-02 21:10:47	-->	cwndrws (cwndrws@moz-pvul7j.psnl.79ot.4700.2606.IP) has joined #rust-beginners
2018-10-02 21:12:03	demurgos	Thanks
2018-10-02 21:12:07	demurgos	Final version: https://play.integer32.com/?gist=bd3f8c8d131c91c1cf99aefaf014275c&version=stable&mode=debug&edition=2015
2018-10-02 21:12:15	demurgos	I don't need `take`, you're right
2018-10-02 21:12:42	demurgos	(Also, once I hit a `None`, I could optimize slightly and just copy the remaining of the vec instead of looping)
2018-10-02 21:13:00	KiChjang	yeah, sounds good
2018-10-02 21:13:17	KiChjang	but i'm not sure if that's possible tbh
2018-10-02 21:13:24	KiChjang	since you've called into_iter()
2018-10-02 21:13:42	KiChjang	is there a way to extend a Vec using an iterator?
2018-10-02 21:13:52	demurgos	I'll look into it
2018-10-02 21:13:53	KiChjang	is that just called Vec::extend?
2018-10-02 21:13:54	demurgos	Also
2018-10-02 21:14:07	demurgos	Are all those assignations optimized in the final output?
2018-10-02 21:14:26	dpc1	KiChjang: yes Vec::extend will work
2018-10-02 21:14:48	demurgos	For the moment I am just trying to make my program work, but I'm rewriting it for perf so I'll have to do some work later on to avoid unnecessary assignments
2018-10-02 21:14:50	emerent	Itkovian: you could store a vec
2018-10-02 21:15:00	emerent	but it's not obvious to me why you can't store references
2018-10-02 21:15:01	demurgos	dpc1: Thanks for the info
2018-10-02 21:15:21	dpc1	demurgos: i didn't help you though xD
2018-10-02 21:15:27	Itkovian	emerent the caller does e.g.  r.compute_node(Cell::new(...), ...)
2018-10-02 21:15:32	Itkovian	euh
2018-10-02 21:15:48	Itkovian	compute_node([Cell:new(...)], ...)
2018-10-02 21:16:03	<--	Nancy1999 (Mibbit@moz-f63.e4b.223.185.IP) has quit (G-Lined: no spamming here)
2018-10-02 21:16:09	Itkovian	do that cell thingie is dead afterwards, but needs a reference inside the r thingie's hashmap
2018-10-02 21:16:21	Itkovian	which does not work, given the limited lifetime
2018-10-02 21:17:27	<--	theobromine (theobromine@moz-ijo.6p9.211.108.IP) has quit (Quit: Leaving)
2018-10-02 21:18:20	-->	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has joined #rust-beginners
2018-10-02 21:18:24	stephaneyfx	demurgos: Other solution: https://play.integer32.com/?gist=ad2cd20d628e647a5dbdd82e68a15cb6&version=stable&mode=debug&edition=2015
2018-10-02 21:20:41	<--	justicefries (justicefrie@moz-q1mvn9.res.rr.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 21:20:47	Gachuk	rust really is an unfortunate name for searching...
2018-10-02 21:21:03	stephaneyfx	Gachuk: "rust lang ..." can help
2018-10-02 21:21:25	Gachuk	ye that's what I do
2018-10-02 21:21:28	Gachuk	but I forget sometimes
2018-10-02 21:21:38	Gachuk	and end up either with the game, or something rusty
2018-10-02 21:21:54	Gachuk	"rust crates" got me some rusty crates
2018-10-02 21:22:01	dpc1	Gachuk: just use google. it will gather enough data from you that after a few weeks Google's ML algorithms will realise that you mean rust the language and not the game or the weird iron thing xD
2018-10-02 21:22:02	Gachuk	thanks bing
2018-10-02 21:22:09	KiChjang	lel
2018-10-02 21:22:31	dpc1	my worst thing was when i searched for "rust container" xD
2018-10-02 21:22:42	demurgos	stephaneyfx: Thanks
2018-10-02 21:22:53	stephaneyfx	You're welcome
2018-10-02 21:23:06	-->	AtumT (IRC@moz-qln5qq.gvt.net.br) has joined #rust-beginners
2018-10-02 21:23:41	demurgos	I cannot find `merge` in the documentation
2018-10-02 21:23:57	demurgos	While search for a solution myself, I found https://docs.rs/itertools/0.6.5/itertools/fn.merge.html
2018-10-02 21:24:00	stephaneyfx	demurgos: https://docs.rs/itertools/0.7.8/itertools/trait.Itertools.html#method.merge
2018-10-02 21:24:10	demurgos	Ok, so it's this one
2018-10-02 21:24:14	stephaneyfx	Yep
2018-10-02 21:24:31	KiChjang	i should look into that
2018-10-02 21:24:34	-->	jafow (jafow@moz-cg67u2.res.rr.com) has joined #rust-beginners
2018-10-02 21:25:00	demurgos	I had an old version with a bad documentation and did not understood it's role
2018-10-02 21:25:06	demurgos	The doc in versoin 0.7.8 is good
2018-10-02 21:25:09	demurgos	version*
2018-10-02 21:25:11	demurgos	Thanks
2018-10-02 21:25:53	KiChjang	docs.rs should warn you that you're in an old version
2018-10-02 21:26:34	dpc1	xye
2018-10-02 21:26:58	-->	sp1ff_ (sp1ff@moz-fsbndm.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-02 21:27:31	<--	orph (orph@moz-4bjvto.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 21:27:35	demurgos	KiChjang: Yup, now I see the warning at the top (and feel silly...)
2018-10-02 21:27:52	demurgos	At least it won't happen again :D
2018-10-02 21:29:04	Gachuk	itertools and multipeek is pretty neat, just worked...
2018-10-02 21:29:31	-->	orph (orph@moz-4bjvto.na4a.hbff.5500.2604.IP) has joined #rust-beginners
2018-10-02 21:30:21	<--	blaphmat (Mibbit@moz-5m1.n5i.207.49.IP) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 21:31:08	<--	sp1ff_ (sp1ff@moz-fsbndm.fqi1.dto9.0119.2620.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 21:33:01	-->	maksim (maksim@moz-bkqgrs.at.cox.net) has joined #rust-beginners
2018-10-02 21:33:07	maksim	can someone tell me why i'm getting this error https://paste.rs/KgW.rs
2018-10-02 21:33:29	maksim	aren't explicitly saying to use serde_json::Value rather than rocket_contrib::Value
2018-10-02 21:34:11	kimundi	maksim: Does it print out "note"s after the last error line there?
2018-10-02 21:34:31	maksim	if AU_c.AU06 + AU_c.AU12 > 1.0
2018-10-02 21:34:32	maksim	whoops
2018-10-02 21:34:37	maksim	For more information about this error, try `rustc --explain E0599`.
2018-10-02 21:34:46	<--	orph (orph@moz-4bjvto.na4a.hbff.5500.2604.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 21:34:51	kimundi	Also, the two Values might be the same type, if the one crate just re-exports the other
2018-10-02 21:34:54	-->	sp1ff_ (sp1ff@moz-g3jrvk.fqi1.dto9.0119.2620.IP) has joined #rust-beginners
2018-10-02 21:35:24	kimundi	Hm okay. Was just wondering if this is maybe a trait method, usually the compiler message would list applicable traits
2018-10-02 21:35:44	kimundi	(you need to import traits to use their methods)
2018-10-02 21:36:07	<--	num8er (num8er@moz-9amhn4.moldtelecom.md) has quit (Connection closed)
2018-10-02 21:36:30	-->	num8er (num8er@moz-9amhn4.moldtelecom.md) has joined #rust-beginners
2018-10-02 21:36:34	maksim	they might in fact be the same type
2018-10-02 21:36:35	maksim	but
2018-10-02 21:37:15	maksim	oh interesting i guess serde_json api changed from here https://stackoverflow.com/questions/30292752/how-do-i-parse-a-json-file
2018-10-02 21:37:44	<--	tomte (agrotux@moz-689quh.bredband.skanova.com) has quit (Ping timeout: 121 seconds)
2018-10-02 21:37:49	-->	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has joined #rust-beginners
2018-10-02 21:37:54	<--	demurgos (Mibbit@moz-irs1oq.rev.sfr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 21:38:32	-->	ChaiTRex (ChaiTRex@moz-irq.8mi.164.184.IP) has joined #rust-beginners
2018-10-02 21:40:33	<--	num8er (num8er@moz-9amhn4.moldtelecom.md) has quit (Ping timeout: 121 seconds)
2018-10-02 21:41:51	<--	dekokun (dekokun@moz-dmor8q.catv02.itscom.jp) has quit (Ping timeout: 121 seconds)
2018-10-02 21:45:36	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 21:46:07	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 21:47:04	<--	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has quit (Connection closed)
2018-10-02 21:50:29	<--	himi-cat (sjjf@moz-a0v4u0.ml56.e9ai.44b8.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 21:50:51	-->	faitswulff (faitswulff@moz-k5nlci.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-10-02 21:51:46	<--	dinfuehr (dinfuehr@moz-b3tmpv.highway.telekom.at) has quit (Ping timeout: 121 seconds)
2018-10-02 21:51:57	-->	KiChjang (keithyeung@moz-6r3.iiq.141.207.IP) has joined #rust-beginners
2018-10-02 21:52:15	<--	max22 (maxime@moz-45ug49.abo.wanadoo.fr) has quit (Connection closed)
2018-10-02 21:54:22	-->	dinfuehr (dinfuehr@moz-vp2f66.highway.telekom.at) has joined #rust-beginners
2018-10-02 21:55:57	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-02 21:59:05	-->	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 22:00:55	richo2	stephaneyfx: so I migrated everything to a single output type, but I get "the `name` method cannot be invoked on a trait object" for all methods in the trait with no further explaination. The docs don't really cover this (beyond mumble mumble object safety). Any ideas what I've done wrong? name especially has prototype fn name(&self) -> String and all the impls are just a
2018-10-02 22:00:57	richo2	"whateve".to_string() so I'd expect it to be fine
2018-10-02 22:02:04	stephaneyfx	richo2: Can you share your code on the playground?
2018-10-02 22:02:40	<--	dthul (dthul@moz-9kivq0.adslplus.ch) has quit (Connection closed)
2018-10-02 22:02:54	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 22:03:48	<--	TheSilentDrifter (TheSilentDr@moz-d25.mvl.65.137.IP) has quit (Quit: Leaving)
2018-10-02 22:04:00	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 22:04:48	<--	PeterRabbitIsFluffy (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Ping timeout: 121 seconds)
2018-10-02 22:06:10	Fr0stBit	Is there some kind of range syntax that i can use to annotate some number over the starting range? E.g. if i have a &some_slice[somevar..(somevar+2)] can i write it in any shorter way like &some_slice[somevar..+2]?
2018-10-02 22:06:50	<--	dpc1 (dpc@moz-05s.km5.186.1.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 22:07:09	<--	joni (joni@moz-94ksa6.ip-149-56-134.net) has quit (Connection closed)
2018-10-02 22:08:53	stephaneyfx	Fr0stBit: &s[somevar..][..2]
2018-10-02 22:09:22	Fr0stBit	stephaneyfx: Awesome!
2018-10-02 22:09:34	Fr0stBit	Didn't think of it
2018-10-02 22:10:53	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 22:12:04	maksim	is there a reason a macro would have trouble with a struct field that's all caps?
2018-10-02 22:12:11	maksim	i'm getting error: no rules expected the token `AU01`
2018-10-02 22:12:15	maksim	for a struct with a field AU01
2018-10-02 22:13:22	emerent	maksim: a macro_rules! macro?
2018-10-02 22:13:23	emerent	no
2018-10-02 22:13:28	<--	nagisa (nagisa@moz-4mqs7b.static.zebra.lt) has quit (Ping timeout: 121 seconds)
2018-10-02 22:13:28	maksim	yea
2018-10-02 22:13:51	kimundi	maksim: what does the macro accept as a macro variable type?
2018-10-02 22:13:57	ahf	what's a good, simple, config parser for rust for a simple key/value format?
2018-10-02 22:14:08	kimundi	ahf: toml or json
2018-10-02 22:14:16	ahf	toml sound sgood
2018-10-02 22:14:18	maksim	kimundi, sorry don't understand
2018-10-02 22:14:32	kimundi	maksim: I assume you pass the AU01 into the macro somehow, correct?
2018-10-02 22:14:38	maksim	it's in the definition of the struct
2018-10-02 22:14:53	kimundi	how does the definition look like
2018-10-02 22:14:57	emerent	maksim: can you show the macro?
2018-10-02 22:15:05	maksim	sure one sec
2018-10-02 22:15:21	maksim	https://gist.github.com/makslevental/01324c1e3445e8af20737d1924ee94be
2018-10-02 22:15:45	-->	mib_7toc94 (Mibbit@moz-48irve.priv.bahnhof.se) has joined #rust-beginners
2018-10-02 22:15:57	Fr0stBit	Can i assign to multiple sequential values of a range in a Vec something without assigning the values one by one and without for loop?
2018-10-02 22:16:32	stephaneyfx	Fr0stBit: With iter_mut
2018-10-02 22:16:40	kimundi	maksim: you are missing the "pub" in your macro invocation for each field
2018-10-02 22:16:59	kimundi	Is what I'm guessing
2018-10-02 22:17:05	maksim	oh actually it's that the macro looks for pub fields
2018-10-02 22:17:06	maksim	thanks
2018-10-02 22:17:07	maksim	whoops
2018-10-02 22:19:11	Fr0stBit	stephaneyfx: How? Lets say i have a Vec and some index and i would like to assign values a,b,c to the index,index+1,index+2 positions in that Vec
2018-10-02 22:20:19	Fr0stBit	I suppose i could do some kind of map?
2018-10-02 22:20:23	<--	fritschy1 (m@moz-tdm4oa.hsi.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2018-10-02 22:20:52	<--	mib_7toc94 (Mibbit@moz-48irve.priv.bahnhof.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 22:20:52	stephaneyfx	Fr0stBit: https://play.rust-lang.org/?gist=40230c7059c72678063795f33bae606b&version=stable&mode=debug&edition=2015
2018-10-02 22:21:46	<--	jossypoo (jos@moz-0m2.4ee.243.162.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 22:21:49	-->	yaymukund (yaymukund@moz-fp6tda.cable.virginm.net) has joined #rust-beginners
2018-10-02 22:21:51	Fr0stBit	Woah that seems so awesome, let me try and get it
2018-10-02 22:22:02	Fr0stBit	Some new things to learn from the standard library here
2018-10-02 22:23:25	-->	isjdwo (Mibbit@moz-48irve.priv.bahnhof.se) has joined #rust-beginners
2018-10-02 22:23:35	stephaneyfx	Fr0stBit: Or this: https://play.rust-lang.org/?gist=c7633048c0dced68eb6c2fc4cf02fd7d&version=stable&mode=debug&edition=2015
2018-10-02 22:24:29	<--	isjdwo (Mibbit@moz-48irve.priv.bahnhof.se) has left #rust-beginners
2018-10-02 22:25:04	Fr0stBit	stephaneyfx: That is SUPER USEFUL
2018-10-02 22:25:12	yaymukund	I'm told that `static` creates a value in the binary and `const` inlines, but why would I prefer one over the other? 
2018-10-02 22:25:19	<--	Dariost (Dariost@moz-u5b.3la.48.151.IP) has quit (Client exited)
2018-10-02 22:25:44	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-10-02 22:25:51	kimundi	yaymukund: well, those are two different things
2018-10-02 22:25:53	yaymukund	I imagine that inlining the same large value over and over would result in a bigger program?
2018-10-02 22:26:21	yaymukund	Is inlining a bit faster?
2018-10-02 22:26:25	kimundi	yaymukund: nah, thats actually no difference, since those inlinings often get optimized as a single gloabl variable that gets copied from anyway
2018-10-02 22:26:29	<--	faitswulff (faitswulff@moz-k5nlci.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-02 22:26:35	kimundi	Its just semantic difference of the value
2018-10-02 22:26:52	-->	faitswulff (faitswulff@moz-k5nlci.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-10-02 22:26:52	<--	faitswulff (faitswulff@moz-k5nlci.94t7.i167.1702.2600.IP) has quit (Connection closed)
2018-10-02 22:27:09	kimundi	"static" can be considered more expensive, as it _forces_ the value to be in a single global memory location
2018-10-02 22:27:24	-->	faitswulff (faitswulff@moz-k5nlci.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-10-02 22:27:44	-->	isjdwo (Mibbit@moz-48irve.priv.bahnhof.se) has joined #rust-beginners
2018-10-02 22:27:57	kimundi	while a "const" might end up having no impact at all, if the value gets directly process at compiletime as part of optimizations
2018-10-02 22:27:58	<--	lompik (lompik@moz-kdv.la5.172.163.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 22:28:14	<--	isjdwo (Mibbit@moz-48irve.priv.bahnhof.se) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 22:28:26	-->	faitswul_ (faitswulff@moz-ameve6.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-10-02 22:28:30	yaymukund	kimundi: hmm, expensive in terms of having to look it up?
2018-10-02 22:28:55	yaymukund	or adding to the size of the binary
2018-10-02 22:29:01	kimundi	both
2018-10-02 22:30:05	-->	dpc1 (dpc@moz-964.hk2.206.106.IP) has joined #rust-beginners
2018-10-02 22:30:12	maksim	what does this mean? error: variable 'fname' is still repeating at this depth
2018-10-02 22:30:27	maksim	here https://gist.github.com/makslevental/ff9f29d77a48ec114f4277ab8194cc3d
2018-10-02 22:30:32	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-10-02 22:30:34	maksim	line 22
2018-10-02 22:30:57	<--	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has quit (Client exited)
2018-10-02 22:31:01	-->	garden (garden@moz-hre5bs.bb.dnainternet.fi) has joined #rust-beginners
2018-10-02 22:31:26	<--	faitswulff (faitswulff@moz-k5nlci.94t7.i167.1702.2600.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 22:31:31	<--	ufobat (Martin@moz-8bv3kl.dyn.telefonica.de) has quit (Ping timeout: 121 seconds)
2018-10-02 22:32:01	-->	Mateon1 (Thunderbird@moz-pnid9g.supernova.orange.pl) has joined #rust-beginners
2018-10-02 22:32:08	<--	dalley (dalley@moz-sj3bja.dyn6.twc.com) has quit (The TLS connection was non-properly terminated.)
2018-10-02 22:32:16	<--	faitswul_ (faitswulff@moz-ameve6.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-02 22:32:18	-->	faitswulff (faitswulff@moz-ameve6.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-10-02 22:32:18	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 22:33:18	-->	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has joined #rust-beginners
2018-10-02 22:33:21	<--	faitswulff (faitswulff@moz-ameve6.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-02 22:33:54	yaymukund	kimundi: what do you mean by compiletime optimizations? I guess I'm imagining for example, referencing a const boolean, the compiler realizes `if (my_const)` is always true and simply removes it.
2018-10-02 22:35:27	yaymukund	oh eep, it looks like this is pretty common question. im gonna review the docs
2018-10-02 22:35:43	kimundi	yaymukund: yes, stuff like that exactly
2018-10-02 22:36:18	richo2	stephaneyfx: When I tried to minimise for the playground it wouldn't repro, but this call to .name() fails https://github.com/richo/archiver/blob/vimeo-implementation/src/storage.rs#L67-L68
2018-10-02 22:36:20	<--	Aimai (Aimai@moz-htrt0b.dip0.t-ipconnect.de) has quit (Quit: leaving)
2018-10-02 22:37:01	stephaneyfx	richo2: What is the error message?
2018-10-02 22:37:10	richo2	stephaneyfx: error: the `name` method cannot be invoked on a trait object
2018-10-02 22:37:25	richo2	and so on for all the other methods in the trait
2018-10-02 22:37:28	yaymukund	kimundi: sweet! thanks, I think it makes sense :o)
2018-10-02 22:37:45	stephaneyfx	richo2: Ok. Let me read more...
2018-10-02 22:39:23	<--	klausi (klausi@moz-umj1ag.dynamic.surfer.at) has quit (Quit: Leaving.)
2018-10-02 22:39:33	-->	faitswulff (faitswulff@moz-ameve6.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-10-02 22:40:20	<--	holmgr (holmgr@moz-c0inc3.bredband.comhem.se) has quit (Connection closed)
2018-10-02 22:40:43	stephaneyfx	richo2: Read is a trait, so doing `Input = Read` means the associated type is a trait object type (`dyn Read` with the new notation), and I doubt it works since Input is not marked ?Sized. Let me try...
2018-10-02 22:42:15	-->	soren (soren@moz-a0hhva.bath.ac.uk) has joined #rust-beginners
2018-10-02 22:42:39	richo2	oh no, that should be = File
2018-10-02 22:42:45	richo2	it's possible I didn't update enough places
2018-10-02 22:42:54	<--	paulgdp (paulgdp@moz-ql2nii.rev.numericable.fr) has quit (Client exited)
2018-10-02 22:42:54	richo2	I might file a bug though, because it'd be nice if the compiler told me what was wrong
2018-10-02 22:43:29	richo2	stephaneyfx: Yup, you were right. I  just didn't update enough places from Read to File 
2018-10-02 22:44:06	stephaneyfx	richo2: So all problems solved?
2018-10-02 22:44:10	richo2	yup!
2018-10-02 22:44:21	richo2	should I file a bug for the diagnostic issue?
2018-10-02 22:44:41	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 22:45:49	stephaneyfx	richo2: Yes, unless it has already been filed. Give me a few minutes. I will search and if not found, minimize the test case
2018-10-02 22:46:23	richo2	I can have a look. I have a fairly minimal testcase (I correctly updated from the trait to the struct when I made the testcase, so I can just break that)
2018-10-02 22:48:19	stephaneyfx	richo2: Sure, otherwise this is fairly minimal: https://play.rust-lang.org/?gist=25eeb3940dfa6f91df1eec7ef7ac798c&version=stable&mode=debug&edition=2015
2018-10-02 22:48:35	<--	andrehjr (andrehjr@moz-j87.st4.22.189.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 22:48:36	richo2	this is what I came up with
2018-10-02 22:48:38	richo2	https://gist.github.com/7fed8706cea22b5ff8768a400892c785
2018-10-02 22:48:57	richo2	yours is better :)
2018-10-02 22:48:58	-->	mib_94lqre (Mibbit@moz-kbgkpo.dsl.as9105.com) has joined #rust-beginners
2018-10-02 22:48:59	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-02 22:49:03	stephaneyfx	richo2: The issue is that X has an implicit Sized bound but rustc lets us write Foo<X = dyn Bar> meaning X is not Sized there :s
2018-10-02 22:49:22	stephaneyfx	richo2: Hehe yeah I tried to remove as much as I could :p
2018-10-02 22:49:37	-->	num8er (num8er@moz-9amhn4.moldtelecom.md) has joined #rust-beginners
2018-10-02 22:49:42	mib_94lqre	working on the "programming a guessing game" part and i can't get the rand crate to work at all
2018-10-02 22:50:05	mib_94lqre	i think i've put it under dependencies in the cargo file correctly
2018-10-02 22:50:27	stephaneyfx	richo2: I might have found a similar issue already reported. Hold on...
2018-10-02 22:50:37	<--	roqvist (roqvist@moz-0v24jt.tbcn.telia.com) has quit (Connection closed)
2018-10-02 22:50:49	<--	orph (orph@moz-29thn7.ca.comcast.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 22:50:51	federico	mib_94lqre: how did you list it in there?
2018-10-02 22:51:22	Fr0stBit	Ok i ported some C code over, can i have some review to make it as much rusty and less verbose i can? https://play.rust-lang.org/?gist=655de97509558db28ceb000f4b363f57&version=stable&mode=debug&edition=2015
2018-10-02 22:51:46	mib_94lqre	rand = "0.5.5"
2018-10-02 22:52:25	mib_94lqre	it goes right under [dependencies] right?
2018-10-02 22:54:06	<--	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has quit (Client exited)
2018-10-02 22:54:07	-->	Xion_ (xion@moz-ldf.rgu.10.31.IP) has joined #rust-beginners
2018-10-02 22:54:28	-->	Susan32 (Susan32@moz-abd.pjt.185.146.IP) has joined #rust-beginners
2018-10-02 22:54:36	stephaneyfx	richo2: This feels related to {!gh 27675}, at least the title -- the examples are quite different. What do you think?
2018-10-02 22:54:36	+rustbot	[Issue 27675] <open> object-safe traits can have associated types with unchecked bounds <https://github.com/rust-lang/rust/issues/27675>
2018-10-02 22:54:43	Susan32	Hello!
2018-10-02 22:54:52	<--	Susan32 (Susan32@moz-abd.pjt.185.146.IP) has quit (G-Lined: no spamming here)
2018-10-02 22:55:31	federico	mib_94lqre: yeah, that seems correct.  did you put "extern crate rand;" in your main.rs or lib.rs?
2018-10-02 22:55:54	<--	Itkovian (Itkovian@moz-nvl427.access.telenet.be) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 22:56:56	<--	mib_94lqre (Mibbit@moz-kbgkpo.dsl.as9105.com) has quit (Ping timeout: 121 seconds)
2018-10-02 22:57:39	richo2	stephaneyfx: seems similar at face value although it seems like now the compiler does the right thing, it just doesn't communicate *why*
2018-10-02 22:57:45	<--	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 22:57:46	<--	WindowsBunny1 (Bunny@moz-9sf317.dhcp6.chtrptr.net) has quit (Connection closed)
2018-10-02 22:57:55	richo2	I think the patch is actually quite similar, the diagnostic it emitted earlier for the broken implementations would still have been useful
2018-10-02 22:58:06	stephaneyfx	richo2: But I'd expect an error without having to uncomment the line
2018-10-02 22:58:10	-->	PeterRabbit (peter@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 22:58:27	<--	Xion_ (xion@moz-ldf.rgu.10.31.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 22:58:39	stephaneyfx	richo2: Yes. And the error should point at Foo<X = dyn Bar>.
2018-10-02 22:59:34	-->	WindowsBunny (Bunny@moz-9sf317.dhcp6.chtrptr.net) has joined #rust-beginners
2018-10-02 22:59:40	-->	ecstaticm0rse (ecstaticm0r@moz-fv4v8c.or.comcast.net) has joined #rust-beginners
2018-10-02 22:59:40	-->	schnozzle (Mibbit@moz-kbgkpo.dsl.as9105.com) has joined #rust-beginners
2018-10-02 23:00:06	stephaneyfx	richo2: The error has nothing to do with calling do_stuff afaict. If I change for `type X: ?Sized;`, the code is valid and the error goes away, which makes sense.
2018-10-02 23:00:07	schnozzle	apologies i was asking about the rust crate rand thing but my connection dropped
2018-10-02 23:00:19	schnozzle	so i didn't see anything inbetween my reply
2018-10-02 23:01:33	stephaneyfx	schnozzle: I think that's all that was said:
2018-10-02 23:01:37	stephaneyfx	<federico> mib_94lqre: yeah, that seems correct.  did you put "extern crate rand;" in your main.rs or lib.rs?
2018-10-02 23:02:07	schnozzle	righto
2018-10-02 23:02:25	<--	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 23:02:44	schnozzle	i didn't put extern crate rand; in at all, just use rand::Rng;
2018-10-02 23:03:23	federico	schnozzle: ah, yeah, that should do it :)
2018-10-02 23:03:33	schnozzle	yep
2018-10-02 23:03:47	schnozzle	i just missed that part, it's there in the manual but i thought it was part of the paragraph
2018-10-02 23:03:54	schnozzle	cheers
2018-10-02 23:03:59	federico	no problem, glad to have it working
2018-10-02 23:04:16	<--	thvdburgt (thvdburgt@moz-htr87p.7kab.l0e4.0982.2001.IP) has quit (Ping timeout: 121 seconds)
2018-10-02 23:04:20	federico	"extern crate" means "bring it in"; then the "use" means "pull out the bits I need or let me give them new names"
2018-10-02 23:04:40	-->	emerentius (emerentius@moz-215tg4.dip0.t-ipconnect.de) has joined #rust-beginners
2018-10-02 23:04:46	schnozzle	i was reading up about extern crate since i saw it being used in context of external crates
2018-10-02 23:04:54	<--	deifacted (deifacted@moz-glvmi0.c504.nbab.0646.2601.IP) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2018-10-02 23:04:55	schnozzle	but i thought it was more so to define an extern crate
2018-10-02 23:05:10	schnozzle	i think i was reading it with the context of defining
2018-10-02 23:05:25	<--	emerent (emerentius@moz-pkj127.dip0.t-ipconnect.de) has quit (Connection closed)
2018-10-02 23:05:32	schnozzle	i tried using it independently but it never occured to me to use both lines
2018-10-02 23:07:02	<--	gagbo (gagbo@moz-a9bf5n.abo.bbox.fr) has quit (Quit: I'm out !)
2018-10-02 23:07:04	-->	blahdodo (blahdodo@moz-3fa.jch.172.69.IP) has joined #rust-beginners
2018-10-02 23:07:39	<--	schnozzle (Mibbit@moz-kbgkpo.dsl.as9105.com) has quit (Quit: http://www.mibbit.com ajax IRC Client)
2018-10-02 23:07:44	-->	Mateon2 (Thunderbird@moz-khbsj7.supernova.orange.pl) has joined #rust-beginners
2018-10-02 23:07:47	<--	Mateon1 (Thunderbird@moz-pnid9g.supernova.orange.pl) has quit (Ping timeout: 121 seconds)
2018-10-02 23:07:47	--	Mateon2 is now known as Mateon1
2018-10-02 23:10:53	-->	orph (orph@moz-29thn7.ca.comcast.net) has joined #rust-beginners
2018-10-02 23:11:38	<--	jihi (jih@moz-olpft4.dip0.t-ipconnect.de) has quit (Connection closed)
2018-10-02 23:11:44	--	U007D is now known as U007D_afk
2018-10-02 23:11:46	dowwie	how does futures::Either translate to async/await syntax?
2018-10-02 23:12:01	dowwie	is Either deprecated?
2018-10-02 23:13:08	<--	cp (cp@moz-4f5h05.asahi-net.or.jp) has quit (Quit: Disappears in a puff of smoke)
2018-10-02 23:13:34	<--	maksim (maksim@moz-bkqgrs.at.cox.net) has quit (Quit: Leaving)
2018-10-02 23:13:36	--	U007D_afk is now known as U007D
2018-10-02 23:14:03	<--	faitswulff (faitswulff@moz-ameve6.94t7.i167.1702.2600.IP) has quit (The TLS connection was non-properly terminated.)
2018-10-02 23:14:13	-->	faitswulff (faitswulff@moz-ameve6.94t7.i167.1702.2600.IP) has joined #rust-beginners
2018-10-02 23:16:08	-->	shiro (Thunderbird@moz-d7eknb.informatik.uni-goettingen.de) has joined #rust-beginners
2018-10-02 23:16:42	<--	blackgoat (blackgoat@moz-ju2.qnb.201.119.IP) has quit (Quit: WeeChat 2.2)
